file_path,Name,full_name,Start Line,End Line,Comment,Pre_Comment,child Name,domain,inner_method
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,<init>,org.apache.pdfbox.Loader:<init>(),45,47,"/**
 * Private constructor, prevents direct instantiation of Loader.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorName.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorName:<init>(),114,116,"/**
 * Private constructor to prevent direct instantiation of OperatorName.
 */",* private constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes the OperatorProcessor with a PDFStreamEngine context.
 * @param context The PDFStreamEngine instance.
 */
","* Creates a new OperatorProcessor.
     * 
     * @param context the processing context to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBase.java,<init>,org.apache.pdfbox.cos.COSBase:<init>(),37,39,"/**
 * Default constructor for COSBase class. Provides no initialization.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocumentState.java,<init>,org.apache.pdfbox.cos.COSDocumentState:<init>(),25,36,"/**
 * Indicates whether the document is currently being parsed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,<init>,org.apache.pdfbox.cos.COSUpdateState:<init>(org.apache.pdfbox.cos.COSUpdateInfo),53,56,"/**
 * Initializes the COSUpdateState with the provided update info.
 * @param updateInfo The COSUpdateInfo object to initialize with.
 */
","* Creates a new {@link COSUpdateState} for the given {@link COSUpdateInfo}.
     *
     * @param updateInfo The {@link COSUpdateInfo}, that shall be managed by this {@link COSUpdateState}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,<init>,org.apache.pdfbox.cos.PDFDocEncoding:<init>(),108,110,"/**
 * Private constructor to prevent instantiation of this class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<init>,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node:<init>(),496,504,"/**
 * Represents a node in a tree structure with value and flags.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream$Code:<init>(int,int)",272,275,"/**
 * Constructs a Code object with the given code and length.
 * @param code The code value.
 * @param length The length of the code.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(),44,47,"/**
 * Default constructor. Intentionally left empty.
 */",* Constructs an empty DecodeOptions instance,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(java.awt.Rectangle),55,58,"/**
 * Initializes DecodeOptions with a specified source region.
 * @param sourceRegion The region to decode.
 */
","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param sourceRegion Region of the source image that should be decoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(int),81,85,"/**
 * Initializes DecodeOptions with the given subsampling factor.
 * @param subsampling Subsampling factor for X and Y dimensions.
 */
","* Constructs an instance specifying the image should be decoded using subsampling. The
     * subsampling will be the same for the X and Y axes.
     *
     * @param subsampling The number of rows and columns to advance in the source for each pixel in
     * the decoded image.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary),36,39,"/**
* Initializes a DecodeResult with the given parameters.
* @param parameters COSDictionary containing decoding parameters
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,"org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)",41,45,"/**
 * Initializes a DecodeResult with parameters and color space.
 * @param parameters COSDictionary containing decoding parameters
 * @param colorSpace PDJPXColorSpace for color space information
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,<init>,org.apache.pdfbox.filter.Filter:<init>(),66,68,"/**
 * Default constructor for the Filter class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,org.apache.pdfbox.filter.Predictor:<init>(),33,35,"/**
 * Private constructor to prevent direct instantiation of Predictor.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<init>,"org.apache.pdfbox.multipdf.Overlay$LayoutPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDictionary,short)",289,295,"/**
 * Initializes a LayoutPage with provided media box, content, resources, and rotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,"org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument,int,int)",54,59,"/**
 * Initializes a PageExtractor with document, start, and end pages.
 */","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.
     * @param startPage The first page you want extracted (1-based, inclusive)
     * @param endPage The last page you want extracted (1-based, inclusive)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,<init>,"org.apache.pdfbox.multipdf.Splitter$KCloner:<init>(org.apache.pdfbox.multipdf.Splitter,org.apache.pdfbox.pdmodel.PDPageTree)",359,362,"/**
* Sets the destination page tree for cloning.
* @param dstPageTree The page tree to clone to.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,<init>,org.apache.pdfbox.multipdf.Splitter:<init>(),73,96,"/**
 * Represents a splitter for PDF documents, managing page and annotation mappings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/EndstreamFilterStream.java,<init>,org.apache.pdfbox.pdfparser.EndstreamFilterStream:<init>(),26,33,"/**
 * Represents a stream for filtering endstream data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,<init>,org.apache.pdfbox.pdfparser.xref.AbstractXReference:<init>(org.apache.pdfbox.pdfparser.xref.XReferenceType),37,40,"/**
 * Constructs an AbstractXReference with the given type.
 * @param type The type of the XReference.
 */
","* Creates a crossreference stream entry of the given {@link XReferenceType}.
     *
     * @param type The {@link XReferenceType} of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,<init>,org.apache.pdfbox.pdfwriter.ContentStreamWriter:<init>(java.io.OutputStream),59,62,"/**
 * Initializes a ContentStreamWriter with the given output stream.
 * @param out The output stream to write to.
 */
","* This will create a new content stream writer.
     *
     * @param out The stream to write the data to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(boolean),42,45,"/**
 * Constructs a DefaultResourceCacheCreateImpl.
 * @param enableStableCache Whether to enable stable cache.
 */
","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,93,"/**
* Initializes a document catalog with a document and root dictionary.
*/
","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.
     * @param rootDictionary The root dictionary that this object wraps.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes PDDocumentInformation with a COSDictionary.
 * @param dic The COSDictionary containing document information.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),41,44,"/**
 * Initializes the destination dictionary.
 * @param dict The COSDictionary to use as the destination.
 */
","* Constructor.
     *
     * @param dict The dictionary of names and corresponding destinations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.cos.COSDictionary)",56,60,"/**
 * Initializes a PDDocumentNameDictionary with a catalog and names.
 */","* Constructor.
     *
     * @param cat The document that this dictionary is part of.
     * @param names The names dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary),104,107,"/**
 * Constructs a PDPage with the given COSDictionary.
 * @param pageDictionary The dictionary representing the page.
 */
","* Creates a new instance of PDPage for reading.
     * 
     * @param pageDictionary A page dictionary in a PDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,"org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",114,118,"/**
 * Constructs a PDPage with a dictionary and resource cache.
 * @param pageDictionary The COSDictionary for the page.
 * @param resourceCache Resource cache for accessing resources.
 */
","* Creates a new instance of PDPage for reading.
     *
     * @param pageDictionary A page dictionary in a PDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/ResourceCacheFactory.java,<init>,org.apache.pdfbox.pdmodel.ResourceCacheFactory:<init>(),28,28,"/**
 * Creates and returns a ResourceCache instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,<init>,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:<init>(java.util.Map,org.apache.pdfbox.cos.COSDictionary)",50,54,"/**
 * Initializes a COSDictionaryMap with provided maps.
 * @param actualsMap The actual map.
 * @param dicMap The dictionary map.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDDictionaryWrapper with the given COSDictionary.
 */","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a PDNameTreeNode from a COSDictionary.
 * @param dict The COSDictionary representing the node.
 */
","* Constructor.
     *
     * @param dict The dictionary that holds the name information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,"org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)",66,70,"/**
 * Constructs a PDNumberTreeNode with a dictionary and value class.
 * @param dict The COS dictionary for the node.
 * @param valueClass The class of the value stored in the node.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(org.apache.pdfbox.cos.COSDictionary),83,86,"/**
 * Creates a PDPageLabelRange from a COSDictionary.
 * @param dict The COSDictionary containing label range data.
 */
","* Creates a new page label range object from the given dictionary.
     * 
     * @param dict
     *            the base dictionary for the new object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:<init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)",301,306,"/**
 * Initializes a LabelGenerator with label range and number of pages.
 * @param label Label range for the labels.
 * @param pages Total number of pages.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes a PDRange with the given COSArray representing the range.
 */","* Constructor assumes a starting index of 0.
     *
     * @param range The array that describes the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray,int)",64,68,"/**
 * Initializes a PDRange with a COSArray and an index.
 * @param range The COSArray representing the range.
 * @param index The starting index of the range.
 */
","* Constructor with an index into an array.  Because some arrays specify
     * multiple ranges ie [ 0,1,  0,2,  2,3 ] It is convenient for this
     * class to take an index into an array.  So if you want this range to
     * represent 0,2 in the above example then you would say <code>new PDRange( array, 1 )</code>.
     *
     * @param range The array that describes the index
     * @param index The range index into the array for the start of the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSStream),81,84,"/**
 * Initializes a PDStream object with the given COSStream.
 * @param str The COSStream to be wrapped.
 */
","* Creates a PDStream which wraps the given COSStream.
     * 
     * @param str The stream parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:<init>(),32,32,"/**
 * Abstract base class for PDF file specifications. Implements COSObjectable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,<init>,"org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:<init>(org.apache.pdfbox.pdmodel.common.function.PDFunctionType0,float[],int[],int[])",271,277,"/**
 * Initializes interpolation data from input arrays.
 * @param input Current input values.
 * @param inputPrev Previous input values.
 * @param inputNext Next input values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Abs:<init>(),34,34,"/**
* Implements the absolute value operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add:<init>(),53,53,"/**
* Implements the addition operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Atan:<init>(),82,82,"/**
* Implements the arctangent (atan) operator. Returns the arctangent.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ceiling:<init>(),101,101,"/**
* Implements the ceiling operator, returning the smallest integer >= value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cos:<init>(),120,120,"/**
* Represents the cosine operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvi:<init>(),133,133,"/**
* Implements the Operator interface. Defines Cvi's functionality.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvr:<init>(),145,145,"/**
* Implements the Operator interface. Defines specific operator behavior.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Div:<init>(),157,157,"/**
* Represents the division operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Exp:<init>(),170,170,"/**
* Inner class implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Floor:<init>(),184,184,"/**
* Represents the floor operator for numerical calculations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$IDiv:<init>(),203,203,"/**
* Implements the division operator for expression evaluation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ln:<init>(),216,216,"/**
* Inner class Ln implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Log:<init>(),228,228,"/**
* Inner class implementing the Operator interface. Provides logging functionality.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mod:<init>(),240,240,"/**
* Inner class implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mul:<init>(),253,253,"/**
 * Implements the Operator interface for multiplication.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Neg:<init>(),282,282,"/**
* Represents the negation operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round:<init>(),309,309,"/**
* Represents a rounding operator. Rounds the input to the nearest integer.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sin:<init>(),328,328,"/**
* Represents the sine operator. Implements the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt:<init>(),341,341,"/**
* Calculates the square root of a number.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sub:<init>(),357,357,"/**
* Static inner class implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Truncate:<init>(),387,387,"/**
* Implements the Truncate operator, removing trailing characters.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of ArithmeticOperators class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$AbstractLogicalOperator:<init>(),34,34,"/**
 * Abstract base class for logical operators, implementing the Operator interface.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Bitshift:<init>(),87,87,"/**
* Implements the Operator interface using bitwise operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$False:<init>(),110,110,"/**
* Implements the Operator interface, always returning false.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not:<init>(),122,122,"/**
* Represents the 'NOT' operator, implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$True:<init>(),168,168,"/**
* Implements the Operator interface, always returning true.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of BitwiseOperators class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:<init>(),34,34,"/**
* Implements the ""If"" operator for conditional evaluation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:<init>(),51,51,"/**
* Implements the Operator interface using if-else logic.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of ConditionalOperators class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Parser$AbstractSyntaxHandler:<init>(),86,86,"/**
 * Abstract base class for SyntaxHandler implementations.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Parser:<init>(),33,36,"/**
 * Private constructor to prevent instantiation of the Parser class.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$AbstractNumberComparisonOperator:<init>(),65,65,"/**
 * Abstract base class for number comparison operators.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:<init>(),34,34,"/**
* Represents the equality operator (=). Implements the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators:<init>(),28,31,"/**
 * Private constructor, prevents instantiation of this class.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy:<init>(),36,36,"/**
* Represents an operator that creates a copy of the input.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Dup:<init>(),56,56,"/**
 * Represents a duplicate operator. Implements the Operator interface.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Exch:<init>(),68,68,"/**
 * Inner class implementing the Operator interface.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Index:<init>(),83,83,"/**
* Inner class implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Pop:<init>(),101,101,"/**
* Represents a Pop operator, implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Roll:<init>(),113,113,"/**
* Represents a 'Roll' operator, implementing the Operator interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators:<init>(),30,33,"/**
 * Private constructor, prevents instantiation of StackOperators class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes a PDMarkInfo object with the provided COSDictionary.
 */","* Constructor for an existing MarkInfo element.
     *
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Creates a MarkedContentReference with the given COSDictionary.
 * @param dictionary The COSDictionary for the reference.
 */
","* Constructor for an existing marked content reference.
     * 
     * @param dictionary the page dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Constructs a PDObjectReference with the given COSDictionary.
 * @param theDictionary The COSDictionary for the reference.
 */
","* Constructor for an existing object reference.
     *
     * @param theDictionary The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSArray),37,40,"/**
 * Constructs a PDParentTreeValue with the given COS array.
 * @param obj The COS array representing the parent tree value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Constructs a PDParentTreeValue with the given COSDictionary.
 * @param obj The COSDictionary containing the value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
 * Constructs a PDStructureNode with the given COSDictionary.
 * @param dictionary The COSDictionary for this node.
 */
","* Constructor for an existing structure node.
     *
     * @param dictionary The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:<init>(),37,39,"/**
 * Default constructor for the Revisions class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(org.apache.pdfbox.cos.COSDictionary),71,74,"/**
 * Initializes PDPropertyList with a given COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor for subclasses.
     * 
     * @param dict the dictionary to be used to create an instance of PDPropertyList",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Initializes a PDBoxStyle with the provided COSDictionary.
 * @param dic The COSDictionary for the style.
 */
","* Constructor for an existing BoxStyle element.
     *
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:<init>(),317,319,"/**
 * Private constructor to prevent instantiation of StandardStructureTypes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(),70,73,"/**
 * Initializes AccessPermission with default permissions.
 */","* Create a new access permission object.
     * By default, all permissions are granted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(byte[]),82,92,"/**
 * Initializes AccessPermission from a byte array.
 * @param b byte array containing permission data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(int),99,102,"/**
 * Initializes an AccessPermission with the given permissions.
 * @param permissions Integer representing the access permissions.
 */
","* Creates a new access permission object from a single integer.
     *
     * @param permissions The permission bits.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/DecryptionMaterial.java,<init>,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial:<init>(),27,27,"/**
 * Abstract class for decryption materials, providing a base implementation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,<init>,org.apache.pdfbox.pdmodel.encryption.MessageDigests:<init>(),28,30,"/**
 * Private constructor to prevent instantiation of MessageDigests.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes the PDCryptFilterDictionary with a COSDictionary.
 * @param d The COSDictionary to use for initialization.
 */
","* creates a new crypt filter dictionary from the low level dictionary provided.
     * @param d the low level dictionary that will be managed by the newly created object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/ProtectionPolicy.java,<init>,org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy:<init>(),29,36,"/**
 * Defines the default key length for encryption.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyRecipient.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient:<init>(),29,29,"/**
* Represents a recipient using a public key.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,<init>,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:<init>(),37,40,"/**
 * Initializes an RC4Cipher object.
 * Creates a salt array for encryption.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,<init>,org.apache.pdfbox.pdmodel.encryption.SaslPrep:<init>(),32,34,"/**
 * Private constructor to prevent instantiation of the SaslPrep class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:<init>(),31,33,"/**
 * Private constructor to prevent direct instantiation of SecurityProvider.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),118,121,"/**
 * Constructs a FDFAnnotation with the given COSDictionary.
 * @param a The COSDictionary representing the annotation.
 */
","* Constructor.
     *
     * @param a The FDF annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a FDFCatalog with the provided COSDictionary.
 * @param cat The COSDictionary representing the catalog.
 */
","* Constructor.
     *
     * @param cat The FDF documents catalog.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Initializes a FDFDictionary with a given COSDictionary.
 * @param fdfDictionary The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param fdfDictionary The FDF documents catalog.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Constructs a FDFField object from a COSDictionary.
 * @param f The COSDictionary representing the field.
 */
","* Constructor.
     *
     * @param f The FDF field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(org.apache.pdfbox.cos.COSDictionary),73,76,"/**
 * Initializes the FDFIconFit with the provided COSDictionary.
 * @param f The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param f The icon fit dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes FDFJavaScript with a COSDictionary.
 * @param javaScript The COSDictionary containing JavaScript.
 */
","* Constructor.
     *
     * @param javaScript The FDF java script.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a FDFNamedPageReference with the given COSDictionary.
 * @param r The COSDictionary representing the named page reference.
 */
","* Constructor.
     *
     * @param r The FDF named page reference dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs an FDFOptionElement with the given COSArray.
 * @param o The COSArray representing the option element.
 */
","* Constructor.
     *
     * @param o The option element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a FDFPage with the provided COSDictionary.
 * @param p The COSDictionary representing the page.
 */
","* Constructor.
     *
     * @param p The FDF page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a FDFPageInfo object with the provided COSDictionary.
 */","* Constructor.
     *
     * @param p The FDF page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a FDFTemplate with the provided COSDictionary.
 * @param t The COSDictionary representing the template.
 */
","* Constructor.
     *
     * @param t The FDF page template.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AbstractFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AbstractFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Constructs an AbstractFixup with the given document.
 * @param document The document this fixup operates on.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AbstractProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AbstractProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Constructs a Processor with the given document.
 * @param document The document to process.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.CIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",31,36,"/**
 * Initializes a CIDSystemInfo object.
 * @param registry Registry string.
 * @param ordering Ordering string.
 * @param supplement Supplement integer value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,<init>,org.apache.pdfbox.pdmodel.font.CMapManager:<init>(),35,37,"/**
 * Private constructor to prevent external instantiation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontInfo.java,<init>,org.apache.pdfbox.pdmodel.font.FontInfo:<init>(),27,27,"/**
 * Abstract class providing font information; cannot be instantiated.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:<init>(),137,137,"/**
* Default font provider implementation. Provides default font settings.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:<init>(org.apache.pdfbox.pdmodel.font.FontInfo),720,723,"/**
 * Initializes a FontMatch object with the provided FontInfo.
 * @param info The FontInfo object to use for matching.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMappers.java,<init>,org.apache.pdfbox.pdmodel.font.FontMappers$DefaultFontMapper:<init>(),34,34,"/**
* Default font mapper implementation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMappers.java,<init>,org.apache.pdfbox.pdmodel.font.FontMappers:<init>(),29,31,"/**
 * Private constructor to prevent direct instantiation of FontMappers.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapping.java,<init>,"org.apache.pdfbox.pdmodel.font.FontMapping:<init>(org.apache.fontbox.FontBoxFont,boolean)",32,36,"/**
 * Creates a FontMapping instance.
 * @param font The font to map.
 * @param isFallback True if this is a fallback mapping.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontProvider.java,<init>,org.apache.pdfbox.pdmodel.font.FontProvider:<init>(),26,26,"/**
 * Abstract class providing font loading and management functionality.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Initializes the PDCIDSystemInfo with the provided COSDictionary.
 * @param dictionary The COSDictionary to use for initialization.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Initializes a PDFontDescriptor with the provided COSDictionary.
 * @param desc The COSDictionary containing font descriptor information.
 */
","* Creates a PDFontDescriptor from a COS dictionary.
     *
     * @param desc The wrapped COS Dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",90,94,"/**
* Constructs a FontType with the given type and subtype.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory:<init>(),48,50,"/**
 * Private constructor to prevent direct instantiation of PDFontFactory.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanose:<init>(byte[]),37,40,"/**
 * Initializes a PDPanose object with the given byte array.
 * @param bytes The byte array representing the Panose data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:<init>(byte[]),35,38,"/**
 * Initializes a PDPanoseClassification with the provided byte array.
 * @param bytes The Panose classification byte array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:<init>(org.apache.pdfbox.pdmodel.font.PDType3Font,org.apache.pdfbox.cos.COSStream)",54,58,"/**
 * Initializes a PDType3CharProc with a font and character stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<init>,org.apache.pdfbox.pdmodel.font.Standard14Fonts:<init>(),118,120,"/**
 * Private constructor to prevent instantiation of this class.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,<init>,org.apache.pdfbox.pdmodel.font.UniUtil:<init>(),27,29,"/**
 * Private constructor to prevent instantiation of the UniUtil class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(org.apache.pdfbox.cos.COSArray),57,60,"/**
 * Initializes a PDFontSetting with the provided font setting array.
 * @param fs The COSArray representing the font setting.
 */
","* Constructs a font setting from an existing array.
     *
     * @param fs The new font setting value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(),41,45,"/**
 * Constructs a PDLineDashPattern with an empty dash pattern array.
 */","* Creates a new line dash pattern, with no dashes and a phase of 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:<init>(org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite,java.awt.image.ColorModel,java.awt.image.ColorModel)",98,102,"/**
* Initializes a BlendCompositeContext with source and destination ColorModels.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:<init>(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",80,84,"/**
* Constructs a BlendComposite with a blend mode and alpha.
* @param blendMode Blend mode to use.
* @param constantAlpha Constant alpha value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendChannelFunction,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendFunction)",201,207,"/**
 * Constructs a BlendMode with name, channel function, and blend function.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",121,126,"/**
 * Constructs a PDColor with a pattern name and color space.
 * @param patternName Pattern name associated with the color.
 * @param colorSpace Color space for the color.
 */
","* Creates a PDColor containing the given pattern name.
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern is defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes a PDDeviceNAttributes with the given COSDictionary.
 * @param attributes The COSDictionary containing device attributes.
 */
","* Creates a new DeviceN colour space attributes dictionary from the given dictionary.
     * @param attributes a dictionary that has all of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(org.apache.pdfbox.cos.COSDictionary),57,60,"/**
 * Initializes a PDDeviceNProcess with the provided attributes.
 * @param attributes COSDictionary containing device attributes
 */
","* Creates a new  DeviceN Process Dictionary from the given attributes.
     * @param attributes a DeviceN attributes dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(org.apache.pdfbox.cos.COSArray),51,54,"/**
 * Initializes a PDGamma object with the given COSArray.
 * @param array The COSArray containing gamma values.
 */
","* Creates a new gamma from a COS array.
     * @param array the array containing the XYZ values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDOutputIntent with the given COSDictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes a PDTristimulus object with the given COS array.
 * @param array COS array containing tristimulus values.
 */
","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a PDTransparencyGroupAttributes with a COSDictionary.
 */","* Creates a group object from a given dictionary
     * @param dic {@link COSDictionary} object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:<init>(),45,47,"/**
 * Private constructor to prevent direct instantiation of CCITTFactory.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory$Dimensions:<init>(),141,141,"/**
* Private static class representing dimensions (width, height).
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:<init>(),66,68,"/**
 * Private constructor to prevent direct instantiation of JPEGFactory.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:<init>(),58,60,"/**
 * Private constructor to prevent direct instantiation of LosslessFactory.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk:<init>(),686,686,"/**
 * Represents a chunk of data for processing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:<init>(),98,100,"/**
 * Private constructor to prevent instantiation of the class.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:<init>(),50,52,"/**
 * Private constructor to prevent direct instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(org.apache.pdfbox.cos.COSDictionary),103,106,"/**
 * Initializes the PDOptionalContentProperties with a COSDictionary.
 * @param props The COSDictionary containing properties.
 */
","* Creates a new instance based on a given {@link COSDictionary}.
     * @param props the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Initializes the pattern with the provided dictionary.
 * @param dictionary The COS dictionary for the pattern.
 */
","* Creates a new Pattern dictionary from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(org.apache.pdfbox.cos.COSDictionary),94,97,"/**
 * Initializes a PDShading object with the provided dictionary.
 * @param shadingDictionary The COSDictionary for shading.
 */
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,org.apache.pdfbox.util.Matrix)",34,38,"/**
 * Initializes a ShadingPaint with a shading function and matrix.
 * @param shading The shading function to use.
 * @param matrix The transformation matrix.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",69,73,"/**
 * Initializes a PDExtendedGraphicsState with a dictionary and cache.
 */","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.
     * @param resourceCache Resource cache, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",117,121,"/**
 * Creates a PDSoftMask with a dictionary and resource cache.
 * @param dictionary COSDictionary for the soft mask.
 * @param resourceCache Resource cache to use.
 */
","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.
     * @param resourceCache Resource cache, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDTextState:<init>(),26,37,"/**
* Represents the state of text rendering, including font and spacing.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/AppearanceStyle.java,<init>,org.apache.pdfbox.pdmodel.interactive.AppearanceStyle:<init>(),24,40,"/**
 * Defines the leading (line spacing) for text formatting.
 * Defaults to 1.2 * fontSize.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:<init>(java.lang.String),135,138,"/**
 * Constructs a Paragraph object with the given text content.
 * @param text The text content of the paragraph.
 */
","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Word:<init>(java.lang.String),305,308,"/**
 * Initializes a Word object with the given text content.
 * @param text The text content of the word.
 */
","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),72,75,"/**
 * Initializes a Builder with the provided content stream.
 * @param contents The appearance content stream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:<init>(org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder),127,137,"/**
 * Constructs a PlainTextFormatter with values from the Builder.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Initializes a PDAction with the provided COSDictionary.
 * @param a The COSDictionary containing action data.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:<init>(),33,36,"/**
 * Private constructor to prevent instantiation of utility class.
 */
",* Utility Class.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes the AdditionalActions object with a COSDictionary.
 * @param a The COSDictionary containing additional actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the annotation actions with the provided COSDictionary.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the catalog actions with the provided COSDictionary.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the additional actions for a PDF form field.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes the PDPageAdditionalActions with a COSDictionary.
 * @param a The COSDictionary containing the actions.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a PDTargetDirectory with the given COSDictionary.
 */","* Create a target directory from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes the URI dictionary with the provided COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Initializes Windows launch parameters from a COSDictionary.
 * @param p The COSDictionary containing launch parameters.
 */
","* Constructor.
     *
     * @param p The params dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a PDAppearanceCharacteristicsDictionary with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     * 
     * @param dict dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDAppearanceDictionary with the given COSDictionary.
 */","* Constructor for reading.
     *
     * @param dictionary The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(),37,39,"/**
 * Private constructor to prevent direct instantiation of PDAppearanceEntry.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDAppearanceEntry using the provided COSDictionary.
 */","* Constructor for reading.
     * 
     * @param entry the dictionary of the appearance entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes the PDBorderEffectDictionary with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict a border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),79,82,"/**
 * Initializes the PDBorderStyleDictionary with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict a border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes the ExternalDataDictionary with a COSDictionary.
 * @param dictionary The COSDictionary to use for initialization.
 */
","* Constructor.
     * 
     * @param dictionary Dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/AnnotationBorder.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:<init>(),29,34,"/**
* Initializes a new AnnotationBorder object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,double,double,org.apache.pdfbox.pdmodel.common.PDRectangle)",66,73,"/**
 * Initializes a CloudyBorder object with given parameters.
 * @param stream Content stream, intensity, line width, rectangle.
 */
","* Creates a new <code>CloudyBorder</code> that writes to the specified
     * content stream.
     *
     * @param stream content stream
     * @param intensity intensity of cloudy effect (entry <code>I</code>); typically 1.0 or 2.0
     * @param lineWidth line width for annotation border (entry <code>W</code>)
     * @param rect annotation rectangle (entry <code>Rect</code>)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,80,"/**
 * Constructs a PDAbstractAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(org.apache.pdfbox.cos.COSDictionary),52,56,"/**
 * Initializes a PDPropBuild with a COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(org.apache.pdfbox.cos.COSDictionary),49,54,"/**
 * Initializes the PDPropBuildDataDict with a COSDictionary.
 * @param dict The COSDictionary to initialize with.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(org.apache.pdfbox.cos.COSDictionary),95,99,"/**
 * Creates a PDSeedValue from a COSDictionary.
 * Sets the dictionary as direct.
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(org.apache.pdfbox.cos.COSDictionary),83,87,"/**
 * Constructs a PDSeedValueCertificate from a COSDictionary.
 * @param dict The COSDictionary containing certificate data.
 */
","* Constructor.
     *
     * @param dict The certificate seed value dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Constructs a PDSeedValueMDP with the given COSDictionary.
 * @param dict The COSDictionary to use.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Initializes a PDSeedValueTimeStamp with a given COSDictionary.
 * @param dict The COSDictionary to use for initialization.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(org.apache.pdfbox.cos.COSDictionary),101,104,"/**
 * Constructs a PDSignature object from a COSDictionary.
 * @param dict The COSDictionary containing signature data.
 */
","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:<init>(),49,52,"/**
 * Default constructor. Initializes pageNo to 0.
 */
",* Creates the default signature options.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:<init>(org.apache.pdfbox.pdfwriter.COSWriter),34,37,"/**
* Initializes SigningSupport with a COSWriter instance.
* @param cosWriter The COSWriter used for signing operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:<init>(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateBuilder),54,57,"/**
 * Creates a PDFTemplateCreator with a provided PDFTemplateBuilder.
 * @param templateBuilder The builder used to create the PDF template.
 */
","* Constructor.
     * 
     * @param templateBuilder the template builder",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateStructure.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateStructure:<init>(),43,43,"/**
* Represents the structure of a PDF template.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigProperties.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:<init>(),27,27,"/**
* Represents visible signature properties for a PDF document.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination:<init>(),33,33,"/**
 * Abstract class implementing PDDestinationOrAction interface.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:<init>(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),33,36,"/**
 * Initializes the iterator with a starting outline item.
 * @param startingItem The initial PDF outline item.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:<init>(java.lang.String,java.lang.String)",49,53,"/**
 * Constructs a KeyValue object with the given key and value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:<init>(),75,77,"/**
 * Private constructor to prevent instantiation of the FieldUtils class.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",62,67,"/**
 * Constructs a PDField object.
 * @param acroForm The parent AcroForm.
 * @param field The field dictionary.
 * @param parent The parent field.
 */
","* Constructor.
     *  @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:<init>(),38,40,"/**
 * Private constructor to prevent direct instantiation of the class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:<init>(org.apache.pdfbox.cos.COSBase),45,48,"/**
 * Initializes a PDXFAResource with the provided XFA base object.
 * @param xfaBase The COSBase representing the XFA base.
 */
","* Constructor.
     *
     * @param xfaBase The xfa resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes PDMeasureDictionary with the given COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),77,80,"/**
 * Initializes the PDNumberFormatDictionary with a COSDictionary.
 * @param dictionary The COSDictionary to use for initialization.
 */
","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a PDViewportDictionary with the given COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Initializes a PDThread object with the provided COSDictionary.
 * @param t The COSDictionary representing the thread.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param t The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(org.apache.pdfbox.cos.COSDictionary),43,46,"/**
 * Initializes a PDThreadBead with the provided COSDictionary.
 * @param b The COSDictionary representing the thread bead.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param b The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(org.apache.pdfbox.cos.COSDictionary),146,149,"/**
 * Initializes the PDViewerPreferences with a COSDictionary.
 * @param dic The COSDictionary containing viewer preferences.
 */
","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawerParameters.java,<init>,"org.apache.pdfbox.rendering.PageDrawerParameters:<init>(org.apache.pdfbox.rendering.PDFRenderer,org.apache.pdfbox.pdmodel.PDPage,boolean,org.apache.pdfbox.rendering.RenderDestination,java.awt.RenderingHints,float)",43,53,"/**
 * Initializes a PageDrawerParameters object with rendering details.
 * @param renderer PDF renderer, page, subsampling, destination, hints, threshold
 */
",* Package-private constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,<init>,"org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:<init>(org.apache.pdfbox.rendering.SoftMask,java.awt.PaintContext)",120,123,"/**
 * Initializes SoftPaintContext with the given PaintContext.
 * @param context The PaintContext to use.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(),2148,2151,"/**
 * Default constructor. Initializes textPosition to null.
 */
",* Instantiate a new PDFTextStripper object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(org.apache.pdfbox.text.TextPosition),2153,2156,"/**
 * Constructs a LineItem with the given text position.
 * @param textPosition The position of the text in the line.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper:<init>(org.apache.pdfbox.text.TextPosition),2222,2225,"/**
 * Initializes a PositionWrapper with the given TextPosition.
 * @param position The TextPosition to wrap.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,"org.apache.pdfbox.text.PDFTextStripper$WordWithTextPositions:<init>(java.lang.String,java.util.List)",2180,2184,"/**
 * Initializes a WordWithTextPositions object.
 * @param word The word to be associated with positions.
 * @param positions List of text positions for the word.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPositionComparator.java,<init>,org.apache.pdfbox.text.TextPositionComparator:<init>(),29,29,"/**
* Compares two TextPosition objects based on their offset.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,<init>,org.apache.pdfbox.util.DateConverter:<init>(),69,71,"/**
 * Private constructor to prevent direct instantiation of DateConverter.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,<init>,org.apache.pdfbox.util.Hex:<init>(),45,45,"/**
 * Private constructor to prevent instantiation of the Hex class.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,<init>,org.apache.pdfbox.util.IterativeMergeSort:<init>(),47,50,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(),41,51,"/**
 * Initializes a 3x3 matrix with identity values.
 */",* Constructor. This produces an identity matrix.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(float[]),57,60,"/**
 * Initializes the Matrix with data from the provided float array.
 * @param src The float array to initialize the matrix with.
 */
","* Constructor. This produces a matrix with the given array as data.
     * The source array is not copied or cloned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,"org.apache.pdfbox.util.Matrix:<init>(float,float,float,float,float,float)",101,111,"/**
 * Initializes a 3x3 matrix with provided values.
 * @param a, b, c, d, e, f matrix elements.
 */
","* Creates a transformation matrix with the given 6 elements. Transformation matrices are
     * discussed in 8.3.3, ""Common Transformations"" and 8.3.4, ""Transformation Matrices"" of the PDF
     * specification. For simple purposes (rotate, scale, translate) it is recommended to use the
     * static methods below.
     *
     * Produces the following matrix:
     * a b 0
     * c d 0
     * e f 1
     *
     * @see Matrix#getRotateInstance(double, float, float)
     * @see Matrix#getScaleInstance(float, float)
     * @see Matrix#getTranslateInstance(float, float)
     *
     * @param a the X coordinate scaling element (m00) of the 3x3 matrix
     * @param b the Y coordinate shearing element (m10) of the 3x3 matrix
     * @param c the X coordinate shearing element (m01) of the 3x3 matrix
     * @param d the Y coordinate scaling element (m11) of the 3x3 matrix
     * @param e the X coordinate translation element (m02) of the 3x3 matrix
     * @param f the Y coordinate translation element (m12) of the 3x3 matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,<init>,org.apache.pdfbox.util.NumberFormatUtil:<init>(),55,57,"/**
 * Private constructor to prevent instantiation of NumberFormatUtil.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,<init>,org.apache.pdfbox.util.StringUtil:<init>(),21,21,"/**
* Utility methods for string manipulation.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,<init>,"org.apache.pdfbox.util.Vector:<init>(float,float)",28,32,"/**
 * Constructs a Vector with given x and y coordinates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,<init>,org.apache.pdfbox.util.Version:<init>(),38,41,"/**
 * Private constructor to prevent instantiation; used for static helpers.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,<init>,org.apache.pdfbox.util.XMLUtil:<init>(),45,47,"/**
 * Private constructor to prevent instantiation of XMLUtil class.
 */
","* Utility class, should not be instantiated.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,<init>,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:<init>(),73,75,"/**
 * Private constructor to prevent instantiation of the class.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.Encoding:<init>(),30,74,"/**
 * Gets an encoding instance by name. Returns null if not found.
 * @param name The encoding name to retrieve.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFStreamEngine:<init>(),103,105,"/**
 * Private constructor to prevent direct instantiation of PDFStreamEngine.
 */",* Creates a new PDFStreamEngine.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,addOperator,org.apache.pdfbox.contentstream.PDFStreamEngine:addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor),112,115,"/**
 * Adds an operator processor to the operators map.
 * @param op The operator processor to add.
 */
","* Adds an operator processor to the engine.
     *
     * @param op operator processor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,createBlendModeMap,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:createBlendModeMap(),165,187,"/**
 * Creates a map of COSName to BlendMode.
 * @return Map of COSName to BlendMode.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,setTerminator,org.apache.pdfbox.filter.ASCII85OutputStream:setTerminator(char),71,78,"/**
 * Sets the terminator character. Must be 118-126, excluding 'z'.
 */","* This will set the terminating character.
     *
     * @param term The terminating character.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setSplitAtPage,org.apache.pdfbox.multipdf.Splitter:setSplitAtPage(int),632,639,"/**
 * Sets the split length.
 * @param split The number of pages to split at.
 * @throws IllegalArgumentException if split is not positive.
 */
","* This will tell the splitting algorithm where to split the pages.  The default
     * is 1, so every page will become a new document.  If it was two then each document would
     * contain 2 pages.  If the source document had 5 pages it would split into
     * 3 new documents, 2 documents containing 2 pages and 1 document containing one
     * page.
     *
     * @param split The number of pages each split document should contain.
     * @throws IllegalArgumentException if the page is smaller than one.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setStartPage,org.apache.pdfbox.multipdf.Splitter:setStartPage(int),647,654,"/**
 * Sets the start page.
 * @param start The start page number. Must be greater than 0.
 */
","* This will set the start page.
     *
     * @param start the 1-based start page
     * @throws IllegalArgumentException if the start page is smaller than one.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setEndPage,org.apache.pdfbox.multipdf.Splitter:setEndPage(int),662,669,"/**
 * Sets the end page.
 * @param end The end page number. Throws exception if <= 0.
 */
","* This will set the end page.
     *
     * @param end the 1-based end page
     * @throws IllegalArgumentException if the end page is smaller than one.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,setLenient,org.apache.pdfbox.pdfparser.COSParser:setLenient(boolean),419,426,"/**
 * Sets the lenient parsing flag. Throws exception if parsing is done.
 */","* Change the parser leniency flag.
     *
     * This method can only be called before the parsing of the file.
     *
     * @param lenient try to handle malformed PDFs.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(int),46,53,"/**
 * Initializes CompressParameters with the given object stream size.
 * @param objectStreamSize The size of the object stream.
 */
","* Sets the number of objects, that can be contained in compressed object streams. Higher object stream sizes may
     * cause PDF readers to slow down during the rendering of PDF documents, therefore a reasonable value should be
     * selected. A value of 0 disables the compression.
     *
     * @param objectStreamSize The number of objects, that can be contained in compressed object streams.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache,java.util.Map)",110,123,"/**
 * Initializes the object with resource and cache data.
 * @param resourceDictionary Resource dictionary to use.
 * @param directFontCache Cache for direct fonts.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),307,314,"/**
* Sets the blend mode.
* @param blendMode The blend mode to set; cannot be null.
*/
","* Sets the blend mode in the current graphics state
     *
     * @param blendMode blend mode
     * @throws IllegalArgumentException if blendMode is null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,53,"/**
 * Constructs a PDFieldTree with the given AcroForm.
 * @param acroForm The root AcroForm for the field tree.
 */
","* Constructor for reading.
     *
     * @param acroForm the AcroForm containing the fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getLength,org.apache.pdfbox.cos.COSStream:getLength(),331,340,"/**
 * Returns the length of the stream. Throws exception if writing.
 */","* Returns the length of the encoded stream.
     *
     * @return length in bytes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setValue,org.apache.pdfbox.util.filetypedetector.ByteTrie$ByteTrieNode:setValue(java.lang.Object),46,52,"/**
 * Sets the value for this trie node.
 * @param value The value to set. Throws exception if already set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<init>,org.apache.pdfbox.multipdf.PDFMergerUtility:<init>(),147,150,"/**
 * Default constructor. Initializes an empty list of PDF sources.
 */",* Instantiate a new PDFMergerUtility.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:<init>(org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool),69,72,"/**
 * Initializes the COSWriterObjectStream with a compression pool.
 * @param compressionPool Compression pool for object stream.
 */
","* Creates an object stream for compressible objects from the given {@link COSWriterCompressionPool}. The objects
     * must first be prepared for this object stream, by adding them via calling
     * {@link COSWriterObjectStream#prepareStreamObject(COSObjectKey, COSBase)} and will be written to this
     * {@link COSStream}, when {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @param compressionPool The compression pool an object stream shall be created for.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:<init>(),25,29,"/**
* Initializes an empty instruction sequence.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObjects,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObjects(),41,48,"/**
 * Returns the list of objects. Creates a new list if it's null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumbers,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumbers(),50,57,"/**
 * Returns the list of revision numbers. Creates if null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState:<init>(),725,728,"/**
* List to store IDAT chunks during PNG conversion.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:<init>(),242,245,"/**
 * Represents a line of text containing a list of words.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginTextClip,org.apache.pdfbox.rendering.PageDrawer:beginTextClip(),465,469,"/**
* Initializes the textClippings list to store text clipping data.
*/
","* Begin buffering the text clipping path, if any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,equals,org.apache.pdfbox.cos.COSName:equals(java.lang.Object),737,741,"/**
* Checks if this COSName is equal to another COSName.
* @param object The object to compare to.
* @return True if equal, false otherwise.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.io.File),308,311,"/**
 * Adds a source file to the list of sources.
 * @param source The file to add.
 * @throws FileNotFoundException if the file does not exist.
 */
","* Add a source file to the list of files to merge.
     *
     * @param source File representing source document
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(org.apache.pdfbox.io.RandomAccessRead),319,322,"/**
 * Adds a RandomAccessRead source to the list of sources.
 */","* Add a source to the list of documents to merge.
     *
     * @param source RandomAccessRead representing source document. To pass an InputStream, wrap it
     * into a {@link RandomAccessReadBuffer}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addName,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addName(java.lang.String),35,38,"/**
 * Adds a name to the list of instructions.
 * @param name The name to add.
 */
","* Add a name (ex. an operator)
     * @param name the name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addProc,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addProc(org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence),71,74,"/**
 * Adds an instruction sequence as a child.
 * @param child The instruction sequence to add.
 */
","* Adds a proc (sub-sequence of instructions).
     * @param child the child proc",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,addRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),76,79,"/**
 * Adds a recipient to the list of recipients.
 * @param recipient The PublicKeyRecipient to add.
 */
","* Adds a new recipient to the recipients list.
     * @param recipient A new recipient.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,addWord,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:addWord(org.apache.pdfbox.pdmodel.interactive.PlainText$Word),289,291,"/**
 * Adds a word to the list of words.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,addRegion,"org.apache.pdfbox.text.PDFTextStripperByArea:addRegion(java.lang.String,java.awt.geom.Rectangle2D)",68,72,"/**
 * Adds a region with its associated rectangle to the data structures.
 * @param regionName Name of the region.
 * @param rect Rectangle defining the region's area.
 */
","* Add a new region to group text by.
     *
     * @param regionName The name of the region.
     * @param rect The rectangle area to retrieve the text from. The y-coordinates are java
     * coordinates (y == 0 is top), not PDF coordinates (y == 0 is bottom).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ClosePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,52,"/**
 * Closes the current path. Logs a warning if no MoveTo exists.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setTrailer(org.apache.pdfbox.cos.COSDictionary),197,206,"/**
 * Sets the trailer of the current Xref object.
 * @param trailer The COSDictionary representing the trailer.
 */
","* Adds trailer information for current XRef object.
     *
     * @param trailer the current document trailer dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(),296,300,"/**
 * Creates an input stream from the decoded data.
 * @return InputStream backed by the decoded data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getObject(org.apache.pdfbox.cos.COSObjectKey),126,129,"/**
* Retrieves a COS object from the key pool.
* @param key The key identifying the COS object.
* @return The COSBase object associated with the key.
*/
","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.
     *
     * @param key The {@link COSObjectKey} a registered {@link COSBase} shall be found for.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,getOperator,org.apache.pdfbox.pdmodel.common.function.type4.Operators:getOperator(java.lang.String),136,139,"/**
 * Retrieves an operator by name.
 * @param operatorName Name of the operator to retrieve.
 * @return The Operator object or null if not found.
 */
","* Returns the operator for the given operator name.
     * @param operatorName the operator name
     * @return the operator (or null if there's no such operator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,sequenceToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:sequenceToName(java.lang.String),197,205,"/**
 * Resolves a Unicode sequence to a name.
 * @param unicodeSequence Unicode sequence to resolve.
 * @return Name associated with the sequence or "".notdef"".
 */
","* Returns the name for a given sequence of Unicode characters.
     *
     * @param unicodeSequence sequence of Unicode characters
     * @return PostScript glyph name, or "".notdef""",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getStreamCache,org.apache.pdfbox.cos.COSDocument:getStreamCache(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),141,164,"/**
 * Creates a stream cache, falling back to memory only if creation fails.
 * @return StreamCache object or null if both fail.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,operatorException,"org.apache.pdfbox.contentstream.PDFStreamEngine:operatorException(org.apache.pdfbox.contentstream.operator.Operator,java.util.List,java.io.IOException)",961,986,"/**
 * Handles exceptions based on type, logging or re-throwing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsState(),1039,1042,"/**
* Returns the top GraphicsState from the graphics stack.
*/",* @return Returns the graphicsState.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,restoreGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:restoreGraphicsState(),999,1002,"/**
 * Restores the previous graphics state from the stack.
 */",* Pops the current graphics state from the stack.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsStackSize,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsStackSize(),1031,1034,"/**
 * Returns the current size of the graphics stack.
 */",* @return Returns the size of the graphicsStack.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transformPoint,"org.apache.pdfbox.util.Matrix:transformPoint(float,float)",345,354,"/**
 * Transforms a point using the provided transformation matrix.
 * @param x x-coordinate of the point
 * @param y y-coordinate of the point
 * @return Transformed Point2D.Float object
 */
","* Transforms the given point by this matrix.
     *
     * @param x x-coordinate
     * @param y y-coordinate
     *
     * @return the transformed point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,decreaseLevel,org.apache.pdfbox.contentstream.PDFStreamEngine:decreaseLevel(),1170,1177,"/**
 * Decrements the level by 1; logs error if level becomes negative.
 */","* Decrease the level. Call this after running a potentially recursive operation. A log message
     * is shown if the level is below 0. This can happen if the level is not decreased after an
     * operation is done, e.g. by using a ""finally"" block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addInteger,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addInteger(int),44,47,"/**
 * Adds an integer to the instructions list.
 * @param value The integer to add.
 */
","* Adds an int value.
     * @param value the value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,createDiacritics,org.apache.pdfbox.text.TextPosition:createDiacritics(),125,160,"/**
 * Creates a map of diacritic characters and their Unicode equivalents.
 * Returns a map of integer (code point) to string (diacritic).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,<clinit>,org.apache.pdfbox.contentstream.PDFStreamEngine:<clinit>(),80,80,"/**
* Initializes a logger for the PDFStreamEngine class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,<clinit>,org.apache.pdfbox.contentstream.operator.DrawObject:<clinit>(),38,38,"/**
* Initializes a logger for the DrawObject class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,<clinit>,org.apache.pdfbox.contentstream.operator.graphics.ClosePath:<clinit>(),36,36,"/**
* Initializes a logger for the ClosePath class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,<clinit>,org.apache.pdfbox.contentstream.operator.graphics.CurveTo:<clinit>(),39,39,"/**
* Initializes a logger for the CurveTo class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,<clinit>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:<clinit>(),39,39,"/**
* Initializes a logger for the CurveToReplicateInitialPoint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,<clinit>,org.apache.pdfbox.contentstream.operator.graphics.DrawObject:<clinit>(),44,44,"/**
* Initializes a logger for the DrawObject class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,<clinit>,org.apache.pdfbox.contentstream.operator.graphics.LineTo:<clinit>(),39,39,"/**
* Initializes a logger for the LineTo class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,<clinit>,org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:<clinit>(),44,44,"/**
* Initializes a logger for the DrawObject class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,<clinit>,org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:<clinit>(),40,40,"/**
* Initializes a logger for the SetGraphicsStateParameters class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,<clinit>,org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:<clinit>(),39,39,"/**
* Initializes a logger for the SetLineDashPattern class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,<clinit>,org.apache.pdfbox.contentstream.operator.text.MoveText:<clinit>(),39,39,"/**
* Initializes a logger for the MoveText class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,<clinit>,org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:<clinit>(),43,43,"/**
* Initializes a logger for the SetFontAndSize class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<clinit>,org.apache.pdfbox.cos.COSDictionary:<clinit>(),50,50,"/**
* Initializes a logger for the COSDictionary class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<clinit>,org.apache.pdfbox.cos.COSDocument:<clinit>(),47,47,"/**
* Initializes a logger for the COSDocument class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<clinit>,org.apache.pdfbox.cos.COSObject:<clinit>(),37,37,"/**
* Initializes a logger for the COSObject class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<clinit>,org.apache.pdfbox.cos.COSStream:<clinit>(),59,59,"/**
* Initializes a logger for the COSStream class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,<clinit>,org.apache.pdfbox.filter.ASCIIHexFilter:<clinit>(),34,37,"/**
* Reverse lookup table for hex characters to integer values.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,<clinit>,org.apache.pdfbox.filter.DCTFilter:<clinit>(),53,53,"/**
* Initializes a logger for the DCTFilter class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,<clinit>,org.apache.pdfbox.filter.Filter:<clinit>(),53,53,"/**
* Initializes a logger for the Filter class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,<clinit>,org.apache.pdfbox.filter.FlateFilterDecoderStream:<clinit>(),38,38,"/**
* Initializes a logger for the FlateFilterDecoderStream class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,<clinit>,org.apache.pdfbox.filter.JBIG2Filter:<clinit>(),47,50,"/**
* Indicates if LeViGo logging has been initialized.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,<clinit>,org.apache.pdfbox.multipdf.PDFCloneUtility:<clinit>(),43,43,"/**
* Initializes a logger for the PDFCloneUtility class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<clinit>,org.apache.pdfbox.multipdf.PDFMergerUtility:<clinit>(),93,93,"/**
* Initializes a logger for the PDFMergerUtility class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,<clinit>,org.apache.pdfbox.multipdf.Splitter:<clinit>(),76,76,"/**
* Initializes a logger for the Splitter class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,<clinit>,org.apache.pdfbox.pdfparser.BruteForceParser:<clinit>(),46,71,"/**
 * Logger for the BruteForceParser class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<clinit>,org.apache.pdfbox.pdfparser.COSParser:<clinit>(),69,141,"/**
 * Defines how many trailing bytes to read for the EOF marker.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<clinit>,org.apache.pdfbox.pdfparser.PDFParser:<clinit>(),36,36,"/**
* Initializes a logger for the PDFParser class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<clinit>,org.apache.pdfbox.pdfparser.PDFStreamParser:<clinit>(),47,47,"/**
* Initializes a logger for the PDFStreamParser class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,<clinit>,org.apache.pdfbox.pdfparser.XrefParser:<clinit>(),42,47,"/**
 * Defines constants for xref parsing, including characters and table.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<clinit>,org.apache.pdfbox.pdfparser.XrefTrailerResolver:<clinit>(),103,103,"/**
* Initializes a logger for the XrefTrailerResolver class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,<clinit>,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:<clinit>(),55,55,"/**
* Initializes a logger for the COSWriterObjectStream class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,<clinit>,org.apache.pdfbox.pdmodel.PDAbstractContentStream:<clinit>(),79,79,"/**
* Initializes a logger for the PDAbstractContentStream class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<clinit>,org.apache.pdfbox.pdmodel.PDDocumentCatalog:<clinit>(),61,61,"/**
* Initializes a logger for the PDDocumentCatalog class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<clinit>,org.apache.pdfbox.pdmodel.PDPage:<clinit>(),69,72,"/**
* Defines a logger for the PDPage class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<clinit>,org.apache.pdfbox.pdmodel.PDPageContentStream:<clinit>(),68,68,"/**
* Initializes a logger for the PDPageContentStream class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<clinit>,org.apache.pdfbox.pdmodel.PDPageTree:<clinit>(),45,45,"/**
* Initializes a logger for the PDPageTree class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<clinit>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<clinit>(),44,44,"/**
* Initializes a logger for the PDNameTreeNode class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<clinit>,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<clinit>(),44,44,"/**
* Initializes a logger for the PDNumberTreeNode class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<clinit>,org.apache.pdfbox.pdmodel.common.PDStream:<clinit>(),52,52,"/**
* Initializes a logger for the PDStream class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,<clinit>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:<clinit>(),46,46,"/**
* Initializes a logger for the PDFunctionType0 class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<clinit>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<clinit>(),45,45,"/**
* Initializes a logger for the PDObjectReference class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<clinit>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<clinit>(),49,49,"/**
* Initializes a logger for the PDStructureTreeRoot class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<clinit>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<clinit>(),62,68,"/**
 * Defines the AES salt used for key derivation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<clinit>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<clinit>(),53,81,"/**
* Defines constants for the StandardSecurityHandler.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<clinit>(),56,56,"/**
* Initializes a logger for the FDFAnnotation class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<clinit>(),39,39,"/**
* Initializes a logger for the FDFAnnotationFreeText class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<clinit>(),45,45,"/**
* Initializes a logger for the FDFAnnotationInk class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<clinit>(),42,42,"/**
* Initializes a logger for the FDFAnnotationLink class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<clinit>(),41,41,"/**
* Initializes a logger for the FDFAnnotationPolygon class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<clinit>(),42,42,"/**
* Initializes a logger for the FDFAnnotationPolyline class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<clinit>(),52,52,"/**
* Initializes a logger for the FDFAnnotationStamp class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<clinit>(),47,47,"/**
* Initializes a logger for the FDFDictionary class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<clinit>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<clinit>(),50,50,"/**
* Initializes a logger for the FDFDocument class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,<clinit>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:<clinit>(),29,29,"/**
* Initializes a logger for AcroFormGenerateAppearancesProcessor.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,<clinit>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:<clinit>(),53,53,"/**
* Initializes a logger for the AcroFormOrphanWidgetsProcessor class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDCIDFont:<clinit>(),46,46,"/**
* Initializes a logger for the PDCIDFont class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:<clinit>(),52,52,"/**
* Initializes a logger for PDCIDFontType0 class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<clinit>(),51,51,"/**
* Initializes a logger for the PDCIDFontType2 class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:<clinit>(),54,54,"/**
* Initializes a logger for the PDCIDFontType2Embedder class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDFontFactory:<clinit>(),39,46,"/**
 * Defines constants for font types and a TTF header byte array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<clinit>(),47,47,"/**
* Initializes a logger for the PDSimpleFont class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDType0Font:<clinit>(),53,53,"/**
* Initializes a logger for the PDType0Font class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDType1CFont:<clinit>(),57,57,"/**
* Initializes a logger for the PDType1CFont class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDType3CharProc:<clinit>(),49,49,"/**
* Initializes a logger for the PDType3CharProc class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDType3Font:<clinit>(),54,54,"/**
* Initializes a logger for the PDType3Font class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<clinit>(),36,36,"/**
* Initializes a logger for the DictionaryEncoding class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:<clinit>(),40,40,"/**
* Initializes a logger for the BlendComposite class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDColor:<clinit>(),40,40,"/**
* Initializes a logger for the PDColor class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<clinit>(),44,44,"/**
* Initializes a logger for the PDDeviceNAttributes class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<clinit>(),41,41,"/**
* Initializes a logger for the PDDeviceNProcess class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<clinit>(),57,57,"/**
* Initializes a logger for the PDICCBased class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:<clinit>(),64,64,"/**
* Initializes a logger for the JPEGFactory class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<clinit>(),74,74,"/**
* Initializes a logger for the PDImageXObject class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:<clinit>(),45,48,"/**
* Logger for SampledImageReader class. Used for debugging/logging.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:<clinit>(),42,42,"/**
* Initializes a logger for the AxialShadingContext class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:<clinit>(),37,37,"/**
* Initializes a logger for AxialShadingPaint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:<clinit>(),45,45,"/**
* Initializes a logger for the PDMeshBasedShadingType class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:<clinit>(),45,45,"/**
* Initializes a logger for the PDShadingType4 class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:<clinit>(),44,44,"/**
 * Initializes a logger for the PDTriangleBasedShadingType class.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:<clinit>(),42,42,"/**
* Initializes a logger for the RadialShadingContext class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:<clinit>(),38,38,"/**
* Initializes a logger for the RadialShadingPaint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:<clinit>(),36,36,"/**
* Initializes a logger for the Type1ShadingContext class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:<clinit>(),36,36,"/**
* Initializes a logger for Type1ShadingPaint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingContext.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:<clinit>(),36,36,"/**
* Initializes a logger for the Type4ShadingContext class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:<clinit>(),36,36,"/**
* Initializes a logger for the Type4ShadingPaint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingContext.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:<clinit>(),36,36,"/**
* Initializes a logger for the Type5ShadingContext class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:<clinit>(),36,36,"/**
* Initializes a logger for Type5ShadingPaint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:<clinit>(),38,38,"/**
* Initializes a logger for the Type6ShadingPaint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:<clinit>(),38,38,"/**
* Initializes a logger for the Type7ShadingPaint class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<clinit>(),87,87,"/**
* Initializes a logger for the PDSoftMask class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<clinit>(),52,52,"/**
* Initializes a logger for the PDAnnotation class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<clinit>(),34,34,"/**
* Initializes a logger for the PDAnnotationPopup class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<clinit>(),37,37,"/**
* Initializes a logger for the PDCaretAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<clinit>(),42,42,"/**
* Initializes a logger for the PDCircleAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<clinit>(),36,36,"/**
* Initializes a logger for PDFileAttachmentAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<clinit>(),41,41,"/**
* Initializes a logger for the PDHighlightAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<clinit>(),35,35,"/**
* Initializes a logger for the PDInkAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<clinit>(),37,37,"/**
* Initializes a logger for the PDLineAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<clinit>(),42,42,"/**
* Initializes a logger for the PDLinkAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<clinit>(),43,43,"/**
* Initializes a logger for the PDPolygonAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<clinit>(),38,38,"/**
* Initializes a logger for the PDPolylineAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<clinit>(),43,43,"/**
* Initializes a logger for the PDSquareAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<clinit>(),45,45,"/**
* Initializes a logger for the PDSquigglyAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<clinit>(),34,34,"/**
* Initializes a logger for the PDStrikeoutAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<clinit>(),34,34,"/**
* Initializes a logger for the PDUnderlineAppearanceHandler class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:<clinit>(),47,47,"/**
* Initializes a logger for the PDFTemplateCreator class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:<clinit>(),56,56,"/**
* Initializes a logger for the PDVisibleSigBuilder class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<clinit>(),33,33,"/**
* Initializes a logger for the PDOutlineNode class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<clinit>(),66,66,"/**
* Initializes a logger for the PDAcroForm class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:<clinit>(),37,37,"/**
* Initializes a logger for the PDFieldTree class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<clinit>(),44,44,"/**
* Initializes a logger for the PDNonTerminalField class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<clinit>(),39,39,"/**
* Initializes a Logger for the PDSignatureField class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<clinit>,org.apache.pdfbox.printing.PDFPrintable:<clinit>(),48,48,"/**
* Initializes a logger for the PDFPrintable class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,<clinit>,org.apache.pdfbox.rendering.GlyphCache:<clinit>(),37,37,"/**
* Initializes a logger for the GlyphCache class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<clinit>,org.apache.pdfbox.rendering.TilingPaintFactory:<clinit>(),42,42,"/**
* Initializes a logger for the TilingPaintFactory class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,<clinit>,org.apache.pdfbox.util.DateConverter:<clinit>(),66,119,"/**
 * Defines alternative date formats to try when parsing PDF dates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,<clinit>,org.apache.pdfbox.util.Hex:<clinit>(),33,43,"/**
 * Defines hexadecimal byte arrays for conversion purposes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,<clinit>,org.apache.pdfbox.util.Version:<clinit>(),33,33,"/**
* Initializes a logger for the Version class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:isDataEmpty(),83,87,"/**
 * Checks if the patch list is empty.
 * @return True if the list is empty, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:setExportValues(java.util.List),66,71,"/**
 * Throws exception if values are present, PDPushButton disallows Opt entries.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toString,org.apache.pdfbox.pdmodel.font.PDFont:toString(),666,670,"/**
 * Returns a string representation of the object.
 * Includes class name and name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toString,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:toString(),65,69,"/**
 * Returns a string representation of the key-value pair.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/MissingOperandException.java,<init>,"org.apache.pdfbox.contentstream.operator.MissingOperandException:<init>(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",30,32,"/**
 * Constructs an OperatorTooFewOperandsException.
 * @param operator Operator name.
 * @param operands Number of operands.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/EmptyGraphicsStackException.java,<init>,org.apache.pdfbox.contentstream.operator.state.EmptyGraphicsStackException:<init>(),32,35,"/**
 * Constructs an EmptyGraphicsStackException with a descriptive message.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,checkClosed,org.apache.pdfbox.cos.COSStream:checkClosed(),105,114,"/**
 * Checks if the COSStream is closed. Throws IOException if closed.
 */","* Throws if the random access backing store has been closed. Helpful for catching cases where
     * a user tries to use a COSStream which has outlived its COSDocument.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,reset,org.apache.pdfbox.filter.ASCII85InputStream:reset(),269,273,"/**
* Throws an IOException indicating reset functionality is unsupported.
*/
","* Unsupported.
     *
     * @throws IOException telling that this is an unsupported action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,reset,org.apache.pdfbox.filter.CCITTFaxDecoderStream:reset(),492,495,"/**
* Throws an IOException indicating mark/reset functionality is unsupported.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,reset,org.apache.pdfbox.filter.FlateFilterDecoderStream:reset(),239,243,"/**
 * Throws an IOException indicating that reset functionality is unsupported.
 */","* Unsupported.
     *
     * @throws IOException always throw as reset is an unsupported feature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/MissingImageReaderException.java,<init>,org.apache.pdfbox.filter.MissingImageReaderException:<init>(java.lang.String),33,36,"/**
 * Constructs a MissingImageReaderException with the given message.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getEncryption,org.apache.pdfbox.pdfparser.COSParser:getEncryption(),1164,1172,"/**
 * Retrieves the encryption object for the document.
 * @throws IOException if the document hasn't been parsed.
 */
","* This will get the encryption dictionary. The document must be parsed before this is called.
     *
     * @return The encryption dictionary of the document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getAccessPermission,org.apache.pdfbox.pdfparser.COSParser:getAccessPermission(),1181,1189,"/**
 * Retrieves the access permission.
 * @throws IOException if the document hasn't been parsed.
 */
","* This will get the AccessPermission. The document must be parsed before this is called.
     *
     * @return The access permission of document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/MissingResourceException.java,<init>,org.apache.pdfbox.pdmodel.MissingResourceException:<init>(java.lang.String),27,30,"/**
 * Constructs a MissingResourceException with the specified message.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/InvalidPasswordException.java,<init>,org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException:<init>(java.lang.String),31,34,"/**
 * Constructs an InvalidPasswordException with the given error message.
 */
","* Creates a new InvalidPasswordException.
     * @param message A msg to go with this exception.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,<init>,org.apache.pdfbox.contentstream.operator.Operator:<init>(java.lang.String),44,51,"/**
 * Initializes an Operator with the given operator string.
 * @param aOperator The operator string; must not start with '/'.
 */
","* Constructor.
     *
     * @param aOperator The operator that this object will represent.
     * @throws IllegalArgumentException if the operator starts with ""/"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,toString,org.apache.pdfbox.contentstream.operator.Operator:toString(),102,106,"/**
 * Returns a string representation of this PDF operator.
 */","* This will print a string rep of this class.
     *
     * @return A string rep of this class.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toString,org.apache.pdfbox.cos.COSArray:toString(),516,520,"/**
 * Returns a string representation of this COSArray.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,toString,org.apache.pdfbox.cos.COSName:toString(),731,735,"/**
 * Returns a string representation of this COSName object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,toString,org.apache.pdfbox.cos.COSObject:toString(),148,152,"/**
 * Returns a string representation of the COSObject, including its key.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(org.apache.pdfbox.cos.COSName),88,96,"/**
 * Retrieves a filter by name.
 * @param filterName COS filter name.
 * @return Filter object or throws IOException if invalid.
 */
","* Returns a filter instance given its COSName.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,<clinit>,org.apache.pdfbox.contentstream.operator.Operator:<clinit>(),36,36,"/**
* Concurrent map to store operators, keyed by their identifier.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,<clinit>,org.apache.pdfbox.pdmodel.font.CMapManager:<clinit>(),33,33,"/**
* Cache for CMap objects, using a concurrent hash map.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,<init>,org.apache.pdfbox.pdmodel.font.FontCache:<init>(),30,33,"/**
* Initializes a ConcurrentHashMap to cache FontBoxFonts.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,checkArrayTypesClass,"org.apache.pdfbox.contentstream.operator.OperatorProcessor:checkArrayTypesClass(java.util.List,java.lang.Class)",79,79,"/**
* Checks if all operands are instances of the given class.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addReal(float),53,56,"/**
 * Adds a real number to the list of instructions.
 * @param value The real number to add.
 */
","* Adds a real value.
     * @param value the value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,width,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:width(float),361,366,"/**
* Sets the width of the visible sign.
* @param width The desired width in pixels.
* @return This PDVisibleSignDesigner object.
*/
","* 
     * @param width signature image width
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,height,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:height(float),382,387,"/**
 * Sets the height of the visible sign designer.
 * @param height The desired height in pixels.
 * @return The current PDVisibleSignDesigner instance.
 */
","* 
     * @param height signature image height
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getLen,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:getLen(java.awt.geom.Point2D,java.awt.geom.Point2D)",130,135,"/**
 * Calculates the distance between two Point2D objects.
 * @param ps starting point
 * @param pe ending point
 * @return distance between the points
 */
","* Calculate the distance from point ps to point pe.
     *
     * @param ps one end of a line
     * @param pe the other end of the line
     * @return length of the line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",162,165,"/**
 * Calculates the signed distance along a line segment.
 * @param p Point to evaluate. @param p1 Start point. @param p2 End point.
 */
","* A line from point p1 to point p2 defines an equation, adjust the form of
     * the equation to let the rhs equals 0, then calculate the lhs value by
     * plugging the coordinate of p in the lhs expression.
     *
     * @param p target point
     * @param p1 one end of a line
     * @param p2 the other end of a line
     * @return calculated value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",213,217,"/**
 * Calculates the signed distance from a point to a line.
 * @param p point to check
 * @param p1 line start point
 * @param p2 line end point
 * @return signed distance value
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",64,69,"/**
 * Creates a new PDMarkedContent object.
 * @param tag The tag for the marked content.
 * @param properties Dictionary of properties.
 */
","* Creates a new marked content object.
     * 
     * @param tag the tag
     * @param properties the properties",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getName(),59,63,"/**
* Returns the name of the CALGRAY COSName.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getName(),53,57,"/**
* Returns the name of the CALRGB color space.
* Returns a String representing the name.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getName(),116,120,"/**
 * Returns the name of the CMYK device.
 * Returns ""CMYK"".
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:getName(),42,46,"/**
 * Returns the name of the device gray color space.
 * Returns a string representing the name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getName(),442,446,"/**
* Returns the name of the device.
* Returns ""DeviceName"" as a string.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:getName(),43,47,"/**
* Returns the name of the DeviceRGB color space.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getName(),146,150,"/**
 * Returns the name of the ICCBASED COSName.
 * @return String representation of the ICCBASED name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getName(),98,102,"/**
* Returns the name of the indexed COS name.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getName(),55,59,"/**
 * Returns the name of the color component.
 * Returns ""LAB"".
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getName(),68,72,"/**
 * Returns the name of the pattern COS object.
 * @return String representing the pattern name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getName(),100,104,"/**
* Returns the name of the separation COS object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getType(),109,112,"/**
 * Returns the type name, which is ""Pattern"".
 */","* This will return the paint type.
     * @return The type of object that this is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getType(),115,118,"/**
 * Returns the type name as a COSName.SHADING.
 */","* This will return the type.
     *
     * @return the type of object that this is",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getDefaultValue(),198,209,"/**
 * Returns the default value as a string, or """" if not a COSName.
 */","* Returns the default value, if any.
     *
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,unCheck,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:unCheck(),84,87,"/**
* Sets the value to ""Off"", effectively unchecking a state.
*/
","* Unchecks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(java.util.List),357,365,"/**
 * Constructs appearances for all terminal fields.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,53,"/**
 * Starts a marked content sequence using the first COSName argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,44,"/**
 * Ends the marked content sequence in the current context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,isWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:isWhitePoint(),71,76,"/**
 * Checks if the white point (wpX, wpY, wpZ) is (1, 1, 1).
 */","* Tests if the current point is the white point.
     *
     * @return true if the current point is the white point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:calcColorTable(),138,156,"/**
 * Calculates a color table based on shading type and domain.
 * @return int[] color map, indexed by factor.
 */
","* Calculate the color on the axial line and store them in an array.
     *
     * @return an array, index denotes the relative position, the corresponding
     * value is the color on the axial line
     * @throws IOException if the color conversion fails.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calcColorTable(),143,161,"/**
 * Calculates a color table based on shading type and domain.
 * @return int[] Color table representing the shading.
 */
","* Calculate the color on the line that connects two circles' centers and store the result in an
     * array.
     *
     * @return an array, index denotes the relative position, the corresponding value the color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createInitialCodeTable,org.apache.pdfbox.filter.LZWFilter:createInitialCodeTable(),261,271,"/**
 * Creates an initial code table with byte arrays.
 * Contains 258 entries: 256 single bytes, EOD, CLEAR_TABLE.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createCodeTable,org.apache.pdfbox.filter.LZWFilter:createCodeTable(),252,257,"/**
 * Creates and returns a code table (list of byte arrays).
 */",* Init the code table with 1 byte entries and the EOD and CLEAR_TABLE markers.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSources,org.apache.pdfbox.multipdf.PDFMergerUtility:addSources(java.util.List),330,332,"/**
 * Adds all elements from sourcesList to the sources collection.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,get,org.apache.pdfbox.cos.COSArray:get(int),294,297,"/**
 * Retrieves the object at the specified index.
 * @param index Index of the object to retrieve.
 * @return The COSBase object at the given index.
 */
","* This will get an object from the array.  This will NOT dereference
     * the COS object.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,get,org.apache.pdfbox.pdmodel.common.COSArrayList:get(int),450,455,"/**
 * Retrieves the element at the specified index.
 * @param index the index of the element to retrieve
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,size,org.apache.pdfbox.cos.COSArray:size(),437,440,"/**
 * Returns the number of elements in this collection.
 */","* This will get the size of this array.
     *
     * @return The number of elements in the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,size,org.apache.pdfbox.pdmodel.common.COSArrayList:size(),132,136,"/**
 * Returns the number of elements in this collection.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getNumberOfRecipients,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getNumberOfRecipients(),123,126,"/**
 * Returns the number of recipients.
 * @return The size of the recipients collection.
 */","* Returns the number of recipients
     * @return the number of recipients",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,ensureStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:ensureStream(),498,509,"/**
 * Retrieves the next input stream. Returns false if no more streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getInterWordSpacing,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:getInterWordSpacing(float),283,286,"/**
 * Calculates inter-word spacing based on the given width.
 * @param width The total width available for the line.
 * @return The spacing between words.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,isEmpty,org.apache.pdfbox.cos.COSArray:isEmpty(),447,450,"/**
 * Checks if the collection is empty.
 * @return True if empty, false otherwise.
 */
","* Returns true if the container is empty, false otherwise.
     *
     * @return true if the container is empty, false otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSArrayList:isEmpty(),141,145,"/**
 * Checks if the underlying collection is empty.
 * @return True if empty, false otherwise.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:isDataEmpty(),82,86,"/**
 * Checks if the list of triangles is empty.
 * @return True if the triangle list is empty, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,removeRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:removeRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),86,89,"/**
 * Removes a recipient from the list.
 * @param recipient Recipient to remove.
 * @return True if removed, false otherwise.
 */
","* Removes a recipient from the recipients list.
     * @param recipient The recipient to remove.
     * @return true If a recipient was found and removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,iterator,org.apache.pdfbox.cos.COSArray:iterator(),527,531,"/**
* Returns an iterator for the objects within this collection.
*/","* Get access to the list.
     *
     * @return an iterator over the array elements",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,iterator,org.apache.pdfbox.pdmodel.common.COSArrayList:iterator(),159,163,"/**
* Returns an iterator for the list.
* Delegates to the underlying list's iterator.
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getRecipientsIterator,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getRecipientsIterator(),96,99,"/**
 * Returns an iterator for the list of PublicKeyRecipient objects.
 */","* Returns an iterator to browse the list of recipients.
     * Object found in this iterator are <code>PublicKeyRecipient</code>.
     * @return The recipients list iterator.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toList,org.apache.pdfbox.cos.COSArray:toList(),669,672,"/**
 * Converts the objects to a list.
 * @return A list of COSBase objects.
 */
","*  Return contents of COSArray as a Java List.
     *
     *  @return the COSArray as List",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNameStringList,org.apache.pdfbox.cos.COSArray:toCOSNameStringList(),679,684,"/**
 * Converts COS objects to a list of their names as strings.
 */","* This will return a list of names if the COSArray consists of COSNames only.
     * 
     * @return the list of names of the COSArray of COSNames",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSStringStringList,org.apache.pdfbox.cos.COSArray:toCOSStringStringList(),691,696,"/**
 * Converts COS objects to a list of strings.
 * @return List of strings extracted from COS objects.
 */
","* This will return a list of names if the COSArray consists of COSStrings only.
     * 
     * @return the list of names of the COSArray of COSStrings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,getBoolean,org.apache.pdfbox.cos.COSBoolean:getBoolean(java.lang.Boolean),99,102,"/**
 * Converts a Java Boolean to a COSBoolean.
 * @param value Java Boolean to convert
 * @return COSBoolean representation of the input value
 */
","* This will get the boolean value.
     *
     * @param value Parameter telling which boolean value to get.
     *
     * @return The single boolean instance that matches the parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,toString,org.apache.pdfbox.cos.COSBoolean:toString(),121,125,"/**
 * Returns a string representation of the value.
 */","* Return a string representation of this object.
     *
     * @return The string value of this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,writePDF,org.apache.pdfbox.cos.COSBoolean:writePDF(java.io.OutputStream),151,161,"/**
 * Writes a boolean value to the output stream as bytes.
 * @param output Output stream to write the boolean value to.
 */
","* This will write this object out to a PDF stream.
     *
     * @param output The stream to write this object out to.
     *
     * @throws IOException If an error occurs while writing out this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,writePDF,org.apache.pdfbox.cos.COSNull:writePDF(java.io.OutputStream),65,68,"/**
 * Writes null bytes to the provided output stream.
 * @param output The OutputStream to write to.
 * @throws IOException if an I/O error occurs.
 */
","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeBytes,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeBytes(byte[]),1524,1527,"/**
 * Writes the given byte array to the output stream.
 * @param data byte array to write
 * @throws IOException if an I/O error occurs
 */","* Writes binary data to the content stream.
     * 
     * @param data as byte formatted to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,entrySet,org.apache.pdfbox.cos.COSDictionary:entrySet(),1233,1236,"/**
 * Returns a set of map entries for the underlying data.
 */","* Returns the name-value entries in this dictionary. The returned set is in the order the entries were added to the
     * dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return name-value entries in this dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isEntryChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isEntryChanged(java.lang.Object,java.lang.Object)",177,184,"/**
 * Checks if a new entry differs from the old one.
 * @param oldEntry The previous entry.
 * @param newEntry The updated entry.
 * @return True if the entries are different.
 */
","* Is the value changed?
     * 
     * @param oldEntry old entry
     * @param newEntry new entry
     * @return <code>true</code> if the entry is changed, <code>false</code>
     * otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,size,org.apache.pdfbox.cos.COSDictionary:size(),122,125,"/**
 * Returns the number of items in the collection.
 */","* This will return the number of elements in this dictionary.
     *
     * @return The number of elements in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName),1177,1180,"/**
* Retrieves a COSBase object associated with the given key.
* @param key The key to look up in the items map.
* @return The COSBase object or null if not found.
*/
","* This will do a lookup into the dictionary.
     *
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,keySet,org.apache.pdfbox.cos.COSDictionary:keySet(),1221,1224,"/**
* Returns a set view of the keys in this dictionary.
*/","* Returns the names of the entries in this dictionary. The returned set is in the order the entries were added to
     * the dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return names of the entries in this dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,forEach,org.apache.pdfbox.cos.COSDictionary:forEach(java.util.function.BiConsumer),1245,1247,"/**
 * Executes the given action on each item in the items list.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getValues,org.apache.pdfbox.cos.COSDictionary:getValues(),1254,1257,"/**
 * Returns a collection of all values in the map.
 */","* This will get all of the values for the dictionary.
     *
     * @return All the values for the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,addAll,org.apache.pdfbox.cos.COSDictionary:addAll(org.apache.pdfbox.cos.COSDictionary),1277,1280,"/**
 * Adds all items from the given dictionary to the items map.
 * @param dict The COSDictionary whose items to add.
 */
","* This will add all of the dictionaries keys/values to this dictionary. Existing key/value pairs will be
     * overwritten.
     *
     * @param dict The dictionaries to get the key/value pairs from.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(org.apache.pdfbox.cos.COSName),1288,1291,"/**
 * Checks if this COS object contains the given key.
 * @param name The COS name to check for.
 * @return True if the key exists, false otherwise.
 */
","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,tokenizeOnSpace,org.apache.pdfbox.util.StringUtil:tokenizeOnSpace(java.lang.String),36,39,"/**
 * Splits a string into tokens based on spaces.
 * Uses a regex to handle various space characters.
 */
","* Split at spaces but keep them
     *
     * @param s
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseInt,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseInt(java.lang.String),112,115,"/**
 * Parses the string argument as a signed decimal integer.
 * @param token The string to parse.
 * @return The integer value of the string.
 */
","* Parses a value of type ""int"".
     * @param token the token to be parsed
     * @return the parsed value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,java.lang.String)",73,88,"/**
 * Initializes a FontType object.
 * @param type Font type.
 * @param subtypeString Subtype string for font type determination.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunction:toString(),362,366,"/**
 * Returns a string representation of the function type.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/ProtectionPolicy.java,setEncryptionKeyLength,org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy:setEncryptionKeyLength(int),46,53,"/**
 * Sets the encryption key length.
 * @param l Key length (must be 40, 128, or 256)
 * @throws IllegalArgumentException if l is invalid
 */
","* set the length in (bits) of the secret key that will be
     * used to encrypt document data.
     * The default value is 40 bits, which provides a low security level
     * but is compatible with old versions of Acrobat Reader.
     *
     * @param l the length in bits (must be 40, 128 or 256)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setStartPage,org.apache.pdfbox.text.PDFTextStripper:setStartPage(int),1077,1084,"/**
 * Sets the start page value. Throws exception if value <= 0.
 */
","* This will set the first page to be extracted by this class.
     *
     * @param startPageValue New value of 1-based startPage property.
     * 
     * @throws IllegalArgumentException if the parameter is below 1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setEndPage,org.apache.pdfbox.text.PDFTextStripper:setEndPage(int),1105,1112,"/**
 * Sets the end page value. Throws exception if value is invalid.
 */","* This will set the last page to be extracted by this class.
     *
     * @param endPageValue New value of 1-based endPage property.
     *
     * @throws IllegalArgumentException if the parameter is below 1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,hashCode,org.apache.pdfbox.cos.COSString:hashCode(),286,291,"/**
 * Calculates the hash code based on bytes and forceHexForm flag.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,<init>,"org.apache.pdfbox.pdfparser.BruteForceParser:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.COSParser)",92,97,"/**
 * Initializes a BruteForceParser with a COSDocument and COSParser.
 */","* Constructor. Triggers a brute force search for all objects of the document.
     *
     * @param cosDocument the corresponding COS document
     * @param cosParser the COSParser to be used for reading the pdf
     * 
     * @throws IOException if the source data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<init>,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:<init>(),72,75,"/**
 * Initializes the XrefTrailerObj with XRefType.TABLE.
 */
",*  Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<init>,org.apache.pdfbox.pdfparser.XrefTrailerResolver:<init>(),54,100,"/**
 * Default constructor for XrefTrailerObj. Initializes xrefType to TABLE.
 */",*  Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary),74,83,"/**
 * Initializes PDResources with a COSDictionary.
 * @param resourceDictionary The COSDictionary containing resources.
 */
","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",91,100,"/**
 * Initializes a PDResources object with a dictionary and cache.
 * @param resourceDictionary COSDictionary for resources
 * @param resourceCache ResourceCache for caching resources
 */
","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Operators:<init>(),82,129,"/**
 * Initializes the operators map with various operator constants.
 */",* Creates a new Operators object with the default set of operators.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDType1Font:<clinit>(),59,77,"/**
 * Initializes a map of alternative glyph names for common font variations.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGB(float[]),124,141,"/**
 * Converts a color value to RGB, using a cached map for efficiency.
 * @param value float array representing the color value
 * @return float[] RGB color representation
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",98,102,"/**
 * Constructs a PDAcroForm with the given document and form dictionary.
 */","* Constructor.
     *
     * @param doc The document that this form is part of.
     * @param form The existing acroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,<init>,org.apache.pdfbox.rendering.GlyphCache:<init>(org.apache.pdfbox.pdmodel.font.PDVectorFont),42,45,"/**
 * Initializes the GlyphCache with the provided font.
 * @param font The PDVectorFont to use for glyph caching.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,<init>,org.apache.pdfbox.util.filetypedetector.ByteTrie$ByteTrieNode:<init>(),39,43,"/**
 * Represents a node in the Byte Trie data structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getTrailerCount,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getTrailerCount(),142,145,"/**
 * Returns the number of trailers.
 * Returns the size of the bytePosToXrefMap.
 */","* Returns the count of trailers.
     *
     * @return the count of trailers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getAllFilters,org.apache.pdfbox.filter.FilterFactory:getAllFilters(),99,102,"/**
 * Returns a collection of all available filters.
 * Returns the values of the 'filters' map.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectFromPool,org.apache.pdfbox.cos.COSDocument:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),505,514,"/**
 * Retrieves a COSObject from the object pool using the provided key.
 * @param key The key used to identify the COSObject.
 * @return The COSObject or null if the key is null.
 */
","* This will get an object from the pool.
     *
     * @param key The object key.
     *
     * @return The object in the pool or a new one if it has not been parsed yet.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,addXRefTable,org.apache.pdfbox.cos.COSDocument:addXRefTable(java.util.Map),522,524,"/**
* Adds all entries from xrefTableValues to the xrefTable.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseReal(java.lang.String),122,125,"/**
 * Parses a string token into a float value.
 * @param token The string to parse.
 * @return The float value represented by the token.
 */
","* Parses a value of type ""real"".
     * @param token the token to be parsed
     * @return the parsed value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,coerce,org.apache.pdfbox.cos.COSFloat:coerce(float),120,137,"/**
 * Coerces a float value, handling infinities and near-zero values.
 */","* Check and coerce the value field to be between MIN_NORMAL and MAX_VALUE.
     * 
     * @param floatValue the value to be checked
     * @return the coerced value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getDir,org.apache.pdfbox.text.TextPosition:getDir(),245,284,"/**
 * Calculates and returns the direction based on the text matrix.
 * @return Direction in degrees (0, 90, 180, or 270).
 */
","* Return the direction/orientation of the string in this object based on its text matrix. Only
     * angles of 0, 90, 180, or 270 are supported. To get other angles, use this code:
     * <pre>
     * TextPosition text = ...
     * Matrix m = text.getTextMatrix().clone();
     * m.concatenate(text.getFont().getFontMatrix());
     * int angle = (int) Math.round(Math.toDegrees(Math.atan2(m.getShearY(), m.getScaleY())));
     * </pre>
     *
     * @return The direction of the text (0, 90, 180, or 270).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,equals,org.apache.pdfbox.cos.COSFloat:equals(java.lang.Object),175,180,"/**
 * Checks if this COSFloat is equal to another COSFloat.
 * @param o the object to compare to
 * @return true if equal, false otherwise
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,hashCode,org.apache.pdfbox.cos.COSFloat:hashCode(),185,189,"/**
 * Generates a hash code based on the 'value' float.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,formatString,org.apache.pdfbox.cos.COSFloat:formatString(),204,214,"/**
 * Formats the value as a string, handling scientific notation.
 * @return Formatted string representation of the value.
 */
","* Builds, if needed, and returns the string representation of the current value.
     * @return current value as string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSNull,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSNull(java.io.OutputStream),385,389,"/**
 * Writes a ""null"" value to the output stream, followed by a space.
 */","* Write {@link COSNull} to the given stream.
     *
     * @param output The stream, that shall be written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,<init>,org.apache.pdfbox.cos.COSIncrement:<init>(org.apache.pdfbox.cos.COSUpdateInfo),67,70,"/**
 * Initializes a COSIncrement with the provided update origin.
 * @param incrementOrigin The COSUpdateInfo representing the origin.
 */
","* Creates a new {@link COSIncrement} for the given {@link COSUpdateInfo}, the increment will use it´s
     * {@link COSDocumentState} as it´s own origin and shall collect all updates contained in the given
     * {@link COSUpdateInfo}.<br>
     * Should the given object be {@code null}, the resulting increment shall be empty.
     *
     * @param incrementOrigin The {@link COSUpdateInfo} serving as an update source for this {@link COSIncrement}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<init>,org.apache.pdfbox.multipdf.Overlay:<init>(),54,98,"/**
 * Defines the position of overlaid pages: foreground or background.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,<init>,org.apache.pdfbox.multipdf.PDFCloneUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),57,60,"/**
 * Initializes PDFCloneUtility with a destination PDDocument.
 * @param dest The destination PDDocument for cloning.
 */
","* Creates a new instance for the given target document.
     * 
     * @param dest the destination PDF document that will receive the clones",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(boolean),102,105,"/**
 * Constructs a DefaultResourceCache.
 * @param enableStableCache if true, enables stable cache functionality.
 */
","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,isNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:isNeedToBeUpdated(),30,33,"/**
 * Checks if the object needs to be updated based on its state.
 * @return True if the object needs updating, false otherwise.
 */
","* Get the update state for the COSWriter. This indicates whether an object is to be written
     * when there is an incremental save.
     *
     * @return the update state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,contains,org.apache.pdfbox.cos.COSIncrement:contains(org.apache.pdfbox.cos.COSBase),243,246,"/**
* Checks if the collection contains the given COS base object.
*/","* Returns {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     *
     * @param base The {@link COSBase} to check.
     * @return {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     * @see #objects
     * @see #processedObjects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,isExcluded,org.apache.pdfbox.cos.COSIncrement:isExcluded(org.apache.pdfbox.cos.COSBase),325,328,"/**
 * Checks if a COSBase object is excluded.
 * @param base The COSBase object to check.
 * @return True if excluded, false otherwise.
 */
","* Returns {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     *
     * @param base The {@link COSBase} to check for exclusion.
     * @return {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     * @see #excluded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,add,org.apache.pdfbox.cos.COSIncrement:add(org.apache.pdfbox.cos.COSBase),275,281,"/**
 * Adds a COSBase object to the list of objects.
 * @param object The COSBase object to add, can be null.
 */","* The given object and actual {COSBase}s shall be part of the increment and must be added to {@link #objects},
     * if possible.<br>
     * {@code null} values shall be skipped.
     *
     * @param object The {@link COSBase} to add to {@link #objects}.
     * @see #objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,addProcessedObject,org.apache.pdfbox.cos.COSIncrement:addProcessedObject(org.apache.pdfbox.cos.COSObject),291,297,"/**
 * Adds a COS object to the list of processed objects.
 * @param base The COS object to add, can be null.
 */
","* The given {@link COSObject} has been processed, or is being processed. It shall be added to
     * {@link #processedObjects} to skip it, should it be encountered again.<br>
     * {@code null} values shall be ignored.
     *
     * @param base The {@link COSObject} to add to {@link #processedObjects}.
     * @see #processedObjects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,registerTrueTypeFontForClosing,org.apache.pdfbox.pdmodel.PDDocument:registerTrueTypeFontForClosing(org.apache.fontbox.ttf.TrueTypeFont),909,912,"/**
 * Adds a TrueTypeFont to the list of fonts to be closed.
 * @param ttf The TrueTypeFont instance to register.
 */
","* For internal PDFBox use when creating PDF documents: register a TrueTypeFont to make sure it is closed when the
     * PDDocument is closed to avoid memory leaks. Users don't have to call this method, it is done by the appropriate
     * PDFont classes.
     *
     * @param ttf the TrueTypeFont to be registered",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addToSubset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addToSubset(int),289,293,"/**
 * Adds a code point to the subset collection.
 * @param codePoint The code point to add.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<clinit>(),46,69,"/**
 * Initializes a set of supported annotation names.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,createWidgetDictionarySet,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:createWidgetDictionarySet(java.util.List),825,835,"/**
 * Collects COSDictionaries from all widgets of the fields.
 * @return Set of COSDictionaries representing the widgets.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<clinit>(),65,69,"/**
 * Defines lists of CID type 0 and 2 font types.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<clinit>(),35,41,"/**
 * Defines a list of allowed digest names for processing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,exclude,org.apache.pdfbox.cos.COSIncrement:exclude(org.apache.pdfbox.cos.COSBase[]),308,313,"/**
* Adds elements from the base array to the excluded list.
* @param base array of elements to add; can be null
* @return this object for chaining
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addGlyphIds,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addGlyphIds(java.util.Set),296,298,"/**
* Adds all elements from glyphIds to the allGlyphIds list.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getWidgets(),263,267,"/**
 * Returns an empty list of widgets.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getExportValues(),58,62,"/**
 * Returns an empty list of export values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,<init>,"org.apache.pdfbox.cos.COSInputStream:<init>(java.io.InputStream,java.util.List)",86,89,"/**
 * Calls super constructor and sets decodeResults.
 * @param input Input value passed to super constructor
 * @param decodeResults Decode results to be stored.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,<init>,org.apache.pdfbox.filter.ASCII85InputStream:<init>(java.io.InputStream),51,59,"/**
 * Constructs an ASCII85InputStream, initializing internal state.
 * @param is The input stream to decode from.
 */
","* Constructor.
     *
     * @param is The input stream to actually read from.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:<init>(java.io.InputStream,int,int,long,boolean)",89,124,"/**
 * Creates a CCITTFaxDecoderStream with specified parameters.
 * @param stream Input stream for fax data.
 * @param columns Columns in the fax image.
 */
","* Creates a CCITTFaxDecoderStream.
     * This constructor may be used for CCITT streams embedded in PDF files,
     * which use EncodedByteAlign.
     *
     * @param stream the compressed CCITT stream.
     * @param columns the number of columns in the stream.
     * @param type the type of stream, must be one of {@code COMPRESSION_CCITT_MODIFIED_HUFFMAN_RLE},
     *             {@code COMPRESSION_CCITT_T4} or {@code COMPRESSION_CCITT_T6}.
     * @param options CCITT T.4 or T.6 options.
     * @param byteAligned enable byte alignment used in PDF files (EncodedByteAlign).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,equals,org.apache.pdfbox.cos.COSInteger:equals(java.lang.Object),126,130,"/**
* Checks if this COSInteger is equal to another COSInteger.
* @param o The object to compare to.
* @return True if equal, false otherwise.
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,toString,org.apache.pdfbox.cos.COSInteger:toString(),145,149,"/**
 * Returns a string representation of this COSInt object.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,writePDF,org.apache.pdfbox.cos.COSInteger:writePDF(java.io.OutputStream),214,217,"/**
 * Writes the value as an ISO-8859-1 encoded string to the output stream.
 */
","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,get,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:get(java.lang.Object),96,100,"/**
* Retrieves the value associated with the given key.
* @param key the key to retrieve the value for
* @return the value associated with the key, or null if absent
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:hasExplicitWidth(int),282,286,"/**
 * Checks if a glyph has an explicit width defined.
 * @param code The glyph code.
 * @return True if width is defined, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFontName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFontName(java.lang.String),234,237,"/**
 * Retrieves the mapped font name from the ALIASES map.
 * @param fontName The font name to map.
 * @return The mapped font name or null if not found.
 */
","* Returns the base name of the font which the given font name maps to.
     *
     * @param fontName name of font, either a base name or an alias
     * @return the base name or null if this is not one of the known names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(java.lang.String,org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName)",166,168,"/**
* Adds an alias to the ALIASES map, associating it with a base name.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,hashCode,org.apache.pdfbox.cos.COSName:hashCode(),743,747,"/**
 * Returns the hash code, based on the name field.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,compareTo,org.apache.pdfbox.cos.COSName:compareTo(org.apache.pdfbox.cos.COSName),749,753,"/**
 * Compares this COSName with another based on their names.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedExportValues(),122,145,"/**
 * Returns a list of export values matching the current field value.
 */","* This will get the selected export values.
     * <p>
     * A RadioButton might have an export value to allow field values
     * which can not be encoded as PDFDocEncoding or for the same export value 
     * being assigned to multiple RadioButtons in a group.<br>
     * To define an export value the RadioButton must define options {@link #setExportValues(List)}
     * which correspond to the individual items within the RadioButton.</p>
     * <p>
     * The method will either return the corresponding values from the options entry or in case there
     * is no such entry the fields value</p>
     * 
     * @return the export value of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,isEmpty,org.apache.pdfbox.cos.COSName:isEmpty(),759,762,"/**
 * Checks if the name is empty.
 * @return True if name is empty, false otherwise.
 */
","* Returns true if the name is the empty string.
     * @return true if the name is the empty string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeNumber,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeNumber(java.io.OutputStream,long,int)",221,234,"/**
 * Writes a long number to an OutputStream, using specified bytes.
 * @param os Output stream to write to.
 * @param number The long number to write.
 * @param bytes Number of bytes to use.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAbstractContentStream:addComment(java.lang.String),1422,1431,"/**
 * Adds a comment to the output stream.
 * Throws IllegalArgumentException if comment contains newline.
 */
","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeLine(),1513,1516,"/**
 * Writes a newline character to the output stream.
 */","* Writes a newline to the content stream as ASCII.
     * 
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,isFloat,org.apache.pdfbox.cos.COSNumber:isFloat(java.lang.String),97,109,"/**
 * Checks if a string represents a float (contains '.' or 'e').
 * @param number String to check.
 * @return True if float, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getCharsUTF16BE,org.apache.pdfbox.util.Hex:getCharsUTF16BE(java.lang.String),132,148,"/**
 * Converts a string to a char array representing its UTF-16BE hex values.
 */","* Takes the characters in the given string, convert it to bytes in UTF16-BE format
     * and build a char array that corresponds to the ASCII hex encoding of the resulting
     * bytes.
     *
     * Example:
     * <pre>
     *   getCharsUTF16BE(""ab"") == new char[]{'0','0','6','1','0','0','6','2'}
     * </pre>
     *
     * @param text The string to convert
     * @return The string converted to hex",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,getObject,org.apache.pdfbox.cos.COSObject:getObject(),109,130,"/**
 * Dereferences the COS object, avoiding recursion.
 * @return The dereferenced COSBase object or null.
 */
","* This will get the object that this object encapsulates.
     *
     * @return The encapsulated object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int,int)",54,66,"/**
 * Creates a COSObjectKey with given number, generation, and index.
 * @param num Object number.
 * @param gen Generation number.
 * @param index Stream index.
 */
","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.
     * @param index The index within a compressed object stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,hashCode,org.apache.pdfbox.cos.COSObjectKey:hashCode(),134,138,"/**
 * Generates a hash code based on the numberAndGeneration value.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,toString,org.apache.pdfbox.cos.COSObjectKey:toString(),140,144,"/**
 * Returns a string representation of the object.
 * Combines number and generation with "" R"" suffix.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,compareTo,org.apache.pdfbox.cos.COSObjectKey:compareTo(org.apache.pdfbox.cos.COSObjectKey),146,150,"/**
 * Compares this key's generation number with another.
 * @param other The other COSObjectKey to compare to.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<clinit>,org.apache.pdfbox.cos.COSObjectKey:<clinit>(),28,28,"/**
 * Defines a mask for generation numbers, used for calculations.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getDefaultDecode(int),110,114,"/**
 * Returns the default decode range for a given number of bits.
 * @param bitsPerComponent number of bits per component
 * @return float array representing the decode range.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calculateInputValues,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calculateInputValues(double,double)",304,335,"/**
 * Calculates two possible 's' values for a gradient fill circle.
 * @param x x-coordinate of the point
 * @param y y-coordinate of the point
 * @return float[] containing the two 's' values
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorX,org.apache.pdfbox.util.Matrix:getScalingFactorX(),454,479,"/**
 * Returns the scaling factor X, considering rotation.
 * Returns single[0] if no rotation.
 */","* Returns the x-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The x-scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorY,org.apache.pdfbox.util.Matrix:getScalingFactorY(),486,494,"/**
 * Returns the Y scaling factor. Returns single[4] if single[3] is 0.
 */","* Returns the y-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The y-scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,<init>,"org.apache.pdfbox.cos.COSOutputStream:<init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.RandomAccessStreamCache)",55,61,"/**
 * Initializes the object with filters, params, and cache.
 * Creates a buffer if filters are present.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,"org.apache.pdfbox.cos.COSStream$1:<init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)",238,238,"/**
 * Calculates the average of numbers in a double array.
 * @param numbers array of double values
 * @return the average of the numbers, or 0.0 if empty
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,"org.apache.pdfbox.cos.COSStream$2:<init>(org.apache.pdfbox.cos.COSStream,java.io.OutputStream)",275,275,"/**
 * Calculates the average of numbers in an integer array.
 * @param numbers array of integers to average
 * @return the average as a double, or 0.0 if empty
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,<init>,org.apache.pdfbox.filter.ASCII85OutputStream:<init>(java.io.OutputStream),54,64,"/**
 * Constructs an ASCII85OutputStream, initializing internal state.
 * @param out The OutputStream to write the encoded data to.
 */
","* Constructor.
     *
     * @param out The output stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream),56,59,"/**
* Constructs a COSStandardOutputStream with the given OutputStream.
*/
","* Constructor.
     *
     * @param out The underlying stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream,long)",67,71,"/**
 * Constructs a COSStandardOutputStream with given OutputStream and position.
 */","* Constructor.
     *
     * @param out The underlying stream to write to.
     * @param position The current position of output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,"org.apache.pdfbox.cos.COSOutputStream:write(byte[],int,int)",69,80,"/**
 * Writes a byte array to the underlying stream or superclass.
 * @param b The byte array to write.
 * @param off Offset into the byte array.
 * @param len Number of bytes to write.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(int),82,93,"/**
 * Writes a byte to the buffer or to the superclass.
 * @param b the byte to write
 * @throws IOException if an I/O error occurs
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,flush,org.apache.pdfbox.cos.COSOutputStream:flush(),95,102,"/**
 * Flushes the buffer. Calls super.flush() if buffer is null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$1:close(),392,423,"/**
 * Closes associated resources: stream cache, random access, and read view.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$2:close(),392,423,"/**
 * Closes the stream cache and random access objects, releasing resources.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,write,"org.apache.pdfbox.cos.COSStream$1:write(byte[],int,int)",241,243,"/**
 * Writes a portion of the byte array to the output stream.
 * @param b byte array
 * @param off offset within the array
 * @param len number of bytes to write
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,write,"org.apache.pdfbox.cos.COSStream$2:write(byte[],int,int)",278,280,"/**
 * Writes a portion of the byte array to the output stream.
 * @param b byte array to write
 * @param off offset in the array
 * @param len number of bytes to write
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,parseWidth,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:parseWidth(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",188,200,"/**
 * Extracts float value from argument if operator is d0/d1.
 * @param arguments Arguments to the operator.
 * @return Float value or throws IOException on error.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getBytes,org.apache.pdfbox.cos.COSString:getBytes(),247,250,"/**
 * Returns a copy of the internal byte array.
 * @return A new byte array containing the same elements.
 */
","* Returns the raw bytes of the string using a new byte array. Best used with a PDF <i>byte string</i>.
     * 
     * @return a clone of the underlying byte[] representation of the COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,adjustUserKey,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:adjustUserKey(byte[]),1207,1225,"/**
 * Adjusts user key: truncates if too long, returns empty if null.
 * @param u User key as byte array.
 * @throws IOException if key length is invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[])",1227,1233,"/**
 * Concatenates two byte arrays into a new byte array.
 * @param a first byte array
 * @param b second byte array
 * @return combined byte array
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[],byte[])",1235,1242,"/**
 * Concatenates three byte arrays into a single byte array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncate127,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncate127(byte[]),1244,1253,"/**
 * Truncates byte array to a maximum length of 127 bytes.
 * Returns the original array if its length is <= 127.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,copyImageBytes,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:copyImageBytes(byte[],int,byte[],byte[],int)",538,546,"/**
 * Copies image bytes from transferRow to targetValues,
 * and stores alpha data if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteIncrement,org.apache.pdfbox.pdfwriter.COSWriter:doWriteIncrement(),852,861,"/**
 * Writes the existing PDF and incremental update to output.
 */","* Write an incremental update for a non signature case. This can be used for e.g. augmenting
     * signatures.
     *
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getASCII,org.apache.pdfbox.cos.COSString:getASCII(),236,240,"/**
 * Converts byte array to ASCII string.
 * Uses US-ASCII charset.
 */
","* Returns the content of this string as a PDF <i>ASCII string</i>.
     * 
     * @return the ASCII string representation of the COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeCollectionFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeCollectionFile(byte[]),266,269,"/**
 * Checks if a file's header indicates a TrueType collection file.
 * @param header Byte array representing the file header.
 * @return True if it's a TrueType collection, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isOpenTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isOpenTypeFile(byte[]),271,274,"/**
 * Checks if file header matches OpenType font signature.
 * @param header Byte array representing the file header.
 * @return True if OpenType signature is found, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<clinit>,org.apache.pdfbox.cos.COSString:<clinit>(),47,55,"/**
 * A boolean to force parsing, used for legacy PDFParser compatibility.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,isAcceptingUpdates,org.apache.pdfbox.cos.COSUpdateState:isAcceptingUpdates(),195,198,"/**
* Checks if updates are currently being accepted.
* Returns true if originDocumentState accepts updates.
*/
","* Returns {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     *
     * @return {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see COSDocumentState#isAcceptingUpdates()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,set,"org.apache.pdfbox.cos.PDFDocEncoding:set(int,char)",112,116,"/**
 * Maps a code to a Unicode character and vice versa.
 * @param code Integer code to map.
 * @param unicode Unicode character to map.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,toString,org.apache.pdfbox.cos.PDFDocEncoding:toString(byte[]),121,136,"/**
 * Converts a byte array to a String, handling special characters.
 */",* Returns the string representation of the given PDFDocEncoded bytes.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,readOperator,org.apache.pdfbox.pdfparser.PDFStreamParser:readOperator(),412,443,"/**
 * Reads the next operator from the input source.
 * Returns the operator string; throws IOException on error.
 */","* This will read an operator from the stream.
     *
     * @return The operator that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,getBytes,org.apache.pdfbox.cos.PDFDocEncoding:getBytes(java.lang.String),141,149,"/**
 * Converts a string to a byte array using a custom mapping.
 * @param text The string to convert.
 * @return A byte array representing the string.
 */
",* Returns the given string encoded with PDFDocEncoding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,containsChar,org.apache.pdfbox.cos.PDFDocEncoding:containsChar(char),156,159,"/**
 * Checks if the map contains the given character.
 * @param character The character to check for.
 * @return True if the map contains the character, false otherwise.
 */
","* Returns true if the given character is available in PDFDocEncoding.
     *
     * @param character UTF-16 character",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsKey,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsKey(java.lang.Object),78,82,"/**
* Checks if the map contains a key.
* @param key the key to check
* @return true if the key exists, false otherwise
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,containsName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:containsName(java.lang.String),213,216,"/**
* Checks if the ALIASES map contains the given font name.
*/
","* Returns true if the given font name is one of the known names, including alias.
     *
     * @param fontName the name of font, either a base name or alias
     * @return true if the name is one of the known names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getCodeToNameMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getCodeToNameMap(),81,84,"/**
* Returns an unmodifiable map of code to name mappings.
*/","* Returns an unmodifiable view of the code -&gt; name mapping.
     * 
     * @return the code -&gt; name map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getNameToCodeMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getNameToCodeMap(),92,95,"/**
 * Returns an unmodifiable map of name to code.
 */","* Returns an unmodifiable view of the name -&gt; code mapping. More than one name may map to
     * the same code.
     *
     * @return the name -&gt; code map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,setNeedToBeUpdated,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:setNeedToBeUpdated(boolean),40,44,"/**
* Throws an UnsupportedOperationException. Indicates operation not supported.
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:remove(),245,249,"/**
 * Throws an UnsupportedOperationException, remove operation not supported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,remove,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:remove(),416,421,"/**
* Throws UnsupportedOperationException, removing is not allowed.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,getFunctionType,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:getFunctionType(),37,43,"/**
 * Returns the function type. Throws UnsupportedOperationException.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encode(int),394,400,"/**
 * Encodes a Unicode code point. Currently throws an exception.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encodeGlyphId,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encodeGlyphId(int),402,406,"/**
* Encodes a glyph ID to a byte array.
* @param glyphId The glyph ID to encode.
* @throws UnsupportedOperationException Always thrown.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:addToSubset(int),433,437,"/**
* Throws an UnsupportedOperationException. Not implemented.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,subset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:subset(),439,444,"/**
* Throws an UnsupportedOperationException; TTF subsetting not supported.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",131,131,"/**
 * Throws an UnsupportedOperationException, indicating unimplemented functionality.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getNumberOfComponents(),74,78,"/**
 * Returns the number of components.
 * Throws UnsupportedOperationException.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getDefaultDecode(int),80,84,"/**
 * Throws an UnsupportedOperationException; no default decode available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGB(float[]),92,96,"/**
 * Converts a color value to RGB format. Throws an exception.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGBImage(java.awt.image.WritableRaster),98,102,"/**
* Converts a WritableRaster to a BufferedImage.
* Currently throws UnsupportedOperationException.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRawImage(java.awt.image.WritableRaster),104,108,"/**
* Throws an UnsupportedOperationException. Converts raster to image.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,remove,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:remove(),71,75,"/**
 * Throws an UnsupportedOperationException, remove operation not supported.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,remove,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:remove(),102,106,"/**
 * Throws an UnsupportedOperationException, remove operation not supported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,flush,org.apache.pdfbox.filter.CCITTFaxEncoderStream:flush(),89,92,"/**
 * Flushes the underlying stream to ensure data is written.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,encode,"org.apache.pdfbox.filter.IdentityFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",42,48,"/**
* Copies input stream to output stream and flushes.
* @param input Input stream to copy from.
* @param encoded Output stream to write to.
* @param parameters COSDictionary parameters (unused).
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,org.apache.pdfbox.filter.ASCII85InputStream:read(),68,166,"/**
 * Reads a byte from the stream. Returns -1 if EOF.
 */","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,encode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",77,189,"/**
 * Encodes input stream data using a run-length encoding scheme.
 * @param input Input stream to encode.
 * @param encoded Output stream for encoded data.
 * @param parameters COSDictionary for parameters (unused).
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readCode(java.io.InputStream),317,321,"/**
 * Reads a single byte from the input stream.
 * @param in InputStream to read from
 * @return The next byte value, or -1 if EOF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1CFont:readCode(java.io.InputStream),306,310,"/**
 * Reads a single byte from the input stream.
 * @param in Input stream to read from.
 * @return The next byte from the stream, or -1 if EOF.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1Font:readCode(java.io.InputStream),486,490,"/**
 * Reads a single byte from the input stream.
 * @param in InputStream to read from
 * @return The next byte as an integer, or -1 if EOF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType3Font:readCode(java.io.InputStream),248,252,"/**
 * Reads a single byte from the input stream.
 * @param in InputStream to read from
 * @return The next byte as an integer, or -1 if EOF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,close,org.apache.pdfbox.filter.ASCII85InputStream:close(),210,217,"/**
 * Closes the input stream, releasing resources.
 */","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,write,org.apache.pdfbox.filter.ASCII85OutputStream:write(int),153,177,"/**
 * Writes a byte to the buffer, transforms, and writes to the output.
 */","* This will write a single byte.
     *
     * @param b The byte to write.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,flush,org.apache.pdfbox.filter.ASCII85OutputStream:flush(),184,226,"/**
* Flushes the internal buffer to the output stream.
*/","* This will flush the data to the stream.
     *
     * @throws IOException If there is an error writing the data to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,toString,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node:toString(),519,522,"/**
* Returns a string representation of the object's state.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,readBit,org.apache.pdfbox.filter.CCITTFaxDecoderStream:readBit(),409,425,"/**
 * Reads the next bit from the input stream.
 * Returns true if the bit is set, false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncateOrPad,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncateOrPad(byte[]),976,984,"/**
 * Truncates or pads the password to match ENCRYPT_PADDING length.
 */","* This will take the password and truncate or pad it as necessary.
     *
     * @param password The password to pad or truncate.
     *
     * @return The padded or truncated password.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:<init>(java.io.OutputStream,int,int,int)",64,76,"/**
 * Initializes a CCITTFaxEncoderStream with given parameters.
 * @param stream Output stream for fax data.
 * @param columns Image column count.
 * @param rows Image row count.
 * @param fillOrder Fax fill order.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,close,org.apache.pdfbox.filter.CCITTFaxEncoderStream:close(),94,97,"/**
 * Closes the underlying stream, releasing resources.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAbstractContentStream:close(),1550,1558,"/**
 * Closes the output stream and warns if endText() was not called.
 */","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,importXMPMetadata,org.apache.pdfbox.pdmodel.common.PDMetadata:importXMPMetadata(byte[]),96,103,"/**
 * Imports XMP metadata into the document.
 * @param xmp XMP data as a byte array.
 * @throws IOException if an I/O error occurs.
 */
","* Import an XMP stream into the PDF document.
     *
     * @param xmp The XMP data.
     *
     * @throws IOException If there is an error generating the XML document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,appendRawCommands,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:appendRawCommands(java.io.OutputStream,java.lang.String)",376,380,"/**
 * Writes commands to an output stream as UTF-8 bytes and closes it.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int,int)",236,253,"/**
* Writes bits from an integer code to the output stream.
* @param code The integer code to write.
* @param codeLength Number of bits to write from the code.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,fill,org.apache.pdfbox.filter.CCITTFaxEncoderStream:fill(),259,264,"/**
 * Writes buffered data to the stream and clears the buffer.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,splitAtPage,org.apache.pdfbox.multipdf.Splitter:splitAtPage(int),732,735,"/**
 * Checks if the given page number is a split point.
 * @param pageNumber The page number to check.
 * @return True if it's a split point, false otherwise.
 */
","* Check if it is necessary to create a new document.
     * By default a split occurs at every page.  If you wanted to split
     * based on some complex logic then you could override this method.  For example.
     * <code>
     * protected void splitAtPage()
     * {
     *     // will split at pages with prime numbers only
     *     return isPrime(pageNumber);
     * }
     * </code>
     * @param pageNumber the 0-based page number to be checked as splitting page
     * 
     * @return true If a new document should be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransform,org.apache.pdfbox.filter.DCTFilter:getAdobeTransform(javax.imageio.metadata.IIOMetadata),182,201,"/**
 * Extracts the transform attribute from Adobe transform metadata.
 * Returns 0 if not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransformByBruteForce,org.apache.pdfbox.filter.DCTFilter:getAdobeTransformByBruteForce(javax.imageio.stream.ImageInputStream),205,245,"/**
 * Searches for Adobe transform data using brute-force.
 * @param iis ImageInputStream to read from.
 * @return Transform byte or 0 if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromYCCKtoCMYK,org.apache.pdfbox.filter.DCTFilter:fromYCCKtoCMYK(java.awt.image.Raster),250,286,"/**
 * Converts a YCCK raster to a CMYK raster.
 * @param raster Input YCCK raster
 * @return CMYK WritableRaster
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromBGRtoRGB,org.apache.pdfbox.filter.DCTFilter:fromBGRtoRGB(java.awt.image.Raster),289,310,"/**
 * Converts a BGR Raster to an RGB Raster.
 * @param raster The BGR Raster to convert.
 * @return A new RGB Raster.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getNumChannels,org.apache.pdfbox.filter.DCTFilter:getNumChannels(javax.imageio.ImageReader),313,335,"/**
 * Extracts the number of channels from an ImageReader's metadata.
 * Returns an empty string if metadata is unavailable or an error occurs.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,encode,"org.apache.pdfbox.filter.DCTFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",343,348,"/**
 * Throws an UnsupportedOperationException; DCTFilter encoding not implemented.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSourceRegion,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSourceRegion(java.awt.Rectangle),228,232,"/**
* Throws an exception as source region modification is unsupported.
*/","* Sets the region of the source image that should be decoded. The region will be clipped to the
     * dimensions of the source image. Setting this value to null will result in the entire image
     * being decoded.
     *
     * @param sourceRegion The source region to decode, or null if the entire image should be
     * decoded.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingX(int),234,238,"/**
* Throws an exception, as subsamplingX is not modifiable.
*/","* Sets the number of columns to advance in the source for every pixel decoded
     *
     * @param ssX The x-axis subsampling value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingY(int),240,244,"/**
* Throws an exception as subsampling Y is not modifiable.
*/","* Sets the number of rows to advance in the source for every pixel decoded
     *
     * @param ssY The y-axis subsampling value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetX(int),246,250,"/**
* Throws an exception as subsampling offset is not settable.
*/","* Sets the horizontal subsampling offset for decoding images
     *
     * @param ssOffsetX The x-axis subsampling offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetY(int),252,256,"/**
* Throws an exception as subsampling offset is not settable.
*/","* Sets the vertical subsampling offset for decoding images
     *
     * @param ssOffsetY The y-axis subsampling offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,encode,"org.apache.pdfbox.filter.JBIG2Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",148,153,"/**
 * Throws an UnsupportedOperationException, JBIG2 encoding not implemented.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,encode,"org.apache.pdfbox.filter.JPXFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",208,213,"/**
 * Throws an UnsupportedOperationException as JPX encoding is not implemented.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(int),361,365,"/**
 * Writes an integer. Throws UnsupportedOperationException.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,putAll,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:putAll(java.util.Map),130,130,"/**
* Placeholder for an unimplemented operation.
* Throws an UnsupportedOperationException.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightY(float),39,43,"/**
* Sets the upper-right Y coordinate. Throws UnsupportedOperationException.
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightX(float),48,52,"/**
* Sets the upper-right X coordinate. Throws UnsupportedOperationException.
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftY(float),57,61,"/**
 * Sets the lower-left Y coordinate. Throws UnsupportedOperationException.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftX(float),66,70,"/**
 * Sets the lower-left X coordinate. Throws UnsupportedOperationException.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDFont:getPositionVector(int),236,240,"/**
* Returns position vector for a code (always throws exception).
* @param code code to get position vector for
* @throws UnsupportedOperationException always
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDType0Font:getStandard14Width(int),517,521,"/**
 * Gets the standard 14 width for a given code.
 * Throws UnsupportedOperationException if not supported.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncodingFromFont(),115,120,"/**
* Reads encoding from font. Throws UnsupportedOperationException.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType3Font:getPath(java.lang.String),128,133,"/**
* Gets the path by name.
* @param name Path name.
* @throws UnsupportedOperationException for Type 3 fonts.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBoxFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBoxFont(),142,147,"/**
 * Gets the FontBox font. Throws UnsupportedOperationException.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType3Font:encode(int),242,246,"/**
* Encodes an integer as a byte array.
* Throws UnsupportedOperationException.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:getCOSObject(),40,44,"/**
* Throws an exception as built-in encodings cannot be serialized.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getInitialColor(),70,74,"/**
 * Returns the initial color. Throws an exception as JPX doesn't support drawing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:toRGB(float[]),76,80,"/**
 * Throws an exception as JPX color spaces don't support drawing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getCOSObject(),94,98,"/**
* Throws an exception as JPX color spaces don't support COS objects.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getSignatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getSignatureText(),555,558,"/**
 * Returns signature text. Currently throws an UnsupportedOperationException.
 */","* returns visible signature text
     * @return the visible signature's text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureText(java.lang.String),565,568,"/**
 * Creates a signature text designer.
 * @param signatureText The text to be used for the signature.
 * @return PDVisibleSignDesigner object.
 */
","* 
     * @param signatureText - adds the text on visible signature
     * @return the signature design",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(java.lang.String),118,123,"/**
* Throws an exception; String values are not supported.
* Use setValue(PDSignature value) instead.
*/
","* <b>This will throw an UnsupportedOperationException if used as the signature fields
     * value can't be set using a String</b>
     * 
     * @param value the plain text value.
     * 
     * @throws UnsupportedOperationException in all cases!",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,clipRegion,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",141,155,"/**
 * Clips a rectangle region to image dimensions.
 * @param pdImage Image to clip to.
 * @param region Region to clip; null uses image dimensions.
 * @return Clipped Rectangle object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<clinit>,org.apache.pdfbox.rendering.TilingPaint:<clinit>(),47,68,"/**
* Initializes MAXEDGE based on system property or default value.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getCompressionLevel,org.apache.pdfbox.filter.Filter:getCompressionLevel(),204,216,"/**
* Gets the compression level, using system property or default.
* Returns a value between -1 and Deflater.BEST_COMPRESSION.
*/
",* @return the ZIP compression level configured for PDFBox,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,<clinit>,org.apache.pdfbox.multipdf.LayerUtility:<clinit>(),55,151,"/**
 * Imports a page from a PDF as a Form XObject.
 * @param sourceDoc source PDF document
 * @param pageNumber page number to import (0-based)
 * @return Form XObject containing the page content
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,contains,org.apache.pdfbox.pdmodel.common.COSArrayList:contains(java.lang.Object),150,154,"/**
* Checks if the collection contains the specified element.
* @param o element to check for
* @return true if the element is present, false otherwise
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,encode,"org.apache.pdfbox.filter.FlateFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",50,62,"/**
 * Encodes input stream to output stream using Deflate compression.
 * @param input Input stream to encode.
 * @param encoded Output stream for encoded data.
 * @param parameters COSDictionary parameters (unused).
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,<init>,org.apache.pdfbox.filter.FlateFilterDecoderStream:<init>(java.io.InputStream),54,60,"/**
 * Creates a FlateFilterDecoderStream from an input stream.
 * @param inputStream The input stream to decode.
 * @throws IOException If an I/O error occurs.
 */
","* Constructor.
     *
     * @param inputStream The input stream to actually read from.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,fetch,org.apache.pdfbox.filter.FlateFilterDecoderStream:fetch(),62,116,"/**
 * Decodes data using the inflater. Returns true on success, false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,close,org.apache.pdfbox.filter.FlateFilterDecoderStream:close(),182,187,"/**
* Closes the inflater and calls the superclass's close method.
*/","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,logLevigoDonated,org.apache.pdfbox.filter.JBIG2Filter:logLevigoDonated(),52,61,"/**
 * Logs a message indicating Levigo donation and improved download.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,setImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:setImage(java.awt.image.BufferedImage),455,462,"/**
* Sets the image and updates related dimensions.
* @param image The BufferedImage to set.
*/
","* Set image and its height and width.
     *
     * @param image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,<clinit>,org.apache.pdfbox.rendering.SoftMask:<clinit>(),50,54,"/**
 * Retrieves the ARGB color model for image processing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<clinit>(),34,34,"/**
* Defines the CIEXYZ color space for consistent color representation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRawImage(java.awt.image.WritableRaster),245,249,"/**
* Converts a WritableRaster to a grayscale BufferedImage.
* @param raster The raster to convert.
* @return A BufferedImage representing the raster.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)",146,151,"/**
* Draws an image at the specified coordinates.
* @param img The image to draw.
* @param x X coordinate.
* @param y Y coordinate.
* @param observer ImageObserver for image loading status.
* @return True if image was drawn; false otherwise.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,dispose,org.apache.pdfbox.rendering.GroupGraphics:dispose(),125,130,"/**
* Releases resources held by this object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,checkIndexBounds,"org.apache.pdfbox.filter.LZWFilter:checkIndexBounds(java.util.List,long,javax.imageio.stream.MemoryCacheImageInputStream)",132,144,"/**
 * Validates array index. Throws IOException if index is out of bounds.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,findPatternCode,"org.apache.pdfbox.filter.LZWFilter:findPatternCode(java.util.List,byte[])",231,246,"/**
 * Finds the index of a pattern in the code table.
 * Returns -1 if not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeFile(byte[]),260,264,"/**
 * Checks if the file is a TrueType font based on header.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:<init>(java.io.OutputStream,int,int,int,int)",278,289,"/**
 * Initializes a PredictorOutputStream with specified parameters.
 * @param out Output stream. predictor, colors, bitsPerComponent, columns.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodePredictorRow,"org.apache.pdfbox.filter.Predictor:decodePredictorRow(int,int,int,int,byte[],byte[])",49,202,"/**
 * Decodes a predictor row based on the predictor type.
 * @param predictor predictor type
 * @param colors color count
 * @param bitsPerComponent bits per component
 */","* Decodes a single line of data in-place.
     * @param predictor Predictor value for the current line
     * @param colors Number of color components, from decode parameters.
     * @param bitsPerComponent Number of bits per components, from decode parameters.
     * @param columns Number samples in a row, from decode parameters.
     * @param actline Current (active) line to decode. Data will be decoded in-place,
     *                i.e. - the contents of this buffer will be modified.
     * @param lastline The previous decoded line. When decoding the first line, this
     *                 parameter should be an empty byte array of the same length as
     *                 <code>actline</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterPaeth,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterPaeth(int,int,int,int)",680,702,"/**
 * Calculates the Paeth predictor value for PNG filtering.
 * @param x Current pixel value, a, b, c are neighboring pixels.
 * @return Predicted pixel value as a byte.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,estCompressSum,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:estCompressSum(byte[]),704,713,"/**
 * Calculates the sum of absolute values of bytes in the array.
 * @param dataRawRowSub byte array to sum
 * @return sum of absolute byte values
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,equals,org.apache.pdfbox.pdmodel.PDPage:equals(java.lang.Object),805,809,"/**
* Checks if this page is equal to another PDPage.
* Compares COS objects for equality.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree$SearchContext:<init>(org.apache.pdfbox.pdmodel.PDPage),422,425,"/**
 * Initializes the SearchContext with a PDPage's COS object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,valueOf,org.apache.pdfbox.multipdf.Overlay$Position:valueOf(java.lang.String),60,60,"/**
 * Represents different positions within a team.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,valueOf,org.apache.pdfbox.multipdf.PDFMergerUtility$AcroFormMergeMode:valueOf(java.lang.String),138,138,"/**
 * Enum defining merge modes for AcroForm merging.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,valueOf,org.apache.pdfbox.multipdf.PDFMergerUtility$DocumentMergeMode:valueOf(java.lang.String),120,120,"/**
 * Represents different modes for merging documents.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,valueOf,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType:valueOf(java.lang.String),86,86,"/**
 * Represents different types of cross-references.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/XReferenceType.java,valueOf,org.apache.pdfbox.pdfparser.xref.XReferenceType:valueOf(java.lang.String),27,27,"/**
 * Represents the different types of X references.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,valueOf,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode:valueOf(java.lang.String),42,42,"/**
 * Represents different modes for appending data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,valueOf,org.apache.pdfbox.pdmodel.PageLayout:valueOf(java.lang.String),27,27,"/**
 * Represents different page layout options.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,valueOf,org.apache.pdfbox.pdmodel.PageMode:valueOf(java.lang.String),25,25,"/**
 * Represents different display modes for a page.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,valueOf,org.apache.pdfbox.pdmodel.common.function.type4.Parser$State:valueOf(java.lang.String),28,28,"/**
 * Represents the possible states of a system.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontFormat.java,valueOf,org.apache.pdfbox.pdmodel.font.FontFormat:valueOf(java.lang.String),25,25,"/**
 * Represents different font file formats.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,valueOf,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State:valueOf(java.lang.String),412,412,"/**
 * Represents the possible states of an entity.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,valueOf,org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName:valueOf(java.lang.String),317,317,"/**
 * Represents a predefined font name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:valueOf(java.lang.String),57,57,"/**
 * Represents the possible states of a rendering process.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:valueOf(java.lang.String),40,40,"/**
 * Represents the base state for various game objects.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,valueOf,org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:valueOf(java.lang.String),25,25,"/**
 * Represents different rendering intents for color management.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingMode.java,valueOf,org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:valueOf(java.lang.String),24,24,"/**
 * Represents different rendering modes for the application.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,valueOf,org.apache.pdfbox.pdmodel.interactive.TextAlign:valueOf(java.lang.String),19,19,"/**
 * Represents text alignment options (left, center, right).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.java,valueOf,org.apache.pdfbox.pdmodel.interactive.action.OpenMode:valueOf(java.lang.String),24,24,"/**
 * Represents different modes for opening a resource.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDimension.java,valueOf,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension:valueOf(java.lang.String),26,26,"/**
 * Represents different dimensions for PD transitions.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,valueOf,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:valueOf(java.lang.String),32,32,"/**
 * Represents the direction of a page transition.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionMotion.java,valueOf,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion:valueOf(java.lang.String),26,26,"/**
 * Represents different transition motion types.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionStyle.java,valueOf,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle:valueOf(java.lang.String),26,26,"/**
 * Represents different transition styles for PDF documents.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,valueOf,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY:valueOf(java.lang.String),73,73,"/**
 * Represents boundary conditions for a numerical process.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,valueOf,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX:valueOf(java.lang.String),100,100,"/**
 * Represents duplex types. Provides a closed set of duplex options.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,valueOf,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE:valueOf(java.lang.String),35,35,"/**
 * Represents page display modes that are not full screen.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,valueOf,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING:valueOf(java.lang.String),119,119,"/**
 * Represents different scaling options for printing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,valueOf,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION:valueOf(java.lang.String),58,58,"/**
 * Represents the possible directions for reading content.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/Orientation.java,valueOf,org.apache.pdfbox.printing.Orientation:valueOf(java.lang.String),24,24,"/**
 * Represents the orientation of an element (e.g., portrait or landscape).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/Scaling.java,valueOf,org.apache.pdfbox.printing.Scaling:valueOf(java.lang.String),24,24,"/**
 * Represents different scaling factors for image processing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,valueOf,org.apache.pdfbox.rendering.ImageType:valueOf(java.lang.String),24,24,"/**
 * Represents different image types (e.g., PNG, JPG).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/RenderDestination.java,valueOf,org.apache.pdfbox.rendering.RenderDestination:valueOf(java.lang.String),23,23,"/**
 * Represents possible destinations for rendering output.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileType.java,valueOf,org.apache.pdfbox.util.filetypedetector.FileType:valueOf(java.lang.String),30,30,"/**
 * Represents different file types.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<init>,"org.apache.pdfbox.multipdf.Overlay$Position:<init>(java.lang.String,int)",60,60,"/**
 * Represents different positions within a team.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<init>,"org.apache.pdfbox.multipdf.PDFMergerUtility$AcroFormMergeMode:<init>(java.lang.String,int)",138,138,"/**
 * Represents the mode for merging AcroForm data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<init>,"org.apache.pdfbox.multipdf.PDFMergerUtility$DocumentMergeMode:<init>(java.lang.String,int)",120,120,"/**
 * Represents different modes for merging documents.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<init>,"org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType:<init>(java.lang.String,int)",86,86,"/**
 * Represents the types of cross-references.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/XReferenceType.java,<init>,"org.apache.pdfbox.pdfparser.xref.XReferenceType:<init>(java.lang.String,int,int)",39,42,"/**
 * Initializes a new XReferenceType with the given numeric value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode:<init>(java.lang.String,int)",42,42,"/**
 * Represents different modes for appending data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,<init>,"org.apache.pdfbox.pdmodel.PageLayout:<init>(java.lang.String,int,java.lang.String)",68,71,"/**
 * Sets the layout value for the PageLayout object.
 * @param value The layout value to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,<init>,"org.apache.pdfbox.pdmodel.PageMode:<init>(java.lang.String,int,java.lang.String)",59,62,"/**
 * Sets the page mode value.
 * @param value The page mode string to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,"org.apache.pdfbox.pdmodel.common.function.type4.Parser$State:<init>(java.lang.String,int)",28,28,"/**
 * Represents the possible states of a system or object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontFormat.java,<init>,"org.apache.pdfbox.pdmodel.font.FontFormat:<init>(java.lang.String,int)",25,25,"/**
 * Represents different font file formats.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State:<init>(java.lang.String,int)",412,412,"/**
 * Represents the possible states of an object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<init>,"org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName:<init>(java.lang.String,int,java.lang.String)",336,339,"/**
 * Initializes a FontName object with the given name.
 * @param name The name of the font.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:<init>(java.lang.String,int,org.apache.pdfbox.cos.COSName)",66,69,"/**
 * Initializes RenderState with the given COS name.
 * @param value The COS name for this RenderState.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:<init>(java.lang.String,int,org.apache.pdfbox.cos.COSName)",52,55,"/**
 * Constructs a BaseState with the given COS name.
 * @param value The COS name representing the state.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:<init>(java.lang.String,int,java.lang.String)",63,66,"/**
 * Sets the rendering intent value.
 * @param value The rendering intent string value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingMode.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:<init>(java.lang.String,int,int)",75,78,"/**
 * Sets the rendering mode value.
 * @param value The integer value for the rendering mode.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,<init>,"org.apache.pdfbox.pdmodel.interactive.TextAlign:<init>(java.lang.String,int,int)",25,28,"/**
 * Initializes a new TextAlign object with the specified alignment.
 * @param alignment The alignment value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.java,<init>,"org.apache.pdfbox.pdmodel.interactive.action.OpenMode:<init>(java.lang.String,int)",24,24,"/**
 * Represents different ways to open a resource.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDimension.java,<init>,"org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension:<init>(java.lang.String,int)",26,26,"/**
 * Represents the dimensions for PDTransition.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,<init>,"org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:<init>(java.lang.String,int,int)",61,64,"/**
 * Constructs a transition direction with the given angle in degrees.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionMotion.java,<init>,"org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion:<init>(java.lang.String,int)",26,26,"/**
 * Represents possible transition motions for a PageDelegate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionStyle.java,<init>,"org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle:<init>(java.lang.String,int)",26,26,"/**
 * Represents different transition styles for PDF documents.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,"org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY:<init>(java.lang.String,int)",73,73,"/**
 * Represents boundary conditions for a numerical process.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,"org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX:<init>(java.lang.String,int)",100,100,"/**
 * Represents duplex apartment types.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,"org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE:<init>(java.lang.String,int)",35,35,"/**
 * Represents page display modes that are not full screen.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,"org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING:<init>(java.lang.String,int)",119,119,"/**
 * Enum representing different print scaling options.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,"org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION:<init>(java.lang.String,int)",58,58,"/**
 * Represents the possible directions for reading content.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/Orientation.java,<init>,"org.apache.pdfbox.printing.Orientation:<init>(java.lang.String,int)",24,24,"/**
 * Represents the orientation of an object (e.g., portrait, landscape).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/Scaling.java,<init>,"org.apache.pdfbox.printing.Scaling:<init>(java.lang.String,int)",24,24,"/**
 * Represents different scaling factors for an image.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,<init>,"org.apache.pdfbox.rendering.ImageType:<init>(java.lang.String,int)",24,24,"/**
 * Represents different image types (e.g., PNG, JPG).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/RenderDestination.java,<init>,"org.apache.pdfbox.rendering.RenderDestination:<init>(java.lang.String,int)",23,23,"/**
 * Represents possible rendering targets for a scene.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileType.java,<init>,"org.apache.pdfbox.util.filetypedetector.FileType:<init>(java.lang.String,int)",30,30,"/**
 * Represents different file types. Used for classification.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,subsetDesignatedFonts,org.apache.pdfbox.pdmodel.PDDocument:subsetDesignatedFonts(),1062,1070,"/**
 * Subsets designated fonts and clears the list.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:reset(),77,80,"/**
 * Clears the xrefTable, effectively resetting its contents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,resetEngine,org.apache.pdfbox.text.PDFTextStripper:resetEngine(),223,229,"/**
 * Resets the engine to its initial state, clearing all data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,"org.apache.pdfbox.multipdf.Overlay:getLayoutPage(int,int)",466,499,"/**
 * Retrieves a LayoutPage based on page number and total pages.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSObjectKey),113,116,"/**
 * Checks if the key pool contains the given key.
 * @param key The COSObjectKey to check for.
 * @return True if the key exists, false otherwise.
 */
","* Returns true, if a {@link COSBase} is registered for the given {@link COSObjectKey}.
     *
     * @param key The {@link COSObjectKey} that shall be checked for a registered {@link COSBase}.
     * @return True, if a {@link COSBase} is registered for the given {@link COSObjectKey}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,registerHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",69,77,"/**
 * Registers a security handler with a given name and policy.
 * Throws exception if name is already registered.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(java.lang.String),143,146,"/**
 * Checks if this set contains the specified element.
 * @param name element whose presence in this set is to be tested.
 * @return true if this set contains the specified element.
 */","* Determines if the encoding has a mapping for the given name value.
     * 
     * @param name PostScript glyph name
     * @return true if the encoding has a mapping for the given name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(int),155,158,"/**
 * Checks if the map contains a key with the given code.
 * @param code The code to check for.
 * @return True if the code exists as a key, false otherwise.
 */
","* Determines if the encoding has a mapping for the given code value.
     * 
     * @param code character code
     * @return if the encoding has a mapping for the given code value
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:<clinit>(),41,44,"/**
 * Defines several common angles in radians for calculations.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,"org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:<init>(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",132,136,"/**
 * Initializes a Tokenizer with input text and a SyntaxHandler.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,escapeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:escapeXML(java.lang.String),787,822,"/**
 * Escapes XML special characters in the input string.
 * @param input The string to be escaped.
 * @return The escaped XML string.
 */
","* Escape special characters.
     *
     * @param input the string to be escaped.
     *
     * @return the resulting string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),219,229,"/**
 * Sets the bounding box for the PDF object.
 * @param bbox The PDRectangle object representing the bbox.
 */
","* This will set the BBox (bounding box) for this form.
     * @param bbox The new BBox for this form.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,float2String,org.apache.pdfbox.multipdf.Overlay:float2String(float),585,600,"/**
 * Converts a float to a string, removing trailing zeros.
 * @param floatValue The float value to convert.
 * @return String representation of the float.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeHex,org.apache.pdfbox.util.Hex:decodeHex(java.lang.String),219,245,"/**
 * Decodes a hexadecimal string into a byte array.
 * Returns null if decoding fails.
 */
","* Decodes a hex String into a byte array.
     *
     * @param s A String with ASCII hex.
     * @return decoded byte array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,close,org.apache.pdfbox.pdmodel.PDDocument:close(),1266,1305,"/**
 * Closes resources, ensuring proper error handling and logging.
 */","* This will close the underlying COSDocument object.
     * 
     * @throws IOException If there is an error releasing resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,close,org.apache.pdfbox.pdmodel.fdf.FDFDocument:close(),262,284,"/**
 * Closes the document and associated I/O streams, logging exceptions.
 */","* This will close the underlying COSDocument object.
     *
     * @throws IOException If there is an error releasing resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getOnValues(),91,95,"/**
 * Returns an empty set, indicating no on-values are present.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,hasNext,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:hasNext(),38,51,"/**
 * Checks if there's a next item in the outline.
 * Returns true if currentItem has a next sibling.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getCOSObject,org.apache.pdfbox.pdmodel.common.function.PDFunction:getCOSObject(),84,95,"/**
 * Returns the COS object, either from functionStream or functionDictionary.
 */","* Returns the stream.
     * @return The stream for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)",112,118,"/**
 * Constructs a PDXObject with a stream and subtype.
 * @param stream The underlying stream object.
 * @param subtype The subtype of the object.
 */
","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject:getCOSObject(),136,140,"/**
* Returns the COS object associated with this stream.
*/","* Returns the stream.
     * {@inheritDoc}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getMetadata(),455,458,"/**
 * Returns the metadata stream from the COS object.
 * Returns a COSStream object.
 */","* Returns the metadata stream for this object, or null if there is no metadata stream.
     * @return the metadata stream, or null if there is none",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setMetadata(org.apache.pdfbox.cos.COSStream),533,536,"/**
* Sets the metadata for the stream.
* @param metadata The COSStream object to set as metadata.
*/
","* Sets the metadata stream that is associated with this color space.
     * @param metadata the new metadata stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureAnnotation,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",531,539,"/**
 * Checks if an annotation's COS object matches the widget's.
 * @param annotations Annotation array to check
 * @return True if a match is found, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,equals,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:equals(java.lang.Object),201,216,"/**
 * Checks if this annotation is equal to another PDAnnotation.
 * Compares the underlying COSDictionaries for equality.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,keySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:keySet(),146,150,"/**
 * Returns a set view of the map's keys.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",510,520,"/**
 * Checks if a field matches the signature field's COS object.
 * @return True if a matching field is found, false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,values,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:values(),155,159,"/**
 * Returns a collection of the values in this map.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,fillPagesAnnotationMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",840,852,"/**
 * Adds a widget's COS object to the set for the page.
 * Creates set if one doesn't exist.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,<init>,org.apache.pdfbox.pdfparser.BaseParser:<init>(org.apache.pdfbox.io.RandomAccessRead),173,176,"/**
 * Initializes the BaseParser with a RandomAccessRead source.
 * @param pdfSource The RandomAccessRead object for PDF data.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isHexDigit,org.apache.pdfbox.pdfparser.BaseParser:isHexDigit(char),178,183,"/**
 * Checks if a character is a valid hexadecimal digit (0-9, a-f, A-F).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isDigit,org.apache.pdfbox.pdfparser.BaseParser:isDigit(),1298,1301,"/**
 * Checks if the next character is a digit.
 * @throws IOException if an I/O error occurs.
 */
","* This will tell if the next byte is a digit or not.
     *
     * @return true if the next byte in the stream is a digit.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,compareCOSObjects,"org.apache.pdfbox.pdfparser.BruteForceParser:compareCOSObjects(org.apache.pdfbox.cos.COSObject,java.lang.Long,org.apache.pdfbox.cos.COSObject)",499,517,"/**
* Compares two COS objects, returning the newer version.
* Considers generation number and offset to determine newer object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectNumbers(),174,191,"/**
 * Reads object numbers and offsets from the input stream.
 * @return Map of object number to offset.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setXRef,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",175,190,"/**
 * Adds an XRef entry to the trailer's table if it doesn't exist.
 * @param objKey Key of the object.
 * @param offset Offset of the object.
 */
","* Populate XRef HashMap of current XRef object.
     * Will add an Xreftable entry that maps ObjectKeys to byte offsets in the file.
     * @param objKey The objkey, with id and gen numbers
     * @param offset The byte offset in this file",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,add,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:add(int,java.lang.String)",106,110,"/**
 * Adds a code-name pair to the mappings and inverts the mapping.
 * @param code The code to associate with the name.
 * @param name The name associated with the code.
 */
","* This will add a character encoding. An already existing mapping is preserved when creating
     * the reverse mapping. Should only be used during construction of the class.
     * 
     * @see #overwrite(int, String)
     * 
     * @param code character code
     * @param name PostScript glyph name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isSpace,org.apache.pdfbox.pdfparser.BaseParser:isSpace(),1275,1278,"/**
 * Checks if the next character is a space.
 * @return True if the next character is a space, false otherwise.
 */","* This will tell if the next byte is a space or not.
     *
     * @return true if the next byte in the stream is a space character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(int),454,470,"/**
 * Skips a linebreak character (CR, LF, or CRLF) from the source.
 */","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @param linebreak the first character to be checked.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,checkForEndOfString,org.apache.pdfbox.pdfparser.BaseParser:checkForEndOfString(int),485,519,"/**
 * Checks if end of string is reached, returns 0 if so.
 * @param bracesParameter Current braces count.
 * @throws IOException if an I/O error occurs.
 */
","* This is really a bug in the Document creators code, but it caused a crash in PDFBox, the first bug was in this
     * format: /Title ( (5) /Creator which was patched in 1 place.
     *
     * However it missed the case where the number of opening and closing parenthesis isn't balanced
     *
     * The second bug was in this format /Title (c:\) /Producer
     *
     * @param bracesParameter the number of braces currently open.
     *
     * @return the corrected value of the brace counter
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isEOL,org.apache.pdfbox.pdfparser.BaseParser:isEOL(int),1207,1210,"/**
 * Checks if the given character is an end-of-line character.
 */","* This will tell if the next byte to be read is an end of line byte.
     *
     * @param c The character to check against end of line
     * @return true if the next byte is 0x0A or 0x0D.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readStringNumber,org.apache.pdfbox.pdfparser.BaseParser:readStringNumber(),1443,1461,"/**
 * Reads a string of digits from the source.
 * @return StringBuilder containing the number string.
 * @throws IOException if the number exceeds MAX_LENGTH_LONG.
 */","* This method is used to read a token by the {@linkplain #readInt()} and the {@linkplain #readLong()} method. Valid
     * delimiters are any non digit values.
     *
     * @return the token to parse as integer or long by the calling method.
     * @throws IOException throws by the {@link #source} methods.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:toString(),94,107,"/**
 * Returns a string representation of this Cubic Bezier curve.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,decodeBuffer,org.apache.pdfbox.pdfparser.BaseParser:decodeBuffer(java.io.ByteArrayOutputStream),926,939,"/**
 * Decodes a byte buffer to a string, using UTF-8 or an alternative charset.
 */","* Tries to decode the buffer content to an UTF-8 String. If that fails, tries the alternative Encoding.
     * 
     * @param buffer the {@link ByteArrayOutputStream} containing the bytes to decode
     * @return the decoded String",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedChar,org.apache.pdfbox.pdfparser.BaseParser:readExpectedChar(char),1098,1106,"/**
 * Reads a character from the source and verifies it matches expectedChar.
 * @param ec The expected character.
 * @throws IOException if the character does not match.
 */
","* Read one char and throw an exception if it is not the expected value.
     *
     * @param ec the char value that is expected.
     * @throws IOException if the read char is not the expected value or if an
     * I/O error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isWhitespace,org.apache.pdfbox.pdfparser.BaseParser:isWhitespace(),1241,1244,"/**
 * Checks if the next character is whitespace.
 * @throws IOException if an I/O error occurs.
 */
","* This will tell if the next byte is whitespace or not.
     *
     * @return true if the next byte in the stream is a whitespace character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,<clinit>,org.apache.pdfbox.pdfparser.BaseParser:<clinit>(),58,134,"/**
 * Initializes the alternative charset, falling back to ISO-8859-1 if needed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseStartXref,org.apache.pdfbox.pdfparser.XrefParser:parseStartXref(),557,568,"/**
 * Parses the startXref value.
 * Returns the startXref as a long, or -1 if not present.
 */
","* This will parse the startxref section from the stream. The startxref value is ignored.
     *
     * @return the startxref value or -1 on parsing error
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchNearestValue,"org.apache.pdfbox.pdfparser.BruteForceParser:searchNearestValue(java.util.List,long)",272,293,"/**
 * Finds the nearest value from the provided list.
 * @param values list of Long values to search
 * @param offset the value to find the nearest match to
 * @return the nearest value from the list, or -1 if empty
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForLastEOFMarker,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForLastEOFMarker(),524,560,"/**
 * Finds the last EOF marker in the source, handling potential errors.
 * @return Position of the last EOF marker, or Long.MAX_VALUE if none.
 */","* Brute force search for the last EOF marker.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefTables,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefTables(),641,660,"/**
 * Finds offsets of XRef tables in the PDF source.
 * @return List of Long offsets to XRef tables.
 */","* Brute force search for all xref entries (tables).
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getNumberOfColorComponents(),115,124,"/**
 * Returns the number of color components.
 * Caches the value; returns cached value if available.
 */
","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefStreams(),667,735,"/**
 * Finds offsets of XRef streams using a breadth-first search.
 * @return List of Long representing offsets of XRef streams.
 */","* Brute force search for all /XRef entries (streams).
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,getXrefTable,org.apache.pdfbox.pdfparser.XrefParser:getXrefTable(),75,78,"/**
* Returns the Xref table from the Xref trailer resolver.
*/","* Returns the resulting cross reference table.
     * 
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<clinit>,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:<clinit>(),57,64,"/**
 * Determines if font checksums should be skipped based on system property.
 * @return True if ""pdfbox.fontcache.skipchecksums"" is ""true"", false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getStartxrefOffset,org.apache.pdfbox.pdfparser.COSParser:getStartxrefOffset(),305,360,"/**
 * Finds the startxref offset by reading and parsing the trailer.
 * @return Offset of the startxref marker.
 * @throws IOException if trailer parsing fails.
 */
","* Looks for and parses startxref. We first look for last '%%EOF' marker (within last
     * {@link #DEFAULT_TRAIL_BYTECOUNT} bytes (or range set via {@link #setEOFLookupRange(int)}) and go back to find
     * <code>startxref</code>.
     * 
     * @return the offset of StartXref
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,readUntilEndStream,org.apache.pdfbox.pdfparser.COSParser:readUntilEndStream(org.apache.pdfbox.pdfparser.EndstreamFilterStream),793,885,"/**
 * Reads stream content until ""endstream"" is found.
 * Returns the length of the filtered content.
 */","* This method will read through the current stream object until
     * we find the keyword ""endstream"" meaning we're at the end of this
     * object. Some pdf files, however, forget to write some endstream tags
     * and just close off objects with an ""endobj"" tag so we have to handle
     * this case as well.
     * 
     * This method is optimized using buffered IO and reduced number of
     * byte compare operations.
     * 
     * @param out  stream we write out to.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,validateStreamLength,org.apache.pdfbox.pdfparser.COSParser:validateStreamLength(long),887,921,"/**
 * Validates stream length, logs warnings for invalid values.
 * @param streamLength Length of the stream to validate.
 * @return True if valid, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseHeader,"org.apache.pdfbox.pdfparser.COSParser:parseHeader(java.lang.String,java.lang.String)",1074,1155,"/**
 * Parses PDF header, extracts version, and sets document version.
 * @param headerMarker Header marker string.
 * @param defaultVersion Default PDF version if parsing fails.
 * @return True if header parsed successfully, false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,<init>,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:<init>(),49,52,"/**
 * Default constructor. Initializes Unicode writer mode to 0.
 */",* Creates a new ToUnicode CMap writer.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectOffsets,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectOffsets(),193,212,"/**
 * Reads object offsets from the input stream, sorted by offset.
 * @return Map of object offsets to object numbers.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,setLabelItem,"org.apache.pdfbox.pdmodel.common.PDPageLabels:setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)",168,175,"/**
* Associates a label range with a starting page.
* @param startPage The starting page number.
* @param item The PDPageLabelRange to associate.
*/
","* Sets the page label range beginning at the specified start page.
     * 
     * @param startPage
     *            the 0-based index of the page representing the start of the
     *            page label range.
     * @param item
     *            the page label item to set.
     * @throws IllegalArgumentException if the startPage parameter is &lt; 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,add,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:add(int,java.lang.String)",70,83,"/**
 * Adds a text entry to the CID to Unicode mapping.
 * @param cid CID value (0-65535)
 * @param text Unicode text to associate with the CID
 */
","* Adds the given CID to Unicode mapping.
     *
     * @param cid CID
     * @param text Unicode text, up to 512 bytes.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNoFollowingBinData,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNoFollowingBinData(),331,403,"/**
 * Checks if the stream contains no binary data after ""EI"".
 * Returns true if no binary data is found, false otherwise.
 */
","* Looks up an amount of bytes if they contain only ASCII characters (no
     * control sequences etc.), and that these ASCII characters begin with a
     * sequence of 1-3 non-blank characters between blanks
     *
     * @return <code>true</code> if next bytes are probably printable ASCII
     * characters starting with a PDF operator, otherwise <code>false</code>",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNextSpaceOrReturn,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNextSpaceOrReturn(),457,460,"/**
* Checks if the next character is a space or return.
*/","* Checks if the next char is a space or a return.
     * 
     * @return true if the next char is a space or a return
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:addEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),140,148,"/**
 * Adds an XReferenceEntry if its key's number isn't already present.
 */","* Add an new entry to the XRef stream.
     * 
     * @param entry new entry to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getWEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getWEntry(),155,175,"/**
 * Calculates the maximum width needed for each column in bytes.
 * @return An array representing the maximum width for each column.
 */","* determines the minimal length required for all the lengths.
     * 
     * @return the length information",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:<init>(long),46,50,"/**
 * Initializes the COSObjectPool with a maximum XRef object number.
 * @param highestXRefObjectNumber The highest XRef object number.
 */
","* Creates a map of {@link COSBase} instances to {@link COSObjectKey}s, allowing bidirectional lookups. This
     * constructor can be used for pre - initialized structures to start the assignment of new object numbers starting
     * from the hereby given offset.
     *
     * @param highestXRefObjectNumber The highest known object number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getIndexEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getIndexEntry(),187,219,"/**
 * Generates a list of index entries from a set of object numbers.
 * @return List of Long representing the index entries.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,next,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:next(),224,238,"/**
 * Returns the next long value in the sequence.
 * Throws NoSuchElementException if no more values exist.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getFirstTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getFirstTrailer(),110,119,"/**
 * Gets the first trailer dictionary from the byte position map.
 * Returns null if the map is empty.
 */
","* Returns the first trailer if at least one exists.
     * 
     * @return the first trailer or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getLastTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getLastTrailer(),126,135,"/**
 * Retrieves the last trailer dictionary from the byte position map.
 * Returns null if the map is empty.
 */
","* Returns the last trailer if at least one exists.
     * 
     * @return the last trailer ir null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getContainedObjectNumbers,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getContainedObjectNumbers(int),339,356,"/**
 * Gets object numbers contained within a given object.
 * @param objstmObjNr The object number to search within.
 * @return Set of contained object numbers, or null if empty.
 */
","Returns object numbers which are referenced as contained
     *  in object stream with specified object number.
     *  
     *  This will scan resolved xref table for all entries having negated
     *  stream object number as value.
     *
     *  @param objstmObjNr  object number of object stream for which contained object numbers
     *                      should be returned
     *                       
     *  @return set of object numbers referenced for given object stream
     *          or <code>null</code> if {@link #setStartxref(long)} was not
     *          called before so that no resolved xref table exists",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,getFirstColumnValue,org.apache.pdfbox.pdfparser.xref.AbstractXReference:getFirstColumnValue(),59,63,"/**
* Returns the numeric value of the first column.
* Uses getType() to get the value.
*/
","* Returns the value for the first column of the crossreference stream entry. (The numeric representation of this
     * entry's (The numeric representation of this entry's {@link XReferenceType}.)
     *
     * @return The value for the first column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.FreeXReference:getThirdColumnValue(),77,81,"/**
* Returns the value of the third column.
* Delegates to the referenced key's generation.
*/
","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set next free {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,toString,org.apache.pdfbox.pdfparser.xref.FreeXReference:toString(),88,93,"/**
 * Returns a string representation of the FreeReference object.
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getSecondColumnValue(),111,115,"/**
* Returns the value of the second column as a long.
* It's equivalent to the byte offset.
*/
","* Returns the value for the second column of the crossreference stream entry. (This is byte offset of the
     * {@link COSObject} in the PDF file - for entries of this type.)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getThirdColumnValue(),123,127,"/**
* Returns the value of the third column.
* Delegates to the referenced key's generation.
*/
","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,toString,org.apache.pdfbox.pdfparser.xref.NormalXReference:toString(),134,139,"/**
 * Returns a string representation of the object.
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getSecondColumnValue(),104,108,"/**
* Returns the value of the second column.
* Retrieves the number from the parent key.
*/
","* Returns the value for the second column of the crossreference stream entry. (This is object number from the
     * {@link COSObjectKey} of the object stream, that is containing the object represented by this entry - for entries
     * of this type..)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getThirdColumnValue(),116,120,"/**
 * Returns the third column value, which is the object stream index.
 */","* Returns the value for the third column of the crossreference stream entry. (This is index of the
     * {@link COSObject} in the containing object stream - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,toString,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:toString(),127,132,"/**
 * Returns a string representation of this ObjectStreamEntry.
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(byte[],int,int)",111,117,"/**
 * Writes a byte array to the output stream.
 * @param b The byte array to write.
 * @param off Offset from where to start writing.
 * @param len Number of bytes to write.
 */
","* This will write some byte to the stream.
     *
     * @param b The source byte array.
     * @param off The offset into the array to start writing.
     * @param len The number of bytes to write.
     *
     * @throws IOException If the underlying stream throws an exception.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(int),126,132,"/**
 * Writes a byte to the output stream. Increments the position.
 */","* This will write a single byte to the stream.
     *
     * @param b The byte to write to the stream.
     *
     * @throws IOException If there is an error writing to the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,writeEOL,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:writeEOL(),149,156,"/**
 * Writes an end-of-line character if not already on a new line.
 */","* This will write an EOL to the stream.
     *
     * @throws IOException If there is an error writing to the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isCompress,org.apache.pdfbox.pdfwriter.COSWriter:isCompress(),314,317,"/**
 * Checks if compression is enabled based on configuration.
 * @return True if compression is enabled, false otherwise.
 */
","* Returns true, if the resulting document shall be compressed.
     *
     * @return True, if the resulting document shall be compressed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addXRefEntry,org.apache.pdfbox.pdfwriter.COSWriter:addXRefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),345,348,"/**
* Adds an XReferenceEntry to the list of XRef entries.
* @param entry The XReferenceEntry to add.
*/
","* add an entry in the x ref table for later dump.
     *
     * @param entry The new entry to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1570,1581,"/**
 * Sets the stroking color space stack.
 * @param colorSpace The color space to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1583,1594,"/**
 * Sets the non-stroking color space stack.
 * @param colorSpace The color space to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,hasNext,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:hasNext(),224,228,"/**
 * Checks if there is a next element in the queue.
 * @return True if the queue is not empty, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,hasNext,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:hasNext(),85,89,"/**
 * Checks if there is a next element in the queue.
 * @return True if the queue is not empty, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFMarkedContentExtractor:endMarkedContentSequence(),125,132,"/**
 * Removes the last marked content from the sequence.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectReference,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectReference(java.io.OutputStream,org.apache.pdfbox.cos.COSObjectKey)",367,378,"/**
 * Writes an indirect object reference to the output stream.
 * @param output Output stream to write to
 * @param indirectReference Reference object to write
 */
","* Write the given {@link COSObjectKey} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param indirectReference The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefEntry,org.apache.pdfbox.pdfwriter.COSWriter:writeXrefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),995,1005,"/**
 * Writes an Xref entry to standard output.
 * @param entry The XReferenceEntry to write.
 * @throws IOException if writing fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getXRefRanges,org.apache.pdfbox.pdfwriter.COSWriter:getXRefRanges(java.util.List),1026,1057,"/**
 * Extracts sequences of consecutive numbers from XReferenceEntries.
 * @return Array of Long representing the sequences.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getMD5,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getMD5(),35,46,"/**
 * Returns an MD5 MessageDigest instance.
 * Throws RuntimeException if MD5 algorithm is unavailable.
 */
",* @return MD5 message digest,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA1,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA1(),51,62,"/**
 * Gets a SHA-1 MessageDigest instance.
 * @return SHA-1 MessageDigest object.
 * @throws RuntimeException if SHA-1 is unavailable.
 */
",* @return SHA-1 message digest,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA256,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA256(),67,78,"/**
 * Returns a SHA-256 MessageDigest instance.
 * Throws RuntimeException if algorithm is unavailable.
 */
",* @return SHA-256 message digest,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<clinit>,org.apache.pdfbox.pdfwriter.COSWriter:<clinit>(),89,172,"/**
 * Defines PDF tokens as byte arrays for parsing and generation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getHighestXRefObjectNumber,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getHighestXRefObjectNumber(),289,292,"/**
* Retrieves the highest XRef object number from the object pool.
*/","* Returns the highest object number, that is registered in this compression pool.
     *
     * @return The highest object number, that is registered in this compression pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,getPreparedKeys,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:getPreparedKeys(),97,100,"/**
 * Returns a read-only list of prepared keys.
 */","* Returns all {@link COSObjectKey}s, that shall be added to the object stream, when
     * {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @return All {@link COSObjectKey}s, that shall be added to the object stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:getFont(org.apache.pdfbox.cos.COSObject),107,112,"/**
 * Retrieves a PDFont from the cache, or null if not found.
 * @param indirect COS object representing the font.
 * @return PDFont object or null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:getColorSpace(org.apache.pdfbox.cos.COSObject),147,152,"/**
* Retrieves a cached PDColorSpace from the colorSpaces map.
* @param indirect COSObject used as key for color space lookup.
* @return PDColorSpace object or null if not found.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getExtGState,org.apache.pdfbox.pdmodel.DefaultResourceCache:getExtGState(org.apache.pdfbox.cos.COSObject),187,192,"/**
 * Retrieves a cached PDExtendedGraphicsState by its COSObject.
 * @param indirect COSObject used as key for caching.
 * @return PDExtendedGraphicsState or null if not cached.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:getShading(org.apache.pdfbox.cos.COSObject),227,232,"/**
* Retrieves a shading object from the cache by its COS object.
* @param indirect COS object representing the shading.
* @return PDShading object or null if not cached.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getPattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:getPattern(org.apache.pdfbox.cos.COSObject),267,272,"/**
 * Retrieves a pattern from the cache by its COS object.
 * @param indirect COS object representing the pattern
 * @return The cached pattern or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:getProperties(org.apache.pdfbox.cos.COSObject),307,312,"/**
 * Retrieves a PDPropertyList associated with a COS object.
 * @param indirect COS object reference
 * @return PDPropertyList or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:getXObject(org.apache.pdfbox.cos.COSObject),347,352,"/**
 * Retrieves a PDXObject from the cache using a COSObject.
 * @param indirect COSObject key for retrieving the PDXObject
 * @return PDXObject or null if not found in cache.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)",114,118,"/**
* Stores a font in the cache, associating it with an indirect object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",154,158,"/**
* Stores a color space associated with an indirect COS object.
* @param indirect COS object key
* @param colorSpace PDColorSpace to store
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",194,198,"/**
* Stores an extended graphics state associated with a COS object.
* @param indirect COS object
* @param extGState Extended graphics state object
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",234,238,"/**
* Associates a shading with a COS object, using a SoftReference.
* @param indirect COS object key
* @param shading PDShading object to store
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",274,278,"/**
 * Stores a pattern associated with a COS object, using a soft reference.
 * @param indirect COS object key
 * @param pattern Pattern to associate with the key
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",314,318,"/**
* Stores a property list for a COS object using a soft reference.
* @param indirect COS object
* @param propertyList Property list to store
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)",354,358,"/**
* Associates a COSObject with a PDXObject, using a SoftReference.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeFont(org.apache.pdfbox.cos.COSObject),120,145,"/**
 * Removes a font from the font cache. Returns the font or null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeColorSpace(org.apache.pdfbox.cos.COSObject),160,185,"/**
 * Removes a color space and potentially caches it.
 * @param indirect COS object representing the color space.
 * @return PDColorSpace object or null if removal is restricted.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeExtState,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeExtState(org.apache.pdfbox.cos.COSObject),200,225,"/**
 * Removes and returns a graphics state, managing removal limits.
 * @param indirect COS object representing the graphics state.
 * @return PDExtendedGraphicsState or null if removal is limited.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeShading(org.apache.pdfbox.cos.COSObject),240,265,"/**
 * Removes a shading from the cache. Returns shading or null if removal limits reached.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removePattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:removePattern(org.apache.pdfbox.cos.COSObject),280,305,"/**
 * Removes a pattern from the cache. Returns null if removal is blocked.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeProperties(org.apache.pdfbox.cos.COSObject),320,345,"/**
 * Removes properties from the cache, respecting removal limits.
 * @param indirect COS object key. Returns property list or null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeXObject(org.apache.pdfbox.cos.COSObject),360,386,"/**
 * Removes an XObject from the cache, managing removal limits.
 * @param indirect COSObject to remove; returns PDXObject or null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,overwrite,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:overwrite(int,java.lang.String)",121,135,"/**
 * Updates reverse mapping: removes old, adds new name for code.
 * @param code Integer code to map
 * @param name String new name for the code
 */
","* This will add a character encoding. An already existing mapping is overwritten when creating
     * the reverse mapping. Should only be used during construction of the class.
     *
     * @see Encoding#add(int, String)
     *
     * @param code character code
     * @param name PostScript glyph name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,removeRegion,org.apache.pdfbox.text.PDFTextStripperByArea:removeRegion(java.lang.String),79,83,"/**
 * Removes a region and its area from the data structures.
 * @param regionName Name of the region to remove.
 */
","* Delete a region to group text by. If the region does not exist, this method does nothing.
     *
     * @param regionName The name of the region to delete.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMaximumFractionDigits,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMaximumFractionDigits(int),122,125,"/**
* Sets the maximum number of fraction digits for formatting.
* @param fractionDigitsNumber The maximum fraction digits.
*/
","* Sets the maximum number of digits allowed for fractional numbers.
     * 
     * @see NumberFormat#setMaximumFractionDigits(int)
     * @param fractionDigitsNumber the maximum number of digits allowed for fractional numbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.OutputStream,org.apache.pdfbox.pdmodel.PDResources)",106,114,"/**
 * Initializes a PDAbstractContentStream with document, stream, and resources.
 */","* Create a new appearance stream.
     *
     * @param document may be null
     * @param outputStream The appearances output stream to write to.
     * @param resources The resources to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getVerticalDisplacementVectorY,org.apache.pdfbox.pdmodel.font.PDCIDFont:getVerticalDisplacementVectorY(int),306,315,"/**
 * Gets the vertical displacement Y value for a given code.
 * @param code The code to look up.
 * @return The vertical displacement Y value.
 */
","* Returns the y-component of the vertical displacement vector (w1).
     *
     * @param code character code
     * @return w1y",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,defaultIfNull,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:defaultIfNull(java.lang.Float,float)",201,204,"/**
 * Returns standardValue if not null, otherwise returns defaultValue.
 */","* Returns the provided default value in case 'standard' value is <code>null</code>. To be used
     * in cases unboxing may lead to a NPE.
     *
     * @param standardValue 'standard' value
     * @param defaultValue default value
     *
     * @return 'standard' value if not <code>null</code> otherwise default value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,zoom,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:zoom(float),285,292,"/**
 * Zooms the design by a given percentage.
 * @param percent Zoom percentage (e.g., 10 for 10%)
 * @return The current PDVisibleSignDesigner instance.
 */
","* Zoom signature image with some percent.
     * 
     * @param percent increase (positive value) or decrease (negative value) image with x percent.
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getWidth,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getWidth(),351,354,"/**
 * Returns the width of the image.
 * @return The image width as a float.
 */
","* 
     * @return signature image width",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getHeight(),372,375,"/**
 * Returns the image height.
 * @return The height of the image as a float.
 */
","* 
     * @return signature image height",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addToSubset(int),278,286,"/**
 * Adds a code point to the subset.
 * @param codePoint The code point to add.
 * @throws IllegalStateException if subsetting is disabled.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addGlyphsToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addGlyphsToSubset(java.util.Set),289,295,"/**
* Adds glyph IDs to the embedder, ensuring subsetting is enabled.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,adjustForRotation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:adjustForRotation(),216,261,"/**
 * Adjusts the sign designer's position and transform based on rotation.
 */","* Adjust signature for page rotation. This is optional, call this after all x and y coordinates
     * have been set if you want the signature to be positioned regardless of page orientation.
     *
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createAffineTransform,org.apache.pdfbox.util.Matrix:createAffineTransform(),169,175,"/**
 * Creates an AffineTransform using values from the 'single' array.
 */","* Create an affine transform from this matrix's values.
     *
     * @return An affine transform with this matrix's values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.Vertex:toString(),37,50,"/**
 * Returns a string representation of the Vertex object.
 * Includes point coordinates and color values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,checkFloatValues,org.apache.pdfbox.util.Matrix:checkFloatValues(float[]),295,302,"/**
 * Validates float array; throws exception if any value is infinite.
 * @param values float array to validate
 * @return validated float array
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,encode,org.apache.pdfbox.pdmodel.font.PDFont:encode(java.lang.String),329,344,"/**
 * Encodes a string into a byte array using a custom encoding.
 * @param text The string to encode.
 * @return The encoded byte array.
 */
","* Encodes the given string for use in a PDF content stream.
     *
     * @param text Any Unicode text.
     * @return Array of PDF content stream bytes.
     * @throws IOException If the text could not be encoded.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,codePointToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:codePointToName(int),181,189,"/**
 * Retrieves the name of a Unicode code point.
 * @param codePoint The Unicode code point to look up.
 * @return The name of the code point, or "".notdef"" if not found.
 */
","* Returns the name for the given Unicode code point.
     *
     * @param codePoint Unicode code point
     * @return PostScript glyph name, or "".notdef""",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,applyGSUBRules,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:applyGSUBRules(org.apache.fontbox.ttf.gsub.GsubWorker,java.io.ByteArrayOutputStream,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1715,1755,"/**
 * Applies Gsub rules, encodes glyph IDs, and writes to output.
 * @param gsubWorker Gsub worker for applying transforms
 * @param out Output stream to write encoded glyph IDs
 * @param font Font object for encoding
 * @param word Word to process
 * @return List of glyph IDs after Gsub transforms
 */
","* Retrieve the glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules. The encoded glyph IDs are also written to the specified output stream.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param out The output stream to write the glyph IDs to.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param word The word which is being converted from characters to glyph IDs.
     * @return The glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified word.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.encryption.AccessPermission)",226,232,"/**
 * Constructs a PDDocument with a COSDocument, source, and permission.
 */
","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf
     * @param permission he access permissions of the pdf
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,"org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",81,86,"/**
 * Constructs a FDFDocument from a COSDocument and source.
 * @param doc The COSDocument.
 * @param source The RandomAccessRead source.
 */
","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     *
     * @param doc The COSDocument that this document wraps.
     * @param source The source that will be closed when this document gets closed, can be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,initRgbColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:initRgbColorTable(),125,165,"/**
 * Initializes the RGB color table from the base color space.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,fromString,org.apache.pdfbox.pdmodel.PageLayout:fromString(java.lang.String),54,64,"/**
 * Parses a PageLayout from a string value.
 * @param value String representation of the layout.
 * @throws IllegalArgumentException if no match is found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,fromString,org.apache.pdfbox.pdmodel.PageMode:fromString(java.lang.String),45,55,"/**
 * Returns the PageMode corresponding to the given string value.
 * @param value String value to match.
 * @throws IllegalArgumentException if no match is found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(),168,172,"/**
 * Returns an array representing the elements in this collection.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(java.lang.Object[]),180,180,"/**
* Converts the collection to an array of the specified type.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,indexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:indexOf(java.lang.Object),534,538,"/**
 * Returns the index of the first occurrence of the object.
 * @param o object to search for
 * @return index of the object or -1 if not found
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,containsAll,org.apache.pdfbox.pdmodel.common.COSArrayList:containsAll(java.util.Collection),245,245,"/**
* Checks if the actual collection contains all elements from collection c.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:isEqual(java.lang.Object,java.lang.Object)",46,60,"/**
 * Compares two objects. Numbers are compared as floats, else uses .equals().
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ge:compare(java.lang.Number,java.lang.Number)",87,91,"/**
 * Compares two numbers as floats.
 * @param num1 The first number to compare.
 * @param num2 The second number to compare.
 * @return True if num1 is greater than or equal to num2.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Gt:compare(java.lang.Number,java.lang.Number)",99,103,"/**
 * Compares two numbers using their float values.
 * @param num1 The first number to compare.
 * @param num2 The second number to compare.
 * @return True if num1 is greater than num2.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Le:compare(java.lang.Number,java.lang.Number)",111,115,"/**
 * Compares two numbers.
 * @param num1 The first number to compare.
 * @param num2 The second number to compare.
 * @return True if num1 <= num2, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Lt:compare(java.lang.Number,java.lang.Number)",123,127,"/**
 * Compares two numbers and returns true if num1 < num2.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toCOSObjectList,org.apache.pdfbox.pdmodel.common.COSArrayList:toCOSObjectList(java.util.Collection),352,366,"/**
 * Converts a list of objects to a list of COSBase objects.
 * @param list Input list of objects to convert.
 * @return List of COSBase objects.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,removeAll,org.apache.pdfbox.pdmodel.common.COSArrayList:removeAll(java.util.Collection),374,388,"/**
 * Removes COSBase objects from 'actual' that are present in 'c'.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,retainAll,org.apache.pdfbox.pdmodel.common.COSArrayList:retainAll(java.util.Collection),396,410,"/**
 * Removes duplicate COSBase objects from the 'actual' collection.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,equals,org.apache.pdfbox.pdmodel.common.COSArrayList:equals(java.lang.Object),432,436,"/**
* Checks if this object is equal to another object based on 'actual'.
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,hashCode,org.apache.pdfbox.pdmodel.common.COSArrayList:hashCode(),441,445,"/**
* Returns the hash code, delegating to the wrapped object.
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,lastIndexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:lastIndexOf(java.lang.Object),543,548,"/**
 * Returns the last index of the specified element in the list.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(),553,557,"/**
* Returns a list iterator for the list.
* Delegates to the underlying list's iterator.
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(int),562,566,"/**
 * Returns a list iterator over the list from the specified index.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,subList,"org.apache.pdfbox.pdmodel.common.COSArrayList:subList(int,int)",571,575,"/**
 * Returns a view of the list from fromIndex (inclusive) to toIndex (exclusive).
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsValue,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsValue(java.lang.Object),87,91,"/**
* Checks if the map contains the specified value.
* @param value value to search for
* @return true if found, false otherwise
*/
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,entrySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:entrySet(),164,168,"/**
* Returns an unmodifiable set view of the map's entries.
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getNames,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getNames(),223,226,"/**
 * Returns a set of aliases. Returns an unmodifiable set.
 */","* Returns the set of known font names, including aliases.
     * 
     * @return the set of known font names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,toString,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:toString(),188,192,"/**
 * Returns a string representation of the object, based on actuals.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,equals,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:equals(java.lang.Object),196,224,"/**
* Checks if two PDUserProperty objects are equal.
* Compares userAttributeObject for equality.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,hashCode,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:hashCode(),186,194,"/**
 * Computes the hash code based on super class and userAttributeObject.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandler(java.lang.Class,java.lang.Class[],java.lang.Object[])",126,135,"/**
 * Creates a SecurityHandler instance using the provided constructor and arguments.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),215,226,"/**
 * Converts a COSBase object to a PDObject using reflection.
 * @param base The COSBase object to convert.
 * @throws IOException If object creation fails.
 */
","* Method to convert the COS value in the number tree to the PD Model object. The default
     * implementation will simply use reflection to create the correct object type. Subclasses can
     * do whatever they want.
     *
     * @param base The COS object to convert.
     * @return The converted PD Model object.
     * @throws IOException If there is an error during creation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeRomanLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeRomanLabel(int),376,398,"/**
 * Generates a Roman numeral label for a page index.
 * @param pageIndex The page index to convert.
 * @return Roman numeral string representation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeLetterLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeLetterLabel(int),404,414,"/**
 * Generates a letter label string based on the input number.
 */","* a..z, aa..zz, aaa..zzz ... labeling as described in PDF32000-1:2008,
         * Table 159, Page 375.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageRangeCount,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageRangeCount(),138,141,"/**
 * Returns the number of page range labels.
 */","* Returns the number of page label ranges.
     * 
     * <p>
     * This will be always &gt;= 1, as the required default entry for the page
     * range starting at the first page is added automatically by this
     * implementation (see PDF32000-1:2008, p. 375).
     * </p>
     * 
     * @return the number of page label ranges.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageLabelRange,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageLabelRange(int),153,156,"/**
 * Retrieves a label range for the specified page.
 * @param startPage The starting page number (1-based).
 * @return The PDPageLabelRange object for the page.
 */
","* Returns the page label range starting at the given page, or {@code null}
     * if no such range is defined.
     * 
     * @param startPage
     *            the 0-based page index representing the start page of the page
     *            range the item is defined for.
     * @return the page label range or {@code null} if no label range is defined
     *         for the given start page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndices(),242,245,"/**
 * Returns a navigable set of page indices based on labels.
 */","* Get an ordered set of page indices having a page label range.
     *
     * @return set of page indices.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,toString,org.apache.pdfbox.util.Vector:toString(),65,69,"/**
 * Returns a string representation of the object in (x, y) format.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,closePath,org.apache.pdfbox.rendering.PageDrawer:closePath(),1005,1009,"/**
 * Closes the current line path. Delegates to linePath.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,moveTo,"org.apache.pdfbox.rendering.PageDrawer:moveTo(float,float)",981,985,"/**
* Moves the current point of the line path to the given coordinates.
* @param x The x-coordinate.
* @param y The y-coordinate.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,appendRectangle,"org.apache.pdfbox.rendering.PageDrawer:appendRectangle(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",589,602,"/**
* Appends a rectangle to the line path using four points.
* @param p0, p1, p2, p3 coordinates of the rectangle's corners
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,lineTo,"org.apache.pdfbox.rendering.PageDrawer:lineTo(float,float)",987,991,"/**
 * Draws a line from the current point to (x, y).
 * @param x The x-coordinate of the destination point.
 * @param y The y-coordinate of the destination point.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getDashArray,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getDashArray(),101,104,"/**
 * Returns a copy of the dash array.
 * @return float[] A clone of the internal dash array.
 */
","* Returns the dash array.
     * @return the dash array, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",102,114,"/**
 * Creates a PDColor instance with given components and color space.
 * @param components Color components (e.g., RGB values).
 * @param colorSpace The color space for the color.
 */
","* Creates a PDColor containing the given color component values.
     * @param components array of color component values
     * @param colorSpace color space in which the components are defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:getComponents(),155,166,"/**
 * Returns an array of color components.
 * Returns a clone or a copy based on color space.
 */","* Returns the components of this color value.
     * @return the components of this color value, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoordinateColorPair.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair:<init>(java.awt.geom.Point2D,float[])",37,41,"/**
 * Initializes a CoordinateColorPair with a point and color array.
 * @param p The coordinate point.
 * @param c The color values (as an array).
 */
","* Constructor.
     *
     * @param p point
     * @param c color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Vertex:<init>(java.awt.geom.Point2D,float[])",31,35,"/**
* Constructs a Vertex object with given point and color.
* @param p The point of the vertex.
* @param c The color of the vertex as an array.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,get255Value,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:get255Value(float),281,284,"/**
 * Calculates a value between 0 and 255 based on the input float.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:toString(),137,144,"/**
 * Returns a string representation of this FunctionType2 object.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$False:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),112,117,"/**
 * Pushes a boolean false value onto the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$True:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),170,175,"/**
 * Pushes a boolean true value onto the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getBoundary,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getBoundary(),122,138,"/**
 * Calculates and returns the boundary coordinates of the corners.
 * @return An array containing the boundary coordinates [minX, maxX, minY, maxY].
 */","* get the boundary of a triangle.
     *
     * @return {xmin, xmax, ymin, ymax}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Bitshift:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),89,105,"/**
 * Executes a shift operation on an integer from the stack.
 * Pops shift and int from stack, shifts int, and pushes result.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popNumber,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popNumber(),63,66,"/**
 * Pops the top element from the stack and returns it as a Number.
 */","* Pops a number (int or real) from the stack. If it's neither data type, a
     * ClassCastException is thrown.
     * @return the number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popInt,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popInt(),73,76,"/**
 * Pops the integer value from the stack.
 * @return The integer value popped from the stack.
 */
","* Pops a value of type int from the stack. If the value is not of type int, a
     * ClassCastException is thrown.
     * @return the int value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popReal,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popReal(),83,86,"/**
* Pops the top element from the stack and returns it as a float.
*/
","* Pops a number from the stack and returns it as a real value. If the value is not of a
     * numeric type, a ClassCastException is thrown.
     * @return the real value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Exch:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),70,78,"/**
 * Reverses the order of the top two elements on the execution stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Pop:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,108,"/**
 * Removes the top element from the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addBoolean,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addBoolean(boolean),62,65,"/**
 * Adds a boolean value to the instructions list.
 * @param value The boolean value to add.
 */","* Adds a bool value.
     * @param value the value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$AbstractNumberComparisonOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),67,77,"/**
 * Pops two numbers, compares them, and pushes the boolean result.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDType3Font:isFontSymbolic(),122,126,"/**
 * Indicates if the font symbol is symbolic. Always returns false.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$AbstractLogicalOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,60,"/**
 * Executes the operation, popping operands from the stack.
 * Handles boolean and integer operations, throws ClassCastException.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),124,145,"/**
 * Executes the operation, negating bool/int from stack.
 * Pops a value, negates it, and pushes the result back.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:<init>(org.apache.pdfbox.pdmodel.common.function.type4.Operators),35,38,"/**
 * Constructs an ExecutionContext with the given set of operators.
 * @param operatorSet The set of operators for execution.
 */
","* Creates a new execution context.
     * @param operatorSet the operator set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,getCurrentSequence,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:getCurrentSequence(),62,65,"/**
 * Returns the top InstructionSequence from the sequence stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Dup:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),58,63,"/**
 * Pushes the top element of the stack onto itself.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<clinit>(),52,56,"/**
 * Compiles a pattern to extract hex color codes from text.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getListItemPatterns,org.apache.pdfbox.text.PDFTextStripper:getListItemPatterns(),1813,1825,"/**
 * Returns a list of Pattern objects for list item expressions.
 * Lazily initializes the list if it's null.
 */
","* returns a list of regular expression Patterns representing different common list item formats. For example
     * numbered items of form:
     * <ol>
     * <li>some text</li>
     * <li>more text</li>
     * </ol>
     * or
     * <ul>
     * <li>some text</li>
     * <li>more text</li>
     * </ul>
     * etc., all begin with some character pattern. The pattern ""\\d+\."" (matches ""1."", ""2."", ...) or ""\[\\d+\]""
     * (matches ""[1]"", ""[2]"", ...).
     * <p>
     * This method returns a list of such regular expression Patterns.
     * 
     * @return a list of Pattern objects.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,<clinit>,org.apache.pdfbox.util.StringUtil:<clinit>(),23,23,"/**
* Compiles a regex pattern to match whitespace characters.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,<clinit>,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:<clinit>(),28,30,"/**
 * Creates predicates to match integer and real number strings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,hasMore,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:hasMore(),138,141,"/**
* Checks if there are more elements to process.
* @return True if index is less than the input length.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,currentChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:currentChar(),143,146,"/**
 * Returns the character at the current index in the input string.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,peek,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:peek(),161,171,"/**
 * Peeks at the next character in the input.
 * Returns EOT if at the end of the input.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),38,51,"/**
 * Executes the logic, potentially duplicating stack elements.
 * @param context Execution context with a stack to manipulate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Index:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),85,96,"/**
 * Retrieves an element from the stack based on a negative index.
 * @param context Execution context with the stack to operate on.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Roll:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),115,162,"/**
 * Executes logic based on values from the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(java.lang.Object[]),205,213,"/**
 * Converts an object array to a comma-separated string.
 */","* Creates a String representation of an Object array.
     * 
     * @param array the Object array
     * @return the String representation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(float[]),221,229,"/**
 * Converts a float array to a comma-separated string.
 * @param array The float array to convert.
 * @return A string representation of the array.
 */
","* Creates a String representation of a float array.
     * 
     * @param array the float array
     * @return the String representation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addText(org.apache.pdfbox.text.TextPosition),167,170,"/**
 * Adds a text position to the content.
 * @param text The text position to add.
 */","* Adds a text position to the contents.
     * 
     * @param text the text position",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addMarkedContent,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addMarkedContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),177,180,"/**
* Adds a marked content object to the document's contents.
* @param markedContent The content to add.
*/
","* Adds a marked content to the contents.
     * 
     * @param markedContent the marked content",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addXObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),187,190,"/**
 * Adds an XObject to the document contents.
 * @param xobject The XObject to add.
 */","* Adds an XObject to the contents.
     * 
     * @param xobject the XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:toString(),193,199,"/**
 * Returns a string representation of the object's state.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:toString(),267,271,"/**
 * Returns a string representation of the corner array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:toString(),127,136,"/**
 * Returns a string representation of the object, including ListNumbering if specified.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:toString(),158,175,"/**
 * Returns a string representation of the object, including role, checked state, and alternate name if specified.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:toString(),193,218,"/**
 * Returns a string representation of the object, including specified attributes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.java,<clinit>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:<clinit>(),37,315,"/**
 * Defines standard structure element types as constants.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getPermissionBytesForPublicKey,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getPermissionBytesForPublicKey(),176,186,"/**
 * Sets permission bits and returns the resulting byte array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrint(boolean),217,223,"/**
 * Sets the print permission. Only applies if not in read-only mode.
 */","* Set if the user can print.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowPrinting A boolean determining if the user can print.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModify(boolean),242,248,"/**
 * Sets whether modifications are allowed. Only applies if not read-only.
 */
","* Set if the user can modify the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowModifications A boolean determining if the user can modify the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractContent(boolean),269,275,"/**
 * Sets the content extraction permission.
 * @param allowExtraction True to allow extraction, false otherwise.
 */
","* Set if the user can extract content from the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModifyAnnotations(boolean),302,308,"/**
 * Sets the permission to modify annotations if not in read-only mode.
 */","* Set if the user can add or modify text annotations and fill in interactive forms fields and,
     * if {@link #canModify() canModify()} returns true, create or modify interactive form fields
     * (including signature fields). Note that if {@link #canFillInForm() canFillInForm()} returns
     * true, it is still possible to fill in interactive forms (including signature fields) even the
     * parameter here is false.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAnnotationModification A boolean determining the new setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanFillInForm(boolean),331,337,"/**
 * Sets the permission to fill in the form if not read-only.
 * @param allowFillingInForm True to allow filling, false otherwise.
 */
","* Set if the user can fill in interactive form fields (including signature fields) even if
     * {@link #canModifyAnnotations() canModifyAnnotations()} returns false. Therefore, if you want
     * to prevent a user from filling in interactive form fields, you need to call
     * {@link #setCanModifyAnnotations(boolean) setCanModifyAnnotations(false)} as well.
     *<p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowFillingInForm A boolean determining if the user can fill in interactive forms.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractForAccessibility(boolean),359,365,"/**
 * Sets the extract for accessibility permission, if not read-only.
 */","* Set if the user can extract content from the document for accessibility purposes.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanAssembleDocument(boolean),384,390,"/**
 * Sets the ability to assemble a document, if not in read-only mode.
 * @param allowAssembly True to allow assembly, false otherwise.
 */
","* Set if the user can insert/rotate/delete pages.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAssembly A boolean determining if the user can assemble the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrintFaithful(boolean),413,419,"/**
 * Sets the faithful print permission if not in read-only mode.
 * @param canPrintFaithful flag to enable/disable faithful printing
 */
","* Set if the user can print the document in a faithful format or in a degraded format (if print
     * is enabled). The PDF version must be 1.5 or higher.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param canPrintFaithful A boolean determining if the user can print the document in a
     * faithful format.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrint(),205,208,"/**
 * Checks if the print permission bit is enabled.
 */","* This will tell if the user can print.
     *
     * @return true If supplied with the user password they are allowed to print.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModify(),230,233,"/**
 * Checks if modification permission is enabled.
 * Returns true if MODIFICATION_BIT is set, false otherwise.
 */
","* This will tell if the user can modify contents of the document.
     *
     * @return true If supplied with the user password they are allowed to modify the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractContent(),256,259,"/**
 * Checks if content extraction is permitted.
 * Returns true if the extraction bit is set.
 */","* This will tell if the user can extract text and images from the PDF document.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModifyAnnotations(),286,289,"/**
 * Checks if the permission to modify annotations is enabled.
 */","* This will tell if the user can add or modify text annotations and fill in interactive forms
     * fields and, if {@link #canModify() canModify()} returns true, create or modify interactive
     * form fields (including signature fields). Note that if
     * {@link #canFillInForm() canFillInForm()} returns true, it is still possible to fill in
     * interactive forms (including signature fields) even if this method here returns false.
     *
     * @return true If supplied with the user password they are allowed to modify annotations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canFillInForm(),316,319,"/**
* Checks if the user has permission to fill in the form.
*/","* This will tell if the user can fill in interactive form fields (including signature fields)
     * even if {@link #canModifyAnnotations() canModifyAnnotations()} returns false.
     *
     * @return true If supplied with the user password they are allowed to fill in form fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractForAccessibility(),346,349,"/**
 * Checks if accessibility extraction is permitted.
 * Returns true if the extraction permission bit is set.
 */","* This will tell if the user can extract text and images from the PDF document
     * for accessibility purposes.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canAssembleDocument(),372,375,"/**
 * Checks if the user has permission to assemble a document.
 */","* This will tell if the user can insert/rotate/delete pages.
     *
     * @return true If supplied with the user password they are allowed to assemble the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrintFaithful(),399,402,"/**
* Checks if the faithful print permission bit is enabled.
*/","* This will tell if the user can print the document in a faithful format or in a degraded
     * format (if print is enabled).
     *
     * @return true If supplied with the user password they are allowed to print the document in a
     * faithful format.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getCertificate,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getCertificate(),74,90,"/**
 * Retrieves the X509 certificate from the keystore.
 * Uses alias if available, otherwise returns the first cert.
 * @throws KeyStoreException if alias not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getPrivateKey,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getPrivateKey(),108,135,"/**
* Retrieves the private key from the keystore.
* @throws KeyStoreException if key is not found or recoverable.
*/
","* returns The private key that will be used to open the document protection.
     * @return The private key.
     * @throws KeyStoreException If there is an error accessing the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,appendCertInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)",291,313,"/**
 * Appends certificate info to StringBuilder, comparing rid and cert details.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,getSecureRandom,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:getSecureRandom(),435,442,"/**
 * Returns a SecureRandom instance, using custom if available.
 */","* Returns a SecureRandom If customSecureRandom is not defined, instantiate a new SecureRandom
     * 
     * @return SecureRandom",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,setKey,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:setKey(byte[]),47,70,"/**
* Sets the key, validates length, and mixes it with the salt.
*/","* This will reset the key to be used.
     *
     * @param key The RC4 key used during encryption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte,java.io.OutputStream)",106,113,"/**
 * Writes a byte to the output stream after XORing with salt.
 * @param aByte the byte to write
 * @param output the output stream to write to
 */
","* This will encrypt and write the next byte.
     *
     * @param aByte The byte to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,combineDiacritic,org.apache.pdfbox.text.TextPosition:combineDiacritic(java.lang.String),794,808,"/**
* Combines diacritic characters or normalizes the string.
* Uses DIACRITICS map or normalizes using NFKC form.
*/
","* Combine the diacritic, for example, convert non-combining diacritic characters to their
     * combining counterparts.
     *
     * @param str String to normalize
     * @return Normalized string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,prohibited,org.apache.pdfbox.pdmodel.encryption.SaslPrep:prohibited(int),146,158,"/**
 * Checks if a codepoint is prohibited based on various conditions.
 * @param codepoint The integer representing a Unicode codepoint.
 * @return True if the codepoint is prohibited, false otherwise.
 */
","* Return true if the given {@code codepoint} is a prohibited character
     * as defined by
     * <a href=""https://tools.ietf.org/html/rfc4013#section-2.3"">RFC 4013,
     * Section 2.3</a>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,createCipher,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:createCipher(byte[],byte[],boolean)",392,401,"/**
 * Creates a Cipher object for AES/CBC encryption/decryption.
 * @param key encryption key
 * @param iv initialization vector
 * @param decrypt if true, creates a decryption cipher
 * @return Cipher object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,computeVersionNumber,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:computeVersionNumber(),812,827,"/**
 * Computes the version number based on key length and policy.
 */","* Computes the version number of the {@link SecurityHandler} based on the encryption key
     * length. See PDF Spec 1.6 p 93 and
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/pdf/adobe_supplement_iso32000.pdf"">PDF
     * 1.7 Supplement ExtensionLevel: 3</a> and
     * <a href=""http://intranet.pdfa.org/wp-content/uploads/2016/08/ISO_DIS_32000-2-DIS4.pdf"">PDF
     * Spec 2.0</a>.
     *
     * @return The computed version number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,getProvider,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:getProvider(),40,48,"/**
 * Returns the singleton BouncyCastle provider instance.
 * Creates it if it doesn't already exist.
 */
","* Returns the provider to be used for advanced encrypting/decrypting. Default is the BouncyCastleProvider.
     * 
     * @return the security provider",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,logIfStrongEncryptionMissing,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:logIfStrongEncryptionMissing(),1255,1268,"/**
 * Checks if strong AES encryption is enabled; logs a warning if not.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getNumComponentsFromImageMetadata,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getNumComponentsFromImageMetadata(javax.imageio.ImageReader),187,215,"/**
 * Extracts number of components from image metadata.
 * @param reader ImageReader object
 * @return Number of components or 0 if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,richContentsToString,"org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:richContentsToString(org.w3c.dom.Node,boolean)",956,1001,"/**
 * Converts a DOM node to a string, handling attributes & CDATA.
 * @param node The DOM node to convert.
 * @param root True if this is the root node.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,getNodeValue,org.apache.pdfbox.util.XMLUtil:getNodeValue(org.w3c.dom.Element),99,113,"/**
 * Extracts text content from a given XML element node.
 */","* This will get the text value of an element.
     *
     * @param node The node to get the text value for.
     * @return The text of the node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String),845,848,"/**
 * Writes a string to the output stream.
 * @param text The string to write.
 * @throws IOException if an I/O error occurs.
 */
","* Write a Java string to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.CIDSystemInfo:toString(),53,57,"/**
 * Returns a string representation of the object.
 * Concatenates registry, ordering, and supplement.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,getPredefinedCMap,org.apache.pdfbox.pdmodel.font.CMapManager:getPredefinedCMap(java.lang.String),46,59,"/**
 * Retrieves a predefined CMap by name.
 * @param cMapName Name of the CMap to retrieve.
 * @return The CMap object or a new one if not cached.
 */
","* Fetches the predefined CMap from disk (or cache).
     *
     * @param cMapName CMap name
     * @return The predefined CMap, never null.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,parseCMap,org.apache.pdfbox.pdmodel.font.CMapManager:parseCMap(org.apache.pdfbox.io.RandomAccessRead),67,75,"/**
 * Parses a CMap from a RandomAccessRead object.
 * @param randomAccessRead Input stream to parse from.
 * @return Parsed CMap object or null if input is null.
 */
","* Parse the given CMap.
     *
     * @param randomAccessRead the source of the CMap to be read
     * @return the parsed CMap",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<clinit>,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$1:<clinit>(),144,144,"/**
* Processes data based on the specified format.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,<clinit>,org.apache.pdfbox.rendering.PageDrawer:<clinit>(),125,130,"/**
 * Initializes OS-specific flags based on the system property ""os.name"".
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,readTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:readTrueTypeFont(java.lang.String,java.io.File)",216,246,"/**
 * Reads a TrueType font from a file, handling both TTC and TTF.
 * @param postScriptName Font name to retrieve.
 * @param file Font file to read.
 * @return TrueTypeFont object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getParser,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",505,526,"/**
 * Determines the appropriate parser (OTF or TTF) based on file tag.
 * @param randomAccessRead Reader for the file.
 * @param isEmbedded Whether the font is embedded.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getParser,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",762,783,"/**
 * Determines the parser type (OTF or TTF) based on file tag.
 * @param randomAccessRead Reader for the file.
 * @param isEmbedded Whether the font is embedded.
 * @return Parser instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getOTFFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getOTFFont(java.lang.String,java.io.File)",248,288,"/**
 * Loads an OpenType font from a file, handling TTC and OTF formats.
 * @param postScriptName Font name to retrieve.
 * @param file Font file to load.
 * @return OpenTypeFont object or null if loading fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getType1Font,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getType1Font(java.lang.String,java.io.File)",290,303,"/**
 * Loads a Type1 font from a file.
 * @param postScriptName Font's postscript name
 * @param file Font file to load
 * @return Type1Font object or null on failure
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,isBadPath,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:isBadPath(java.lang.String),402,405,"/**
 * Checks if a path is invalid: null, not a directory, or unwritable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeLine,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeLine(java.io.BufferedWriter,java.lang.String)",178,182,"/**
 * Writes a line of text to the specified writer, appending a newline.
 * @param writer The writer to write to.
 * @param text The text to write.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,writeFontInfo,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:writeFontInfo(java.io.BufferedWriter,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo)",437,488,"/**
 * Writes font info to the writer, including various properties.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getPostScriptNames,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getPostScriptNames(java.lang.String),188,199,"/**
 * Returns a set containing the PostScript name and its hyphen-free version.
 * @param postScriptName The original PostScript name.
 * @return A set of PostScript names.
 */
","* Gets alternative names, as seen in some PDFs, e.g. PDFBOX-142.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,calcLine,"org.apache.pdfbox.pdmodel.graphics.shading.Line:calcLine(int,int,int,int)",66,94,"/**
 * Calculates a set of points along a line from (x0, y0) to (x1, y1).
 */","* Calculate the points of a line with Bresenham's line algorithm
     * <a
     * href=""http://en.wikipedia.org/wiki/Bresenham's_line_algorithm"">Bresenham's
     * line algorithm</a>
     *
     * @param x0 coordinate
     * @param y0 coordinate
     * @param x1 coordinate
     * @param y1 coordinate
     * @return all the points on the rasterized line from (x0, y0) to (x1, y1)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcDeg,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcDeg(java.awt.geom.Point2D[]),101,110,"/**
 * Calculates the number of unique points in the array.
 * @param p array of Point2D objects
 * @return the number of unique points
 */
","* Calculate the degree value of a triangle.
     *
     * @param p 3 vertices coordinates
     * @return number of unique points in the 3 vertices of a triangle, 3, 2 or
     * 1",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toDebugString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:toDebugString(),827,841,"/**
 * Generates a debug string of font info, including format, PS name, and file path.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,computeHash,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:computeHash(java.io.InputStream),851,867,"/**
 * Computes CRC32 hash of an input stream.
 * @param is Input stream to hash.
 * @return Hexadecimal representation of the CRC32 hash.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,addFont,"org.apache.pdfbox.pdmodel.font.FontCache:addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)",41,44,"/**
* Adds a font to the cache, associating it with FontInfo.
* @param info FontInfo object
* @param font FontBoxFont object
*/
","* Adds the given FontBox font to the cache.
     * 
     * @param info the FontInfo to be used as key
     * @param font the font to be cached",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,getFont,org.apache.pdfbox.pdmodel.font.FontCache:getFont(org.apache.pdfbox.pdmodel.font.FontInfo),53,57,"/**
 * Retrieves a FontBoxFont from the cache, or null if not found.
 * @param info FontInfo object used as cache key.
 * @return FontBoxFont or null.
 */
","* Returns the FontBox font associated with the given FontInfo.
     * 
     * @param info the FontInfo of the cached font
     * 
     * @return the cached font if available, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontInfo.java,toString,org.apache.pdfbox.pdmodel.font.FontInfo:toString(),140,147,"/**
 * Returns a string representation of the object's state.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,toString,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:toString(),159,164,"/**
 * Returns a string representation of this TilingPaintParameter object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,compareTo,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:compareTo(org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch),728,728,"/**
* Compares the scores of two Match objects.
* @return Negative if match.score is less, positive if greater.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cosine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cosine(double,double)",203,210,"/**
 * Calculates the cosine value.
 * @param dx The adjacent side.
 * @param hypot The hypotenuse.
 * @return Cosine value (dx / hypot).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,sine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:sine(double,double)",212,219,"/**
 * Calculates the sine of an angle given opposite and hypotenuse.
 * @param dy Opposite side of the angle.
 * @param hypot Hypotenuse of the right triangle.
 * @return The sine value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),154,156,"/**
 * Adds a base name to the ALIASES map.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitute,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitute(java.lang.String,java.lang.String)",207,211,"/**
 * Adds a substitute string for a given match.
 * @param match String to be replaced.
 * @param replace String to use as a substitute.
 */
","* Adds a top-priority substitute for the given font.
     *
     * @param match PostScript name of the font to match
     * @param replace PostScript name of the font to use as a replacement",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitutes,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitutes(java.lang.String,java.util.List)",214,216,"/**
 * Adds a substitution mapping for a lowercase key.
 * @param match Key for substitution (lowercase English)
 * @param replacements Value to substitute for the key
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",469,485,"/**
 * Retrieves FontInfo by PostScript name and format.
 * @param format FontFormat to match
 * @param postScriptName PostScript font name
 * @return FontInfo object or null if not found
 */
",* Finds the named font with the given format.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getSubstitutes,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getSubstitutes(java.lang.String),221,226,"/**
 * Retrieves substitutes for a given postscript name.
 * @param postScriptName The postscript name to look up.
 * @return List of substitutes or an empty list if not found.
 */
",* Returns the substitutes for a given font.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getName,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getName(int),166,169,"/**
 * Gets the name associated with the given code.
 * @param code code to look up; returns "".notdef"" if not found.
 */
","* This will take a character code and get the name from the code.
     * 
     * @param code character code
     * @return PostScript glyph name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,printMatches,org.apache.pdfbox.pdmodel.font.FontMapperImpl:printMatches(java.util.PriorityQueue),736,749,"/**
 * Iterates through font matches, prints details, and returns best match.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,findFontOrSubstitute,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:findFontOrSubstitute(),157,183,"/**
* Finds a TrueType font or substitute based on mapping.
* Returns TrueTypeFont. Throws IOException if font is missing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getType2CharString,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getType2CharString(int),286,300,"/**
 * Gets Type2 CharString for CID.
 * @param cid CID value. Returns Type2 CharString or null.
 */
","* Returns the Type 2 charstring for the given CID, or null if the substituted font does not contain Type 2
     * charstrings.
     *
     * @param cid CID
     * @return the Type 2 charstring for the given CID or null
     * 
     * @throws IOException if the charstring could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToCID(int),371,375,"/**
 * Converts a code point to a CID value using the parent's CMap.
 * @param code The code point to convert.
 * @return The corresponding CID value.
 */
","* Returns the CID for the given character code. If not found then CID 0 is returned.
     *
     * @param code character code
     * @return CID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getAverageFontWidth(),461,469,"/**
 * Returns the average font width, caching the result.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,subset,org.apache.pdfbox.pdmodel.font.PDType0Font:subset(),297,310,"/**
 * Subsets the font. Throws exception if subsetting is disabled.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToCID(int),224,240,"/**
 * Converts a code point to a CID value using the parent's cmap.
 * @param code The code point to convert.
 * @return The corresponding CID value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getHeight(int),335,341,"/**
 * Calculates height from TTF data.
 * @param code Font code (unused).
 * @return Font height in user units.
 * @throws IOException if TTF data is unavailable.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:encode(int),356,407,"/**
 * Encodes a Unicode code point to a glyph ID.
 * @param unicode The Unicode code point to encode.
 * @return Byte array representing the encoded glyph ID.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toRGB(),192,202,"/**
 * Converts color components to an RGB integer value.
 * @return RGB integer representing the color.
 */
","* Returns the packed RGB value for this color, if any.
     * @return RGB
     * @throws IOException if the color conversion fails
     * @throws UnsupportedOperationException if this color value is a pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGB(float[]),170,186,"/**
 * Converts a single-value color to RGB.
 * @param value Single color value to convert.
 * @return RGB float array (normalized to 0-1).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,backdropRemoval,"org.apache.pdfbox.rendering.GroupGraphics:backdropRemoval(int,int,int,float)",723,729,"/**
 * Calculates a color component value with backdrop removal.
 * @param groupRGB Group RGB value.
 * @param backdropRGB Backdrop RGB value.
 * @param shift Shift value.
 * @param alphaFactor Alpha factor for blending.
 * @return Calculated color component value.
 */
","* Computes the backdrop removal equation.
     * <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code>",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,multiplyFloat,"org.apache.pdfbox.text.PDFTextStripper:multiplyFloat(float,float)",1689,1694,"/**
 * Multiplies two floats and rounds the result to 3 decimal places.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,equals,org.apache.pdfbox.pdmodel.font.PDFont:equals(java.lang.Object),654,658,"/**
 * Checks for equality with another PDFont object.
 * @param other The object to compare to.
 * @return True if both objects represent the same COS object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,hashCode,org.apache.pdfbox.pdmodel.font.PDFont:hashCode(),660,664,"/**
 * Returns the hash code, based on the COS object's hash code.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getData,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk:getData(),717,720,"/**
 * Returns a copy of the data array from the specified range.
 */","* Get the data of this chunk as a byte array
         *
         * @return a byte-array with only the data of the chunk",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,toString,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:toString(),95,108,"/**
 * Returns a string representation of the object's properties.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,getGlyphList,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:getGlyphList(),166,169,"/**
* Returns a standard Adobe Glyph List.
*/",* Returns the font's glyph list.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,assignGlyphList,org.apache.pdfbox.pdmodel.font.PDSimpleFont:assignGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),468,477,"/**
 * Assigns glyph list based on font name. Uses Zapf Dingbats or Adobe.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphList,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),310,312,"/**
 * Returns glyph list based on base font name.
 * @param baseName Font name to check.
 * @return GlyphList object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(java.lang.String),502,538,"/**
 * Retrieves a GeneralPath by name or GID. Returns an empty path if not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(java.lang.String),581,586,"/**
 * Checks if a glyph exists by name.
 * @param name Glyph name to check.
 * @return True if glyph exists, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,extractCmapTable,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:extractCmapTable(),715,760,"/**
 * Extracts relevant cmap subtables from the TTF cmap table.
 */","* extract all useful ""cmap"" subtables.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<clinit>(),69,83,"/**
 * Initializes a map of character names to their corresponding values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,isVertical,org.apache.pdfbox.pdmodel.font.PDType0Font:isVertical(),461,465,"/**
* Checks if the canvas is vertical based on the WMode.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType0Font:readCode(java.io.InputStream),626,634,"/**
 * Reads code from an input stream using the character map.
 * @param in Input stream to read from.
 * @return Code value read from the stream.
 * @throws IOException if cmap is null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(java.lang.String),242,246,"/**
* Checks if the font has a glyph for the given name.
* @param name Glyph name to check.
* @return True if the glyph exists, false otherwise.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getAverageFontWidth(),438,446,"/**
 * Returns the average font width, caching the result.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDType1Font$1:<clinit>(),110,110,"/**
* Selects a font based on the baseFont value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1Font:getAverageFontWidth(),473,484,"/**
 * Gets the average font width, from AFM or superclass.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,loadMetrics,org.apache.pdfbox.pdmodel.font.Standard14Fonts:loadMetrics(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),130,143,"/**
 * Parses AFM resource, extracts font metrics, and caches them.
 * @param fontName The name of the font to parse.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowDestinationRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowDestinationRange(java.lang.String,java.lang.String)",214,227,"/**
 * Checks if a destination string is allowed based on the previous string.
 * @param prev The previous string.
 * @param next The next string.
 * @return True if the destination is allowed, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isEmbeddingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isEmbeddingPermitted(org.apache.fontbox.ttf.TrueTypeFont),140,160,"/**
* Checks if embedding is permitted based on TrueType font restrictions.
* Returns true if embedding is allowed, false otherwise.
*/",* Returns true if the fsType in the OS/2 table permits embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isSubsettingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isSubsettingPermitted(org.apache.fontbox.ttf.TrueTypeFont),165,177,"/**
 * Checks if subsetting is permitted for the given TrueType font.
 * Returns true if subsetting is allowed, false otherwise.
 */
",* Returns true if the fsType in the OS/2 table permits subsetting.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,getTag,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:getTag(java.util.Map),373,393,"/**
 * Converts a gid to a base25 encoded string, padded to length 6.
 * @param gid gid to encode
 * @return base25 encoded string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,getUniNameOfCodePoint,org.apache.pdfbox.pdmodel.font.UniUtil:getUniNameOfCodePoint(int),32,46,"/**
 * Formats a code point as a Uni string (e.g., ""uni1234"").
 * @param codePoint The integer code point to format.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,getEncodingName,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:getEncodingName(),203,212,"/**
 * Returns the encoding name, ""differences"" or base encoding name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,loadList,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:loadList(java.io.InputStream),121,173,"/**
 * Loads glyph list from input stream, parsing and storing mappings.
 * @param input Input stream containing the glyph list.
 * @throws IOException if an I/O error occurs or list entry is invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,toUnicode,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:toUnicode(java.lang.String),213,264,"/**
 * Converts a name to its Unicode character representation.
 * @param name Name to convert; may be null.
 * @return Unicode character string or null if not found.
 */
","* Returns the Unicode character sequence for the given glyph name, or null if there isn't any.
     *
     * @param name PostScript glyph name
     * @return Unicode character(s), or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,toString,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:toString(),106,110,"/**
 * Returns a string representation of this PDLineDashPattern.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toString(),228,232,"/**
 * Returns a string representation of the PDColor object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:toRGBImage(java.awt.image.WritableRaster),80,103,"/**
 * Converts a grayscale raster to an RGB BufferedImage.
 * @param raster grayscale WritableRaster to convert
 * @return RGB BufferedImage representation of the raster
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:toRGBImage(java.awt.image.WritableRaster),76,88,"/**
 * Converts a writable raster to an RGB BufferedImage.
 * Uses TYPE_INT_RGB to avoid performance issues.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGBImage(java.awt.image.WritableRaster),191,215,"/**
 * Converts a raster to an RGB BufferedImage using a color table.
 * @param raster The raster to convert.
 * @return The converted RGB BufferedImage.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,convXYZtoRGB,"org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:convXYZtoRGB(float,float,float)",85,106,"/**
 * Converts XYZ color values to RGB. Ensures XYZ values are non-negative.
 * @param x, y, z XYZ color components
 * @return RGB color values as a float array
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,compose,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)",110,269,"/**
 * Blends a source raster onto a destination raster.
 * Uses specified blend mode and color spaces.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,toString,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:toString(),390,394,"/**
 * Returns a string representation of this BlendMode object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage2,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage2(java.awt.image.WritableRaster),200,232,"/**
 * Converts a WritableRaster to an RGB BufferedImage.
 * @param raster Input raster to convert.
 * @return RGB BufferedImage representation of the raster.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEBasedColorSpace.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:toRGBImage(java.awt.image.WritableRaster),35,73,"/**
 * Converts a raster to an RGB BufferedImage. Slow with ICC profiles.
 * @param raster WritableRaster to convert.
 * @return RGB BufferedImage.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,applyColorKeyMask,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:applyColorKeyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage)",706,738,"/**
 * Applies a color key mask to an image.
 * @param image The image to apply the mask to.
 * @param mask The mask image.
 * @return The masked image.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",134,149,"/**
 * Creates a PDColor with given components, pattern name, and color space.
 */","* Creates a PDColor containing the given color component values and pattern name.
     * @param components array of color component values
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern/components are defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:<init>(),44,47,"/**
* Initializes a PDColorSpace with a ColorConvertOp.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRawImage,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRawImage(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",333,338,"/**
 * Creates a BufferedImage from a WritableRaster and ColorSpace.
 */","* Returns the given raster as BufferedImage with the given awtColorSpace using a
     * ComponentColorModel.
     * @param raster the source raster
     * @param awtColorSpace the AWT colorspace
     * @return a BufferedImage in this colorspace",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",347,377,"/**
* Converts a WritableRaster to an RGB BufferedImage using ColorConvertOp.
* @param raster The raster to convert.
* @param colorSpace The color space of the raster.
* @return An RGB BufferedImage.
*/
","* Returns the (A)RGB equivalent of the given raster, using the given AWT color space
     * to perform the conversion.
     * @param raster the source raster
     * @param colorSpace the AWT
     * @return an (A)RGB buffered image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getICCProfile(),97,114,"/**
 * Retrieves the CMYK ICC profile from a resource.
 * @throws IOException if the resource is not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",162,214,"/**
 * Converts a raster to an RGB BufferedImage using pure Java CMYK conversion.
 * @param raster WritableRaster to convert
 * @param colorSpace ColorSpace of the raster
 * @return RGB BufferedImage
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,equals,org.apache.pdfbox.util.Matrix:equals(java.lang.Object),596,612,"/**
* Checks if two Matrix objects are equal based on their 'single' array.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setBackground,org.apache.pdfbox.rendering.GroupGraphics:setBackground(java.awt.Color),505,510,"/**
* Sets the background color for both groupG2D and alphaG2D.
* @param color The Color to set as the background.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clearRect,"org.apache.pdfbox.rendering.GroupGraphics:clearRect(int,int,int,int)",90,95,"/**
 * Clears a rectangular area on both the group and alpha G2D contexts.
 * @param x x-coordinate of the rectangle.
 * @param y y-coordinate of the rectangle.
 * @param width Width of the rectangle.
 * @param height Height of the rectangle.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),937,943,"/**
* Sets the color space for the image.
* @param cs The color space object, or null to reset.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,is_sRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:is_sRGB(java.awt.color.ICC_Profile),246,252,"/**
 * Checks if the ICC profile describes an sRGB color space.
 * @param profile The ICC profile to check.
 * @return True if sRGB, false otherwise.
 */
","* Returns true if the given profile represents sRGB.
     * (unreliable on the data of ColorSpace.CS_sRGB in openjdk)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,ensureDisplayProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:ensureDisplayProfile(java.awt.color.ICC_Profile),256,270,"/**
 * Ensures the profile is a display profile, adjusts if perceptual.
 * @param profile The ICC profile to check and potentially adjust.
 * @return The adjusted or original ICC profile.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,clampColors,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:clampColors(java.awt.color.ICC_ColorSpace,float[])",299,309,"/**
 * Clamps color values within the color space's min/max range.
 * @param cs Color space providing min/max values.
 * @param value Color values to clamp.
 * @return Clamped color values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getNumberOfComponents(),334,355,"/**
* Returns the number of color components. Uses ICC profile if /N is invalid.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getColorSpaceType,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getColorSpaceType(),469,489,"/**
 * Returns the color space type based on ICC profile or alternate color space.
 */","* Returns the type of the color space in the ICC profile. If the ICC profile is invalid, the
     * type of the alternate colorspace is returned, which will be one of
     * {@link ColorSpace#TYPE_GRAY TYPE_GRAY}, {@link ColorSpace#TYPE_RGB TYPE_RGB},
     * {@link ColorSpace#TYPE_CMYK TYPE_CMYK}, or -1 if that one is invalid.
     *
     * @return an ICC color space type. See {@link ColorSpace#getType()} and the static values of
     * {@link ColorSpace} for more details.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRawImage(java.awt.image.WritableRaster),217,238,"/**
 * Converts a writable raster to a BufferedImage, handling sRGB colorspaces.
 * @param raster WritableRaster to convert. Returns null if not sRGB.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getNumberOfComponents(),51,55,"/**
* Returns the number of components in the color space.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGB(float[]),121,137,"/**
 * Converts a CIE LAB color value to an RGB float array.
 * @param value CIE LAB color value array [L, a, b]
 * @return RGB float array
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,isGrayImage,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:isGrayImage(java.awt.image.BufferedImage),118,133,"/**
 * Checks if an image is grayscale based on its properties.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getAlphaImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getAlphaImage(java.awt.image.BufferedImage),281,302,"/**
 * Extracts the alpha channel from an image.
 * Returns null if no alpha exists or an error occurs.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorImage(java.awt.image.BufferedImage),416,438,"/**
 * Converts a BufferedImage to RGB, removing alpha if present.
 * Returns the converted image or the original if already RGB.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getJPEGImageWriter,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getJPEGImageWriter(),331,349,"/**
* Retrieves a suitable JPEG ImageWriter.
* Throws IOException if no compatible writer is found.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorSpaceFromAWT,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorSpaceFromAWT(java.awt.image.BufferedImage),387,413,"/**
 * Converts an AWT BufferedImage's color space to a PDF color space.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",289,335,"/**
 * Initializes the predictor encoder with document and image data.
 * Sets up internal buffers and parameters based on image properties.
 */",* Initialize the encoder and set all final fields,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterUp,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterUp(int,int)",669,673,"/**
 * Applies the PNG filter up. Delegates to pngFilterSub.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHint,"org.apache.pdfbox.rendering.GroupGraphics:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)",528,531,"/**
* Sets a rendering hint on both group and alpha G2D objects.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,scaleImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:scaleImage(java.awt.image.BufferedImage,int,int,int,boolean)",762,796,"/**
 * Scales an image to the specified width and height.
 * @param image The image to scale.
 * @param width The new width.
 * @param height The new height.
 * @param type The image type.
 * @param interpolate Whether to interpolate.
 * @return Scaled BufferedImage.
 */
",* High-quality image scaling.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)",176,182,"/**
 * Draws an image onto the screen.
 * @param img Image to draw.
 * @param observer Observer for image loading.
 * @return True if image is complete, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImage.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.image.PDImage:getCOSObject(),250,251,"/**
 * Returns the COS dictionary associated with this object.
 */","* Convert this image to a COS object.
     *
     * @return The cos object that matches this image object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:<init>(),490,494,"/**
 * Represents a combined stream from multiple input streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,readPNGFloat,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:readPNGFloat(byte[],int)",752,756,"/**
 * Converts an integer from a byte array to a float.
 * @param bytes byte array containing the integer
 * @param offset starting offset in the byte array
 * @return float value derived from the integer
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,crc,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:crc(byte[],int,int)",933,936,"/**
 * Calculates the CRC checksum of a byte array.
 * @param buf byte array to calculate CRC on
 * @param offset start offset in the array
 * @param len number of bytes to process
 * @return calculated CRC value
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:<clinit>(),63,96,"/**
 * Initializes the CRC table using the reference implementation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaint,org.apache.pdfbox.rendering.GroupGraphics:setPaint(java.awt.Paint),519,524,"/**
 * Sets the paint for both groupG2D and alphaG2D.
 * @param paint The Paint object to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRect(int,int,int,int)",254,259,"/**
 * Fills a rectangle with the specified dimensions at (x, y).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:dispose(),158,163,"/**
* Releases resources held by this object.
* Sets axialShadingType to null after disposal.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:dispose(),163,168,"/**
* Releases resources held by this object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:dispose(),84,89,"/**
* Releases resources held by this object.
* Sets type1ShadingType to null.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:getRaster(int,int,int,int)",165,251,"/**
* Creates a raster for the specified region.
* @param x, y top-left corner, w width, h height.
* @return WritableRaster containing the raster data.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:getRaster(int,int,int,int)",91,157,"/**
 * Creates a raster image based on specified coordinates and dimensions.
 * @param x, y top-left corner, w width, h height
 * @return WritableRaster containing the generated image data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getFlag1Edge,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getFlag1Edge(),134,138,"/**
 * Returns a copy of the control points for the flag1 edge.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,getPoints,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:getPoints(int),58,82,"/**
 * Generates an array of Point2D objects using Bezier curve.
 * @param l determines the number of points to generate.
 * @return Array of Point2D objects representing the curve.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:calcPixelTableArray(java.awt.Rectangle),62,73,"/**
 * Calculates and populates the pixel table array.
 * @param deviceBounds Rectangle defining the device bounds.
 * @return int[][] Pixel table array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:calcPixelTableArray(java.awt.Rectangle),60,74,"/**
 * Calculates pixel table array based on device bounds and patches.
 * @param deviceBounds Rectangle defining the device boundaries.
 * @return int[][] pixel table array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
 * Calculates the bounding rectangle of triangles.
 * @param xform AffineTransform, Matrix - used for triangle processing.
 * @return Rectangle2D representing the bounds, or empty rect.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.Patch:<init>(float[][]),46,49,"/**
 * Copies the input color array to the cornerColor field.
 * @param color 2D float array representing colors.
 */
","* Constructor of Patch.
     *
     * @param color 4 corner's colors",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",228,231,"/**
 * Checks if two points are approximately equal.
 * @param p0 The first point.
 * @param p1 The second point.
 * @return True if points are close, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",203,206,"/**
 * Checks if two points are approximately equal.
 * @param p0 The first point.
 * @param p1 The second point.
 * @return True if points are nearly equal, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getArea,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getArea(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",220,224,"/**
 * Calculates the area of a triangle defined by three points.
 * @param a, b, c Points defining the triangle's vertices.
 * @return The area of the triangle.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,removeZeroLengthSegments,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:removeZeroLengthSegments(java.awt.geom.Point2D$Double[]),955,994,"/**
* Removes duplicate points from a polygon within a tolerance.
* @param polygon array of Point2D.Double representing polygon
* @return new Point2D.Double array with duplicates removed
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,clonedPoint2DArray,org.apache.pdfbox.pdmodel.graphics.shading.Patch:clonedPoint2DArray(java.awt.geom.Point2D[]),233,241,"/**
 * Creates a new array with copies of Point2D objects from input.
 * @param input The array of Point2D objects to clone.
 * @return A new array containing cloned Point2D objects.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,calcLevel,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:calcLevel(),67,148,"/**
* Calculates the subdivision level based on control point configurations.
* Returns an int array representing the subdivision levels.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:getRaster(int,int,int,int)",174,201,"/**
 * Extracts a raster region from the image.
 * @param x, y, w, h defines the region to extract.
 * @return WritableRaster containing the extracted region.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDTextState:clone(),221,233,"/**
 * Creates and returns a clone of this PDTextState object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,"org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Path2D,boolean)",592,605,"/**
 * Adds a path to the clipping paths, cloning if requested.
 * @param path Path to add; cloned if clonePath is true.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getCurrentClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getCurrentClippingPath(),622,653,"/**
 * Returns the current clipping path, caching if only one exists.
 */","* This will get the current clipping path. Do not modify this Area object!
     *
     * @return The current clipping path.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,fromString,org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:fromString(java.lang.String),47,59,"/**
 * Returns the RenderingIntent matching the given string value.
 * Returns RELATIVE_COLORIMETRIC if no match is found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$TextAttribute:<init>(java.lang.String),116,119,"/**
 * Constructs a TextAttribute with the given name.
 * @param name The name of the text attribute.
 */
","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.util.List),82,86,"/**
 * Initializes PlainText with a list of string parts.
 * @param listValue List of strings to create paragraphs from.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$1:<clinit>(),171,171,"/**
* Sets text alignment based on the provided value.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,valueOf,org.apache.pdfbox.pdmodel.interactive.TextAlign:valueOf(int),35,45,"/**
 * Returns the TextAlign corresponding to the given integer value.
 * @param alignment integer representing the alignment
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo$1:<clinit>(),151,151,"/**
* Performs actions based on the value of the input.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch$1:<clinit>(),234,234,"/**
* Performs actions based on the 'value' using a switch statement.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo$1:<clinit>(),141,141,"/**
* Performs actions based on the 'value' using a switch statement.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,hashCode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:hashCode(),221,225,"/**
 * Generates a hash code based on the dictionary field.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getMatrix(),175,178,"/**
 * Returns an AffineTransform representing a translation.
 * Translates by (-bboxMinX, -bboxMinY).
 */
","* Returns the <code>Matrix</code> entry for the appearance stream form XObject.
     *
     * @return Matrix for appearance stream form XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsPolygon,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsPolygon(double,double,double,double,double,double[])",398,423,"/**
 * Calculates polygon parameters: number of curls (n), angle (alpha), dx.
 * @param advInterm Intermediate curl length.
 * @param array Parameter array to store results.
 * @return Number of intermediate curls (n).
 */
","* Computes parameters for a cloudy polygon: n, alpha, and dx.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsEllipse(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double,double)",942,951,"/**
 * Calculates the angle between two points, handling zero distance.
 * @param r Radius used in angle calculation.
 * @return Angle in radians, or 0.0 if out of acos domain.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getPositivePolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getPositivePolygon(java.awt.geom.Point2D$Double[]),557,562,"/**
* Ensures polygon direction is correct by reversing if needed.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,flattenEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:flattenEllipse(double,double,double,double)",705,738,"/**
 * Flattens an ellipse into an array of points.
 * @param left, bottom, right, top Ellipse boundary coordinates.
 * @return Array of Point2D.Double representing the flattened ellipse.
 */
",* Flattens an ellipse into a polygon.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,updateBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:updateBBox(double,double)",1021,1027,"/**
 * Updates the bounding box minimum/maximum x/y coordinates.
 * @param x The x coordinate.
 * @param y The y coordinate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createShortStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createShortStyles(),434,443,"/**
 * Creates a set of short style names for line annotations.
 * Returns a Set<String> containing predefined style names.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createInteriorColorStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createInteriorColorStyles(),445,454,"/**
 * Returns a set of interior line style names.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createAngledStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createAngledStyles(),456,466,"/**
 * Creates a set of angled line style constants.
 * Returns a Set<String> containing the angled style values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isRectangular,org.apache.pdfbox.rendering.PageDrawer:isRectangular(java.awt.geom.GeneralPath),888,940,"/**
 * Checks if a path is rectangular, containing only lines and moves.
 */",* Returns true if the given path is rectangular.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(java.io.InputStream,int[])",38,42,"/**
 * Creates a COSFilterInputStream, filtering bytes based on a range.
 * @param in The input stream.
 * @param byteRange Array of byte range boundaries.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,nextRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:nextRange(),99,120,"/**
* Advances to the next range in the ranges array.
* Returns true if successful, false otherwise.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getTemplateHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getTemplateHeight(),393,396,"/**
* Returns the height of the template, same as the page height.
*/","* 
     * @return template height",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAffineTransform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAffineTransform(java.awt.geom.AffineTransform),165,170,"/**
 * Sets the affine transform for the PDF structure.
 * @param affineTransform The affine transform to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createVisualSignature(org.apache.pdfbox.pdmodel.PDDocument),382,387,"/**
* Creates a visual signature within the provided PDF document.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,coordinates,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:coordinates(float,float)",300,305,"/**
* Sets the x and y coordinates for the sign designer.
* @param x The x-coordinate.
* @param y The y-coordinate.
* @return The current PDVisibleSignDesigner instance.
*/
","*
     * @param x - x coordinate
     * @param y - y coordinate
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,transform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:transform(java.awt.geom.AffineTransform),477,481,"/**
 * Transforms the designer using the given affine transform.
 * @param affineTransform The transformation to apply.
 * @return The transformed designer (this).
 */
","* 
     * @param affineTransform the affine transformation
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,requireSingleNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),105,111,"/**
 * Checks if the provided node is a single node with no siblings.
 */","* @param node
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,children,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:children(),310,313,"/**
 * Returns an Iterable of child outline items.
 */",* @return An {@link Iterable} view of the items children,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByValue,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByValue(java.util.List),102,104,"/**
 * Sorts the pairs collection using the BY_VALUE_COMPARATOR.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByKey,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByKey(java.util.List),112,114,"/**
 * Sorts the pairs collection using the BY_KEY_COMPARATOR.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:<clinit>(),32,34,"/**
* Defines a comparator for KeyValue objects, comparing by value.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getValueAsString(),85,89,"/**
 * Returns the value as a String. Delegates to getValue().
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getValueAsString(),251,255,"/**
 * Returns the value as a string. Delegates to getValue().
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<clinit>,org.apache.pdfbox.printing.PDFPageable$1:<clinit>(),214,214,"/**
* Switches based on the given orientation value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getTransform,org.apache.pdfbox.rendering.GroupGraphics:getTransform(),472,476,"/**
* Returns the transform of the associated group.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(double,double)",568,573,"/**
 * Translates the group and alpha contexts by the given amounts.
 * @param tx The amount to translate along the x-axis.
 * @param ty The amount to translate along the y-axis.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,scale,"org.apache.pdfbox.rendering.GroupGraphics:scale(double,double)",498,503,"/**
 * Scales the group and alpha transforms by the given factors.
 * @param sx The scaling factor for the x-axis.
 * @param sy The scaling factor for the y-axis.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setTransform,org.apache.pdfbox.rendering.GroupGraphics:setTransform(java.awt.geom.AffineTransform),547,552,"/**
* Sets the transform for both groupG2D and alphaG2D.
* @param tx The AffineTransform to set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,"org.apache.pdfbox.rendering.GroupGraphics:setClip(int,int,int,int)",298,303,"/**
* Sets the clip region for both groupG2D and alphaG2D.
* @param x, y clip region's top-left corner
* @param width, height clip region's dimensions
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setColor,org.apache.pdfbox.rendering.GroupGraphics:setColor(java.awt.Color),312,317,"/**
 * Sets the color for both groupG2D and alphaG2D.
 * @param c The new color to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setStroke,org.apache.pdfbox.rendering.GroupGraphics:setStroke(java.awt.Stroke),540,545,"/**
 * Sets the stroke for both group and alpha G2D renderers.
 * @param s The new stroke to apply.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D)",72,79,"/**
 * Initializes the GroupGraphics object with provided image and graphics.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D,java.awt.image.BufferedImage,java.awt.Graphics2D)",81,88,"/**
 * Initializes GroupGraphics with provided images and graphics contexts.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clipRect,"org.apache.pdfbox.rendering.GroupGraphics:clipRect(int,int,int,int)",97,102,"/**
* Clips the rectangle defined by (x,y,w,h) for both group and alpha.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,copyArea,"org.apache.pdfbox.rendering.GroupGraphics:copyArea(int,int,int,int,int,int)",104,109,"/**
* Copies an area from one region to another.
* @param x, y source area origin
* @param width, height source area dimensions
* @param dx, dy destination area origin
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawArc,"org.apache.pdfbox.rendering.GroupGraphics:drawArc(int,int,int,int,int,int)",132,137,"/**
 * Draws an arc on both groupG2D and alphaG2D.
 * @param x x coordinate of arc
 * @param y y coordinate of arc
 * @param width width of arc
 * @param height height of arc
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)",139,144,"/**
 * Draws an image at specified coordinates with a background color.
 * @param img The image to draw.
 * @param x X coordinate.
 * @param y Y coordinate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",153,159,"/**
 * Draws an image at specified coordinates with given dimensions.
 * @param img Image to draw.
 * @param x, y Coordinates.
 * @param width, height Dimensions.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)",161,166,"/**
* Draws an image at specified coordinates with given dimensions.
* @param img Image to draw.
* @param x, y Coordinates.
* @param width, height Dimensions.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",168,174,"/**
* Draws an image onto the graphics context.
* @param img Image to draw, observer for image loading.
* @return True if image is complete, false otherwise.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawLine,"org.apache.pdfbox.rendering.GroupGraphics:drawLine(int,int,int,int)",184,189,"/**
* Draws a line between (x1, y1) and (x2, y2) on both groups.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawOval,"org.apache.pdfbox.rendering.GroupGraphics:drawOval(int,int,int,int)",191,196,"/**
* Draws an oval using both groupG2D and alphaG2D.
* @param x x-coordinate of the oval's top-left corner.
* @param y y-coordinate of the oval's top-left corner.
* @param width width of the oval.
* @param height height of the oval.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolygon,"org.apache.pdfbox.rendering.GroupGraphics:drawPolygon(int[],int[],int)",198,203,"/**
 * Draws a polygon using provided coordinates.
 * @param xPoints X coordinates of the polygon's vertices.
 * @param yPoints Y coordinates of the polygon's vertices.
 * @param nPoints Number of vertices in the polygon.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolyline,"org.apache.pdfbox.rendering.GroupGraphics:drawPolyline(int[],int[],int)",205,210,"/**
* Draws a polyline using both groupG2D and alphaG2D.
* @param xPoints x coordinates of the polyline points.
* @param yPoints y coordinates of the polyline points.
* @param nPoints number of points in the polyline.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:drawRoundRect(int,int,int,int,int,int)",212,217,"/**
 * Draws a rounded rectangle using both groupG2D and alphaG2D.
 * @param x, y, width, height, arcWidth, arcHeight Rectangle parameters.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,int,int)",219,224,"/**
* Draws the given string at the specified coordinates.
* @param iterator Character iterator containing the string.
* @param x X coordinate.
* @param y Y coordinate.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,int,int)",226,231,"/**
* Draws a string at the specified coordinates.
* @param str The string to draw.
* @param x The x-coordinate.
* @param y The y-coordinate.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillArc,"org.apache.pdfbox.rendering.GroupGraphics:fillArc(int,int,int,int,int,int)",233,238,"/**
 * Fills an arc using both groupG2D and alphaG2D.
 * @param x x-coordinate of the arc
 * @param y y-coordinate of the arc
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillOval,"org.apache.pdfbox.rendering.GroupGraphics:fillOval(int,int,int,int)",240,245,"/**
 * Fills an oval shape at specified coordinates with given dimensions.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillPolygon,"org.apache.pdfbox.rendering.GroupGraphics:fillPolygon(int[],int[],int)",247,252,"/**
 * Fills a polygon defined by x and y coordinates.
 * @param xPoints x coordinates of the polygon's vertices.
 * @param yPoints y coordinates of the polygon's vertices.
 * @param nPoints number of vertices in the polygon.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRoundRect(int,int,int,int,int,int)",261,266,"/**
* Fills a rounded rectangle with specified dimensions and arc sizes.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClip,org.apache.pdfbox.rendering.GroupGraphics:getClip(),268,272,"/**
* Returns the clip shape of the group.
* Delegates to the group's getClip() method.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClipBounds,org.apache.pdfbox.rendering.GroupGraphics:getClipBounds(),274,278,"/**
* Returns the clip bounds of the group.
* Delegates to the group's clip bounds.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getColor,org.apache.pdfbox.rendering.GroupGraphics:getColor(),280,284,"/**
 * Returns the color of the group.
 * @return Color object representing the group's color.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFont,org.apache.pdfbox.rendering.GroupGraphics:getFont(),286,290,"/**
 * Returns the font used for rendering.
 * Delegates to the group's font.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontMetrics,org.apache.pdfbox.rendering.GroupGraphics:getFontMetrics(java.awt.Font),292,296,"/**
 * Returns the font metrics for the given font.
 * @param f The font to get metrics for.
 * @return FontMetrics object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,org.apache.pdfbox.rendering.GroupGraphics:setClip(java.awt.Shape),305,310,"/**
* Sets the clip shape for both groupG2D and alphaG2D.
* @param clip The Shape object to be used as the clip.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setFont,org.apache.pdfbox.rendering.GroupGraphics:setFont(java.awt.Font),319,324,"/**
 * Sets the font for both groupG2D and alphaG2D.
 * @param font The Font object to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaintMode,org.apache.pdfbox.rendering.GroupGraphics:setPaintMode(),326,331,"/**
* Sets the paint mode for both groupG2D and alphaG2D.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setXORMode,org.apache.pdfbox.rendering.GroupGraphics:setXORMode(java.awt.Color),333,338,"/**
* Sets the XOR mode for both groupG2D and alphaG2D.
* @param c1 The color to use for XOR mode.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(int,int)",340,345,"/**
 * Translates the group and alpha contexts by the given x, y.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,addRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:addRenderingHints(java.util.Map),349,352,"/**
* Applies rendering hints to both group and alpha G2D objects.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setRenderingHints,org.apache.pdfbox.rendering.PageDrawer:setRenderingHints(),256,259,"/**
 * Adds rendering hints to the graphics context.
 */",* Sets high-quality rendering hints on the current Graphics2D.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clip,org.apache.pdfbox.rendering.GroupGraphics:clip(java.awt.Shape),354,359,"/**
* Clips the group and alpha composites using the provided shape.
* @param s The shape to use for clipping.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,draw,org.apache.pdfbox.rendering.GroupGraphics:draw(java.awt.Shape),361,366,"/**
* Draws the given shape using both groupG2D and alphaG2D.
* @param s The shape to be drawn.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawGlyphVector,"org.apache.pdfbox.rendering.GroupGraphics:drawGlyphVector(java.awt.font.GlyphVector,float,float)",368,373,"/**
* Draws a GlyphVector at specified coordinates.
* @param g the GlyphVector to draw
* @param x the x coordinate
* @param y the y coordinate
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)",375,380,"/**
* Draws an image with an operation at a specified coordinate.
* @param img The image to draw.
* @param op The image operation to apply.
* @param x The x coordinate.
* @param y The y coordinate.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)",382,387,"/**
* Draws an image using both groupG2D and alphaG2D.
* @param img Image to draw. @param xform Transform to apply.
* @param obs ImageObserver for image loading status.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderableImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)",389,394,"/**
* Draws a RenderableImage using both groupG2D and alphaG2D.
* @param img RenderableImage to draw
* @param xform AffineTransform to apply
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderedImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)",396,401,"/**
* Draws a rendered image with an affine transform.
* Draws the image using both groupG2D and alphaG2D.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,float,float)",403,408,"/**
 * Draws the given string at the specified coordinates.
 * @param iterator Character iterator containing the string to draw.
 * @param x X coordinate for drawing.
 * @param y Y coordinate for drawing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,float,float)",410,415,"/**
* Draws the given string at the specified coordinates.
* @param str The string to draw.
* @param x The x-coordinate.
* @param y The y-coordinate.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fill,org.apache.pdfbox.rendering.GroupGraphics:fill(java.awt.Shape),417,422,"/**
* Fills the shape with both group and alpha renderers.
* @param s The shape to be filled.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getBackground,org.apache.pdfbox.rendering.GroupGraphics:getBackground(),424,428,"/**
 * Returns the background color of the group.
 * Delegates to the group's background color.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getComposite,org.apache.pdfbox.rendering.GroupGraphics:getComposite(),430,434,"/**
 * Returns the composite object associated with this group.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getDeviceConfiguration,org.apache.pdfbox.rendering.GroupGraphics:getDeviceConfiguration(),436,440,"/**
* Returns the device configuration from the group G2D.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontRenderContext,org.apache.pdfbox.rendering.GroupGraphics:getFontRenderContext(),442,446,"/**
 * Returns the FontRenderContext of the Graphics2D object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getPaint,org.apache.pdfbox.rendering.GroupGraphics:getPaint(),448,452,"/**
* Returns the paint of the group.
* Delegates to the group's paint.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHint,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHint(java.awt.RenderingHints$Key),457,457,"/**
* Retrieves a rendering hint value from the Graphics2D object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHints(),460,464,"/**
* Returns the rendering hints of the associated Graphics2D object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getStroke,org.apache.pdfbox.rendering.GroupGraphics:getStroke(),466,470,"/**
* Returns the stroke of the group.
* Delegates to the group's stroke.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,hit,"org.apache.pdfbox.rendering.GroupGraphics:hit(java.awt.Rectangle,java.awt.Shape,boolean)",478,482,"/**
 * Delegates hit test to the group's G2D.
 * @param rect Rectangle for hit test.
 * @param s Shape to hit test against.
 * @param onStroke Whether to hit on stroke.
 * @return True if hit, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,org.apache.pdfbox.rendering.GroupGraphics:rotate(double),484,489,"/**
 * Rotates the group and alpha transforms by the given angle.
 * @param theta Rotation angle in radians.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,"org.apache.pdfbox.rendering.GroupGraphics:rotate(double,double,double)",491,496,"/**
 * Rotates the groupG2D and alphaG2D objects by theta around (x, y).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setComposite,org.apache.pdfbox.rendering.GroupGraphics:setComposite(java.awt.Composite),512,517,"/**
* Sets the composite operation for both group and alpha G2D.
* @param comp The composite operation to set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:setRenderingHints(java.util.Map),535,538,"/**
* Sets rendering hints for both groupG2D and alphaG2D.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,shear,"org.apache.pdfbox.rendering.GroupGraphics:shear(double,double)",554,559,"/**
* Applies a shear transformation to both group and alpha G2D.
* @param shx Shear factor in x direction.
* @param shy Shear factor in y direction.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,transform,org.apache.pdfbox.rendering.GroupGraphics:transform(java.awt.geom.AffineTransform),561,566,"/**
 * Applies the given affine transform to both group and alpha.
 * @param tx The AffineTransform to apply.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isBitonal,org.apache.pdfbox.rendering.PDFRenderer:isBitonal(java.awt.Graphics2D),484,502,"/**
 * Checks if the display mode is bitonal (1-bit color depth).
 * @param graphics Graphics2D object to get device configuration
 * @return True if bitonal, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,create2ByteGrayAlphaImage,"org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:create2ByteGrayAlphaImage(int,int)",1940,1962,"/**
 * Creates a BufferedImage with gray + alpha bands.
 * @param width image width
 * @param height image height
 * @return BufferedImage with gray + alpha bands.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showType3Glyph,"org.apache.pdfbox.rendering.PageDrawer:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",577,587,"/**
* Shows Type3 glyph, calling super if rendering mode isn't NEITHER.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustImage,org.apache.pdfbox.rendering.PageDrawer:adjustImage(java.awt.image.BufferedImage),656,679,"/**
 * Adjusts the input image using an affine transform and scaling.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endPath,org.apache.pdfbox.rendering.PageDrawer:endPath(),1011,1015,"/**
 * Resets the current line path to its initial state.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,curveTo,"org.apache.pdfbox.rendering.PageDrawer:curveTo(float,float,float,float,float,float)",993,997,"/**
 * Adds a cubic Bézier curve to the path.
 * @param x1, y1 control point 1, x2, y2 control point 2, x3, y3 end point
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getCurrentPoint,org.apache.pdfbox.rendering.PageDrawer:getCurrentPoint(),999,1003,"/**
 * Returns the current point of the line path.
 * Delegates to the underlying line path's getCurrentPoint().
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustClip,org.apache.pdfbox.rendering.PageDrawer:adjustClip(java.awt.geom.GeneralPath),1030,1072,"/**
 * Adjusts the clip path based on the graphics transform.
 * Returns the adjusted path or the original if no adjustment needed.
 */
","* PDFBOX-5715 / PR#73: This was added to fix a problem with missing fine lines when printing
     * on MacOS. Lines vanish because CPrinterJob sets graphics scale to 1 for Printable so after
     * scaling lines often have a width smaller than 1 after scaling and clipping. This change
     * enlarges the clip bounds to cover at least 1 point plus 0.5 on one and another side in the
     * device space to allow to draw the linePath inside the clip. The linePath can consists from
     * different lines but when its bounds width or height is less than 1.0 it seems safe to use a
     * rectangle as a clip instead of the real path. A more detailed explanation can be read
     * <a href=""https://github.com/apache/pdfbox/pull/173"">here</a>.
     *
     * @param linePath
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getSubsampling,"org.apache.pdfbox.rendering.PageDrawer:getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)",1273,1294,"/**
 * Calculates subsampling factor based on image size and transform.
 * @param pdImage Image object
 * @param at Affine transform
 * @return Subsampling factor.
 */
","* Calculates the subsampling frequency for a given PDImage based on the current transformation
     * and its calculated transform. Extend this method if you want to use your own strategy.
     *
     * @param pdImage PDImage to be drawn
     * @param at Transform that will be applied to the image when drawing
     * @return The rounded-down ratio of image pixels to drawn pixels. Returned value will always be
     * &gt;=1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getInvLookupTable,org.apache.pdfbox.rendering.PageDrawer:getInvLookupTable(),2290,2302,"/**
 * Returns the inverse lookup table. Creates it if it's null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,getRaster,"org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:getRaster(int,int,int,int)",131,212,"/**
 * Retrieves a raster section, potentially applying a transfer function.
 * @param x1, y1, w, h raster section coordinates and dimensions.
 * @return WritableRaster containing the processed raster data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,dispose,org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:dispose(),214,218,"/**
 * Releases resources held by this object. Delegates to context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,ceiling,org.apache.pdfbox.rendering.TilingPaint:ceiling(double),185,190,"/**
 * Rounds a double up to the nearest integer.
 * @param num the double to round
 * @return the rounded integer value
 */
","* Returns the closest integer which is larger than the given number.
     * Uses BigDecimal to avoid floating point error which would cause gaps in the tiling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,equals,org.apache.pdfbox.text.TextPosition:equals(java.lang.Object),901,970,"/**
* Checks if two TextPosition objects are equal based on their fields.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,org.apache.pdfbox.rendering.TilingPaintFactory:<init>(org.apache.pdfbox.rendering.PageDrawer),48,51,"/**
 * Constructs a TilingPaintFactory with the given PageDrawer.
 * @param drawer The PageDrawer used for drawing tiles.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXRot,org.apache.pdfbox.text.TextPosition:getXRot(float),293,312,"/**
 * Calculates X rotation based on given rotation value.
 * @param rotation Rotation angle in degrees.
 * @return X coordinate for given rotation.
 */
","* Return the X starting coordinate of the text, adjusted by the given rotation amount.
     * The rotation adjusts where the 0,0 location is relative to the text.
     *
     * @param rotation Rotation to apply (0, 90, 180, or 270).  0 will perform no adjustments.
     * @return X coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYLowerLeftRot,org.apache.pdfbox.text.TextPosition:getYLowerLeftRot(float),356,375,"/**
 * Calculates the Y coordinate of the lower-left corner based on rotation.
 * @param rotation Rotation angle in degrees.
 * @return Y coordinate.
 */
","* This will get the y position of the character with 0,0 in lower left.
     * This will be adjusted by the given rotation.
     *
     * @param rotation Rotation to apply to text to adjust the 0,0 location (0,90,180,270)
     * @return The y coordinate of the text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthRot,org.apache.pdfbox.text.TextPosition:getWidthRot(float),426,436,"/**
 * Gets the width based on rotation.
 * @param rotation Rotation angle in degrees.
 * @return Width value as a float.
 */
","* Get the length or width of the text, based on a given rotation.
     *
     * @param rotation Rotation that was used to determine coordinates (0,90,180,270)
     * @return Width of text in display units",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeCharacters,org.apache.pdfbox.text.PDFTextStripper:writeCharacters(org.apache.pdfbox.text.TextPosition),821,824,"/**
* Writes Unicode characters to the output stream.
* @param text TextPosition object containing Unicode characters.
* @throws IOException if an I/O error occurs.
*/
","* Write the string in TextPosition to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,toString,org.apache.pdfbox.text.TextPosition:toString(),840,844,"/**
 * Returns the Unicode representation of the object.
 */
","* Show the string data for this text position.
     *
     * @return A human readable form of this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,getTextForRegion,org.apache.pdfbox.text.PDFTextStripperByArea:getTextForRegion(java.lang.String),101,105,"/**
 * Retrieves text content for a specified region.
 * @param regionName Name of the region to fetch text from.
 * @return Text content of the region, or null if not found.
 */
","* Get the text for the region, this should be called after extractRegions().
     *
     * @param regionName The name of the region to get the text from.
     * @return The text that was identified in that region.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(boolean),442,445,"/**
 * Writes the article start tag to the output stream.
 * @param isLTR Flag indicating right-to-left text direction.
 * @throws IOException if an I/O error occurs.
 */
","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead).
     * Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @param isLTR true if primary direction of text is left to right.
     * @throws IOException If there is any error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endArticle,org.apache.pdfbox.text.PDFTextStripper:endArticle(),452,455,"/**
 * Writes the article end tag to the output stream.
 */","* End an article. Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,overlap,"org.apache.pdfbox.text.PDFTextStripper:overlap(float,float,float,float)",762,766,"/**
 * Checks if two rectangles overlap, given their positions & heights.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLineSeparator,org.apache.pdfbox.text.PDFTextStripper:writeLineSeparator(),800,803,"/**
 * Writes a line separator to the output stream.
 */","* Write the line separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the line separator to the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeWordSeparator,org.apache.pdfbox.text.PDFTextStripper:writeWordSeparator(),810,813,"/**
 * Writes the word separator character to the output stream.
 */","* Write the word separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the word separator to the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphStart,org.apache.pdfbox.text.PDFTextStripper:writeParagraphStart(),1712,1721,"/**
 * Writes the start of a paragraph to the output stream.
 * Handles paragraph ending if already in a paragraph.
 */
","* Write something (if defined) at the start of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageStart,org.apache.pdfbox.text.PDFTextStripper:writePageStart(),1743,1746,"/**
 * Writes the HTML page start tag to the output stream.
 */","* Write something (if defined) at the start of a page.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageEnd,org.apache.pdfbox.text.PDFTextStripper:writePageEnd(),1753,1756,"/**
 * Writes the end tag of the page to the output stream.
 */","* Write something (if defined) at the end of a page.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchPattern,"org.apache.pdfbox.text.PDFTextStripper:matchPattern(java.lang.String,java.util.List)",1840,1848,"/**
* Finds the first pattern that matches the input string.
* @param string The string to match against patterns.
* @return The matching Pattern, or null if no match.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleDirection,org.apache.pdfbox.text.PDFTextStripper:handleDirection(java.lang.String),1907,1971,"/**
 * Handles bidirectional text directionality for a given word.
 * @param word The input string to process for directionality.
 * @return The processed string with mirrored characters.
 */","* Handles the LTR and RTL direction of the given words. The whole implementation stands and falls with the given
     * word. If the word is a full line, the results will be the best. If the word contains of single words or
     * characters, the order of the characters in a word or words in a line may wrong, due to RTL and LTR marks and
     * characters!
     * 
     * Based on http://www.nesterovsky-bros.com/weblog/2013/07/28/VisualToLogicalConversionInJava.aspx
     * 
     * @param word The word that shall be processed
     * @return new word with the correct direction of the containing characters",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,parseBidiFile,org.apache.pdfbox.text.PDFTextStripper:parseBidiFile(java.io.InputStream),1996,2034,"/**
 * Parses a Bidi file from the input stream, populating MIRRORING_CHAR_MAP.
 */","* This method parses the bidi file provided as inputstream.
     * 
     * @param inputStream - The bidi file as inputstream
     * @throws IOException if any line could not be read by the LineNumberReader",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getVisuallyOrderedUnicode,org.apache.pdfbox.text.TextPosition:getVisuallyOrderedUnicode(),188,208,"/**
 * Returns the visually ordered Unicode string, reversing if needed.
 */","* Same as {@link #getUnicode()} except that returned text is ensured to be
     * visually ordered (i.e. same order you would see them displayed on screen when
     * looking from left to right). This is important for Arabic/Hebrew where several
     * unicode characters can be composed in one glyph with logical order (the order
     * in which it would be normally typed from right to left).
     * 
     * @return The string on the screen in visual order.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripperByArea:processTextPosition(org.apache.pdfbox.text.TextPosition),136,147,"/**
 * Processes a text position, checking if it's within a region.
 * If so, calls superclass method.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,isDiacritic,org.apache.pdfbox.text.TextPosition:isDiacritic(),813,833,"/**
 * Checks if the character is a diacritic mark.
 * Returns true if it's a non-spacing mark/modifier.
 */",* @return True if the current character is a diacritic char.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,formatTZoffset,"org.apache.pdfbox.util.DateConverter:formatTZoffset(long,java.lang.String)",286,292,"/**
 * Formats a timestamp to a timezone offset string.
 * @param millis Timestamp in milliseconds.
 * @param sep Separator string.
 * @return Timezone offset string.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTimeField,"org.apache.pdfbox.util.DateConverter:parseTimeField(java.lang.String,java.text.ParsePosition,int,int)",307,337,"/**
 * Parses an integer from the input string, respecting maxlen.
 * @param text String to parse, remedy value if parsing fails.
 * @param where ParsePosition to update index.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipOptionals,"org.apache.pdfbox.util.DateConverter:skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)",349,360,"/**
 * Skips optional characters in text.
 * @param text String to parse.
 * @param where ParsePosition to update.
 * @param optionals Characters to skip.
 * @return Last skipped character.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipString,"org.apache.pdfbox.util.DateConverter:skipString(java.lang.String,java.lang.String,java.text.ParsePosition)",370,378,"/**
 * Skips a string prefix in the text, updating the parse position.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,newGreg,org.apache.pdfbox.util.DateConverter:newGreg(),388,394,"/**
 * Creates and initializes a new GregorianCalendar with UTC timezone.
 * @return A new GregorianCalendar instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,adjustTimeZoneNicely,"org.apache.pdfbox.util.DateConverter:adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)",402,408,"/**
 * Adjusts the calendar to account for timezone offset.
 * @param cal GregorianCalendar to adjust.
 * @param tz TimeZone to use for adjustment.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,updateZoneId,org.apache.pdfbox.util.DateConverter:updateZoneId(java.util.TimeZone),482,509,"/**
 * Updates the TimeZone ID based on its raw offset.
 */","* Update the zone ID based on the raw offset. This is either GMT, GMT+hh:mm or GMT-hh:mm, where
     * n is between 1 and 14. The highest negative hour is -14, the highest positive hour is 12.
     * Zones that don't fit in this schema are set to zone ID ""unknown"".
     *
     * @param tz the time zone to update.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte),53,57,"/**
 * Converts a byte to its hexadecimal string representation.
 */","* Returns a hex string of the given byte.
     * 
     * @param b the byte to be converted
     * @return the hex string representing the given byte",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte[]),65,73,"/**
 * Converts a byte array to a hexadecimal string representation.
 */
","* Returns a hex string of the given byte array.
     * 
     * @param bytes the bytes to be converted
     * @return the hex string representing the given bytes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte),81,84,"/**
 * Converts a byte to its hexadecimal byte array representation.
 */","* Returns the bytes corresponding to the ASCII hex encoding of the given byte.
     * 
     * @param b the byte to be converted
     * @return the ASCII hex encoding of the given byte",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte[]),92,101,"/**
 * Converts a byte array to its hexadecimal string representation.
 * @param bytes The byte array to convert.
 * @return Hexadecimal byte array.
 */
","* Returns the bytes corresponding to the ASCII hex encoding of the given bytes.
     * 
     * @param bytes the bytey to be converted
     * @return the ASCII hex encoding of the given bytes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexByte,"org.apache.pdfbox.util.Hex:writeHexByte(byte,java.io.OutputStream)",156,160,"/**
 * Writes a byte as two hex characters to the output stream.
 * @param b The byte to write.
 * @param output The output stream to write to.
 */
","* Writes the given byte as hex value to the given output stream.
     * @param b the byte to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeBase64,org.apache.pdfbox.util.Hex:decodeBase64(java.lang.String),207,211,"/**
 * Decodes a Base64 encoded string.
 * @param base64Value The Base64 encoded string to decode.
 * @return Decoded byte array.
 */
","* Decode a base64 String.
     *
     * @param base64Value a base64 encoded String.
     *
     * @return the decoded String as a byte array.
     *
     * @throws IllegalArgumentException if this isn't a base64 encoded string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,merge,"org.apache.pdfbox.util.IterativeMergeSort:merge(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)",115,146,"/**
* Merges a portion of the array into a temporary array.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(java.awt.geom.AffineTransform),122,132,"/**
 * Initializes the Matrix with values from an AffineTransform.
 * @param at The AffineTransform to use for initialization.
 */
","* Creates a matrix with the same elements as the given AffineTransform.
     * @param at matrix elements will be initialize with the values from this affine transformation, as follows:
     *
     *           scaleX shearY 0
     *           shearX scaleY 0
     *           transX transY 1
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(java.awt.geom.Point2D),324,335,"/**
 * Transforms a point using a predefined matrix.
 * @param point The Point2D object to transform.
 */
","* Transforms the given point by this matrix.
     *
     * @param point point to transform",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toString,org.apache.pdfbox.util.Matrix:toString(),578,588,"/**
 * Returns a string representation of the object's data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,hashCode,org.apache.pdfbox.util.Matrix:hashCode(),590,594,"/**
 * Calculates the hash code based on the 'single' array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,formatFloatFast,"org.apache.pdfbox.util.NumberFormatUtil:formatFloatFast(float,int,byte[])",75,115,"/**
 * Formats a float value to an ASCII byte array with maxFractionDigits.
 * @param value float value to format
 * @param maxFractionDigits max fraction digits
 * @param asciiBuffer buffer to store formatted value
 * @return offset in asciiBuffer, or -1 if formatting fails.
 */
","* Fast variant to format a floating point value to a ASCII-string. The format will fail if the
     * value is greater than {@link Long#MAX_VALUE}, smaller or equal to {@link Long#MIN_VALUE}, is
     * {@link Float#NaN}, infinite or the number of requested fraction digits is greater than
     * {@link #MAX_FRACTION_DIGITS}.
     * 
     * When the number contains more fractional digits than {@code maxFractionDigits} the value will
     * be rounded. Rounding is done to the nearest possible value, with the tie breaking rule of 
     * rounding away from zero.
     * 
     * @param value The float value to format
     * @param maxFractionDigits The maximum number of fraction digits used
     * @param asciiBuffer The output buffer to write the formatted value to
     *
     * @return The number of bytes used in the buffer or {@code -1} if formatting failed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,splitOnSpace,org.apache.pdfbox.util.StringUtil:splitOnSpace(java.lang.String),25,28,"/**
 * Splits the input string by spaces using a predefined pattern.
 * @param s The string to split.
 * @return An array of strings resulting from the split.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,getVersion,org.apache.pdfbox.util.Version:getVersion(),48,62,"/**
 * Reads PDFBox version from properties file.
 * @return PDFBox version string or null if error.
 */
","* Returns the version of PDFBox.
     * 
     * @return the version of PDFBox",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,"org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream,boolean)",69,91,"/**
 * Parses an XML document from an input stream.
 * @param is Input stream containing the XML document.
 * @param nsAware Whether to parse with namespace awareness.
 * @return Document object representing the parsed XML.
 */
","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @param nsAware activates namespace awareness of the parser
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,find,org.apache.pdfbox.util.filetypedetector.ByteTrie:find(byte[]),70,88,"/**
 * Retrieves a value from the trie based on the provided byte array.
 * @param bytes byte array representing the key
 * @return Value associated with the key, or null if not found
 */
","* Return the most specific value stored for this byte sequence. If not found, returns
     * <code>null</code> or a default values as specified by calling
     * {@link ByteTrie#setDefaultValue}.
     * @param bytes
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Constructs a DrawObject with the given PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes a Color object with the given PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a NonStrokingColorSpace with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Constructs a StrokingColorSpace with the given PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/GraphicsOperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.GraphicsOperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
 * Constructs a GraphicsOperatorProcessor with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes a BeginMarkedContentSequence with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
* Initializes a BeginMarkedContentSequence with the given context.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),46,49,"/**
 * Constructs a DrawObject with the provided PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs an EndMarkedContentSequence with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs a MarkedContentPoint with the given PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Constructs a MarkedContentPointWithProperties.
* @param context PDFStreamEngine context for operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,<init>,org.apache.pdfbox.contentstream.operator.state.Concatenate:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
* Constructs a Concatenate object, initializing the context.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,<init>,org.apache.pdfbox.contentstream.operator.state.Restore:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs a Restore object, initializing it with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,<init>,org.apache.pdfbox.contentstream.operator.state.Save:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),34,37,"/**
 * Constructs a Save object, passing the PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetFlatness:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a SetFlatness object with a PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),42,45,"/**
* Initializes a SetGraphicsStateParameters object.
* @param context The PDFStreamEngine context.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a LineCapStyle object with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
* Constructs a SetLineDashPattern object, passing the context.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Constructs a LineJoinStyle object with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a SetLineMiterLimit object with a PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineWidth:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a SetLineWidth object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetMatrix:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a SetMatrix object, initializing the parent class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Constructs a SetRenderingIntent object with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,<init>,org.apache.pdfbox.contentstream.operator.text.BeginText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a BeginText object, passing the PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,<init>,org.apache.pdfbox.contentstream.operator.text.EndText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs an EndText object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
 * Constructs a MoveText object with the given PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
* Constructs a MoveTextSetLeading object.
* @param context The PDFStreamEngine context.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.NextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a NextLine object with the given PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new CharSpacing object with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),45,48,"/**
 * Initializes a SetFontAndSize object with a PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a TextHorizontalScaling object with a PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a SetTextLeading object with a PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a TextRenderingMode with the given PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRise:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Constructor for SetTextRise.
* Initializes the object with a PDFStreamEngine context.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes a SetWordSpacing object with a PDFStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a ShowText object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a ShowTextAdjusted object with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a ShowTextLine object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Constructs a ShowTextLineAndSpace object, passing the context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,<init>,org.apache.pdfbox.cos.COSBoolean:<init>(boolean),55,58,"/**
* Initializes a COSBoolean object with the given boolean value.
*/
","* Constructor.
     *
     * @param aValue The boolean value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,<init>,org.apache.pdfbox.cos.COSName:<init>(java.lang.String),716,719,"/**
 * Initializes a COSName object with the given name.
 * @param aName The name for the COSName object.
 */
","* Private constructor. This will limit the number of COSName objects that are created.
     * 
     * @param aName The name of the COSName object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,<init>,org.apache.pdfbox.cos.COSNull:<init>(),42,45,"/**
 * Private constructor to prevent instantiation of COSNull.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,<init>,org.apache.pdfbox.cos.COSNumber:<init>(),26,26,"/**
 * Abstract base class for representing numerical values in COS.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(byte[],boolean)",76,80,"/**
 * Creates a COSString with given bytes.
 * @param bytes The byte array representing the string.
 * @param forceHex Whether to force hex representation.
 */
","* Creates a new PDF string from a byte array. This method can be used to read a string from an existing PDF file,
     * or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,"org.apache.pdfbox.cos.COSArray:<init>(java.util.ArrayList,boolean)",71,76,"/**
 * Constructs a COSArray with the given objects and direct flag.
 * @param cosObjects Array of COSBase objects.
 * @param direct Direct flag for the array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(),63,66,"/**
 * Initializes a new COSDictionary object with an update state.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase),45,50,"/**
* Constructs a COSObject with a base COSBase object.
* @param object The base COSBase object for this COSObject.
*/
","* Constructor.
     *
     * @param object The object that this encapsulates.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.ICOSParser)",72,78,"/**
 * Constructs a COSObject with a base object and parser.
 * @param object The base COSBase object.
 * @param parser The parser for the COS object.
 */
","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param parser The parser to be used to load the object on demand
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.ICOSParser)",87,92,"/**
 * Constructs a COSObject with a key and parser.
 * @param key COSObjectKey identifying the object
 * @param parser ICOSParser for parsing the object
 */
","* Constructor.
     *
     * @param key The object number of the encapsulated object.
     * @param parser The parser to be used to load the object on demand
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<init>,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:<init>(),524,526,"/**
* Creates a new Tree with an empty root node.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,int)",528,558,"/**
 * Fills the trie up to the given depth, creating nodes as needed.
 * @param depth Depth to fill to.
 * @param path Path to follow.
 * @param value Value to set for leaf nodes.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node)",560,590,"/**
 * Fills the trie structure up to the specified depth with a node.
 * @param depth Depth to fill to.
 * @param path Path to follow.
 * @param node Node to insert at the end.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<clinit>,org.apache.pdfbox.filter.CCITTFaxEncoderStream:<clinit>(),290,324,"/**
 * Initializes white and black Huffman codes based on CCITTFaxDecoderStream data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:<init>(boolean),223,226,"/**
 * Initializes FinalDecodeOptions, setting the filterSubsampled flag.
 * @param filterSubsampled Whether to filter subsampled data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,"org.apache.pdfbox.filter.DecodeOptions:<init>(int,int,int,int)",69,72,"/**
 * Constructs DecodeOptions with specified rectangle dimensions.
 * @param x x-coordinate of rectangle.
 * @param y y-coordinate of rectangle.
 * @param width rectangle width.
 * @param height rectangle height.
 */
","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param x x-coordinate of the top-left corner of the region to be decoded
     * @param y y-coordinate of the top-left corner of the region to be decoded
     * @param width Width of the region to be decoded
     * @param height Height of the region to be decoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from8bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",461,551,"/**
 * Creates a BufferedImage from a PDImage, handling subsampling and clipping.
 * @param pdImage source image
 * @param raster writable raster
 * @param clipped rectangle to clip
 * @return BufferedImage object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,decode,"org.apache.pdfbox.filter.ASCIIHexFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",66,105,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream containing encoded data.
 * @param decoded Output stream to write decoded data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,decode,"org.apache.pdfbox.filter.IdentityFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,40,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream to decode from.
 * @param decoded Output stream to decode to.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,decode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",36,75,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream containing encoded data.
 * @param decoded Output stream to write decoded data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,<init>,org.apache.pdfbox.filter.ASCII85Filter:<init>(),29,29,"/**
 * Extends Filter for ASCII85 encoding/decoding.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,<init>,org.apache.pdfbox.filter.ASCIIHexFilter:<init>(),33,33,"/**
* Extends Filter to convert characters to ASCII hex representation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,<init>,org.apache.pdfbox.filter.CCITTFaxFilter:<init>(),35,35,"/**
 * Extends Filter to handle CCITT fax data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,<init>,org.apache.pdfbox.filter.CryptFilter:<init>(),30,30,"/**
 * Extends Filter for cryptographic filtering operations.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,<init>,org.apache.pdfbox.filter.DCTFilter:<init>(),51,51,"/**
 * Extends Filter; implements discrete cosine transform filtering.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,<init>,org.apache.pdfbox.filter.FlateFilter:<init>(),33,33,"/**
* Extends Filter to provide zlib Flate compression/decompression.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,<init>,org.apache.pdfbox.filter.IdentityFilter:<init>(),30,30,"/**
 * Filters requests, allowing all identities. Extends Filter.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,<init>,org.apache.pdfbox.filter.JBIG2Filter:<init>(),46,46,"/**
* Extends Filter, providing JBIG2 filtering capabilities.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,<init>,org.apache.pdfbox.filter.JPXFilter:<init>(),56,56,"/**
* Extends Filter; provides image filtering functionality.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,<init>,org.apache.pdfbox.filter.LZWFilter:<init>(),41,41,"/**
 * Implements Lempel-Ziv-Welch (LZW) compression/decompression.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,<init>,org.apache.pdfbox.filter.RunLengthDecodeFilter:<init>(),32,32,"/**
 * Decodes a run-length encoded character stream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.FreeXReference:<init>(org.apache.pdfbox.cos.COSObjectKey,long)",41,46,"/**
 * Creates a FreeXReference object.
 * @param key COSObjectKey - the key of the free object
 * @param nextFreeObject Next free object identifier.
 */
","* Sets the given {@link COSObjectKey} as a free reference in a PDF's crossreference stream ({@link PDFXRefStream}).
     *
     * @param key The key, that shall be set as the free reference of the document.
     * @param nextFreeObject The object number of the next free object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:<init>(int,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",46,54,"/**
 * Constructs an ObjectStreamXReference with given parameters.
 * @param objectStreamIndex Stream index
 * @param key COSObjectKey
 * @param object COSBase object
 * @param parentKey COSObjectKey parent
 */
","* Prepares a object stream entry reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param objectStreamIndex The index of the {@link COSObject} in the containing object stream.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.
     * @param parentKey The {@link COSObjectKey} of the object stream, that is containing the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(),31,34,"/**
 * Default constructor, initializes with default settings.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Creates a PDTypedDictionaryWrapper from a COSDictionary.
 * @param dictionary The COSDictionary to wrap.
 */
","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDAttributeObject from a COSDictionary.
 * @param dictionary The COSDictionary containing attribute data.
 */
","* Creates a new attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject)",50,55,"/**
 * Constructs a PDUserProperty with a COSDictionary and user attribute.
 */","* Creates a user property with a given dictionary.
     * 
     * @param dictionary the dictionary
     * @param userAttributeObject the user attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDOutlineNode using the provided COSDictionary.
 */",* @param dict The dictionary storage.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Creates a PDTransition object from a COSDictionary.
 * @param dictionary The COSDictionary containing transition data.
 */
","* creates a new transition for an existing dictionary
     * 
     * @param dictionary the dictionary to be used for the new transition",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Creates a PDDestinationNameTreeNode from a COSDictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDEmbeddedFilesNameTreeNode from a COSDictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDJavascriptNameTreeNode from a COSDictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDStructureElementNameTreeNode from a COSDictionary.
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),234,237,"/**
 * Creates a child node with the given COSDictionary.
 * @param dic The COSDictionary for the new node.
 * @return A new PDNumberTreeNode instance.
 */
","* Create a child node object.
     *
     * @param dic The dictionary for the child node object to refer to.
     * @return The new child node object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.cos.COSStream),71,74,"/**
 * Constructs a PDMetadata object from a COSStream.
 */","* Constructor. This will <b>not</b> set up the /Type and /Subtype entries.
     *
     * @param str The stream parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDObjectStream:<init>(org.apache.pdfbox.cos.COSStream),40,43,"/**
 * Constructs a PDObjectStream from a COSStream.
 * @param str The COSStream to use for initialization.
 */
","* Constructor.
     *
     * @param str The stream parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.cos.COSStream),49,52,"/**
 * Constructs a PDEmbeddedFile from a COSStream object.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunction:<init>(org.apache.pdfbox.cos.COSBase),53,64,"/**
 * Initializes the PDFunction with a COSBase object.
 * Handles COSStream and COSDictionary types.
 */","* Constructor.
     *
     * @param function The function stream.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentStream,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentStream(),71,74,"/**
 * Returns a new PDStream object wrapping the internal character stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)",98,104,"/**
 * Creates a PDXObject from a COSStream and subtype.
 * @param stream The COSStream containing the object data.
 * @param subtype The subtype of the XObject.
 */
","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentStream(),152,155,"/**
 * Returns the content stream as a PDStream object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentStream(),169,172,"/**
 * Returns the content stream as a PDStream object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:<init>(org.apache.pdfbox.cos.COSString),45,48,"/**
 * Creates a PDSimpleFileSpecification with the given file name.
 * @param fileName The name of the file.
 */
","* Constructor.
     *
     * @param fileName The file that this spec represents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$And:<init>(),70,70,"/**
* Represents the logical AND operation. Extends AbstractLogicalOperator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Or:<init>(),150,150,"/**
* Represents the OR logical operator, extending AbstractLogicalOperator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Xor:<init>(),180,180,"/**
* Represents the XOR logical operator. Extends AbstractLogicalOperator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ge:<init>(),84,84,"/**
* Implements the greater-than-or-equal-to comparison operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Gt:<init>(),96,96,"/**
* Implements the greater-than comparison operator. Extends AbstractNumberComparisonOperator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Le:<init>(),108,108,"/**
* Implements the ""less than or equal to"" comparison operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Lt:<init>(),120,120,"/**
* Implements the less than or equal to comparison operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:<init>(),132,132,"/**
* Inner class Ne extending Eq, likely for specific functionality.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs a PDStructureElement from a COSDictionary.
 * @param dic The COSDictionary to use for initialization.
 */
","* Constructor for an existing structure element.
     *
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
 * Creates a PDStructureTreeRoot object from a COSDictionary.
 * @param dic The COSDictionary containing the structure tree data.
 */
","* Constructor for an existing structure element.
     * 
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,<init>,"org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:<init>(java.security.KeyStore,java.lang.String,java.lang.String)",58,63,"/**
 * Initializes PublicKeyDecryptionMaterial with keystore, alias, and password.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardDecryptionMaterial.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardDecryptionMaterial:<init>(java.lang.String),42,45,"/**
 * Initializes a StandardDecryptionMaterial with the provided password.
 * @param pwd The password to use for decryption.
 */
","* Create a new standard decryption material with the given password.
     *
     * @param pwd The password.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:<init>(),68,70,"/**
 * Default constructor for PublicKeyProtectionPolicy.
 */",* Creates a new PublicKeyProtectionPolicy with an empty recipients list.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardProtectionPolicy.java,<init>,"org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy:<init>(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.AccessPermission)",52,58,"/**
 * Constructs a StandardProtectionPolicy with passwords and permissions.
 * @param ownerPassword Owner's password.
 * @param userPassword User's password.
 * @param permissions Access permissions for the policy.
 */
","* Creates an new instance of the standard protection policy
     * in order to protect a PDF document with passwords.
     *
     * @param ownerPassword The owner password.
     * @param userPassword The user password.
     * @param permissions The access permissions given to the user.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(),118,120,"/**
 * Private constructor to prevent direct instantiation of SecurityHandler.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),127,131,"/**
* Constructs a SecurityHandler with a given protection policy.
* @param protectionPolicy Policy for encryption key length.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a FDFAnnotationCaret with the given COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Constructs a FDF annotation circle from a COSDictionary.
*/
","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a FDFAnnotationFileAttachment from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
 * Constructs a FDFAnnotationFreeText object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs a FDFAnnotationInk object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
* Constructs a FDFAnnotationLine object from a COSDictionary.
*/
","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a FDFAnnotationLink from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a FDFAnnotationPolygon from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a FDFAnnotationPolyline from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a FDFAnnotationSound object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),55,58,"/**
 * Constructs a FDFAnnotationSquare from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Constructs a FDFAnnotationStamp with the given COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a FDFAnnotationText object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a FDFAnnotationTextMarkup object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),27,30,"/**
 * Constructs an AcroFormDefaultFixup with a PDDocument.
 * @param document The document to associate with this fixup.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),41,44,"/**
 * Constructs an AcroFormDefaultsProcessor with a PDDocument.
 * @param document The document to process.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),31,34,"/**
 * Initializes the processor with the provided PDF document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),55,58,"/**
 * Constructs an AcroFormOrphanWidgetsProcessor for the given document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDFontMapping.java,<init>,"org.apache.pdfbox.pdmodel.font.CIDFontMapping:<init>(org.apache.fontbox.ttf.OpenTypeFont,org.apache.fontbox.FontBoxFont,boolean)",33,37,"/**
 * Creates a CIDFontMapping with an OpenTypeFont and FontBoxFont.
 * @param font The OpenType font.
 * @param fontBoxFont The FontBox font.
 * @param isFallback Fallback indicator.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName),96,99,"/**
 * Constructs a FontType with only the type specified.
 * @param type The font type COSName.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:<init>(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String,org.apache.pdfbox.pdmodel.font.CIDSystemInfo,int,int,int,int,int,byte[],org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,java.lang.String,long)",86,105,"/**
 * Initializes a new FSFontInfo instance with the provided data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,getPanose,org.apache.pdfbox.pdmodel.font.PDPanose:getPanose(),63,67,"/**
 * Extracts and creates a PDPanoseClassification from bytes.
 */","* Ten bytes for the PANOSE classification number for the font.
     * 
     * @see <a href=""http://www.monotype.com/services/pan1"">http://www.monotype.com/services/pan1</a>
     * 
     * @return the PANOSE classification number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,createContext,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:createContext(java.awt.image.ColorModel,java.awt.image.ColorModel,java.awt.RenderingHints)",86,91,"/**
 * Creates a composite context for blending colors.
 * @param srcColorModel Source color model.
 * @param dstColorModel Destination color model.
 * @param hints Rendering hints.
 * @return BlendCompositeContext object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,getInstance,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:getInstance(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",51,75,"/**
 * Creates a Composite instance based on blendMode and alpha.
 * @param blendMode BlendMode to use.
 * @param constantAlpha Alpha value between 0 and 1.
 */
","* Creates a blend composite
     *
     * @param blendMode Desired blend mode
     * @param constantAlpha Constant alpha, must be in the inclusive range
     * [0.0...1.0] or it will be clipped.
     * @return a blend composite.
     * @throws IllegalArgumentException if blendMode is null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getGroup,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getGroup(),128,139,"/**
 * Returns the group attributes. Lazily initializes if null.
 */","* Returns the transparency group attributes dictionary.
     *
     * @return the transparency group attributes dictionary, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDShadingPattern from a COSDictionary.
 */","* Creates a new shading pattern from the given COS dictionary.
     * @param resourceDictionary The COSDictionary for this pattern resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",84,88,"/**
 * Constructs a PDTilingPattern with a dictionary and resource cache.
 */","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.
     * @param resourceCache The resource cache, may be null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a ShadingType1 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Creates a PDShadingType2 object from a COSDictionary.
 * @param shadingDictionary The COSDictionary containing shading data.
 */
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDTriangleBasedShadingType from a COSDictionary.
 * @param shadingDictionary The shading dictionary to use.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,org.apache.pdfbox.util.Matrix)",45,48,"/**
 * Constructs an AxialShadingPaint with a shading type and matrix.
 */","* Constructor.
     *
     * @param shadingType2 the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,org.apache.pdfbox.util.Matrix)",46,49,"/**
* Initializes a RadialShadingPaint with a shading and matrix.
*/","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Initializes a Type1ShadingPaint with a shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,org.apache.pdfbox.util.Matrix)",44,47,"/**
* Initializes a Type4ShadingPaint with a shading and matrix.
*/","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type5ShadingPaint with the given shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Initializes a Type6ShadingPaint with a shading and matrix.
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,org.apache.pdfbox.util.Matrix)",46,49,"/**
* Initializes a Type7ShadingPaint with a shading and matrix.
*/
","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs a PDExtendedGraphicsState with a COSDictionary.
 * @param dictionary The COSDictionary to initialize from.
 */
","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary),106,109,"/**
 * Constructs a PDSoftMask with a COSDictionary.
 * @param dictionary The COSDictionary containing mask data.
 */
","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.lang.String),51,72,"/**
 * Creates a PlainText object from a string.
 * @param textValue The text to be parsed into paragraphs.
 */
","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,build,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:build(),121,124,"/**
 * Creates and returns a new PlainTextFormatter instance.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs a PDActionEmbeddedGoTo object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionGoTo object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDActionHide object from a COSDictionary.
 */","* Constructor
     *
     * @param a the action dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDActionImportData object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDActionJavaScript object from a COSDictionary.
 */","* Constructor #2.
     *
     *  @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionLaunch object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Creates a PDActionMovie object from a COSDictionary.
 * @param a The COSDictionary containing movie data.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDActionNamed object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Constructs a PDActionRemoteGoTo object from a COSDictionary.
*/
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDActionResetForm from a COSDictionary.
 * @param a The COSDictionary containing form data.
 */
","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionSound object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a PDActionSubmitForm with the given COSDictionary.
 */","* Constructor
     *
     * @param a the action dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionThread with the given COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionURI object from a COSDictionary.
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAppearanceDictionary,"org.apache.pdfbox.pdmodel.PDDocument:assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",614,620,"/**
 * Sets the appearance dictionary for the annotation widget.
 * @param firstWidget The annotation widget.
 * @param apDict The appearance dictionary.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Constructor for a PDAbstractAppearanceHandler, using annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",44,47,"/**
 * Constructs a PDCaretAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Constructs a PDCircleAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",43,46,"/**
 * Constructs a PDFileAttachmentAppearanceHandler.
 * @param annotation The annotation associated with the handler.
 * @param document The document containing the annotation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",66,69,"/**
 * Creates a PDFreeTextAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",48,51,"/**
 * Creates a PDHighlightAppearanceHandler for annotation/document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",42,45,"/**
 * Creates an InkAppearanceHandler for a given annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",46,49,"/**
 * Creates a PDLineAppearanceHandler for a given annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Creates a PDLinkAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Creates a PDPolygonAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",45,48,"/**
 * Creates a PDPolylineAppearanceHandler.
 * @param annotation The annotation object.
 * @param document The document object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",28,31,"/**
 * Constructs a PDSoundAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Constructs a PDSquareAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",52,55,"/**
 * Constructs a SquigglyAppearanceHandler for a PDAnnotation.
 * @param annotation The PDAnnotation to handle.
 * @param document The document containing the annotation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Creates a strikeout appearance handler for an annotation.
 * @param annotation The annotation to handle.
 * @param document The document containing the annotation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,79,"/**
 * Creates a PDTextAppearanceHandler with annotation and document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Constructs a PDUnderlineAppearanceHandler.
 * @param annotation The annotation object.
 * @param document The document object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:<init>(),61,65,"/**
 * Initializes a PDVisibleSigBuilder with a new PDFTemplateStructure.
 */","* Constructor, creates PDF template structure.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(org.apache.pdfbox.cos.COSString),39,42,"/**
* Initializes a PDNamedDestination with the provided destination string.
* @param dest COSString representing the named destination.
*/
","* Constructor.
     *
     * @param dest The named destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(org.apache.pdfbox.cos.COSName),49,52,"/**
 * Constructs a NamedDestination with the given destination name.
 * @param dest The COSName representing the destination.
 */
","* Constructor.
     *
     * @param dest The named destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(),57,60,"/**
 * Default constructor. Performs no action.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:<init>(org.apache.pdfbox.cos.COSArray),53,56,"/**
 * Initializes a PDPageDestination with the provided COS array.
 * @param arr The COS array containing destination data.
 */
","* Constructor to create empty page destination.
     *
     * @param arr A page destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toKeyValueList,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:toKeyValueList(java.util.List,java.util.List)",87,93,"/**
 * Combines keys and values into a List of KeyValue objects.
 * @param key List of keys
 * @param value List of values
 * @return List of KeyValue objects
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
 * Constructs a PDNonTerminalField with parent and field.
 * @param acroForm The parent PDAcroForm.
 * @param field The COSDictionary representing the field.
 * @param parent The parent PDNonTerminalField.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
 * Constructs a PDTerminalField with given parameters.
 * @param acroForm The PDF acroform.
 * @param field The COS dictionary representing the field.
 * @param parent The parent non-terminal field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDRectlinearMeasureDictionary from a COSDictionary.
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,createContext,"org.apache.pdfbox.rendering.SoftMask:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",101,108,"/**
 * Creates a paint context, wrapping the original with a SoftPaintContext.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<clinit>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<clinit>(),2139,2139,"/**
 * Creates a LineItem representing a word separator.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMatrix,org.apache.pdfbox.pdmodel.PDPage:getMatrix(),387,392,"/**
 * Creates and returns a new Matrix object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,clone,org.apache.pdfbox.util.Matrix:clone(),443,447,"/**
 * Creates a deep copy of the Matrix object.
 * Returns a new Matrix with a cloned single array.
 */
","* Clones this object.
     * @return cloned matrix as an object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getFontMatrix(),168,203,"/**
 * Returns the font matrix, retrieving from cidFont or t1Font.
 * Returns a default matrix if unavailable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getFontMatrix(),185,194,"/**
 * Returns the font matrix. Creates a default matrix if null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDFont:<clinit>(),51,53,"/**
* Defines a logger and default font matrix for PDF font handling.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1CFont:getFontMatrix(),312,341,"/**
 * Gets the font matrix from the generic font or returns default.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1Font:getFontMatrix(),662,693,"/**
 * Gets the font matrix, using default if unavailable.
 * Returns the cached matrix or the superclass's matrix.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScaleInstance,"org.apache.pdfbox.util.Matrix:getScaleInstance(float,float)",388,391,"/**
 * Creates a scale matrix with specified x and y scaling factors.
 */","* Convenience method to create a scaled instance.
     *
     * Produces the following matrix:
     * x 0 0
     * 0 y 0
     * 0 0 1
     *
     * @param x The xscale operator.
     * @param y The yscale operator.
     * @return A new matrix with just the x/y scaling",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getTranslateInstance,"org.apache.pdfbox.util.Matrix:getTranslateInstance(float,float)",405,408,"/**
 * Creates a translation matrix with the given x and y offsets.
 */","* Convenience method to create a translating instance.
     *
     * Produces the following matrix:
     * 1 0 0
     * 0 1 0
     * x y 1
     *
     * @param x The x translating operator.
     * @param y The y translating operator.
     * @return A new matrix with just the x/y translating.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getRotateInstance,"org.apache.pdfbox.util.Matrix:getRotateInstance(double,float,float)",418,424,"/**
 * Creates a rotation matrix with specified angle and translation.
 * @param theta Rotation angle in radians.
 * @param tx Translation along x-axis.
 * @param ty Translation along y-axis.
 * @return Rotation matrix.
 */
","* Convenience method to create a rotated instance.
     *
     * @param theta The angle of rotation measured in radians
     * @param tx The x translation.
     * @param ty The y translation.
     * @return A new matrix with the rotation and the x/y translating.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(org.apache.pdfbox.util.Vector),363,374,"/**
 * Transforms a vector using a predefined matrix.
 * @param vector The vector to transform.
 * @return The transformed vector.
 */
","* Transforms the given vector by this matrix.
     *
     * @param vector 2D vector
     *
     * @return the transformed vector.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,scale,org.apache.pdfbox.util.Vector:scale(float),60,63,"/**
 * Scales the vector by a factor.
 * @param sxy Scaling factor.
 * @return New vector with scaled components.
 */
","* Returns a new vector scaled by both x and y.
     *
     * @param sxy x and y scale
     * @return a new vector scaled by both x and y",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacExpertEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:<init>(),206,212,"/**
 * Initializes the MacExpertEncoding with data from the table.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:<init>(),254,260,"/**
 * Initializes MacRomanEncoding by iterating through the encoding table.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/StandardEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:<init>(),194,200,"/**
 * Initializes standard encodings from the predefined table.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:<init>(),230,236,"/**
 * Initializes the symbol encoding table from SYMBOL_ENCODING_TABLE.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:<init>(),48,50,"/**
 * Default constructor for the Type1Encoding class.
 */",* Creates an empty encoding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:<init>(org.apache.fontbox.afm.FontMetrics),57,63,"/**
 * Initializes encoding with character metrics from FontMetrics.
 */","* Creates an encoding from the given AFM font metrics.
     *
     * @param fontMetrics AFM font metrics.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/WinAnsiEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:<init>(),264,280,"/**
 * Initializes WinAnsiEncoding with entries from table and fills gaps.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:<init>(),229,235,"/**
* Initializes the Zapf Dingbats encoding table from a predefined table.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(),33,36,"/**
 * Default constructor, uses DEFAULT_OBJECT_STREAM_SIZE.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldTree,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldTree(),429,432,"/**
 * Creates and returns a PDFieldTree representing this form's fields.
 */","* Return the field tree representing all form fields
     * 
     * @return the field tree representing all form fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,isEmpty,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:isEmpty(),931,935,"/**
 * Checks if the PDF document is empty.
 * Returns true if the document length is 0, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setDefaultValue,org.apache.pdfbox.util.filetypedetector.ByteTrie:setDefaultValue(java.lang.Object),122,124,"/**
* Sets the root node's value to the provided default value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:<init>(),35,38,"/**
 * Initializes the builder by pushing the main sequence onto the stack.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObject(int),66,69,"/**
 * Retrieves an object from the list at the specified index.
 * @param index Index of the object to retrieve.
 * @return The object at the given index.
 */
","* Returns the object at the specified position.
     * 
     * @param index the position
     * @return the object
     * @throws IndexOutOfBoundsException if the index is out of range",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,size,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:size(),115,118,"/**
 * Returns the number of objects in this collection.
 */","* Returns the size.
     * 
     * @return the size",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumber(int),78,81,"/**
* Gets the revision number at the specified index.
* @param index index of the revision number to retrieve
* @return the revision number at the given index
*/
","* Returns the revision number at the specified position.
     * 
     * @param index the position
     * @return the revision number
     * @throws IndexOutOfBoundsException if the index is out of range",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,addObject,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:addObject(java.lang.Object,int)",90,93,"/**
* Adds an object and its revision number to the lists.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,setRevisionNumber,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:setRevisionNumber(java.lang.Object,int)",102,108,"/**
 * Sets the revision number for a given object.
 * @param object The object to update.
 * @param revisionNumber The new revision number.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,parsePNGChunks,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:parsePNGChunks(byte[]),765,891,"/**
 * Parses PNG chunks from image data and returns a state object.
 * @param imageData byte array containing PNG image data
 * @return PNGConverterState object or null if parsing fails
 */","* Parse the PNG structure into the PNGConverterState. If we can't handle
     * something, this method will return null.
     *
     * @param imageData the byte array with the PNG data
     * @return null or the converter state with all relevant chunks",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isCIDSubtype,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:isCIDSubtype(org.apache.pdfbox.cos.COSName),106,113,"/**
 * Checks if the CID subtype matches the given subtype.
 * @param cidSubtype CID subtype to compare against.
 * @return True if subtypes match, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getInstance,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getInstance(org.apache.pdfbox.cos.COSName),42,64,"/**
 * Returns the Encoding instance for the given COS name.
 * @param name COS name to match for encoding.
 * @return Encoding instance or null if not found.
 */
","* This will get an encoding by name. May return null.
     *
     * @param name The name of the encoding to get.
     * @return The encoding that matches the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,toLongName,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:toLongName(org.apache.pdfbox.cos.COSBase),151,166,"/**
 * Maps color spaces to their device equivalents.
 * @param cs COSBase object representing a color space.
 * @return The device color space COSName or original if not a known color space.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.ResourceCache)",62,85,"/**
 * Creates a PDSoftMask from a COSBase dictionary.
 * @param dictionary COSBase object representing the mask
 * @param resourceCache Resource cache for mask creation
 * @return PDSoftMask object or null if invalid input
 */
","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * @param resourceCache Resource cache, may be null.
     * 
     * @return the newly created instance of PDSoftMask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedIndex,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedIndex(),94,106,"/**
 * Returns the index of the first visible widget, or -1 if none.
 */","* This will get the selected index.
     * <p>
     * A RadioButton might have multiple same value options which are not selected jointly if
     * they are not set in unison {@link #isRadiosInUnison()}.</p>
     * 
     * <p>
     * The method will return the first selected index or -1 if no option is selected.</p>
     * 
     * @return the first selected index or -1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.lang.String),296,299,"/**
* Adds a source file.
* @param source Path to the source file to add.
* @throws FileNotFoundException if the file does not exist.
*/
","* Add a source file to the list of files to merge.
     *
     * @param source Full path and file name of source document.
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseTrailer,org.apache.pdfbox.pdfparser.XrefParser:parseTrailer(),206,258,"/**
 * Parses the PDF trailer dictionary from the input stream.
 * Resolves the trailer and sets it in the xref trailer resolver.
 */","* This will parse the trailer from the stream and add it to the state.
     *
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(org.apache.pdfbox.filter.DecodeOptions),302,307,"/**
 * Creates an input stream for image decoding.
 * Delegates to createInputStream() for actual stream creation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getObject(org.apache.pdfbox.cos.COSObjectKey),279,282,"/**
* Retrieves a COS object from the object pool.
* @param key The key used to identify the object.
* @return The COSBase object associated with the key.
*/
","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool.
     *
     * @param key The {@link COSObjectKey} a {@link COSBase} is registered for in this compression pool.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool, if
     * such an object is contained.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),80,110,"/**
 * Executes a sequence of instructions within the given execution context.
 */","* Executes the instruction sequence.
     * @param context the execution context",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,"org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.cos.ICOSParser)",134,138,"/**
 * Constructs a COSDocument with a stream cache and parser.
 * @param streamCacheCreateFunction Creates the stream cache.
 * @param parser Parses the COS data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",917,935,"/**
 * Processes an operator with provided operands.
 * Handles exceptions and unsupported operators.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextLineMatrix(),1047,1050,"/**
 * Returns the text line matrix from the current graphics state.
 */",* @return Returns the textLineMatrix.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextLineMatrix(org.apache.pdfbox.util.Matrix),1055,1058,"/**
 * Sets the text line matrix using the graphics state.
 * @param value The new text line matrix to set.
 */
",* @param value The textLineMatrix to set.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextMatrix(),1063,1066,"/**
 * Returns the current text matrix from the graphics state.
 */",* @return Returns the textMatrix.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextMatrix(org.apache.pdfbox.util.Matrix),1071,1074,"/**
* Sets the text matrix to the provided matrix.
* @param value The new text matrix to set.
*/
",* @param value The textMatrix to set.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformWidth,org.apache.pdfbox.contentstream.PDFStreamEngine:transformWidth(float),1138,1144,"/**
 * Transforms the width based on the current transformation matrix.
 * @param width The width to transform.
 * @return The transformed width.
 */
","* Transforms a width using the CTM.
     * 
     * @param width the width to be transformed
     * 
     * @return the transformed width",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColor(),40,44,"/**
* Returns the non-stroking color from the graphics state.
*/","* Returns the non-stroking color.
     * @return The non-stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
* Sets the non-stroking color using the provided PDColor.
* @param color The PDColor to set as the non-stroking color.
*/
","* Sets the non-stroking color.
     * @param color The new non-stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColorSpace(),60,64,"/**
* Returns the color space from the graphics state.
*/","* Returns the non-stroking color space.
     * @return The non-stroking color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColor(),40,44,"/**
* Returns the current stroking color from the graphics state.
*/","* Returns the stroking color.
     * @return The stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
* Sets the stroking color using the provided PDColor object.
*/","* Sets the stroking color.
     * @param color The new stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColorSpace(),60,64,"/**
* Returns the stroking color space from the graphics state.
*/","* Returns the stroking color space.
     * @return The stroking color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRise:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,56,"/**
* Sets the text rise value from the provided COSNumber.
* @param arguments COSBase object containing the rise value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,54,"/**
 * Sets the word spacing in the graphics state from the given value.
 * @param arguments List containing the word spacing COSNumber.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,<clinit>,org.apache.pdfbox.text.TextPosition:<clinit>(),35,38,"/**
 * Creates and returns a map of diacritic marks to their replacements.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,74,"/**
 * Draws a rectangle using COSNumber operands; throws exception if insufficient operands.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",48,80,"/**
 * Draws a cubic Bezier curve using provided COSNumber operands.
 * Throws exception if fewer than 6 operands are provided.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,66,"/**
 * Draws a Bezier curve using the provided operands.
 * Requires at least 4 COSNumber operands for x, y coordinates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",48,79,"/**
 * Draws a cubic Bezier curve using provided operands.
 * @param operands List of COSNumber operands for the curve.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.LineTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",48,79,"/**
 * Draws a line segment to the specified coordinates.
 * Requires two COSNumber operands; otherwise, returns.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.MoveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,65,"/**
* Moves the graphics cursor to the specified coordinates.
* Requires two COSNumber operands; otherwise, returns.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,54,"/**
* Fills with a shading based on the first operand (COSName).
* Throws exception if operands are empty or not a COSName.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
 * Marks a content point using the first operand as a COSName.
 * @param operator The operator used.
 * @param operands List of operands.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,process,"org.apache.pdfbox.contentstream.operator.state.SetFlatness:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,56,"/**
 * Sets the flatness of the graphics state from the first operand.
 * @param operands List of COSNumber operands.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,54,"/**
* Sets line cap style based on the first argument (COSNumber).
* @param arguments List of COSNumbers, must contain a line cap value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,56,"/**
 * Sets the line join style based on the first argument.
 * @param arguments List of COSNumbers, first is the line join style.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,55,"/**
 * Sets the miter limit in the graphics state using the first argument.
 * @param arguments List of COSNumbers representing the miter limit.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineWidth:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,56,"/**
 * Sets the line width based on the first argument (COSNumber).
 * Throws exception if no arguments are provided.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,60,"/**
 * Sets character spacing from the last argument, if it's a COSNumber.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,57,"/**
 * Sets horizontal text scaling from the first argument (COSNumber).
 * Throws exception if no arguments are provided.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,56,"/**
 * Sets the text leading based on the first argument (COSNumber).
 * Throws exception if no arguments are provided.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,63,"/**
 * Sets the text rendering mode based on the first argument.
 * @param arguments List of COSBase objects; first is rendering mode value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,process,"org.apache.pdfbox.contentstream.operator.state.Restore:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Restores graphics state or throws exception if stack is empty.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawInputStream,org.apache.pdfbox.cos.COSStream:createRawInputStream(),132,156,"/**
 * Creates an InputStream for reading data from the stream.
 * Returns a RandomAccessInputStream or throws IOException.
 */","* Returns a new InputStream which reads the encoded PDF stream data. Experts only!
     * 
     * @return InputStream containing raw, encoded PDF stream data.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findImageReader,"org.apache.pdfbox.filter.Filter:findImageReader(java.lang.String,java.lang.String)",159,172,"/**
 * Finds an ImageReader for the given format name.
 * @param formatName image format name
 * @param errorCause error cause if reader is missing
 * @throws MissingImageReaderException if no reader is found
 */
","* Finds a suitable image reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findRasterReader,"org.apache.pdfbox.filter.Filter:findRasterReader(java.lang.String,java.lang.String)",182,199,"/**
 * Finds an ImageReader that can read raster data for the given format.
 * @param formatName image format name
 * @param errorCause error cause string
 * @throws MissingImageReaderException if no suitable reader is found
 */
","* Finds a suitable image raster reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,getOperator,org.apache.pdfbox.contentstream.operator.Operator:getOperator(java.lang.String),60,85,"/**
 * Retrieves an Operator object based on the provided operator string.
 */","* This is used to create/cache operators in the system.
     *
     * @param operator The operator for the system.
     *
     * @return The operator that matches the operator keyword.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toString,org.apache.pdfbox.pdmodel.common.COSArrayList:toString(),580,584,"/**
 * Returns a string representation of this COSArrayList.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<clinit>,org.apache.pdfbox.pdmodel.font.FontMapperImpl:<clinit>(),48,51,"/**
 * Initializes a static font cache. Consider alternatives for caching.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,isEdgeALine,org.apache.pdfbox.pdmodel.graphics.shading.Patch:isEdgeALine(java.awt.geom.Point2D[]),143,150,"/**
 * Checks if an edge is approximately a line segment.
 * Uses control points to evaluate edge equation values.
 */","* Whether the for control points are on a line.
     *
     * @param ctl an edge's control points, the size of ctl is 4
     * @return true when 4 control points are on a line, otherwise false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
 * Constructs a PDArtifactMarkedContent with given properties.
 * @param properties COSDictionary containing artifact properties
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,<clinit>,org.apache.pdfbox.filter.LZWFilter:<clinit>(),45,259,"/**
 * Decodes LZW encoded data.
 * @param encoded Input stream with encoded data
 * @param decoded Output stream for decoded data
 * @param parameters COSDictionary with parameters
 * @param index Index of the parameter
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftX(),215,218,"/**
* Returns the X coordinate of the lower-left corner of the rectangle.
*/
","* This will get the lower left x coordinate.
     *
     * @return The lower left x.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftY(),235,238,"/**
 * Returns the y-coordinate of the lower-left corner of the rectangle.
 */","* This will get the lower left y coordinate.
     *
     * @return The lower left y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightX(),255,258,"/**
 * Returns the x-coordinate of the rectangle's upper-right corner.
 */","* This will get the upper right x coordinate.
     *
     * @return The upper right x .",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightY(),275,278,"/**
* Returns the Y coordinate of the rectangle's upper-right corner.
*/
","* This will get the upper right y coordinate.
     *
     * @return The upper right y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFontSize(),104,108,"/**
 * Returns the font size from the font setting.
 * Returns a float representing the font size.
 */","* This will get the size of the font.
     *
     * @return The size of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,initComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:initComponents(org.apache.pdfbox.cos.COSArray),81,95,"/**
 * Extracts float values from COSArray for color components.
 * @param array COSArray containing color component values
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getR(),79,82,"/**
 * Returns the red color component as a float.
 */","* Returns the r value of the tristimulus.
     * @return the R value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getG(),97,100,"/**
* Returns the G value as a float from the values list.
*/","* Returns the g value of the tristimulus.
     * @return the g value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getB(),115,118,"/**
* Returns the value of the 'b' parameter as a float.
*/","* Returns the b value of the tristimulus.
     * @return the B value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getX(),82,85,"/**
 * Returns the X coordinate as a float from the values list.
 */","* Returns the x value of the tristimulus.
     * @return the X value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getY(),100,103,"/**
 * Returns the Y coordinate as a float.
 */","* Returns the y value of the tristimulus.
     * @return the Y value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getZ(),118,121,"/**
 * Returns the Z coordinate as a float.
 */","* Returns the z value of the tristimulus.
     * @return the Z value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,"org.apache.pdfbox.cos.COSArray:getInt(int,int)",318,330,"/**
 * Gets an integer at the given index, returns defaultValue if not found.
 */","* Get the value of the array as an integer, return the default if it does not exist.
     *
     * @param index The value of the array.
     * @param defaultValue The value to return if the value is null.
     * @return The value at the index or the defaultValue.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,"org.apache.pdfbox.cos.COSArray:getName(int,java.lang.String)",370,382,"/**
 * Gets name at index, returns default if index is out of bounds.
 */","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOf,org.apache.pdfbox.cos.COSArray:indexOf(org.apache.pdfbox.cos.COSBase),539,557,"/**
 * Finds the index of the object in the COS list.
 * @param object COSBase object to find. Returns -1 if not found.
 */
","* This will return the index of the entry or -1 if it is not found.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getFilterList,org.apache.pdfbox.cos.COSStream:getFilterList(),295,324,"/**
 * Retrieves a list of filters from COS data. Returns an empty list if no filters are found.
 */",* Returns the list of filters.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.util.List,org.apache.pdfbox.cos.COSArray)",75,85,"/**
 * Initializes a COSArrayList with a list and COSArray.
 * @param actualList The list of objects.
 * @param cosArray The COSArray to associate with the list.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:eval(float[]),87,102,"/**
 * Evaluates the function using exponential interpolation.
 * @param input Input array containing x value for exponent.
 * @return Float array of evaluated function values.
 */
","* Performs exponential interpolation
     *
     * {@inheritDoc}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(),511,525,"/**
 * Reads a character from the stream. Returns -1 if EOF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,available,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:available(),527,535,"/**
 * Returns 1 if stream is available, 0 otherwise.
 * Throws IOException if stream is not properly initialized.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(byte[],int,int)",537,551,"/**
 * Reads bytes from the stream.
 * @param b byte array to fill, off offset, len length to read
 * @return Number of bytes read, or -1 if EOF.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:<init>(org.apache.pdfbox.cos.COSArray),182,212,"/**
 * Initializes ObjectNumbers from a COSArray, extracting start/end offsets.
 * @param indexArray COSArray containing index entries.
 * @throws IOException if the array contains non-integer values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFilters(),238,250,"/**
 * Retrieves filters from the stream as a list of COSName objects.
 */","* This will get the list of filters that are associated with this stream.
     * 
     * @return A (possibly empty) list of all encoding filters to apply to this stream, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFileFilters(),358,371,"/**
 * Retrieves file filters as a list of strings.
 * Returns empty list if no filters are present.
 */
","* This will get the list of filters that are associated with this stream. The list is empty if there are none.
     * 
     * @return A list of all encoding filters to apply to this stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromBoolean,org.apache.pdfbox.pdfwriter.COSWriter:visitFromBoolean(org.apache.pdfbox.cos.COSBoolean),1180,1184,"/**
 * Writes the boolean COS object to the PDF output stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSBoolean,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSBoolean(java.io.OutputStream,org.apache.pdfbox.cos.COSBoolean)",294,298,"/**
 * Writes a COSBoolean object to the output stream, followed by a space.
 * @param output Output stream to write to
 * @param cosBoolean COSBoolean object to write
 */
","* Write the given {@link COSBoolean} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosBoolean The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromNull,org.apache.pdfbox.pdfwriter.COSWriter:visitFromNull(org.apache.pdfbox.cos.COSNull),1368,1372,"/**
 * Writes the COSNull object to the PDF output stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,write,org.apache.pdfbox.pdmodel.PDAbstractContentStream:write(java.lang.String),1503,1506,"/**
* Writes a string to the output stream, encoding as US-ASCII.
*/
","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:potentiallyNotifyChanged(java.lang.Object,java.lang.Object)",161,167,"/**
 * Notifies listeners if the entry has changed between old/new.
 */
","* Notifies the user attribute object if the user property is changed.
     * 
     * @param oldEntry old entry
     * @param newEntry new entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,size,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:size(),60,64,"/**
 * Returns the number of key-value mappings in this map.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSObject,org.apache.pdfbox.cos.COSDictionary:getCOSObject(org.apache.pdfbox.cos.COSName),535,543,"/**
 * Retrieves a COSObject associated with the given key.
 * @param key The COSName key to look up.
 * @return The COSObject or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSObject. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,"org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1204,1212,"/**
 * Retrieves a COSBase object by firstKey, or secondKey if firstKey is null.
 */","* This is a special case of getItem that takes multiple keys, it will handle the situation
     * where multiple keys could get the same value, ie if either CS or ColorSpace is used to get
     * the colorspace. This will get an object from this dictionary.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientsLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientsLength(),446,450,"/**
* Returns the number of recipients in the dictionary.
*/","* Returns the number of recipients contained in the Recipients field of the dictionary.
     *
     * @return the number of recipients contained in the Recipients field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientStringAt,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientStringAt(int),459,463,"/**
 * Gets the recipient string at the specified index.
 * @param i index of the recipient string
 * @return COSString object at the given index
 */
","* returns the COSString contained in the Recipients field at position i.
     *
     * @param i the position in the Recipients field array.
     *
     * @return a COSString object containing information about the recipient number i.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDirection(),122,130,"/**
* Gets the direction value. Returns 0 if not found.
*/","* @return the direction in which the specified transition effect shall move. It can be either a {@link COSInteger}
     * or {@link COSName#NONE}. Default to {@link COSInteger#ZERO}
     * @see PDTransitionDirection",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getMetadataKeys,org.apache.pdfbox.pdmodel.PDDocumentInformation:getMetadataKeys(),262,270,"/**
 * Returns a sorted set of metadata keys.
 */","* This will get the keys of all metadata information fields for the document.
     *
     * @return all metadata key strings.
     * @since Apache PDFBox 1.3.0",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeNames(),58,66,"/**
 * Retrieves a list of attribute names from the COS object.
 * Returns a List<String> of attribute names.
 */
","* Gets the attribute names.
     * 
     * @return the attribute names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addTrailerInfo,org.apache.pdfbox.pdfparser.PDFXRefStream:addTrailerInfo(org.apache.pdfbox.cos.COSDictionary),123,133,"/**
 * Copies specified trailer dictionary keys to the stream.
 * Filters keys: INFO, ROOT, ENCRYPT, ID, PREV.
 */","* Copy all Trailer Information to this file.
     * 
     * @param trailerDict dictionary to be added as trailer info",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),73,77,"/**
 * Constructs a COSDictionary, copying contents from another dictionary.
 */","* Copy Constructor. This will make a shallow copy of this dictionary.
     *
     * @param dict The dictionary to copy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isInfo,org.apache.pdfbox.pdfparser.BruteForceParser:isInfo(org.apache.pdfbox.cos.COSDictionary),743,757,"/**
* Checks if a COSDictionary represents info data.
* Returns true if it contains info-related keys.
*/
","* Tell if the dictionary is an info dictionary.
     * 
     * @param dictionary the dictionary to be checked
     * @return true if the given dictionary is an info dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasWidths,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasWidths(),661,664,"/**
 * Checks if the dictionary contains width information.
 */","* Returns true if widths are present in the font descriptor.
     * 
     * @return true if widths are present in the font descriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasMissingWidth(),671,674,"/**
* Checks if the dictionary contains the MISSING_WIDTH key.
*/","* Returns true if the missing widths entry is present in the font descriptor.
     * 
     * @return true if the missing widths entry is present in the font descriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,hasXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:hasXFA(),564,567,"/**
 * Checks if the dictionary contains the XFA key.
 * @return True if XFA key exists, false otherwise.
 */
","* This will tell if the AcroForm has XFA content.
     *
     * @return true if the AcroForm is an XFA form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getBruteForceParser,org.apache.pdfbox.pdfparser.COSParser:getBruteForceParser(),923,930,"/**
 * Gets the BruteForceParser instance, creating it if null.
 * @return BruteForceParser instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,nextXrefObj,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)",153,157,"/**
 * Creates and links an XrefTrailerObj to the bytePosToXrefMap.
 * @param type The type of the XrefTrailerObj.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,<init>,org.apache.pdfbox.pdfparser.XrefParser:<init>(org.apache.pdfbox.pdfparser.COSParser),64,68,"/**
* Initializes the XrefParser with a COSParser.
* @param cosParser The COSParser to use for parsing.
*/
","* Default constructor.
     *
     * @param cosParser the parser to be used to read the pdf.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,<clinit>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:<clinit>(),38,38,"/**
* Initializes the OPERATORS singleton instance.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(float[]),361,414,"/**
 * Converts colorant values to RGB, blending with existing RGB.
 * @param value colorant values; returns RGB float array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,<init>,org.apache.pdfbox.util.filetypedetector.ByteTrie:<init>(),34,60,"/**
 * Sets a value for the current trie node. Throws exception if value already exists.
 * @param value The value to set.
 * @throws IllegalStateException if value already exists.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,addPath,"org.apache.pdfbox.util.filetypedetector.ByteTrie:addPath(java.lang.Object,byte[][])",96,115,"/**
 * Inserts a value into the trie at the given byte array path.
 * @param parts byte array path
 * @param value value to insert
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectFromPool,org.apache.pdfbox.pdfparser.BaseParser:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),263,271,"/**
 * Retrieves a COS object from the document's object pool.
 * @param key The key of the object to retrieve.
 * @throws IOException if the document is null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,toString,org.apache.pdfbox.cos.COSFloat:toString(),194,198,"/**
 * Returns a string representation of this COSFloat object.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,writePDF,org.apache.pdfbox.cos.COSFloat:writePDF(java.io.OutputStream),234,237,"/**
 * Writes formatted string to the output stream as a PDF.
 * @param output Output stream to write the PDF data to.
 */
","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSArray,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSArray(java.io.OutputStream,org.apache.pdfbox.cos.COSArray)",318,334,"/**
 * Writes a COS array to the output stream.
 * @param output Output stream to write to.
 * @param cosArray COS array to write.
 */
","* Write the given {@link COSArray} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosArray The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,toIncrement,org.apache.pdfbox.cos.COSUpdateState:toIncrement(),339,342,"/**
 * Creates a new COSIncrement object using the updateInfo.
 * @return A new COSIncrement instance.
 */
","* Uses the managed {@link #updateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on the managed {@link #updateInfo}.
     * @see COSUpdateInfo
     * @see COSIncrement",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,<init>,org.apache.pdfbox.multipdf.LayerUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,71,"/**
 * Initializes LayerUtility with a PDF document and a PDFCloneUtility.
 * @param targetDoc The PDF document to operate on.
 */
","* Creates a new instance.
     * @param targetDoc the PDF document to modify",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(),91,94,"/**
 * Constructs a DefaultResourceCache with caching enabled.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,create,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:create(),47,51,"/**
 * Creates a new ResourceCache instance.
 * Returns a DefaultResourceCache with stableCacheEnabled.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isNeedToBeUpdated,org.apache.pdfbox.pdfwriter.COSWriter:isNeedToBeUpdated(org.apache.pdfbox.cos.COSBase),613,620,"/**
 * Checks if a COSBase object needs updating.
 * @param base The COSBase object to check.
 * @return True if update is needed, false otherwise.
 */
","* Convenience method, so that we get false for types that can't be updated.
     * 
     * @param base
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.fdf.FDFDocument),1602,1613,"/**
 * Writes the FDF document to the output stream.
 * @param doc The FDF document to write.
 * @throws IOException if an I/O error occurs.
 */
","* This will write the fdf document.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromInt,org.apache.pdfbox.pdfwriter.COSWriter:visitFromInt(org.apache.pdfbox.cos.COSInteger),1356,1360,"/**
* Writes a COSInteger object to the PDF output stream.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSInteger,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSInteger(java.io.OutputStream,org.apache.pdfbox.cos.COSInteger)",282,286,"/**
 * Writes a COSInteger object to the output stream, followed by a space.
 * @param output The output stream to write to.
 * @param cosInteger The COSInteger object to write.
 */
","* Write the given {@link COSInteger} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosInteger The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:hasExplicitWidth(int),479,483,"/**
 * Checks if the descendant font has an explicit width for the code.
 * @param code The character code to check.
 * @return True if the descendant font has an explicit width.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,compareTo,org.apache.pdfbox.cos.COSName:compareTo(java.lang.Object),34,34,"/**
* Represents a name in a PDF dictionary; implements Comparable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addComment(java.lang.String),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDFormContentStream:addComment(java.lang.String),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPageContentStream:addComment(java.lang.String),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPatternContentStream:addComment(java.lang.String),26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getObject,org.apache.pdfbox.cos.COSArray:getObject(int),272,284,"/**
 * Retrieves a COS object from the objects list at the given index.
 * @param index index of the object to retrieve
 * @return COSBase object or null if it's a COSNull
 */
","* This will get an object from the array.  This will dereference the object.
     * If the object is COSNull then null will be returned.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOfObject,org.apache.pdfbox.cos.COSArray:indexOfObject(org.apache.pdfbox.cos.COSBase),566,589,"/**
* Finds the index of an object in the COS object list.
* @param object COSBase object to search for.
* @return Index of the object, or -1 if not found.
*/
","* This will return the index of the entry or -1 if it is not found.
     * This method will also find references to indirect objects.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSArray:getIndirectObjectKeys(java.util.Collection),808,859,"/**
* Recursively collects indirect object keys from COS objects.
* @param indirectObjects Set to store collected COSObjectKeys.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsValue,org.apache.pdfbox.cos.COSDictionary:containsValue(java.lang.Object),86,94,"/**
* Checks if the map contains the specified value or wrapped COS object.
*/","* @see java.util.Map#containsValue(java.lang.Object)
     *
     * @param value The value to find in the map.
     *
     * @return true if the map contains this value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getKeyForValue,org.apache.pdfbox.cos.COSDictionary:getKeyForValue(java.lang.Object),102,115,"/**
 * Finds the COSName associated with the given value.
 * @param value The value to search for.
 * @return The COSName or null if not found.
 */
","* Search in the map for the value that matches the parameter and return the first key that maps to that value.
     *
     * @param value The value to search for in the map.
     * @return The key for the value in the map or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName),178,190,"/**
 * Retrieves a dictionary object by key, unwrapping COSObjects.
 * @param key the key of the dictionary object
 * @return The COSBase object or null if not found/null.
 */
","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getLinearizedDictionary,org.apache.pdfbox.cos.COSDocument:getLinearizedDictionary(),207,230,"/**
 * Retrieves the linearized dictionary from the XRef table.
 * Returns null if not found.
 */","* Get the dictionary containing the linearization information if the pdf is linearized.
     * 
     * @return the dictionary containing the linearization information",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,close,org.apache.pdfbox.cos.COSDocument:close(),440,486,"/**
 * Closes all COS streams and caches, re-throwing the first exception.
 */","* This will close all storage and delete the tmp files.
     *
     * @throws IOException If there is an error close resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,accept,org.apache.pdfbox.cos.COSObject:accept(org.apache.pdfbox.cos.ICOSVisitor),160,172,"/**
 * Accepts a visitor to process the COS object or COSNull.
 * @param visitor The visitor object to process the object.
 * @throws IOException if an I/O error occurs during processing.
 */
","* visitor pattern double dispatch method.
     *
     * @param visitor The object to notify when visiting this object.
     * @throws IOException If an error occurs while visiting this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createContentStreamList,org.apache.pdfbox.multipdf.Overlay:createContentStreamList(org.apache.pdfbox.cos.COSBase),360,388,"/**
 * Extracts a list of COSStream objects from a COSBase object.
 * Recursively handles arrays and objects. Throws IOException on error.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSBaseForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSBaseForNewDocument(org.apache.pdfbox.cos.COSBase),105,124,"/**
 * Clones a COSBase object for a new document.
 * Handles COSObject, COSArray, COSStream, COSDictionary.
 * @param base The COSBase object to clone.
 * @return Cloned COSBase object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,hasSelfReference,"org.apache.pdfbox.multipdf.PDFCloneUtility:hasSelfReference(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",244,258,"/**
 * Checks if a COSBase value has a reference to its parent.
 * Returns true if self-reference found, false otherwise.
 */
","* Check whether an element (of an array or a dictionary) points to its parent.
     *
     * @param parent COSArray or COSDictionary
     * @param value an element",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getLength,org.apache.pdfbox.pdfparser.COSParser:getLength(org.apache.pdfbox.cos.COSBase),663,697,"/**
* Gets the length from a COSBase object, returning a COSNumber.
* Returns null if length is COSNull. Throws IOException on error.
*/
",* Returns length value referred to or defined in given object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.NormalXReference:<init>(long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",47,62,"/**
 * Creates a NormalXReference with offset, key, and COS object.
 * @param byteOffset Byte offset of the object.
 * @param key Key of the object.
 * @param object COSBase object.
 */
","* Prepares a normal reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param byteOffset The byte offset of the {@link COSObject} in the PDF file.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,prepareIncrement,org.apache.pdfbox.pdfwriter.COSWriter:prepareIncrement(),319,338,"/**
 * Prepares increment by mapping COS objects to their keys.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getKey(org.apache.pdfbox.cos.COSBase),93,105,"/**
 * Retrieves a COSObjectKey based on the provided COSBase object.
 */","* Returns the {@link COSObjectKey} for a given registered {@link COSBase}. Returns null if such an object is not
     * registered.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} shall be determined for.
     * @return key The {@link COSObjectKey}, that matches the registered {@link COSBase}, or null if such an object is
     * not registered.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSBase),137,142,"/**
* Checks if the object pool contains the given COSBase object.
*/","* Returns true, if the given {@link COSBase} is a registered object of this pool.
     *
     * @param object The {@link COSBase} that shall be checked.
     * @return True, if such a {@link COSBase} is registered in this pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,prepareStreamObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:prepareStreamObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",81,89,"/**
 * Adds key-object pair to prepared lists if both are non-null.
 * @param key COSObjectKey to add
 * @param object COSBase object to add
 */
","* Prepares the given {@link COSObject} to be written to this object stream, using the given {@link COSObjectKey} as
     * it's ID for indirect references.
     *
     * @param key The {@link COSObjectKey}, that shall be used for indirect references to the {@link COSObject}.
     * @param object The {@link COSObject}, that shall be written to this object stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,createFromCOSObject,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",244,264,"/**
 * Creates a PDColorSpace from a COS object, caching if possible.
 * @param colorSpace COS object representing the color space
 * @param resources PDResources object for resource management
 * @return PDColorSpace object or null if creation fails
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,toDictionary,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:toDictionary(org.apache.pdfbox.cos.COSBase),348,364,"/**
 * Extracts COSDictionary from COSBase, returns null if not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int)",42,45,"/**
 * Constructs a COSObjectKey with num, gen, and default ref.
 * @param num The number of the COS object.
 * @param gen The generation of the COS object.
 */
","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,compareTo,org.apache.pdfbox.cos.COSObjectKey:compareTo(java.lang.Object),25,25,"/**
* Represents a key for a COS object, implementing Comparable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,compareTo,org.apache.pdfbox.pdfparser.xref.AbstractXReference:compareTo(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),73,86,"/**
 * Compares this entry with another based on referenced keys.
 * Returns -1, 0, or 1 based on key comparison.
 */
","* Compares this object with the specified object for order. Returns a negative integer, zero, or a positive integer
     * as this object is less than, equal to, or greater than the specified object.
     *
     * @param xReferenceEntry the object to be compared.
     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than
     * the specified object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:getRaster(int,int,int,int)",170,302,"/**
 * Creates a raster representation of the image data.
 * @param x, y coordinates, w width, h height of the raster.
 * @return WritableRaster containing the image data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXScale,org.apache.pdfbox.text.TextPosition:getXScale(),534,537,"/**
 * Returns the horizontal scaling factor from the text matrix.
 */","* This will get the X scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The X scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYScale,org.apache.pdfbox.text.TextPosition:getYScale(),546,549,"/**
 * Returns the vertical scaling factor from the text matrix.
 */","* This will get the Y scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The Y scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawOutputStream,org.apache.pdfbox.cos.COSStream:createRawOutputStream(),261,290,"/**
 * Creates a raw OutputStream for writing data.
 * Returns FilterOutputStream; throws IOException.
 */","* Returns a new OutputStream for writing encoded PDF data. Experts only!
     * 
     * @return OutputStream for raw PDF stream data.
     * @throws IOException If the output stream could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",248,253,"/**
 * Creates a COSWriter with an output stream and compression parameters.
 */
","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.
     * @param compressParameters The configuration for the document's compression.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead)",265,275,"/**
 * Initializes a COSWriter with an output stream and input data.
 */","* COSWriter constructor for incremental updates. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data
     *
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(byte[]),63,67,"/**
 * Writes a byte array to the underlying output stream.
 * @param b The byte array to write.
 * @throws IOException If an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getListOfByteArraysFromCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray),627,638,"/**
 * Extracts byte arrays from a COS array containing COS strings.
 * @param array COSArray to process
 * @return List of byte arrays from COS strings in the array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(boolean),233,239,"/**
* Updates the 'updated' flag if updates are currently accepted.
*/","* Sets the {@link #updated} state of the managed {@link #updateInfo} to the given state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @param updated The state to set for {@link #updated}.
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,<clinit>,org.apache.pdfbox.cos.PDFDocEncoding:<clinit>(),36,106,"/**
 * Initializes code and Unicode mappings based on ISO standards.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getString,org.apache.pdfbox.cos.COSString:getString(),210,229,"/**
 * Converts byte array to String, handling UTF-16 or PDFDocEncoding.
 */","* Returns the content of this string as a PDF <i>text string</i>.
     * 
     * @return the PDF string representation of the COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(java.lang.String,boolean)",99,127,"/**
 * Creates a COSString.
 * @param text The string to encode.
 * @param forceHex Whether to force hex encoding.
 */
","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDFont:isStandard14(),619,631,"/**
 * Checks if the font is a Standard 14 font.
 * Returns true if it's not embedded and name matches.
 */
","* Returns true if this font is one of the ""Standard 14"" fonts and receives special handling.
     * 
     * @return true if this font is one of the ""Standard 14"" fonts",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,"org.apache.pdfbox.filter.ASCII85InputStream:read(byte[],int,int)",179,203,"/**
 * Reads up to {@code len} bytes from this stream into {@code data}.
 * @param data buffer to read into, offset is the starting position
 * @param offset offset into data
 * @param len maximum number of bytes to read
 * @return number of bytes read
 */
","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param len The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,decode,"org.apache.pdfbox.filter.ASCII85Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",31,41,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream containing ASCII85 encoded data.
 * @param decoded Output stream to write decoded data.
 * @param parameters COSDictionary for decoding parameters.
 * @param index Index of the object being decoded.
 * @return DecodeResult object with decoding parameters.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,close,org.apache.pdfbox.filter.ASCII85OutputStream:close(),233,245,"/**
 * Closes the stream, flushes data, and releases resources.
 */
","* This will close the stream.
     *
     * @throws IOException If there is an error closing the wrapped stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRun,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRun(org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree),374,399,"/**
 * Decodes a run of data from the Huffman tree.
 * @param tree Huffman tree used for decoding.
 * @return Decoded value, or columns if negative value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,close,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:close(),36,36,"/**
 * Extends PDAbstractContentStream, implements Closeable for appearance content.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,close,org.apache.pdfbox.pdmodel.PDFormContentStream:close(),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,close,org.apache.pdfbox.pdmodel.PDPageContentStream:close(),37,37,"/**
 * Extends AbstractContentStream, implementing Closeable for content writing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,close,org.apache.pdfbox.pdmodel.PDPatternContentStream:close(),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeRun,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeRun(int,boolean)",149,165,"/**
 * Writes a run of data to the output, using non-terminating/terminating codes.
 * @param runLength Length of the run to write.
 * @param white True for white runs, false for black runs.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeEOL,org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeEOL(),255,257,"/**
 * Writes an end-of-line character (line feed) to the output.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,readImageRaster,"org.apache.pdfbox.filter.DCTFilter:readImageRaster(javax.imageio.ImageReader,javax.imageio.ImageReadParam)",136,172,"/**
 * Reads an image raster from the reader, handling CMYK and RGB.
 * @param reader ImageReader to read from
 * @param irp ImageReadParam for reading
 * @return Raster object representing the image
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,org.apache.pdfbox.filter.FlateFilterDecoderStream:read(),125,137,"/**
 * Reads the next byte from the decoded data.
 * Returns -1 if end of file is reached.
 */
","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,"org.apache.pdfbox.filter.FlateFilterDecoderStream:read(byte[],int,int)",150,175,"/**
 * Reads up to 'length' bytes from the input stream into 'data'.
 * @param data buffer to read into, offset start index, length num bytes
 * @return Number of bytes actually read, or -1 if EOF.
 */
","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param length The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,readImageStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:readImageStream(java.io.InputStream),444,448,"/**
 * Reads an image from an input stream and sets the image.
 * @param stream Input stream containing the image data.
 * @throws IOException if an I/O error occurs.
 */
","* Read the image stream of the signature and set height and width.
     *
     * @param stream stream of your visible signature image
     * @throws IOException If we can't read, flush, or close stream of image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,doLZWDecode,"org.apache.pdfbox.filter.LZWFilter:doLZWDecode(java.io.InputStream,java.io.OutputStream,boolean)",74,128,"/**
 * Decodes an LZW encoded stream and writes to the output stream.
 * @param encoded Input LZW encoded stream.
 * @param decoded Output stream for decoded data.
 * @param earlyChange Flag to adjust chunk size calculation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,encode,"org.apache.pdfbox.filter.LZWFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,220,"/**
 * Encodes input data using a code table, writing to the output stream.
 * @param rawData Input stream containing data to encode.
 * @param encoded Output stream to write encoded data.
 * @param parameters COSDictionary containing encoding parameters.
 * @throws IOException if an I/O error occurs.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodeAndWriteRow,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:decodeAndWriteRow(),329,334,"/**
 * Decodes a predictor row, writes it, and flips the row buffer.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,chooseDataRowToWrite,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:chooseDataRowToWrite(),631,659,"/**
 * Selects the best data row to write based on compression estimates.
 * @return byte[] representing the chosen data row.
 */","* We look which row encoding is the ""best"" one, ie. has the lowest sum. We don't implement
         * anything fancier to choose the right row encoding. This is just the recommend algorithm
         * in the spec. The get the perfect encoding you would need to do a brute force check how
         * all the different encoded rows compress in the zip stream together. You have would have
         * to check 5*image-height permutations...
         *
         * @return the ""best"" row encoding of the row encodings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:valueOf(org.apache.pdfbox.cos.COSName),77,84,"/**
 * Returns RenderState for given COSName, or null if null.
 */","* Returns the base state represented by the given {@link COSName}.
         *
         * @param state the state name
         * @return the state enum value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:valueOf(org.apache.pdfbox.cos.COSName),71,78,"/**
 * Returns the BaseState for the given COSName.
 * @param state COSName representing the state; null defaults to ON.
 */
","* Returns the base state represented by the given {@link COSName}.
         * @param state the state name
         * @return the state enum value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<clinit>,org.apache.pdfbox.multipdf.Overlay$Position:<clinit>(),62,62,"/**
* Sets the foreground and background colors of the component.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<clinit>,org.apache.pdfbox.multipdf.PDFMergerUtility$AcroFormMergeMode:<clinit>(),139,141,"/**
 * Defines constants for different join form field processing modes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<clinit>,org.apache.pdfbox.multipdf.PDFMergerUtility$DocumentMergeMode:<clinit>(),121,123,"/**
 * Defines resource optimization modes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<clinit>,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType:<clinit>(),90,95,"/**
 * Defines an XRef stream type.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/XReferenceType.java,<clinit>,org.apache.pdfbox.pdfparser.xref.XReferenceType:<clinit>(),30,30,"/**
* Represents different types of stream entries.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<clinit>,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode:<clinit>(),46,55,"/**
 * Represents different ways to insert a page content stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,<clinit>,org.apache.pdfbox.pdmodel.PageLayout:<clinit>(),29,52,"/**
 * Displays pages two at a time, with odd-numbered pages on right.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,<clinit>,org.apache.pdfbox.pdmodel.PageMode:<clinit>(),27,43,"/**
 * Represents a PDF viewing option. Each enum has a descriptive name.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<clinit>,org.apache.pdfbox.pdmodel.common.function.type4.Parser$State:<clinit>(),30,30,"/**
 * Calculates the sum of all elements in an integer array.
 * @param arr The integer array to sum.
 * @return The sum of the array elements.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontFormat.java,<clinit>,org.apache.pdfbox.pdmodel.font.FontFormat:<clinit>(),29,40,"/**
 * Represents different font types.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<clinit>,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder$State:<clinit>(),414,414,"/**
* Serializes an object to a byte array.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<clinit>,org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName:<clinit>(),318,332,"/**
 * Defines font names as enum constants.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:<clinit>(),59,62,/** Represents an on/off state. */,,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:<clinit>(),43,48,/** Represents an enumeration value corresponding to a COSName. */,,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:<clinit>(),29,45,"/**
 * Represents color rendering intent enumeration.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingMode.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.state.RenderingMode:<clinit>(),28,66,"/**
 * Adds text to path for clipping.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.TextAlign:<clinit>(),21,21,"/**
* Defines text alignment constants: LEFT, CENTER, RIGHT, JUSTIFY.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/OpenMode.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.action.OpenMode:<clinit>(),28,39,"/**
 * Represents options for opening a destination document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDimension.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension:<clinit>(),30,35,"/**
 * Represents a vertical orientation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,<init>,"org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection$1:<init>(java.lang.String,int,int)",50,50,"/**
* Represents the end of the enumeration, with a value of 0.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionMotion.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion:<clinit>(),30,35,"/**
 * Defines outward page centering.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionStyle.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle:<clinit>(),28,28,"/**
* Applies a sequence of visual effects to a media element.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY:<clinit>(),77,94,"/**
 * Defines media box boundaries for processing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX:<clinit>(),104,113,"/**
 * Represents duplex printing options (short/long edge flip).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE:<clinit>(),39,52,"/**
 * PDF flag indicating optional content group panel visibility.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING:<clinit>(),123,128,"/**
 * Uses the application's default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION:<clinit>(),62,67,"/**
 * Represents a text direction, like right-to-left.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/Orientation.java,<clinit>,org.apache.pdfbox.printing.Orientation:<clinit>(),26,36,"/**
 * Specifies the page orientation based on aspect ratio or fixed mode.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/Scaling.java,<clinit>,org.apache.pdfbox.printing.Scaling:<clinit>(),26,36,"/**
 * Prints the image at 100% scale.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,<init>,"org.apache.pdfbox.rendering.ImageType$1:<init>(java.lang.String,int)",27,27,"/**
* Converts a decimal number to its binary string representation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,<init>,"org.apache.pdfbox.rendering.ImageType$2:<init>(java.lang.String,int)",37,37,"/**
* Calculates the grayscale value of a color.
* @param r Red component (0-255)
* @param g Green component (0-255)
* @param b Blue component (0-255)
* @return Grayscale value (0-255)
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,<init>,"org.apache.pdfbox.rendering.ImageType$3:<init>(java.lang.String,int)",47,47,"/**
* Converts a color from RGB values to a hexadecimal string.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,<init>,"org.apache.pdfbox.rendering.ImageType$4:<init>(java.lang.String,int)",57,57,"/**
* Converts ARGB int to RGBA int.
* @return The RGBA representation of the ARGB value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,<init>,"org.apache.pdfbox.rendering.ImageType$5:<init>(java.lang.String,int)",67,67,"/**
* Converts an RGB color to its BGR representation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/RenderDestination.java,<clinit>,org.apache.pdfbox.rendering.RenderDestination:<clinit>(),25,30,"/** Represents different actions: export, view, or print. */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileType.java,<clinit>,org.apache.pdfbox.util.filetypedetector.FileType:<clinit>(),31,56,"/**
 * Represents various image file formats.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver:reset(),362,370,"/**
 * Resets the xref trailer objects and related variables to initial state.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:<init>(),44,53,"/**
 * Registers default security handlers and their policies.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,close,org.apache.pdfbox.multipdf.Overlay:close(),170,203,"/**
* Closes all open overlays and documents, releasing resources.
*/
","* Close all input documents which were used for the overlay and opened by this class.
     *
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,closeTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:closeTemplate(org.apache.pdfbox.pdmodel.PDDocument),401,406,"/**
 * Closes a PDF template and its associated resources.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,next,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:next(),53,69,"/**
 * Returns the next PDOutlineItem in the sequence.
 * Throws NoSuchElementException if no next item exists.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream),67,71,"/**
 * Creates a PDFormXObject with the given stream.
 * @param stream The stream containing form data.
 */
","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(org.apache.pdfbox.contentstream.PDContentStream),58,61,"/**
 * Creates a PDFStreamParser from a PDContentStream.
 * @param pdContentstream The content stream to parse.
 */
","* Constructor.
     *
     * @param pdContentstream The content stream to parse.
     * @throws IOException If there is an error initializing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(byte[]),68,71,"/**
 * Creates a PDFStreamParser from the given byte array.
 * @param bytes The byte array representing the PDF stream.
 */
","* Constructor.
     *
     * @param bytes the bytes to parse.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseObject,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseObject(long),83,112,"/**
 * Parses a COS object from the source at the given object number.
 * @param objectNumber The object number to parse.
 * @return The parsed COSBase object or null if not found.
 */
","* Search for/parse the object with the given object number. The stream is closed after parsing the object with the
     * given number.
     * 
     * @param objectNumber the number of the object to b e parsed
     * @return the parsed object or null if the object with the given number can't be found
     * @throws IOException if there is an error while parsing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,readObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:readObjectNumbers(),220,233,"/**
 * Reads object numbers from source.
 * @return Map of object numbers, or null on error.
 */
","* Read all object numbers from the compressed object stream. The stream is closed after reading the object numbers.
     * 
     * @return a map off all object numbers and the corresponding offset within the object stream.
     * @throws IOException if there is an error while parsing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:<init>(java.util.Map),35,38,"/**
 * Initializes the encoding with mappings from code to name.
 * @param codeToName Map of integer codes to their string names.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipWhiteSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipWhiteSpaces(),409,425,"/**
 * Skips whitespace characters and optional line break.
 * Reads and discards whitespace from the input source.
 */","* Skip the upcoming CRLF or LF which are supposed to follow a stream. Trailing spaces are removed as well.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(),434,443,"/**
 * Skips a line break character (CR, LF, or CRLF).
 * @return True if a line break was skipped, false otherwise.
 */
","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLine,org.apache.pdfbox.pdfparser.BaseParser:readLine(),1162,1188,"/**
* Reads a line of text from the source, throwing IOException on EOF.
*/","* This will read bytes until the first end of line marker occurs.
     * NOTE: The EOL marker may consists of 1 (CR or LF) or 2 (CR and CL) bytes
     * which is an important detail if one wants to unread the line.
     *
     * @return The characters between the current position and the end of the line.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipSpaces(),1319,1343,"/**
* Skips whitespace and comments from the input source.
*/
","* This will skip all spaces and comments that are present.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getNumberOfColorComponents(),43,43,"/**
 * Extends PDTriangleBasedShadingType for a specific shading type.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getNumberOfColorComponents(),41,41,"/**
 * Extends PDTriangleBasedShadingType for shading type 5.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRef,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRef(long),227,269,"/**
 * Finds the nearest xref offset from tables/streams.
 * @param xrefOffset The offset to search for.
 * @return The nearest offset found, or -1 if none found.
 */
","* Search for the offset of the given xref table/stream among those found by a brute force search.
     * 
     * @param xrefOffset the given offset to be searched for
     * 
     * @return the offset of the xref entry
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parsePDFHeader,org.apache.pdfbox.pdfparser.COSParser:parsePDFHeader(),1058,1061,"/**
* Parses the PDF header using a default version.
* @throws IOException if an I/O error occurs during parsing.
*/
","* Parse the header of a pdf.
     * 
     * @return true if a PDF header was found
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFDFHeader,org.apache.pdfbox.pdfparser.COSParser:parseFDFHeader(),1069,1072,"/**
* Parses the FDF header.
* Returns true on success, false otherwise.
*/
","* Parse the header of a fdf.
     * 
     * @return true if a FDF header was found
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseAllObjects,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseAllObjects(),120,172,"/**
 * Parses all objects from the PDF source.
 * @return Map of COSObjectKey to COSBase representing parsed objects.
 * @throws IOException if an I/O error occurs during parsing.
 */","* Parse all compressed objects. The stream is closed after parsing.
     * 
     * @return a map containing all parsed objects using the object number as key
     * @throws IOException if there is an error while parsing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeStreamData,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeStreamData(java.io.OutputStream,int[])",236,250,"/**
 * Writes stream data to an output stream in a specific format.
 * @param os output stream to write to
 * @param w array of integers used for formatting
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefRange,"org.apache.pdfbox.pdfwriter.COSWriter:writeXrefRange(long,long)",987,993,"/**
 * Writes an Xref range (x, y) to standard output as a line.
 * @param x start of the range
 * @param y end of the range
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,next,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:next(),91,100,"/**
 * Returns the next element from the queue.
 * Throws NoSuchElementException if the queue is empty.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,calcFinalKey,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:calcFinalKey(long,long)",247,273,"/**
 * Calculates a final key by combining encryption key, object/gen numbers, and digests.
 * @param objectNumber Object number to incorporate.
 * @param genNumber Generation number to incorporate.
 */
","* Calculate the key to be used for RC4 and AES-128.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @return the calculated key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev234(byte[],byte[],int,byte[],boolean,int,int)",737,778,"/**
 * Computes an encrypted key based on MD5 algorithm.
 * @param password Password for encryption.
 * @return Encrypted key as byte array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRC4key,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRC4key(byte[],int,int)",948,966,"/**
 * Computes an RC4 key based on password and revision.
 * @param ownerPassword Password to derive the key from.
 * @param encRevision Encryption revision number.
 * @param length Key length in bytes.
 * @return RC4 key as a byte array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeSHA256,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeSHA256(byte[],byte[],byte[])",1199,1205,"/**
 * Computes SHA256 hash of input, password, and adjusted user key.
 * @param input Input byte array.
 * @param password Password byte array.
 * @param userKey User key byte array.
 * @return SHA256 hash as a byte array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",71,74,"/**
 * Creates an AppearanceContentStream from an AppearanceStream.
 * @param appearance The source AppearanceStream.
 * @param outputStream Output stream for writing content.
 */
","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to add to.
     * @param outputStream
     *            The appearances output stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",221,224,"/**
 * Creates a content stream for a page, using a provided appearance.
 * @param doc The document.
 * @param appearance The appearance stream.
 * @param outputStream The output stream.
 */
","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the appearance is part of.
     * @param appearance The appearance stream to add to.
     * @param outputStream The appearances output stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformedPoint,"org.apache.pdfbox.contentstream.PDFStreamEngine:transformedPoint(float,float)",1123,1129,"/**
 * Transforms a point using the current graphics state.
 * @param x x-coordinate of the point
 * @param y y-coordinate of the point
 * @return Transformed Point2D.Float object
 */
","* Transforms a point using the CTM.
     * 
     * @param x the x-coordinate of the point to be transformed
     * @param y the y-coordinate of the point to be transformed
     * 
     * @return the transformed point",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,createContext,"org.apache.pdfbox.rendering.TilingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",109,122,"/**
 * Creates a paint context, applying pattern scaling.
 * @param cm ColorModel, device/user bounds, transform, hints
 * @return PaintContext object
 */
","* Not called in TexturePaint subclasses, which is why we wrap TexturePaint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix),227,230,"/**
* Concatenates the input matrix with the 'single' array.
* Updates 'single' with the result of the multiplication.
*/
","* Concatenates (premultiplies) the given matrix to this matrix.
     *
     * @param matrix The matrix to concatenate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,"org.apache.pdfbox.util.Matrix:translate(float,float)",248,254,"/**
 * Translates the single transformation matrix by tx and ty.
 * @param tx Translation amount on the x-axis.
 * @param ty Translation amount on the y-axis.
 */
","* Translates this matrix by the given amount.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,scale,"org.apache.pdfbox.util.Matrix:scale(float,float)",262,271,"/**
 * Scales the single array by sx and sy.
 * @param sx scaling factor for x coordinates
 * @param sy scaling factor for y coordinates
 */
","* Scales this matrix by the given factors.
     *
     * @param sx x-scale
     * @param sy y-scale",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,multiply,org.apache.pdfbox.util.Matrix:multiply(org.apache.pdfbox.util.Matrix),290,293,"/**
 * Multiplies two matrices.
 * @param other The matrix to multiply by.
 * @return The resulting matrix.
 */
","* This method multiplies this Matrix with the specified other Matrix, storing the product in a 
     * new instance. It is allowed to have (other == this).
     *
     * @param other the second operand Matrix in the multiplication; required
     * @return the product of the two matrices.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,encodeForGsub,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:encodeForGsub(org.apache.fontbox.ttf.gsub.GsubWorker,java.util.Set,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1685,1699,"/**
 * Processes text, encodes single-char words, applies GSUB rules.
 * @param text The input text to process.
 * @return Byte array containing the processed text.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,createDocument,org.apache.pdfbox.pdfparser.PDFParser:createDocument(),194,197,"/**
 * Creates a new PDF document using provided resources.
 * @return A PDDocument object.
 * @throws IOException if an I/O error occurs.
 */
","* Create the resulting document. Maybe overwritten if the parser uses another class as document.
     * 
     * @return the resulting document
     * @throws IOException if the method is called before parsing the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",213,216,"/**
 * Constructs a PDDocument with a COSDocument and RandomAccessRead.
 * @param doc The COSDocument to use.
 * @param source Source for reading data.
 */
","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,44,"/**
 * Pops two operands, compares them, and pushes the boolean result.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:isEqual(java.lang.Object,java.lang.Object)",135,140,"/**
 * Inverts the result of the superclass's isEqual method.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForPolicy,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),84,95,"/**
 * Creates a SecurityHandler for the given ProtectionPolicy.
 * @param policy The ProtectionPolicy to create a handler for.
 * @return SecurityHandler instance or null if no handler exists.
 */
","* Returns a new security handler for the given protection policy, or null none is available.
     * @param policy the protection policy for which to create a security handler
     * @return a new SecurityHandler instance, or null if none is available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForFilter,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForFilter(java.lang.String),102,113,"/**
 * Creates a SecurityHandler for the given filter name.
 * @param name Filter name; returns null if no handler exists.
 */
","* Returns a new security handler for the given Filter name, or null none is available.
     * @param name the Filter name from the PDF encryption dictionary
     * @return a new SecurityHandler instance, or null if none is available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getNumber,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:getNumber(int,java.lang.String)",343,365,"/**
* Returns page number as string based on style.
* @param pageIndex page index
* @param style label style (e.g., decimal, letters)
* @return Page number as string.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getDashArray,org.apache.pdfbox.rendering.PageDrawer:getDashArray(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),758,791,"/**
 * Extracts and validates dash array from pattern, ensuring validity.
 * @param dashPattern Line dash pattern object.
 * @return Validated float array or null if invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<clinit>(),36,36,"/**
 * Creates an empty PDColor instance with no color components.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),88,100,"/**
 * Sets stroking color if provided color has components.
 * @param color PDColor object, null if no color is needed.
 * @return True if color was set, false otherwise.
 */
","* Set the stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setStrokingColor(PDColor)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),148,160,"/**
 * Sets the non-stroking color if the provided color is valid.
 * @param color The color to set; null or invalid color returns false.
 * @return True if the color was set, false otherwise.
 */
","* Set the non stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the non stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setNonStrokingColor(PDColor)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getPatchCoordinatesColor,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getPatchCoordinatesColor(org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve)",167,216,"/**
* Generates coordinate-color pairs for a patch surface.
* @param c1,c2,d1,d2 Bezier curves defining the patch surface.
* @return 2D array of CoordinateColorPair objects.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getPatchCoordinatesColor,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getPatchCoordinatesColor(),212,255,"/**
 * Calculates coordinate-color pairs for a patch surface.
 * @return 2D array of CoordinateColorPair objects.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getSaturationRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getSaturationRGB(float[],float[],float[])",286,350,"/**
 * Calculates saturation RGB values based on input color values.
 * @param srcValues Source color values.
 * @param dstValues Destination color values.
 * @param result Result RGB values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getLuminosityRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getLuminosityRGB(float[],float[],float[])",352,388,"/**
 * Calculates luminosity RGB values from source and destination values.
 * @param srcValues Source RGB values.
 * @param dstValues Destination RGB values.
 * @param result Result RGB values (normalized).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Abs:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,48,"/**
 * Pushes the absolute value of the top number from the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),55,77,"/**
 * Pops two numbers, adds them, and pushes the result onto the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ceiling:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,115,"/**
 * Pops a number, pushes it if Integer, else pushes its ceiling.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvi:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),135,140,"/**
 * Pops a number from the context and pushes its integer value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvr:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),147,152,"/**
 * Pops a number from the context and pushes its float value onto the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Div:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),159,165,"/**
 * Divides the top two numbers on the stack and pushes the result.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Exp:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),172,179,"/**
 * Calculates base raised to the power of exponent and pushes to stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Floor:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),186,198,"/**
 * Executes the operation: pushes number to stack, floors if not int.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ln:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),218,223,"/**
 * Pushes the natural logarithm of the top number on the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Log:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),230,235,"/**
 * Calculates the base-10 logarithm of a number from the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mul:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),255,277,"/**
 * Multiplies the top two numbers on the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Neg:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),284,304,"/**
 * Negates the number from the execution context stack.
 * Pushes the negated value back onto the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),311,323,"/**
 * Pops a number from the stack, converts to int/float, and pushes it back.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sub:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),359,382,"/**
 * Subtracts two numbers from the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Truncate:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),389,401,"/**
 * Pops a number from the context, converts to int, and pushes to stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$IDiv:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),205,211,"/**
 * Divides the top two integers on the stack and pushes the result.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mod:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),242,248,"/**
 * Pops two integers, calculates the remainder, and pushes it to the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Atan:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),84,96,"/**
 * Calculates the angle (in degrees) from num/den and pushes to stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cos:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),122,128,"/**
 * Pushes the cosine of the angle (in degrees) onto the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sin:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),330,336,"/**
 * Pops an angle, calculates its sine, and pushes the result to the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),343,352,"/**
 * Calculates the square root of a real number from the stack.
 * Pops a real number, throws exception if negative, pushes result.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.String),75,105,"/**
 * Processes a token: pushes sequences for '{', pops for '}', adds values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextChar(),148,159,"/**
 * Returns the next character in the stream.
 * Advances the index; returns EOT if no more chars.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextState,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextState(),173,195,"/**
 * Determines the next state based on the current character.
 * @return The next State enum value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,xobject,org.apache.pdfbox.text.PDFMarkedContentExtractor:xobject(org.apache.pdfbox.pdmodel.graphics.PDXObject),141,147,"/**
 * Adds an XObject to the last marked content.
 * @param xobject The XObject to add.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getOwnerAccessPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getOwnerAccessPermission(),153,165,"/**
 * Creates and returns an AccessPermission object with all flags enabled.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,isOwnerPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:isOwnerPermission(),134,145,"/**
 * Checks if the current user has all owner permissions.
 * Returns true if all permission checks pass, false otherwise.
 */
","* This will tell if the access permission corresponds to owner
     * access permission (no restriction).
     *
     * @return true if the access permission does not restrict the use of the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,hasAnyRevision3PermissionSet,org.apache.pdfbox.pdmodel.encryption.AccessPermission:hasAnyRevision3PermissionSet(),448,463,"/**
 * Checks if any of Revision3 permissions are set.
 * Returns true if any permission is granted.
 */
","* Indicates if any revision 3 access permission is set or not.
     * 
     * @return true if any revision 3 access permission is set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,prepareAESInitializationVector,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",403,428,"/**
 * Prepares AES IV: reads from stream if decrypting, generates if not.
 * @param decrypt decrypt flag
 * @param iv IV bytes
 * @param data Input stream
 * @param output Output stream
 * @return True on success, false otherwise
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],java.io.OutputStream)",123,129,"/**
 * Writes all bytes from data to the specified OutputStream.
 * @param data byte array to write
 * @param output output stream to write to
 * @throws IOException if an I/O error occurs
 */
","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],int,int,java.io.OutputStream)",159,165,"/**
 * Writes a portion of byte array to OutputStream.
 * @param data byte array to write
 * @param offset starting offset in the array
 * @param len number of bytes to write
 * @param output target OutputStream
 */
","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param offset The offset into the array to start reading data from.
     * @param len The number of bytes to attempt to read.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,insertDiacritic,"org.apache.pdfbox.text.TextPosition:insertDiacritic(int,org.apache.pdfbox.text.TextPosition)",754,785,"/**
* Inserts a diacritic character at the given position.
* @param i index to insert diacritic
* @param diacritic the diacritic to insert
*/
","* Inserts the diacritic TextPosition to the str of this TextPosition and updates the widths
     * array to include the extra character width.
     *
     * @param i current character
     * @param diacritic The diacritic TextPosition",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrep,"org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrep(java.lang.String,boolean)",71,138,"/**
 * Prepares a string for SASL by normalizing, prohibiting chars, and validating directionality.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientInfo(java.security.cert.X509Certificate,byte[])",523,556,"/**
 * Computes recipient info from certificate and data.
 * @param x509certificate X.509 certificate containing public key
 * @param abyte0 data to encrypt
 * @return KeyTransRecipientInfo object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2B,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2B(byte[],byte[],byte[])",1125,1197,"/**
 * Computes a 32-byte hash using a complex iterative encryption process.
 * @param input Input byte array.
 * @param password Password byte array.
 * @param userKey Optional user key byte array.
 * @return 32-byte hash.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,"org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String,java.util.List)",835,837,"/**
 * Writes the given string to the output stream.
 * @param text The string to be written.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getTrueTypeFont(java.lang.String,java.io.File)",201,214,"/**
 * Loads a TrueType font from a file.
 * @param postScriptName font's postscript name
 * @param file font file
 * @return TrueTypeFont object or null on failure
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getDiskCacheFile,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:getDiskCacheFile(),388,400,"/**
 * Gets the disk cache file path. Uses pdfbox.fontcache, user.home, or java.io.tmpdir.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,createFontInfoByName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:createFontInfoByName(java.util.List),173,182,"/**
 * Creates a map of font names to FontInfo objects.
 * @return A map with font names as keys and FontInfo as values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Line:<init>(java.awt.Point,java.awt.Point,float[],float[])",45,52,"/**
 * Initializes a line with two points and two colors.
 * @param p0 Start point of the line.
 * @param p1 End point of the line.
 * @param c0 Color at the start point.
 * @param c1 Color at the end point.
 */
","* Constructor of class Line.
     *
     * @param p0 one end of a line
     * @param p1 the other end of the line
     * @param c0 color of point p0
     * @param c1 color of point p1",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:toString(),195,199,"/**
 * Returns a string representation of the object, including file, hash, and lastModified.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,compareTo,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:compareTo(java.lang.Object),715,715,"/**
 * Private static class implementing Comparable for font matching.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<clinit>,org.apache.pdfbox.pdmodel.font.Standard14Fonts:<clinit>(),50,116,"/**
 * Maps font names to FontName enum values.
 * Handles standard 14 fonts and Adobe font name variations.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl:<init>(),59,134,"/**
 * Initializes font substitutions and sets last resort font.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getStandard14Width(int),339,368,"/**
 * Gets the width of a character from the AFM file.
 * @param code Character code point.
 * @throws IllegalStateException if AFM is not loaded.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPathFromOutlines(int),571,579,"/**
 * Retrieves a GeneralPath from outlines based on a code.
 * @param code character code; returns path or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1CFont:codeToName(int),278,281,"/**
 * Retrieves the name associated with the given encoding code.
 * @param code The encoding code to look up.
 * @return The name associated with the code.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(int),656,660,"/**
 * Checks if a glyph exists for the given code point.
 * @param code The code point to check.
 * @return True if glyph exists, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToGID(int),377,392,"/**
 * Converts a code to a GID. Uses cidFont if available, otherwise returns the CID.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getHeight(int),443,459,"/**
 * Gets the height of a glyph given its code.
 * @param code glyph code
 * @return glyph height as a float
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,<init>,"org.apache.pdfbox.rendering.SoftMask:<init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)",72,99,"/**
 * Initializes a SoftMask with paint, mask, bbox, backdrop color, and transfer function.
 */","* Creates a new soft mask paint.
     *
     * @param paint underlying paint.
     * @param mask soft mask
     * @param bboxDevice bbox of the soft mask in the underlying Graphics2D device space
     * @param backdropColor the color to be used outside the transparency group’s bounding box; if
     * null, black will be used.
     * @param transferFunction the transfer function, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,equals,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:equals(java.lang.Object),95,145,"/**
 * Checks if two TilingPaintParameter objects are equal.
 * Compares matrix, patternDict, colorSpace, color, and xform.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,removeBackdrop,"org.apache.pdfbox.rendering.GroupGraphics:removeBackdrop(java.awt.image.BufferedImage,int,int)",600,717,"/**
 * Removes a backdrop from a group image.
 * @param backdrop Backdrop image to remove.
 * @param offsetX X offset for backdrop.
 * @param offsetY Y offset for backdrop.
 */
","* Computes backdrop removal.
     * The backdrop removal equation is given in section 11.4.4 in the PDF 32000-1:2008
     * standard. It returns the final color <code>C</code> for each pixel in the group:<br>
     *     <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code><br>
     * where<br>
     *     <code>Cn</code> is the group color including backdrop (read from <code>groupImage</code>),<br>
     *     <code>C0</code> is the backdrop color,<br>
     *     <code>alpha0</code> is the backdrop alpha,<br>
     *     <code>alphagn</code> is the group alpha excluding backdrop (read the
     *           alpha channel from <code>groupAlphaImage</code>)<br>
     * <p>
     * The alpha of the result is equal to <code>alphagn</code>, i.e., the alpha
     * channel of <code>groupAlphaImage</code>.
     * <p>
     * The <code>backdrop</code> image may be much larger than <code>groupImage</code> if,
     * for example, the current page is used as the backdrop. Only a specific rectangular
     * region of <code>backdrop</code> is used in the backdrop removal: upper-left corner
     * is at <code>(offsetX, offsetY)</code>; width and height are equal to those of
     * <code>groupImage</code>.
     *
     * @param backdrop group backdrop
     * @param offsetX backdrop left X coordinate
     * @param offsetY backdrop upper Y coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,hasFontOrSizeChanged,"org.apache.pdfbox.text.PDFTextStripper:hasFontOrSizeChanged(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",730,760,"/**
 * Checks if the font or size has changed between two TextPositions.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(java.lang.String),158,179,"/**
* Retrieves a GeneralPath by name. Returns an empty path for .notdef.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getAFM,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getAFM(java.lang.String),178,205,"/**
 * Retrieves FontMetrics for the given font name.
 * @param fontName Font name to look up; returns null if not found.
 */","* Returns the metrics for font specified by fontName. Loads the font metrics if not already
     * loaded.
     *
     * @param fontName name of font; either a base name or alias
     * @return the font metrics or null if the name is not one of the known names
     * @throws IllegalArgumentException if no metrics exist for that font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowCIDToUnicodeRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowCIDToUnicodeRange(java.util.Map$Entry,java.util.Map$Entry)",188,194,"/**
 * Checks if code and destination ranges are allowed between nodes.
 * @param prev Previous node.
 * @param next Next node.
 * @return True if ranges are allowed, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,subset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:subset(),300,352,"/**
 * Subsets the TTF font, retaining required tables and specified glyphs.
 * @throws IOException if subsetting is not permitted or fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(java.io.InputStream,int)",100,105,"/**
 * Creates a GlyphList, loading data from input stream.
 * @param input Input stream containing glyph data.
 * @param numberOfEntries Initial capacity for hashmaps.
 */
","* Creates a new GlyphList from a glyph list file.
     *
     * @param numberOfEntries number of expected values used to preallocate the correct amount of memory
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)",114,119,"/**
 * Constructs a GlyphList, copying from another and loading from input.
 * @param glyphList Source GlyphList to copy from.
 * @param input Input stream to load additional glyph data.
 */
","* Creates a new GlyphList from multiple glyph list files.
     *
     * @param glyphList an existing glyph list to be copied
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:codeToGID(int),607,710,"/**
 * Converts a code to a glyph ID, handling various encodings.
 * @param code The code to convert.
 * @return The corresponding glyph ID.
 */
","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID (glyph index)
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNameInFont(java.lang.String),469,489,"/**
 * Returns name or "".notdef"" if not found in font.
 * Tries unicode name if original name is not found.
 */","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getNameInFont(java.lang.String),571,614,"/**
 * Finds a valid font name, trying alternatives and Unicode names.
 * @param name The name to search for.
 * @return Font name or "".notdef"" if not found.
 */
","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<clinit>,org.apache.pdfbox.pdmodel.PDDocument:<clinit>(),93,112,"/**
 * Initializes PDDeviceRGB to avoid concurrency issues.
 * Creates a raster and converts it to RGB image.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:<init>(),30,30,"/**
 * Abstract base class for color spaces based on PDCIE.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:<init>(),27,27,"/**
 * Abstract base class for color spaces in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:<init>(java.awt.color.ColorSpace),40,43,"/**
 * Constructs a PDJPXColorSpace from a ColorSpace object.
 * @param colorSpace The ColorSpace to use.
 */
","* Creates a new JPX color space from the given AWT color space.
     * @param colorSpace AWT color space from a JPX image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSpecialColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDSpecialColorSpace:<init>(),24,24,"/**
 * Abstract class extending PDColorSpace for specialized color spaces.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,init,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:init(),63,95,"/**
 * Initializes the CMYK color profile and flags. Throws IOException if profile loading fails.
 */","* Lazy load the ICC profile, because it's slow.
     * 
     * @throws IOException if the ICC profile could not be initialized",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toRGB(float[]),280,297,"/**
 * Converts color value to RGB. Returns value if isRGB,
 * otherwise uses color space to convert.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getDefaultDecode(int),357,375,"/**
 * Returns default decode array, uses awtColorSpace if available.
 * @param bitsPerComponent Number of bits per color component.
 * @return float[] decode array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toString(),547,551,"/**
 * Returns a string representation of the object.
 * Includes name and number of components.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getDefaultDecode(int),57,68,"/**
 * Generates a default decode array based on color space components.
 * @param bitsPerComponent Number of bits per color component.
 * @return float[] containing min/max values for each component.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,encodeImageToJPEGStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int)",351,384,"/**
 * Encodes a BufferedImage to a JPEG byte stream with specified quality and DPI.
 * @param image BufferedImage to encode
 * @param quality JPEG compression quality (0.0-1.0)
 * @param dpi Dots per inch for image metadata
 * @return JPEG image as byte array
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,applyMask,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:applyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage,boolean,boolean,float[])",613,723,"/**
 * Applies a mask to an image, handling scaling and alpha blending.
 * @param image The image to apply the mask to.
 * @param mask The mask image.
 */
","* @param image The image to apply the mask to as alpha channel.
     * @param mask A mask image in 8 bit Gray. Even for a stencil mask image due to
     * {@link #getOpaqueImage()} and {@link SampledImageReader}'s {@code from1Bit()} special
     * handling of DeviceGray.
     * @param interpolateMask interpolation flag of the mask image.
     * @param isSoft {@code true} if a soft mask. If not stencil mask, then alpha will be inverted
     * by this method.
     * @param matte an optional RGB matte if a soft mask.
     * @return an ARGB image (can be the altered original image)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getIDATInputStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),481,488,"/**
 * Creates a MultipleInputStream from a list of IDAT chunks.
 * @param state State object containing IDAT chunks.
 * @return MultipleInputStream containing the chunk data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkChunkSane,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkChunkSane(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk),655,680,"/**
* Validates a chunk by verifying its CRC and start position.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:<init>(java.awt.geom.Point2D[],int)",40,45,"/**
 * Initializes a CubicBezierCurve with control points and level.
 * @param ctrlPnts Control points for the curve.
 * @param l The level of the curve.
 */
","* Constructor of CubicBezierCurve
     *
     * @param ctrlPnts 4 control points [p0, p1, p2, p3]
     * @param l dividing level, if l = 0, one cubic Bezier curve is divided
     * into 2^0 = 1 segments, if l = n, one cubic Bezier curve is divided into
     * 2^n segments",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",43,43,"/**
 * Extends PDTriangleBasedShadingType for a specific shading type.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",41,41,"/**
* Extends PDTriangleBasedShadingType for shading type 5.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,contains,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:contains(java.awt.geom.Point2D),156,197,"/**
 * Checks if a point is contained within the polygon.
 * @param p the point to check
 * @return true if the point is contained, false otherwise
 */
","* Whether a point is contained in this ShadedTriangle.
     *
     * @param p the target point
     * @return false if p is outside of this triangle, otherwise true",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcColor,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcColor(java.awt.geom.Point2D),232,265,"/**
 * Calculates color at a point based on the specified degree.
 * @param p Point at which to calculate the color.
 * @return float[] Color at the given point.
 */
","* Calculate the color of a point.
     *
     * @param p the target point
     * @return an array denotes the point's color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.GeneralPath),587,590,"/**
* Intersects the current path with the provided path.
* @param path The GeneralPath to intersect with.
*/
","* Modify the current clipping path by intersecting it with the given path.
     * @param path path to intersect with the clipping path",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Area),612,615,"/**
* Intersects the current path with the given area.
* @param area The Area object to intersect with.
*/
","* Modify the current clipping path by intersecting it with the given path.
     *
     * @param area area to intersect with the clipping path",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,transferClip,org.apache.pdfbox.rendering.PageDrawer:transferClip(java.awt.Graphics2D),434,447,"/**
 * Sets the graphics clip to the current clipping path or an empty rectangle.
 */","* Transfer clip to the destination device. Override this if you want to avoid to do slow
     * intersecting operations but want the destination device to do this (e.g. SVG). You can get
     * the individual clippings via {@link PDGraphicsState#getCurrentClippingPaths()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5258"">PDFBOX-5258</a> for sample code.
     *
     * @param graphics graphics device",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,process,"org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,58,"/**
 * Sets rendering intent based on the first operand (COSName).
 * Throws exception if no operands are provided.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.PlainText$TextAttribute:<clinit>(),114,114,"/**
 * Defines a constant Attribute for representing width.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,textAlign,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:textAlign(int),95,99,"/**
* Sets the text alignment.
* @param alignment Integer value for text alignment.
* @return This Builder object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<clinit>(),56,69,"/**
 * Line ending styles where the shape changes its angle, e.g. arrows.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(byte[],int[])",44,47,"/**
 * Creates a COSFilterInputStream with a byte array and range.
 * @param in The byte array to read from.
 * @param byteRange The range of bytes to filter.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(),49,59,"/**
 * Reads a single byte from the input stream. Returns -1 on EOF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[],int,int)",67,77,"/**
 * Reads up to `len` bytes from the input stream into `b`.
 * Returns the number of bytes read or -1 if EOF.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,create,org.apache.pdfbox.rendering.GroupGraphics:create(),111,123,"/**
 * Creates a GroupGraphics object with Graphics2D instances.
 * Returns null if not Graphics2D. Throws exception if not.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawTilingPattern,"org.apache.pdfbox.rendering.PageDrawer:drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)",306,334,"/**
 * Draws a tiling pattern using provided parameters, restoring state after.
 */","* Draws the pattern stream to the requested context.
     *
     * @param g The graphics context to draw onto.
     * @param pattern The tiling pattern to be used.
     * @param colorSpace color space for this tiling.
     * @param color color for this tiling.
     * @param patternMatrix the pattern matrix
     * @throws IOException If there is an IO error while drawing the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createDefaultRenderingHints,org.apache.pdfbox.rendering.PDFRenderer:createDefaultRenderingHints(java.awt.Graphics2D),504,516,"/**
 * Creates default RenderingHints based on Graphics2D properties.
 * @param graphics The Graphics2D object to determine properties.
 * @return RenderingHints object with default settings.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXDirAdj,org.apache.pdfbox.text.TextPosition:getXDirAdj(),344,347,"/**
 * Returns the X-directed adjusted value based on the current direction.
 */","* This will get the text direction adjusted x position of the character.
     * This is adjusted based on text direction so that the first character
     * in that direction is in the upper left at 0,0.
     * This method ignores the page rotation but takes the text rotation (see
     * {@link #getDir() getDir()}) and adjusts the coordinates to awt. This is useful when doing
     * text extraction, to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The x coordinate of the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,<init>,"org.apache.pdfbox.text.TextPosition:<init>(int,float,float,org.apache.pdfbox.util.Matrix,float,float,float,float,float,java.lang.String,int[],org.apache.pdfbox.pdmodel.font.PDFont,float,int)",85,118,"/**
 * Constructs a TextPosition object with the given parameters.
 */","* Constructor.
     *
     * @param pageRotation rotation of the page that the text is located in
     * @param pageWidth width of the page that the text is located in
     * @param pageHeight height of the page that the text is located in
     * @param textMatrix text rendering matrix for start of text (in display units)
     * @param endX x coordinate of the end position
     * @param endY y coordinate of the end position
     * @param maxHeight Maximum height of text (in display units)
     * @param individualWidth The width of the given character/string. (in text units)
     * @param spaceWidth The width of the space character. (in display units)
     * @param unicode The string of Unicode characters to be displayed.
     * @param charCodes An array of the internal PDF character codes for the glyphs in this text.
     * @param font The current font for this text position.
     * @param fontSize The new font size.
     * @param fontSizeInPt The font size in pt units (see {@link #getFontSizeInPt()} for details).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYDirAdj,org.apache.pdfbox.text.TextPosition:getYDirAdj(),406,418,"/**
 * Calculates the adjusted Y direction based on rotation.
 * Returns adjusted value; uses page dimensions and rotation.
 */","* This will get the y position of the text, adjusted so that 0,0 is upper left and it is
     * adjusted based on the text direction.
     * This method ignores the page rotation but takes the
     * text rotation and adjusts the coordinates to awt. This is useful when doing text extraction,
     * to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The adjusted y coordinate of the character.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidth,org.apache.pdfbox.text.TextPosition:getWidth(),443,446,"/**
 * Returns the width of the object, accounting for rotation.
 */","* This will get the width of the string when page rotation adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthDirAdj,org.apache.pdfbox.text.TextPosition:getWidthDirAdj(),453,456,"/**
* Returns the width adjusted for direction.
* Uses the current direction to calculate width.
*/
","* This will get the width of the string when text direction adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(),430,433,"/**
 * Starts article processing, using default settings.
 */","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead). This
     * assumes that the primary direction of text is left to right. Default implementation is to do nothing. Subclasses
     * may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphEnd,org.apache.pdfbox.text.PDFTextStripper:writeParagraphEnd(),1728,1736,"/**
 * Writes the end of a paragraph to the output.
 * Writes paragraph start if not already started.
 */","* Write something (if defined) at the end of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchListItemPattern,org.apache.pdfbox.text.PDFTextStripper:matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper),1768,1771,"/**
* Matches text against list item patterns.
* @return A MatchResult object if a match is found.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeWord,org.apache.pdfbox.text.PDFTextStripper:normalizeWord(java.lang.String),2051,2108,"/**
 * Normalizes a word, handling specific Unicode ranges and forms.
 */","* Normalize certain Unicode characters. For example, convert the single ""fi"" ligature to ""f"" and ""i"". Also
     * normalises Arabic and Hebrew presentation forms.
     *
     * @param word Word to normalize
     * @return Normalized word",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<clinit>,org.apache.pdfbox.text.PDFTextStripper:<clinit>(),71,1988,"This code snippet is a complex piece of PDF text extraction logic, specifically dealing with bidirectional (Bidi) text handling. Let's break down its purpose, functionality, and key components.

**Overall Purpose:**

The code aims to correctly render bidirectional text (text that mixes left-to-right and right-to-left scripts, like Arabic, Hebrew, or mixed English-Arabic) when extracting text from a PDF document.  It handles the complexities of reordering characters to ensure proper visual display.

**Key Components and Functionality:**

1. **`matchPattern(String string, List<Pattern> patterns)`:**
   - **Purpose:**  This is a utility function for matching a given string against a list of regular expression patterns.
   - **Functionality:** Iterates through the provided list of `Pattern` objects and returns the first `Pattern` that matches the input `string`.  This is used to identify list item markers (bullets, numbers, etc.).
   - **Significance:** Enables the code to identify and handle different list formats correctly.

2. **`getListItemPatterns()`:**
   - **Purpose:** Provides a list of regular expression patterns used to identify list item markers.
   - **Functionality:**  If the list hasn't been initialized, it creates a list of `Pattern` objects based on the `LIST_ITEM_EXPRESSIONS` array.
   - **Significance:**  Provides the patterns used by `matchPattern` to determine list item types.

3. **`matchListItemPattern(PositionWrapper pw)`:**
   - **Purpose:**  Identifies the type of list item (bullet, number, etc.) based on the text at a specific position in the PDF.
   - **Functionality:** Uses `matchPattern` to match the text at the given position against the list of list item patterns.
   - **Significance:**  Allows the code to correctly format and interpret lists within the extracted text.

4. **`handleDirection(String word)`:**
   - **Purpose:** This is the core Bidi text handling logic. It reorders characters in a string to ensure proper visual display when the text contains a mix of left-to-right and right-to-left scripts.
   - **Functionality:**
     - Creates a `Bidi` object to analyze the text direction.
     - If the text is mixed (contains both LTR and RTL), it reorders the characters based on their Bidi levels.
     - Mirrors certain characters if they are part of a mirrored run (RTL script).
   - **Significance:**  Crucial for rendering Bidi text correctly.

5. **`parseBidiFile(InputStream input)`:**
   - **Purpose:**  Loads character mirroring mappings from a file (`BidiMirroring.txt`).
   - **Functionality:** Reads the file and populates the `MIRRORING_CHAR_MAP` with character mappings for mirroring.
   - **Significance:**  Enables the accurate mirroring of characters in RTL scripts.

**Data Structures:**

*   **`LIST_ITEM_EXPRESSIONS`:** An array of regular expression patterns used to identify list item markers.
*   **`MIRRORING_CHAR_MAP`:** A `Map` that stores character mappings for mirroring (used in Bidi text handling).

**Workflow:**

1.  **List Item Identification:** `matchListItemPattern` is used to identify list item markers.
2.  **Bidi Text Handling:** The `handleDirection` method is called to reorder characters in Bidi text.
3.  **Character Mirroring:**  The `MIRRORING_CHAR_MAP` is used to mirror characters in mirrored runs.

**Important Considerations:**

*   **Complexity:** Bidi text handling is inherently complex, and this code reflects that complexity.
*   **Performance:** The Bidi analysis and character mirroring can be computationally expensive, especially for large documents.
*   **Accuracy:** The accuracy of the Bidi handling depends on the correctness of the `BidiMirroring.txt` file and the precision of the Bidi analysis.
*   **Dependencies:**  The code relies on the `org.apache.pdfbox.pdmodel.Bidi` class, which is part of the Apache PDFBox library.

**In summary, this code is a sophisticated implementation of Bidi text handling for PDF text extraction, ensuring that mixed-script text is rendered correctly. It's a critical component for accurate and visually appealing PDF text extraction.**
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toString,org.apache.pdfbox.util.DateConverter:toString(java.util.Calendar),165,179,"/**
 * Formats a Calendar object into a string representation.
 * @param cal The Calendar object to format. Returns null if null.
 */","* Converts a Calendar to a string formatted as:
     *     D:yyyyMMddHHmmss#hh'mm'  where # is Z, +, or -.
     * 
     * @param cal The date to convert to a string. May be null.
     * The DST_OFFSET is included when computing the output time zone.
     *
     * @return The date as a String to be used in a PDF document, 
     *      or null if the cal value is null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toISO8601,org.apache.pdfbox.util.DateConverter:toISO8601(java.util.Calendar),190,202,"/**
 * Converts a Calendar object to an ISO 8601 formatted string.
 * @param cal Calendar object to format.
 * @return ISO 8601 formatted string.
 */
","* Converts the date to ISO 8601 string format:
     *     yyyy-mm-ddThh:MM:ss#hh:mm    (where '#"" is '+' or '-').
     *
     * @param cal The date to convert.  Must not be null.
     * The DST_OFFSET is included in the output value.
     * 
     * @return The date represented as an ISO 8601 string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseBigEndianDate,"org.apache.pdfbox.util.DateConverter:parseBigEndianDate(java.lang.String,java.text.ParsePosition)",526,568,"/**
 * Parses a date string in big-endian format and returns a calendar.
 * @param text date string to parse
 * @param initialWhere initial parse position
 * @return GregorianCalendar object or null if parsing fails
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseSimpleDate,"org.apache.pdfbox.util.DateConverter:parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)",584,601,"/**
 * Parses a date string using multiple formats.
 * @param text Date string to parse.
 * @param fmts Date format patterns.
 * @return GregorianCalendar or null if parsing fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTZoffset,"org.apache.pdfbox.util.DateConverter:parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)",429,473,"/**
* Parses a timezone offset from text and applies it to a calendar.
* @param text timezone text to parse
* @param cal calendar to adjust
* @param initialWhere initial parse position
* @return true if timezone was parsed successfully
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toHexString,org.apache.pdfbox.cos.COSString:toHexString(),257,260,"/**
 * Converts the byte array to a hexadecimal string representation.
 */","* This will take this string and create a hex representation of the bytes that make the string.
     *
     * @return A hex string representing the bytes in this string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeExternalSignature,org.apache.pdfbox.pdfwriter.COSWriter:writeExternalSignature(byte[]),958,985,"/**
* Writes a CMS signature to the PDF.
* @param cmsSignature CMS signature as byte array.
* @throws IOException if signature is too large or an error occurs.
*/
","* Write externally created signature of PDF data obtained via {@link #getDataToSign()} method.
     *
     * @param cmsSignature CMS signature byte array
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if source data stream is closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,writePDF,org.apache.pdfbox.cos.COSName:writePDF(java.io.OutputStream),776,805,"/**
 * Writes the name object to the output stream, escaping invalid chars.
 * @param output Output stream to write the name object to.
 */
","* This will output this string as a PDF object.
     * 
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,encode,"org.apache.pdfbox.filter.ASCIIHexFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",135,145,"/**
 * Encodes input stream to hex bytes and writes to output stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexBytes,"org.apache.pdfbox.util.Hex:writeHexBytes(byte[],java.io.OutputStream)",168,174,"/**
 * Writes byte array as hexadecimal to an output stream.
 * @param bytes byte array to write
 * @param output output stream to write to
 * @throws IOException if an I/O error occurs
 */
","* Writes the given byte array as hex value to the given output stream.
     * @param bytes the byte array to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,iterativeMergeSort,"org.apache.pdfbox.util.IterativeMergeSort:iterativeMergeSort(java.lang.Object[],java.util.Comparator)",89,99,"/**
 * Sorts the array using merge sort.
 * Uses a copy array for temporary storage during merging.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,hashCode,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:hashCode(),147,157,"/**
 * Calculates the hash code based on object fields.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,hashCode,org.apache.pdfbox.text.TextPosition:hashCode(),972,990,"/**
 * Generates a hash code based on the object's fields.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream),56,59,"/**
 * Parses an XML document from an input stream.
 * @param is Input stream containing the XML document.
 * @return Parsed Document object.
 * @throws IOException if an I/O error occurs.
 */
","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(java.io.BufferedInputStream),89,112,"/**
 * Detects file type based on initial bytes.
 * @param inputStream BufferedInputStream to read from.
 * @return FileType enum representing detected type.
 */
","* Examines the a file's first bytes and estimates the file's type.
     * <p>
     * Requires a {@link BufferedInputStream} in order to mark and reset the stream to the position
     * at which it was provided to this method once completed.
     * <p>
     * Requires the stream to contain at least eight bytes.
     *
     * @param inputStream a buffered input stream of the file to examine.
     * @return the file type.
     * @throws IOException if an IO error occurred or the input stream ended unexpectedly.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(byte[]),114,117,"/**
 * Detects file type based on the provided byte array.
 * @param fileBytes The byte array representing the file content.
 * @return The detected FileType enum.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes a NonStrokingColor object with a PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Constructs a StrokingColor object with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),39,42,"/**
 * Initializes an AppendRectangleToPath with a PDFGraphicsStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Constructs a BeginInlineImage object with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a ClipEvenOddRule with the given PDFGraphicsStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a ClipNonZeroRule with the given PDFGraphicsStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Constructs a CloseAndStrokePath with the given graphics context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a CloseFillEvenOddAndStrokePath object.
 * @param context The PDFGraphicsStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Constructs a CloseFillNonZeroAndStrokePath object.
 * @param context The PDFGraphicsStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClosePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Initializes a ClosePath object with the given PDFGraphicsStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a CurveTo object with the provided PDFGraphicsStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a CurveToReplicateFinalPoint with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a CurveToReplicateInitialPoint with a PDFGraphicsStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),46,49,"/**
 * Constructs a DrawObject with the given PDFGraphicsStreamEngine.
 * @param context The PDFGraphicsStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/EndPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.EndPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),34,37,"/**
 * Constructs an EndPath object, passing the PDFGraphicsStreamEngine context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a FillEvenOddAndStrokePath with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a FillEvenOddRule with the given PDFGraphicsStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),37,40,"/**
 * Constructs a FillNonZeroAndStrokePath with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a FillNonZeroRule with the given PDFGraphicsStreamEngine.
 * @param context The PDFGraphicsStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LineTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Constructs a LineTo object, passing the PDF graphics stream engine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.MoveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
* Initializes a MoveTo object with the provided graphics stream engine.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Constructs a ShadingFill with the given PDFGraphicsStreamEngine.
 * @param context The PDFGraphicsStreamEngine to use.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/StrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.StrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Constructs a StrokePath with the given PDFGraphicsStreamEngine.
 * @param context The PDFGraphicsStreamEngine for drawing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,<init>,org.apache.pdfbox.text.LegacyPDFStreamEngine:<init>(),106,130,"/**
 * Initializes the PDF stream engine by adding various operators.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,<clinit>,org.apache.pdfbox.cos.COSBoolean:<clinit>(),31,46,"/**
 * Represents the PDF boolean true value as a COSBoolean object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,getPDFName,org.apache.pdfbox.cos.COSName:getPDFName(java.lang.String),685,709,"/**
 * Retrieves a COSName by its string representation.
 * Creates and caches if not found, using weak references.
 */","* This will get a COSName object with that name.
     * 
     * @param aName The name of the object.
     * 
     * @return A COSName with the specified name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,<clinit>,org.apache.pdfbox.cos.COSNull:<clinit>(),31,37,"/**
 * Returns the single COSNull instance representing null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<init>,org.apache.pdfbox.cos.COSFloat:<init>(float),43,46,"/**
 * Initializes a COSFloat object with the given float value.
 * @param aFloat The float value to be stored.
 */
","* Constructor.
     *
     * @param aFloat The primitive float object that this object wraps.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<init>,"org.apache.pdfbox.cos.COSFloat:<init>(float,java.lang.String)",54,58,"/**
 * Initializes a COSFloat with a float value and string representation.
 */","* An internal constructor to avoid formatting for the predefined constants.
     *
     * @param aFloat
     * @param valueString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<init>,org.apache.pdfbox.cos.COSFloat:<init>(java.lang.String),67,112,"/**
 * Parses a float string, handling PDFBox-specific formatting issues.
 * @param aFloat The float string to parse.
 * @throws IOException if parsing fails.
 */
","* Constructor.
     *
     * @param aFloat The primitive float object that this object wraps.
     *
     * @throws IOException If aFloat is not a float.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,<init>,"org.apache.pdfbox.cos.COSInteger:<init>(long,boolean)",117,121,"/**
 * Constructs a COSInteger with the given value and validity.
 * @param val The integer value.
 * @param valid Indicates if the value is valid.
 */
","* constructor.
     *
     * @param val The integer value of this object.
     * @param valid indicates if the value is valid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(byte[]),63,66,"/**
 * Creates a COSString from a byte array.
 * @param bytes The byte array representing the string.
 */
","* Creates a new PDF string from a byte array. This method can be used to read a string from
     * an existing PDF file, or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(),51,54,"/**
 * Constructs a new COSArray with an empty ArrayList and isFixed=true.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(java.util.List),62,69,"/**
 * Constructs a COSObjectables object from a stream of COS objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache),79,83,"/**
 * Initializes a COSStream with a RandomAccessStreamCache.
 * @param streamCache Cache for accessing random access streams.
 */
","* Creates a new stream with an empty dictionary. Data is stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,<init>,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),31,35,"/**
 * Creates an unmodifiable COSDictionary from another COSDictionary.
 * @param dict The COSDictionary to copy.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,createDefault,org.apache.pdfbox.filter.DecodeResult:createDefault(),52,55,"/**
 * Creates a default DecodeResult with an empty COSDictionary.
 * Returns the newly created DecodeResult object.
 */
","* Return a default DecodeResult.
     *
     * @return a default instance of DecodeResult",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(),44,47,"/**
 * Initializes a new PDDocumentInformation object.
 * Creates a new COSDictionary to store document information.
 */",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(),62,67,"/**
 * Initializes a PDResources object with a COSDictionary and caches.
 */",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convert,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convert(java.util.Map),212,219,"/**
 * Creates a COSDictionary from a map of names and COSObjectables.
 * @return A COSDictionary containing the items from the map.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(),35,38,"/**
 * Constructs a new PDDictionaryWrapper with an empty COSDictionary.
 */",* Default constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(),52,55,"/**
 * Default constructor. Initializes the node with a new COSDictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(java.lang.Class),54,58,"/**
 * Constructs a new PDNumberTreeNode with the given value class.
 * @param valueClass Class extending COSObjectable for the node's value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(),72,75,"/**
 * Default constructor, initializes with a new COSDictionary.
 */",* Creates a new empty page label range object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(),36,39,"/**
 * Constructs a PDMarkInfo object, initializing the dictionary.
 */","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(),61,64,"/**
 * Default constructor. Initializes the internal dictionary.
 */",* Constructor for subclasses.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(),53,56,"/**
 * Initializes a new PDBoxStyle object with an empty COSDictionary.
 */","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(),43,46,"/**
 * Initializes a new PDCryptFilterDictionary with a COSDictionary.
 */",* creates a new empty crypt filter dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(),84,87,"/**
 * Initializes a PDEncryption object by creating a COSDictionary.
 */",* creates a new empty encryption dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(),40,43,"/**
 * Initializes a new FDF catalog with an empty COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(),54,57,"/**
 * Constructs a new FDFDictionary, initializing the FDF dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(),54,57,"/**
 * Constructs a new FDFField object, initializing the field.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(),63,66,"/**
 * Constructs a new FDFIconFit object, initializing the 'fit' dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(),44,47,"/**
 * Constructs a FDFJavaScript object, initializing its dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(),38,41,"/**
 * Constructs a new FDFNamedPageReference object.
 * Initializes the internal reference dictionary.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(),40,43,"/**
 * Constructs a new FDFPage object, initializing the page dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(),35,38,"/**
 * Initializes a new FDFPageInfo object.
 * Creates a new COSDictionary to store page information.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(),40,43,"/**
 * Constructs a new FDFTemplate object, initializing the template.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(),51,54,"/**
 * Constructs a PDDeviceNAttributes object, initializing the dictionary.
 */",* Creates a new DeviceN colour space attributes dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(),48,51,"/**
 * Constructs a PDDeviceNProcess object, initializing the dictionary.
 */",* Creates a new DeviceN Process Dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(),84,87,"/**
 * Default constructor. Initializes the shading dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(),35,38,"/**
 * Initializes the PDAdditionalActions object.
 * Creates a COSDictionary to store additional actions.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(),37,40,"/**
 * Initializes the annotation's additional actions with a COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(),37,40,"/**
 * Initializes an empty PDDocumentCatalogAdditionalActions.
 * Creates a COSDictionary to store additional actions.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(),37,40,"/**
 * Constructs a PDFormFieldAdditionalActions, initializing actions.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(),37,40,"/**
 * Initializes the PDPageAdditionalActions with a new COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(),40,43,"/**
 * Creates a new PDTargetDirectory with an empty COSDictionary.
 */","* Default constructor, creates target directory.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(),35,38,"/**
 * Initializes the URI dictionary with a new COSDictionary.
 */","* Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(),48,51,"/**
 * Initializes a PDWindowsLaunchParams object.
 * Creates a COSDictionary to store launch parameters.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(),50,53,"/**
 * Initializes a new PDBorderEffectDictionary with a COSDictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(),69,72,"/**
 * Initializes a new instance of the PDBorderStyleDictionary.
 * Creates a COSDictionary to store border style properties.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(),41,45,"/**
 * Initializes a new PDPropBuild object with a COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(),37,42,"/**
 * Initializes a PDPropBuildDataDict with a COSDictionary.
 * Sets the dictionary to use direct objects.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(),35,39,"/**
 * Constructs a PDSeedValueMDP with an empty, direct COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(),35,39,"/**
 * Initializes a PDSeedValueTimeStamp with an empty COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
* Constructs a PDField with an AcroForm and default dictionary.
* @param acroForm The parent AcroForm object.
*/
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(),42,45,"/**
 * Constructs a new PDViewportDictionary, initializing its COSDictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(),136,139,"/**
 * Initializes a PDViewerPreferences object.
 * Creates a new COSDictionary to store preferences.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",58,63,"/**
 * Constructs a COSObject with a base object and key.
 * @param object The base COSBase object.
 * @param objectKey The key for the COSObject.
 */
","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param objectKey The COSObjectKey of the encapsulated object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<clinit>,org.apache.pdfbox.filter.CCITTFaxDecoderStream:<clinit>(),592,812,"```java
/**
 * Defines black codes and run lengths for image compression.
 */
```",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<clinit>,org.apache.pdfbox.filter.DecodeOptions:<clinit>(),32,32,"/**
 * Returns the default DecodeOptions instance.
 * Provides sensible defaults for decoding.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,<init>,org.apache.pdfbox.filter.FilterFactory:<init>(),39,69,"/**
 * Initializes the filter factory by registering various decode filters.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/ResourceCacheFactory.java,<clinit>,org.apache.pdfbox.pdmodel.ResourceCacheFactory:<clinit>(),29,35,"/**
* Initializes the resource cache creation function.
* Uses DefaultResourceCacheCreateImpl by default.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Creates a PDDefaultAttributeObject from a COSDictionary.
 */","* Creates a default attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a PDUserAttributeObject from a COSDictionary.
 */","* Constructor
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Constructs a PDStandardAttributeObject from a COSDictionary.
*/","* Creates a new standard attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Creates a PDOutlineItem from a COSDictionary.
 * @param dic The COSDictionary containing outline data.
 */
","* Constructor for an existing outline item.
     *
     * @param dic The storage dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),71,75,"/**
 * Creates a child node for a destination tree.
 * @param dic COSDictionary for the new node.
 * @return PDNameTreeNode with the provided dictionary.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),59,63,"/**
 * Creates a child node for embedded files using the provided dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),60,64,"/**
 * Creates a child node of type PDActionJavaScript.
 * @param dic The COSDictionary for the node.
 * @return A PDJavascriptNameTreeNode object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),61,65,"/**
 * Creates a child node for a PDF structure element.
 * @param dic COSDictionary containing element data
 * @return A PDStructureElementNameTreeNode instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getMetadata,org.apache.pdfbox.pdmodel.common.PDStream:getMetadata(),416,434,"/**
 * Retrieves the metadata object. Returns null if not a COSStream.
 */","* Get the metadata that is part of the document catalog. This will return
     * null if there is no meta data for this object.
     * 
     * @return The metadata for this object.
     * @throws IllegalStateException if the value of the metadata entry is different from a stream
     *                               or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMetadata(),416,424,"/**
 * Retrieves metadata from the PDF document.
 * @return PDMetadata object or null if not present.
 */
","* Returns the metadata associated with this XObject, or null if there is none.
     * @return the metadata associated with this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,getExtends,org.apache.pdfbox.pdmodel.common.PDObjectStream:getExtends(),115,119,"/**
 * Gets the extends stream from the COS object.
 * @return PDObjectStream or null if not present.
 */
","* A reference to an object stream, of which the current object stream is
     * considered an extension.
     *
     * @return The object that this stream is an extension.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:<init>(org.apache.pdfbox.cos.COSBase),75,78,"/**
 * Constructs a PDFunctionType0 with the given COSBase object.
 */","* Constructor.
     *
     * @param function The function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:<init>(org.apache.pdfbox.cos.COSBase),44,47,"/**
 * Creates a PDFunctionType3 object from a COSBase.
 * @param functionStream The COSBase representing the function stream.
 */
","* Constructor.
     *
     * @param functionStream The function .",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:<init>(org.apache.pdfbox.cos.COSBase),31,35,"/**
 * Creates a PDFunctionTypeIdentity with a COSBase object.
 * @param function The COSBase object representing the function.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDPostScriptXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:<init>(org.apache.pdfbox.cos.COSStream),34,37,"/**
 * Creates a PS XObject from a COSStream.
 * @param stream The COSStream containing PS data.
 */
","* Creates a PostScript XObject.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream),77,81,"/**
 * Creates a PDFormXObject from a COSStream.
 * @param stream The COSStream containing form data.
 */
","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",89,93,"/**
 * Creates a PDFormXObject from a COSStream and ResourceCache.
 */","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,<clinit>,org.apache.pdfbox.pdmodel.common.function.type4.Operators:<clinit>(),27,75,"/**
 * Initializes various arithmetic, bitwise, relational & stack operators.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,59,"/**
 * Converts a COSDictionary to a PDStructureElement.
 * @param base The COSDictionary to convert.
 * @return A PDStructureElement.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(),91,93,"/**
 * Default constructor for the PublicKeySecurityHandler class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(),86,88,"/**
 * Default constructor for the StandardSecurityHandler class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy),100,103,"/**
 * Constructs a PublicKeySecurityHandler with a protection policy.
 * @param publicKeyProtectionPolicy The policy for public key protection.
 */
","* Constructor used for encryption.
     *
     * @param publicKeyProtectionPolicy The protection policy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy),95,98,"/**
 * Constructs a StandardSecurityHandler with a protection policy.
 * @param standardProtectionPolicy The protection policy to use.
 */
","* Constructor used for encryption.
     *
     * @param standardProtectionPolicy The protection policy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Creates a FDF annotation highlight from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Creates a FDF annotation squiggly line from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Creates a FDF annotation strikeout from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Creates an FDFAnnotationUnderline object from a COSDictionary.
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,createFSIgnored,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:createFSIgnored(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",306,318,"/**
 * Creates an FSFontInfo object, calculating a hash based on checksum settings.
 * @param file The file object.
 * @param format The font format.
 * @param postScriptName The post script name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getStrokingJavaComposite(),665,668,"/**
* Returns a stroking Java Composite instance.
* Uses blendMode and alphaConstant for blending.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getNonStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getNonStrokingJavaComposite(),670,673,"/**
 * Returns a Composite object for non-stroking operations.
 * Uses blendMode and nonStrokingAlphaConstant for blending.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDTilingPattern with a COSDictionary.
 * @param dictionary The COSDictionary containing pattern data.
 */
","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
 * Creates a Type 3 shading with the given dictionary.
 * @param shadingDictionary The COSDictionary for the shading.
 */
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a PDShadingType4 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Creates a ShadingType5 object from a COSDictionary.
 * @param shadingDictionary The shading dictionary.
 */
","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:toPaint(org.apache.pdfbox.util.Matrix),126,130,"/**
 * Creates a Paint object with the given Matrix.
 * @param matrix Transformation matrix to apply.
 * @return AxialShadingPaint instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:toPaint(org.apache.pdfbox.util.Matrix),45,49,"/**
 * Creates a Paint object using the provided Matrix.
 * @param matrix Transformation matrix to apply.
 * @return A RadialShadingPaint object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:toPaint(org.apache.pdfbox.util.Matrix),103,107,"/**
 * Creates a Paint object using the provided Matrix.
 * @param matrix Transformation matrix for the paint.
 * @return A Type1ShadingPaint instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:toPaint(org.apache.pdfbox.util.Matrix),84,88,"/**
 * Creates a Paint object using the provided Matrix.
 * @param matrix Transformation matrix for the paint.
 * @return A Type4ShadingPaint object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:toPaint(org.apache.pdfbox.util.Matrix),80,84,"/**
 * Creates a Paint object for rendering with the given Matrix.
 * @param matrix Transformation matrix to apply.
 * @return A Type5ShadingPaint instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
 * Creates a Paint object using the provided Matrix.
 * @param matrix Transformation matrix to apply.
 * @return A Type6ShadingPaint instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
 * Creates a Paint object with the given matrix.
 * @param matrix The transformation matrix.
 * @return A Type7ShadingPaint object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),39,42,"/**
 * Constructs a PDCaretAppearanceHandler for the given annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Constructs a PDCircleAppearanceHandler with a PDAnnotation.
 * @param annotation The annotation for circle appearance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),38,41,"/**
 * Constructs a PDFileAttachmentAppearanceHandler for an annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),61,64,"/**
 * Constructs a PDFreeTextAppearanceHandler with the given annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),43,46,"/**
 * Creates a PDHighlightAppearanceHandler for a given annotation.
 * @param annotation The annotation to associate with the handler.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),37,40,"/**
 * Creates a PDInkAppearanceHandler for the given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),41,44,"/**
 * Constructs a PDLineAppearanceHandler for a given annotation.
 * @param annotation The annotation to handle appearance for.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Constructs a PDLinkAppearanceHandler for a given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Creates a PDPolygonAppearanceHandler for the given annotation.
 * @param annotation The annotation to associate with this handler.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),40,43,"/**
 * Constructs a PolylineAppearanceHandler for a given annotation.
 * @param annotation The annotation associated with the polyline.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),23,26,"/**
 * Constructs a PDSoundAppearanceHandler with a given annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Constructs a PDSquareAppearanceHandler with a PDAnnotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),47,50,"/**
 * Constructs a SquigglyAppearanceHandler for a given annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
* Constructs a PDStrikeoutAppearanceHandler for a given annotation.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Initializes a PDTextAppearanceHandler with a given annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Constructs a PDUnderlineAppearanceHandler for the given annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),114,126,"/**
 * Generates appearance streams, using custom handler if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),67,79,"/**
 * Constructs appearance streams, using custom handler if available.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),135,147,"/**
 * Generates appearance streams, using custom handler if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),301,313,"/**
 * Generates appearance streams using either custom handler or default.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Generates appearance streams, using custom handler if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),125,137,"/**
 * Generates appearance streams using either a custom handler or default.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),421,433,"/**
 * Generates appearance streams using either custom handler or default.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),233,245,"/**
 * Generates link appearance streams using custom or default handler.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),175,187,"/**
 * Generates appearance streams using either custom handler or default.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),191,203,"/**
 * Generates appearance streams using either custom handler or default.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
 * Generates appearance streams, using custom handler if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
 * Constructs appearance streams, using custom handler if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Generates appearance streams, using custom handler if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Generates appearance streams using custom or default handler.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),239,251,"/**
 * Constructs appearance streams, using custom handler or default.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
 * Generates appearance streams, using custom handler if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Creates a PDPageFitDestination object from a COS array.
 * @param arr The COS array containing the destination parameters.
 */
","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Creates a PDPageFitHeightDestination object from a COS array.
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
* Constructs a PDPageFitRectangleDestination from a COS array.
*/
","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(org.apache.pdfbox.cos.COSArray),55,58,"/**
 * Creates a PDPageFitWidthDestination object from a COS array.
 * @param arr The COS array containing destination parameters.
 */
","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(org.apache.pdfbox.cos.COSArray),53,56,"/**
* Constructs a PDPageXYZDestination from a COSArray.
* @param arr The COSArray containing destination data.
*/
","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
 * Constructs a PDButton object.
 * @param acroForm The PDF acroform.
 * @param field The COSDictionary representing the field.
 * @param parent The parent non-terminal field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
 * Constructs a PDSignatureField with an Acrobat form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",59,62,"/**
 * Constructs a PDVariableText object.
 * @param acroForm The parent AcroForm.
 * @param field The COSDictionary representing the field.
 * @param parent The parent NonTerminalField.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:clone(),478,501,"/**
 * Creates and returns a deep copy of this PDGraphicsState object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,"org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:<init>(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",83,91,"/**
 * Constructs a TilingPaintParameter with given parameters.
 * @param matrix Transformation matrix; cloned.
 * @param patternDict Pattern dictionary.
 * @param colorSpace Color space.
 * @param color Color value.
 * @param xform Affine transform.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacExpertEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:<clinit>(),29,201,"/**
 * Defines MAC Expert encoding table for character mapping.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacOSRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:<init>(),60,68,"/**
 * Initializes MacOSRomanEncoding by iterating through the encoding table.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacRomanEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:<clinit>(),31,249,"/**
 * Defines MacRoman encoding character-code mappings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/StandardEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:<clinit>(),31,189,"/**
 * Defines the standard PDF encoding table.
 * Maps integer values to characters.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:<clinit>(),29,225,"/**
 * Defines a table of symbol encodings.
 * Used for mapping numerical codes to symbols.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,fromFontBox,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:fromFontBox(org.apache.fontbox.encoding.Encoding),36,43,"/**
 * Creates a Type1Encoding from a FontBox encoding.
 * @param encoding FontBox encoding to convert
 * @return Type1Encoding populated from the given encoding
 */
","* Creates an encoding from the given FontBox encoding.
     *
     * @param encoding FontBox encoding
     * @return the encoding created from the given FontBox encoding",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/WinAnsiEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:<clinit>(),31,259,"/**
 * Defines ANSI encoding mappings for characters.
 * Contains mappings from integer to character.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:<clinit>(),29,224,"/**
 * Defines the Zapf Dingbats encoding table.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<clinit>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<clinit>(),25,27,"/**
 * Creates a CompressParameters instance with default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,generatePartialName,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:generatePartialName(),73,84,"/**
 * Generates a unique partial name by incrementing ""Signature"".
 */","* Generate a unique name for the signature.
     * 
     * @return the signature's unique name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:toString(),123,132,"/**
 * Returns a string representation of the object's contents.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase),49,52,"/**
 * Creates a PDSoftMask object from a COSBase dictionary.
 * @param dictionary COSBase object containing mask data
 * @return A PDSoftMask object
 */
","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * 
     * @return the newly created instance of PDSoftMask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,46,"/**
 * Executes a procedure if a condition is true.
 * @param context Execution context containing the stack.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),53,68,"/**
 * Executes InstructionSequences based on a boolean condition.
 * Pops two sequences & a boolean from the execution context stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.cos.ICOSParser),111,114,"/**
 * Constructs a COSDocument using a memory-only stream cache.
 * @param parser The parser used to create the COSDocument.
 */
","* Constructor. Uses main memory to buffer PDF streams.
     * 
     * @param parser Parser to be used to parse the document on demand",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),123,125,"/**
 * Default constructor, uses streamCacheCreateFunction.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,init,org.apache.pdfbox.pdfparser.COSParser:init(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),194,210,"/**
 * Parses EOF lookup range from system property, creates COSDocument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,process,"org.apache.pdfbox.contentstream.operator.state.SetMatrix:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,66,"/**
 * Sets the text and line matrix using six COSNumber arguments.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,process,"org.apache.pdfbox.contentstream.operator.text.BeginText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,49,"/**
 * Initializes the PDF text rendering context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,process,"org.apache.pdfbox.contentstream.operator.text.EndText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,47,"/**
* Ends the current text object and resets text matrix.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryString,"org.apache.pdfbox.cos.COSDictionary:getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",1358,1411,"/**
 * Converts a COSBase object to a string representation.
 * Uses recursion to handle nested objects and avoids cycles.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,retrieveDimensions,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:retrieveDimensions(java.io.ByteArrayInputStream),148,185,"/**
 * Retrieves image dimensions from a byte stream.
 * @param stream Input byte stream containing image data
 * @return Dimensions object containing width, height, and components
 * @throws IOException if an I/O error occurs
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(java.lang.String,java.util.List)",904,907,"/**
* Processes an operation using the provided arguments.
* @param operation The operation to be performed.
* @param arguments Arguments for the operator.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:<clinit>(),66,84,"/**
 * Defines the highlight color used for selected entries.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,create,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",43,50,"/**
 * Creates a PDMarkedContent instance based on the tag.
 * @param tag tag to identify the content type
 * @param properties properties for the content
 * @return PDMarkedContent instance
 */
","* Creates a marked-content sequence.
     * 
     * @param tag the tag
     * @param properties the properties
     * @return the marked-content sequence",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getWidth,org.apache.pdfbox.pdmodel.common.PDRectangle:getWidth(),296,299,"/**
 * Calculates the width of the rectangle.
 * Returns the difference between x coordinates.
 */","* This will get the width of this rectangle as calculated by
     * upperRightX - lowerLeftX.
     *
     * @return The width of this rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,contains,"org.apache.pdfbox.pdmodel.common.PDRectangle:contains(float,float)",173,181,"/**
 * Checks if the given point (x, y) is within the bounds.
 * @param x x-coordinate of the point
 * @param y y-coordinate of the point
 * @return True if the point is within bounds, false otherwise.
 */
","* Method to determine if the x/y point is inside this rectangle.
     * @param x The x-coordinate to test.
     * @param y The y-coordinate to test.
     * @return True if the point is inside this rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getHeight,org.apache.pdfbox.pdmodel.common.PDRectangle:getHeight(),307,310,"/**
* Calculates height by subtracting lower left Y from upper right Y.
*/
","* This will get the height of this rectangle as calculated by
     * upperRightY - lowerLeftY.
     *
     * @return The height of this rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,transform,org.apache.pdfbox.pdmodel.common.PDRectangle:transform(org.apache.pdfbox.util.Matrix),319,338,"/**
 * Transforms the shape using the given matrix.
 * @param matrix Transformation matrix to apply.
 * @return GeneralPath representing the transformed shape.
 */
","* Returns a path which represents this rectangle having been transformed by the given matrix. Note that the
     * resulting path need not be rectangular.
     * 
     * @param matrix the matrix to be used for the transformation
     * @return the transformed rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toGeneralPath,org.apache.pdfbox.pdmodel.common.PDRectangle:toGeneralPath(),357,370,"/**
 * Creates a GeneralPath representing the rectangle's shape.
 * Returns a GeneralPath object.
 */","* Returns a general path equivalent to this rectangle. This method avoids the problems caused by Rectangle2D not
     * working well with -ve rectangles.
     * 
     * @return a general path equivalent to this rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toString,org.apache.pdfbox.pdmodel.common.PDRectangle:toString(),377,382,"/**
 * Returns a string representation of the rectangle's coordinates.
 */","* This will return a string representation of this rectangle.
     *
     * @return This object as a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isNonZeroBoundingBox,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isNonZeroBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),395,403,"/**
 * Checks if the bounding box is non-zero.
 * @param bbox The bounding box to check.
 * @return True if bbox is non-zero, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateMatrix,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateMatrix(org.apache.pdfbox.pdmodel.common.PDRectangle,int)",655,679,"/**
 * Calculates an AffineTransform matrix for rotation.
 * @param bbox Rectangle defining the rotation origin.
 * @param rotation Rotation angle in degrees.
 * @return AffineTransform representing the rotation.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,fillWhitepointCache,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:fillWhitepointCache(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),78,83,"/**
* Populates whitepoint cache with values from the given tristimulus.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,org.apache.pdfbox.cos.COSArray:getInt(int),306,309,"/**
 * Gets an integer at the specified index.
 * @param index the index of the integer to retrieve
 * @return the integer at the given index
 */","* Get the value of the array as an integer.
     *
     * @param index The index into the list.
     *
     * @return The value at that index or -1 if does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,org.apache.pdfbox.cos.COSArray:getName(int),359,362,"/**
 * Gets the name at the specified index.
 * @param index Index of the name to retrieve.
 * @return The name at the given index.
 */
","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The name converted to a string or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(org.apache.pdfbox.cos.COSBase),217,253,"/**
 * Creates an OutputStream with specified filters.
 * @param filters COSBase object representing filters.
 * @return OutputStream for writing data.
 */
","* Returns a new OutputStream for writing stream data, using and the given filters.
     * 
     * @param filters COSArray or COSName of filters to be used.
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",140,149,"/**
 * Creates a PDImageXObject with a stream and resources.
 * @param stream The image stream.
 * @param resources The image resources.
 */
","* Creates an Image XObject with the given stream as its contents and current color spaces. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param stream the XObject stream to read
     * @param resources the current resources",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSuffix(),1011,1047,"/**
 * Determines the suffix based on the stream's filters.
 * Returns null if no matching filter is found.
 */
","* This will get the suffix for this image type, e.g. jpg/png.
     * @return The image suffix or null if not available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(float),1441,1459,"/**
 * Writes a float operand to the output stream, followed by a space.
 * @param real The float value to write.
 * @throws IOException if writing fails.
 */
","* Writes a real number to the content stream.
     * 
     * @param real the real number to be added to the content stream
     * 
     * @throws IOException If the underlying stream has a problem being written to.
     * @throws IllegalArgumentException if the parameter is not a finite number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(int),1467,1471,"/**
 * Writes an integer operand to the output stream, formatted.
 */","* Writes an integer number to the content stream.
     * 
     * @param integer the integer to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperator,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperator(java.lang.String),1491,1495,"/**
 * Writes the given text and then a newline character.
 * @param text The text to write.
 * @throws IOException If an I/O error occurs.
 */
","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream followed by a newline
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:isEmpty(),69,73,"/**
 * Checks if the collection is empty.
 * @return True if the collection is empty, false otherwise.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGB(float[]),348,359,"/**
 * Converts a color value to RGB format, using attributes or tint transform.
 * @param value Color value to convert.
 * @return RGB float array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,<clinit>,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:<clinit>(),39,71,"/**
 * Populates the ByteTrie with file type signatures.
 * Defines file type magic numbers for identification.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromFloat,org.apache.pdfbox.pdfwriter.COSWriter:visitFromFloat(org.apache.pdfbox.cos.COSFloat),1350,1354,"/**
* Writes the COSFloat object to the standard output in PDF format.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSFloat,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSFloat(java.io.OutputStream,org.apache.pdfbox.cos.COSFloat)",270,274,"/**
 * Writes a COSFloat to the output stream, followed by a space.
 * @param output Output stream to write to
 * @param cosFloat COSFloat object to write
 */
","* Write the given {@link COSFloat} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosFloat The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,toIncrement,org.apache.pdfbox.cos.COSUpdateInfo:toIncrement(),52,55,"/**
 * Returns the COS increment object from the update state.
 */","* Uses this {@link COSUpdateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on this {@link COSUpdateInfo}.
     * @see COSIncrement",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addObjectToWrite,org.apache.pdfbox.pdfwriter.COSWriter:addObjectToWrite(org.apache.pdfbox.cos.COSBase),535,573,"/**
 * Adds an object to the list of objects to write, avoiding duplicates.
 * @param object The COSBase object to add.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toFloatArray,org.apache.pdfbox.cos.COSArray:toFloatArray(),639,648,"/**
 * Converts the COS array elements to a float array.
 * Returns an array of floats, using 0.0 if not a COSNumber.
 */
","* This will take an COSArray of numbers and convert it to a float[].
     *
     * @return This COSArray as an array of float numbers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberFloatList,org.apache.pdfbox.cos.COSArray:toCOSNumberFloatList(),703,719,"/**
 * Converts COS numbers to a list of Float objects.
 * Returns null for non-COSNumber elements.
 */","* This will return a list of float values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of float values of the COSArray of COSNumbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberIntegerList,org.apache.pdfbox.cos.COSArray:toCOSNumberIntegerList(),726,742,"/**
 * Converts COS numbers to a list of Integers, null otherwise.
 */","* This will return a list of int values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of int values of the COSArray of COSNumbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,hasMCIDs,org.apache.pdfbox.multipdf.Splitter$KCloner:hasMCIDs(org.apache.pdfbox.cos.COSBase),535,553,"/**
 * Checks if COSBase contains a COSInteger, directly or in array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMin,org.apache.pdfbox.pdmodel.common.PDRange:getMin(),96,100,"/**
* Returns the minimum value from the range array as a float.
*/","* This will get the minimum value of the range.
     *
     * @return The min value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMax,org.apache.pdfbox.pdmodel.common.PDRange:getMax(),117,121,"/**
 * Returns the maximum value from the range array as a float.
 */","* This will get the maximum value of the range.
     *
     * @return The max value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getColourByIndex,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getColourByIndex(int),158,167,"/**
 * Retrieves a PDGamma object from the array at the given index.
 * @param index index of the PDGamma object in the array
 * @return PDGamma object or null if the index is invalid.
 */
","* Gets the colour by edge index.
     * 
     * @param index edge index
     * @return the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getDocumentIDBytes,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getDocumentIDBytes(org.apache.pdfbox.cos.COSArray),299,314,"/**
 * Extracts document ID bytes from a COS array.
 * @param documentIDArray COSArray containing the document ID.
 * @return Byte array of the document ID or empty array if null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getInstance,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getInstance(org.apache.pdfbox.cos.COSBase),255,279,"/**
 * Retrieves BlendMode from COSBase, returns NORMAL if not found.
 * @param cosBlendMode COSBase representing the blend mode.
 * @return BlendMode object.
 */
","* Determines the blend mode from the BM entry in the COS ExtGState.
     *
     * @param cosBlendMode name or array
     * @return blending mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getColorantNames(),476,479,"/**
 * Returns a list of colorant names from the array.
 */","* Returns the list of colorants.
     * @return the list of colorants",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getAlternateColorSpace(),531,538,"/**
 * Returns the alternate color space, creating it if necessary.
 */","* This will get the alternate color space for this separation.
     *
     * @return The alternate color space.
     *
     * @throws IOException If there is an error getting the alternate color
     * space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,checkArray,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:checkArray(org.apache.pdfbox.cos.COSArray),134,144,"/**
 * Validates an ICCBased colorspace array.
 * Throws IOException if array is invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getHival,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getHival(),250,253,"/**
 * Returns the high-value integer from the array at index 2.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getColorantName(),264,268,"/**
 * Returns the colorant name from the array.
 */","* Returns the colorant name.
     * @return the name of the colorant",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPage(),66,78,"/**
 * Retrieves the first page from the array.
 * Returns a PDPage object or null if the array is empty.
 */
","* This will get the page for this destination. A page destination can either reference a page
     * (for a local destination) or a page number (when doing a remote destination to another PDF).
     * If this object is referencing by page number then this method will return null and
     * {@link #getPageNumber()} should be used.
     *
     * @return The page for this destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPageNumber(),98,110,"/**
 * Gets the page number from the array. Returns -1 if empty.
 */","* This will get the page number for this destination. A page destination can either reference a
     * page (for a local destination) or a page number (when doing a remote destination to another
     * PDF). If this object is referencing by page number then this method will return that number,
     * otherwise -1 will be returned.
     *
     * @return The zero-based page number for this destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getZoom(),122,130,"/**
 * Gets the zoom level from the array. Returns -1 if not a number.
 */","* Get the zoom value.  Return values of 0 or -1 imply that the current zoom
     * will be used.
     *
     * @return The zoom value for the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(org.apache.pdfbox.cos.COSArray),67,77,"/**
 * Initializes a Matrix from a COSArray.
 * @param array COSArray containing matrix elements.
 */
","* Creates a matrix from a 6-element (a b c d e f) COS array.
     *
     * @param array source array, elements must be or extend COSNumber",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSDictionary:getIndirectObjectKeys(java.util.Collection),1436,1485,"/**
* Collects indirect object keys from items, avoiding recursion.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,"org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",160,168,"/**
 * Gets a dictionary object by the first or second key.
 * @param firstKey First key to search for.
 * @param secondKey Second key to try if the first fails.
 * @return COSBase object or null if not found.
 */
","* This is a special case of getDictionaryObject that takes multiple keys, it will handle the situation where
     * multiple keys could get the same value, ie if either CS or ColorSpace is used to get the colorspace. This will
     * get an object from this dictionary. If the object is a reference then it will dereference it and get it from the
     * document. If the object is COSNull then null will be returned.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName),518,526,"/**
* Retrieves a COSName object from the dictionary by key.
* @param key The COSName key to search for.
* @return The COSName object or null if not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a name. Null is returned
     * if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COS name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName),552,560,"/**
 * Retrieves a COSDictionary associated with the given key.
 * @param key The key to search for.
 * @return The COSDictionary or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSDictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSStream,org.apache.pdfbox.cos.COSDictionary:getCOSStream(org.apache.pdfbox.cos.COSName),587,595,"/**
 * Retrieves a COSStream object associated with the given key.
 * @param key The key to look up.
 * @return The COSStream object, or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSStream. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSStream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSArray,org.apache.pdfbox.cos.COSDictionary:getCOSArray(org.apache.pdfbox.cos.COSName),604,612,"/**
 * Retrieves a COSArray object associated with the given key.
 * @param key The key to search for in the dictionary.
 * @return The COSArray object, or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSArray. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSArray.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,"org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",622,630,"/**
 * Retrieves a COSName from the dictionary, or defaultValue if not found.
 */","* This is a convenience method that will get the dictionary object that is expected to be a name. Default is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The COS name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName,long)",1078,1087,"/**
 * Gets the long value associated with a key, or default if absent.
 * @param key COSName to look up
 * @param defaultValue Default value if key is not found
 * @return Long value or default value.
 */
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName,float)",1134,1143,"/**
 * Gets the float value associated with a key, or default if absent.
 */
","* This is a convenience method that will get the dictionary object that is expected to be an float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentStreams,org.apache.pdfbox.pdmodel.PDPage:getContentStreams(),194,212,"/**
* Returns an iterator of content streams from the page.
*/","* Returns the content streams which make up this page.
     * 
     * @return content stream iterator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,hasContents,org.apache.pdfbox.pdmodel.PDPage:hasContents(),309,321,"/**
 * Checks if the page content is not empty.
 * Returns true if content exists, false otherwise.
 */
","* Returns true if this page has one or more content streams.
     * 
     * @return true if the page has a non empty content stream, otherwise false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getClassNames(),328,361,"/**
 * Retrieves class names from COS object.
 * Returns a Revisions object containing class names.
 */","* Returns the class names together with their revision numbers (C).
     * 
     * @return the class names as a list, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getK(),78,81,"/**
* Retrieves the value associated with the key ""K"" from the COS object.
*/","* Returns the K entry. This can be a dictionary representing a structure element, or an array
     * of them. To get it as a list of PDStructureElement objects, use {@link #getKids()} instead.
     *
     * @return the K entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getValue(),84,87,"/**
* Retrieves the value associated with the ""V"" key.
* Returns a COSBase object representing the value.
*/
","* Returns the property value.
     * 
     * @return the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:isEncryptMetaData(),117,127,"/**
 * Checks if metadata encryption is enabled. Returns true by default.
 */","* Will get the EncryptMetaData dictionary info.
     *
     * @return true if EncryptMetaData is explicitly set (the default is true)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerEncryptionKey(),351,360,"/**
 * Retrieves the owner encryption key as a byte array.
 * Returns null if the key is not found in the dictionary.
 */
","* This will get the OE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserEncryptionKey(),381,390,"/**
 * Retrieves the user encryption key from the dictionary.
 * @return byte[] encryption key or null if not found.
 */
","* This will get the UE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPerms(),610,619,"/**
 * Retrieves the permissions byte array from the dictionary.
 * @return Permissions byte array or null if not found.
 */
","* Get the Perms entry in the encryption dictionary.
     *
     * @return A 16 byte array or null if there is no Perms entry.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getPage(),421,430,"/**
 * Gets the page number from the annotation dictionary.
 * Returns Integer representing the page or null if not found.
 */","* This will get the page number or null if it does not exist.
     *
     * @return The page number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getCOSValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getCOSValue(),269,284,"/**
 * Retrieves the COS value from the field.
 * Returns COSBase or throws IOException for unknown types.
 */","* Returns the COS value of this field.
     *
     * @return The COS value of the field, maybe <code>null</code>.
     * @throws IOException If there is an error getting the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getFieldFlags(),331,340,"/**
 * Gets the field flags from the field dictionary.
 * @return Integer representing field flags, or null if not present.
 */
","* This will get the 'Ff' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetFieldFlags(),375,384,"/**
 * Gets the set flags from the field's dictionary.
 * @return Integer representing the set flags, or null.
 */
","* This will get the 'SetFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearFieldFlags(),419,428,"/**
 * Gets the clear flags value from the field dictionary.
 * @return Integer representing clear flags, or null if absent.
 */
","* This will get the 'ClrFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getWidgetFieldFlags(),463,472,"/**
 * Retrieves the widget field flags from the dictionary.
 * @return Integer flag value or null if not found.
 */
","* This will get the 'F' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetWidgetFieldFlags(),507,516,"/**
 * Gets the set widget field flags from the field dictionary.
 * @return Integer representing the flags, or null if not present.
 */
","* This will get the 'SetF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearWidgetFieldFlags(),551,560,"/**
 * Gets the clear widget field flags from the field dictionary.
 * @return Integer representing flags, or null if not present.
 */
","* This will get the 'ClrF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultWidth(),245,260,"/**
 * Returns the default width. Reads from dict or defaults to 1000.
 */","* This will get the default width. The default value for the default width is 1000.
     *
     * @return The default width for the glyphs in this font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getColorSpace(),76,84,"/**
 * Retrieves the color space from the dictionary.
 * @return PDColorSpace object or null if not present.
 */
","* Returns the process color space
     * @return the process color space
     * @throws IOException if the color space cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(org.apache.pdfbox.pdmodel.PDResources),79,86,"/**
 * Retrieves the color space from resources, creating if needed.
 * @param resources PDResources object
 * @return The color space.
 */
","* Returns the group color space or null if it isn't defined.
     *
     * @param resources useful for its cache. Can be null.
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(org.apache.pdfbox.cos.COSDictionary),43,51,"/**
 * Creates a PDOptionalContentGroup from a COSDictionary.
 * @param dict The COSDictionary containing the OCG definition.
 */
","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),47,55,"/**
 * Creates a PDOptionalContentMembershipDictionary from a COSDictionary.
 * @param dict The COSDictionary to initialize from.
 */
","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getOverprintMode(),403,413,"/**
 * Gets the overprint mode. Returns null if not found.
 */","* This will get the overprint control mode.
     *
     * @return The overprint control mode or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSoftMask(),602,606,"/**
* Retrieves the soft mask associated with this object.
* Returns null if no soft mask is present.
*/
","* Returns the soft mask stored in the COS dictionary
     *
     * @return the soft mask or null if there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFloatItem,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFloatItem(org.apache.pdfbox.cos.COSName),637,648,"/**
* Gets the float value associated with the given key.
* @param key COSName representing the key to retrieve
* @return Float value or null if not found.
*/
","* This will get a float item from the dictionary.
     *
     * @param key The key to the item.
     *
     * @return The value for that item.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer(),676,684,"/**
 * Retrieves the transfer object from the dictionary.
 * Returns null if it's not a COSArray of size 4.
 */
","* This will get the transfer function of the /TR dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer2(),708,716,"/**
 * Retrieves the TR2 object from the dictionary.
 * Returns null if it's not a COSArray of size 4.
 */
","* This will get the transfer function of the /TR2 dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getBackdropColor,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getBackdropColor(),172,179,"/**
 * Returns the backdrop color COS array, lazily initialized.
 */","* Returns the backdrop color.
     * 
     * @return the backdrop color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getOpenInNewWindow(),129,137,"/**
 * Gets the OpenMode for new windows, based on COS object.
 * Returns OpenMode.USER_PREFERENCE if no value is found.
 */
","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getT(),60,64,"/**
* Gets the 'T' object from the action dictionary.
* Returns a COSBase object (Dictionary, String, or Array).
*/
","* The annotation or annotations to be hidden or shown
     *
     * @return The T entry of the specific thread action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getOpenInNewWindow(),212,220,"/**
 * Gets the OpenMode for new windows based on COS object.
 * Returns OpenMode.USER_PREFERENCE if no value is found.
 */
","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getD(),92,95,"/**
* Retrieves the 'D' dictionary object from the action.
* Returns a COSBase object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getOpenInNewWindow(),119,127,"/**
 * Gets the OpenMode for new windows based on COS object.
 * Returns OpenMode.USER_PREFERENCE if no value is found.
 */
","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getD(),63,66,"/**
* Retrieves the 'D' dictionary object from the action.
* Returns a COSBase object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getB(),101,104,"/**
 * Returns the value associated with the key ""B"" in the action dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getNamedDestination(),178,186,"/**
 * Retrieves a named destination from the dictionary.
 * @return PDNamedDestination object or null if not found.
 */
","* If the value in the /P entry is a string, this will get a named destination in the current
     * document that provides the page number of the file attachment annotation.
     *
     * @return a named destination or null if the /P entry value is missing or not a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(),319,327,"/**
 * Retrieves the contents as a byte array. Returns empty array if null.
 */","* Returns the /Contents string as a byte array, i.e. the embedded signature between the
     * byterange gap.
     *
     * @return a byte array containing the signature, or an empty array if there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getXFA(),584,588,"/**
 * Retrieves the XFA resource. Returns null if not present.
 */","* Get the XFA resource, the XFA resource is only used for PDF 1.5+ forms.
     *
     * @return The xfa resource or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getInheritableAttribute,org.apache.pdfbox.pdmodel.interactive.form.PDField:getInheritableAttribute(org.apache.pdfbox.cos.COSName),88,102,"/**
 * Gets an inheritable attribute value by key.
 * Returns value from dict, parent, or acroForm.
 */","* Returns the given attribute, inheriting from parent nodes if necessary.
     *
     * @param key the key to look up
     * @return COS value for the given key",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValue(),187,190,"/**
 * Retrieves the value associated with the 'V' key.
 * Returns a COSBase object representing the value.
 */
","* Returns the COSBase value of the ""V"" entry.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the COSBase value of the ""V"" entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValueAsString(),198,203,"/**
 * Returns the value of the COS object as a string.
 * Returns """" if the value is null.
 */
","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getDefaultValue(),244,247,"/**
 * Returns the default value from the COS object.
 */","* Returns the default value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the new default value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,close,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:close(),156,173,"/**
 * Closes the visual signature and PDF source, releasing resources.
 */","* Closes the visual signature COSDocument, if any. Do not call this before you're saved your
     * signed PDF document, or saving will fail because COSStream objects held both by the
     * COSDocument and by the signed document would no longer be available.
     *
     * @throws IOException if the document could not be closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneForNewDocument(org.apache.pdfbox.cos.COSBase),81,103,"/**
 * Clones a COSBase object for use in a new document.
 * @param base The COSBase object to clone.
 * @return Cloned COSBase object or the original if already cloned.
 */","* Deep-clones the given object for inclusion into a different PDF document identified by the destination parameter.
     * 
     * Expert use only, don’t use it if you don’t know exactly what you are doing.
     * 
     * @param base the initial object as the root of the deep-clone operation
     * @return the cloned instance of the base object
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,"org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",583,605,"/**
 * Writes a COS object to the output stream with associated key.
 * @param key COSObjectKey identifying the object
 * @param obj COSBase object to write
 */
","* This will write a COS object for a predefined key.
     *
     * @param key The key of the object to write.
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getKey(org.apache.pdfbox.cos.COSBase),267,270,"/**
 * Retrieves the key for a given COSBase object from the pool.
 * @param object The COSBase object to find the key for.
 */
","* Returns the {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} is registered for in this compression pool.
     * @return The {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool, if
     * such an object is contained.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:contains(org.apache.pdfbox.cos.COSBase),255,258,"/**
 * Checks if the object pool contains the given COSBase object.
 * @param object The COSBase object to check for.
 * @return True if the object is in the pool, false otherwise.
 */
","* Returns true, if the given {@link COSBase} is a registered object of this compression pool.
     *
     * @param object The object, that shall be checked.
     * @return True, if the given {@link COSBase} is a registered object of this compression pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,createObjectStreams,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:createObjectStreams(),302,317,"/**
 * Creates a list of COSWriterObjectStream objects for writing.
 * Returns a list of streams, each containing object data.
 */","* Creates {@link COSWriterObjectStream}s for all currently registered objects of this pool, that have been marked
     * as fit for being compressed in this manner. Such object streams may be added to a PDF document and shall be
     * declared in a document's {@link PDFXRefStream} accordingly. The objects contained in such a stream must not be
     * added to the document separately.
     *
     * @return The created {@link COSWriterObjectStream}s for all currently registered compressible objects.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectKey,"org.apache.pdfbox.pdfparser.BaseParser:getObjectKey(long,int)",194,213,"/**
 * Retrieves a COSObjectKey, using a cache for performance.
 * @param num object number
 * @param gen object generation
 * @return COSObjectKey object
 */
","* Returns the object key for the given combination of object and generation number. The object key from the cross
     * reference table/stream will be reused if available. Otherwise a newly created object will be returned.
     * 
     * @param num the given object number
     * @param gen the given generation number
     * 
     * @return the COS object key",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjects,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjects(),132,217,"/**
 * Performs a BF search for objects, handling potential PDF truncations.
 */","* Brute force search for every object in the pdf.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreamOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreamOffsets(),568,634,"/**
 * Finds offsets of object streams using breadth-first search.
 * @return Map of object stream offsets and corresponding keys.
 * @throws IOException if an I/O error occurs during the search.
 */","* Search for all offsets of object streams within the given pdf
     * 
     * @return a map of all offsets for object streams
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:parse(org.apache.pdfbox.pdfparser.XrefTrailerResolver),119,152,"/**
 * Parses xref entries, resolving references using the provided resolver.
 */","* Parses through the unfiltered stream and populates the xrefTable HashMap.
     * 
     * @param resolver resolver to read the xref/trailer information
     * @throws IOException If there is an error while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,findObjectKey,"org.apache.pdfbox.pdfparser.XrefParser:findObjectKey(org.apache.pdfbox.cos.COSObjectKey,long,java.util.Map)",478,548,"/**
 * Attempts to find a COS object key at the given offset.
 * @param offset byte offset to search for the object key.
 * @return COSObjectKey if found, null otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefTable,org.apache.pdfbox.pdfparser.XrefParser:parseXrefTable(long),577,691,"/**
 * Parses an Xref table, extracting object information.
 * @param startByteOffset offset of the Xref table
 * @return true if parsing was successful
 */","* This will parse the xref table from the stream and add it to the state
     * The XrefTable contents are ignored.
     * @param startByteOffset the offset to start at
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,<clinit>,org.apache.pdfbox.pdfparser.xref.FreeXReference:<clinit>(),30,30,"/**
 * Represents a null FreeXReference instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,fillGapsWithFreeEntries,org.apache.pdfbox.pdfwriter.COSWriter:fillGapsWithFreeEntries(),801,844,"/**
 * Fills gaps in XRef entries with free object references.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getObjectKey,org.apache.pdfbox.pdfwriter.COSWriter:getObjectKey(org.apache.pdfbox.cos.COSBase),1067,1106,"/**
 * Retrieves or generates a COSObjectKey for a given COSBase object.
 * @param obj The COSBase object to get the key for.
 * @return The COSObjectKey associated with the object.
 */
","* This will get the object key for the object.
     *
     * @param obj The object to get the key for.
     *
     * @return The object key for the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,put,"org.apache.pdfbox.pdfwriter.compress.COSObjectPool:put(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",59,83,"/**
 * Adds a COSBase object to the key pool, assigning a key if needed.
 * @param key The key for the object.
 * @param object The COSBase object to add.
 * @return The assigned COSObjectKey, or null if object already present.
 */
","* Update the key and object maps.
     *
     * @param key The key, that shall be added.
     * @param object The object, that shall be added.
     * @return The actual key, the object has been added for.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,compareTo,org.apache.pdfbox.pdfparser.xref.AbstractXReference:compareTo(java.lang.Object),27,27,"/**
 * Abstract implementation of the XReferenceEntry interface.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream),237,240,"/**
 * Creates a COSWriter with the given output stream.
 * @param outputStream The stream to write COS data to.
 */
","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead,java.util.Set)",304,307,"/**
 * Constructor to initialize with output stream and initial objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,setNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:setNeedToBeUpdated(boolean),41,44,"/**
 * Sets a flag indicating whether the data needs updating.
 */
","* Set the update state of the dictionary for the COSWriter. This indicates whether an object is
     * to be written when there is an incremental save.
     *
     * @param flag the update state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(),219,222,"/**
 * Updates the object's state. Calls the overloaded method with true.
 */","* Calls {@link #update(boolean)} with {@code true} as the new update state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,"org.apache.pdfbox.cos.COSArray:getString(int,java.lang.String)",418,430,"/**
 * Gets string at index, returns defaultValue if not a COSString.
 */","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName),651,664,"/**
 * Gets the name as a String from a COS object.
 * @param key COSName key to retrieve the name from.
 * @return String representation of the name or null.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName),716,725,"/**
 * Retrieves a string value associated with the given COS key.
 * @param key The COSName key to look up.
 * @return The string value or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,equals,org.apache.pdfbox.cos.COSString:equals(java.lang.Object),274,284,"/**
 * Checks if this COSString is equal to another COSString object.
 * @param obj The object to compare to.
 * @return True if equal, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toString,org.apache.pdfbox.cos.COSString:toString(),293,297,"/**
 * Returns a string representation of this COSString object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convertBasicTypesToMap,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary),230,270,"/**
 * Converts a COSDictionary to a Map<String, Object>.
 * @param map The COSDictionary to convert.
 * @return A Map<String, Object> or null if map is null.
 */
","* This will take a COS dictionary and convert it into COSDictionaryMap.  All cos
     * objects will be converted to their primitive form.
     *
     * @param map The COS mappings.
     * @return A standard java map.
     * @throws IOException If there is an error during the conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:getFile(),55,59,"/**
 * Returns the file path as a string.
 */","* This will get the file name.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getOption(),81,84,"/**
 * Retrieves the string value of the option object.
 */","* This will get the string of one of the available options. A required element.
     *
     * @return An available option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getDefaultAppearanceString(),101,104,"/**
 * Returns the default appearance string from the option object.
 */","* This will get the string of default appearance string. A required element.
     *
     * @return A default appearance string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:getNamedDestination(),88,101,"/**
 * Gets the named destination as a String.
 * Returns null if namedDestination is neither COSString nor COSName.
 */
","* This will get the name of the destination.
     *
     * @return The name of the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,getPairableItems,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:getPairableItems(org.apache.pdfbox.cos.COSBase,int)",133,167,"/**
 * Extracts string items from COSBase, supporting string or array input.
 * @param items COSBase object containing items.
 * @param pairIdx Index to extract from array (0 or 1).
 * @return List of extracted strings.
 */
","* Return either one of a list which can have two-element arrays entries.
     * <p>
     * Some entries in a dictionary can either be an array of elements
     * or an array of two-element arrays. This method will either return
     * the elements in the array or in case of two-element arrays, the element
     * designated by the pair index
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the items contain
     * two-element arrays and the index is not 0 or 1.
     * </p>
     * 
     * @param items the array of elements or two-element arrays
     * @param pairIdx the index into the two-element array
     * @return a List of single elements",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getExportValues(),249,262,"/**
 * Retrieves export values from inheritable attribute.
 * Returns a list of strings, empty if no values exist.
 */","* This will get the (optional) export values.
     * 
     * <p>The export values are defined in the field dictionaries /Opt key.</p>
     * 
     * <p>The option values are used to define the export values
     * for the field to 
     * <ul>
     *  <li>hold values in non-Latin writing systems as name objects, which represent the field value, are limited
     *      to PDFDocEncoding
     *  </li>
     *  <li>allow radio buttons having the same export value to be handled independently
     *  </li>
     * </ul>
     * 
     * @return List containing all possible export values. If there is no /Opt entry an empty list will be returned.
     * 
     * @see #getOnValues()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueFor,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueFor(org.apache.pdfbox.cos.COSName),451,463,"/**
 * Gets a list of strings for the given COS name.
 * Returns empty list if value is not COSString or COSArray.
 */","* Returns the selected values, or an empty List, for the given key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearance(),74,84,"/**
 * Retrieves the default appearance string from inheritable attributes.
 * Returns null if the attribute is not a COSString.
 */","* Get the default appearance.
     * 
     * This is an inheritable attribute.
     * 
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     * 
     * @return the DA element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(java.lang.String),87,90,"/**
* Constructs a COSString object from a String.
* @param text The string to be wrapped in the COSString.
*/
","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isStandard14(),370,393,"/**
 * Checks if the font is Standard 14 compliant based on encoding differences.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,encode,"org.apache.pdfbox.filter.ASCII85Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",43,52,"/**
 * Encodes input stream to ASCII85 format using given parameters.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode1D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode1D(),152,173,"/**
 * Decodes runs from trees to populate changesCurrentRow array.
 * Uses whiteRunTree/blackRunTree, updates index, and flips color.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode2D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode2D(),175,242,"/**
 * Decodes 2D data, updating row changes based on the code tree.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encode2D,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encode2D(),167,220,"/**
 * Encodes data into a 2D format, using different modes.
 * Uses helper methods to determine changes and writes data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",58,134,"/**
 * Decodes an image stream into a decoded output stream.
 * @param encoded Input image stream
 * @param decoded Output stream for decoded image
 * @param parameters COSDictionary parameters
 * @param index Index of the image
 * @param options Decode options
 * @return DecodeResult object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.io.InputStream),162,166,"/**
* Constructs a PDVisibleSignDesigner from an image stream.
* @param imageStream Input stream for the visible signature image.
*/
","* Constructor usable for signing existing signature fields.
     *
     * @param imageStream image as a stream
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureImage(java.lang.String),270,277,"/**
 * Reads an image from the given path and prepares it for display.
 * @param path Path to the image file.
 * @throws IOException if an I/O error occurs.
 */
","* Set the image for the signature.
     *
     * @param path Path of the image file.
     * @return Visible Signature Configuration Object
     * @throws IOException if the image for the signature could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[],int,int)",297,327,"/**
 * Writes data to the stream, handling PNG predictors and row decoding.
 * @param bytes Byte array to write.
 * @param off Offset in the array.
 * @param len Number of bytes to write.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,flush,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:flush(),349,359,"/**
 * Flushes the current row, padding with zeros if incomplete.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:<clinit>(),33,50,"/**
 * Represents transition directions, specific to certain transitions.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/ImageType.java,<clinit>,org.apache.pdfbox.rendering.ImageType:<clinit>(),26,67,"/**
 * Returns the BufferedImage type corresponding to the binary format.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,<clinit>,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:<clinit>(),37,37,"/**
 * Singleton instance of the SecurityHandlerFactory.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.common.PDStream),36,39,"/**
 * Constructs a PDTransparencyGroup from a given stream.
 */","* Creates a Transparency Group for reading.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",222,233,"/**
 * Creates a holder form and associates it with the PDF structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",269,279,"/**
 * Creates and sets an inner form XObject within the PDF structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionary,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionary(boolean),281,328,"/**
 * Parses a COSDictionary from the input source.
 * @param isDirect if the dictionary is direct
 * @return COSDictionary object
 */
","* This will parse a PDF dictionary.
     *
     * @param isDirect indicates whether the dictionary to be read is a direct object
     * @return The parsed dictionary, never null.
     *
     * @throws IOException If there is an error reading the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(),1052,1067,"/**
 * Reads a string from the source, skipping spaces.
 * Returns the string or null if an error occurs.
 */
","* This will read the next string from the stream.
     *
     * @return The string that was read from the stream, never null.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedString,"org.apache.pdfbox.pdfparser.BaseParser:readExpectedString(char[],boolean)",1076,1089,"/**
 * Reads a string from the source, skipping spaces if specified.
 * @param expectedString String to read
 * @param skipSpaces Whether to skip leading/trailing spaces
 * @throws IOException if the expected string is not found
 */
","* Reads given pattern from {@link #source}. Skipping whitespace at start and end if wanted.
     * 
     * @param expectedString pattern to be skipped
     * @param skipSpaces if set to true spaces before and after the string will be skipped
     * @throws IOException if pattern could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(int),1117,1140,"/**
 * Reads a string of specified length from the source.
 * @param length The maximum length of the string to read.
 * @return The string read from the source.
 */
","* This will read the next string from the stream up to a certain length.
     *
     * @param length The length to stop reading at.
     *
     * @return The string that was read from the stream of length 0 to length.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readInt,org.apache.pdfbox.pdfparser.BaseParser:readInt(),1387,1406,"/**
 * Reads an integer from the input source.
 * Throws IOException if not a valid integer.
 */","* This will read an integer from the stream.
     *
     * @return The integer that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLong,org.apache.pdfbox.pdfparser.BaseParser:readLong(),1416,1434,"/**
 * Reads a long value from the input source.
 * Throws IOException if parsing fails.
 */
","* This will read an long from the stream.
     *
     * @return The long that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,calculateXRefFixedOffset,org.apache.pdfbox.pdfparser.XrefParser:calculateXRefFixedOffset(long),326,343,"/**
 * Calculates the fixed offset for an object's xref table/stream.
 * @param objectOffset Offset of the object to search for.
 * @return Fixed offset or 0 if not found.
 */
","* Try to find a fixed offset for the given xref table/stream.
     * 
     * @param objectOffset the given offset where to look at
     * @return the fixed offset
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)",854,900,"/**
 * Computes an encrypted password based on revision and parameters.
 * @param password Password bytes
 * @return Encrypted password bytes
 */
","* This will compute the user password hash.
     *
     * @param password The plain text password.
     * @param owner The owner password hash.
     * @param permissions The document permissions.
     * @param id The document id.
     * @param encRevision The revision of the encryption.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return The user password.
     *
     * @throws IOException if the password could not be computed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword234(byte[],byte[],int,int)",671,701,"/**
 * Encrypts owner data using RC4 with a derived key.
 * @param ownerPassword Owner's password for key derivation.
 * @return Encrypted byte array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeOwnerPassword(byte[],byte[],int,int)",914,945,"/**
 * Encrypts user password using RC4 with owner password and revision.
 * @param ownerPassword Owner's password for encryption.
 * @param userPassword User's password to be encrypted.
 */
","* Compute the owner entry in the encryption dictionary.
     *
     * @param ownerPassword The plaintext owner password.
     * @param userPassword The plaintext user password.
     * @param encRevision The revision number of the encryption algorithm.
     * @param length The length of the encryption key.
     *
     * @return The o entry of the encryption dictionary.
     *
     * @throws IOException if the owner password could not be computed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,process,"org.apache.pdfbox.contentstream.operator.state.Concatenate:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,68,"/**
 * Concatenates a 6-element matrix to the current transformation matrix.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",48,77,"/**
* Concatenates a translation matrix to the text line matrix.
* Requires two numeric arguments; otherwise, method is ignored.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,rotate,org.apache.pdfbox.util.Matrix:rotate(double),278,281,"/**
 * Rotates the matrix by a given angle.
 * @param theta Rotation angle in radians.
 */","* Rotates this matrix by the given factors.
     *
     * @param theta The angle of rotation measured in radians",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,applyTextAdjustment,"org.apache.pdfbox.contentstream.PDFStreamEngine:applyTextAdjustment(float,float)",722,726,"/**
* Translates the text matrix by the given x and y values.
* @param tx x-coordinate translation
* @param ty y-coordinate translation
*/
","* Applies a text position adjustment from the TJ operator. May be overridden in subclasses.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,org.apache.pdfbox.util.Matrix:translate(org.apache.pdfbox.util.Vector),237,240,"/**
 * Translates the vector by its x and y components.
 * @param vector The vector to be translated.
 */
","* Translates this matrix by the given vector.
     *
     * @param vector 2D vector",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,"org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)",434,437,"/**
 * Concatenates two matrices by multiplying b with a.
 */","* Produces a copy of the first matrix, with the second matrix concatenated.
     *
     * @param a The matrix to copy.
     * @param b The matrix to concatenate.
     * 
     * @return a copy of the first matrix with the second matrix concatenated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument),202,205,"/**
 * Constructs a PDDocument from a COSDocument.
 * Uses default parameters if no other are provided.
 */
","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStroke,org.apache.pdfbox.rendering.PageDrawer:getStroke(),705,740,"/**
 * Creates a Stroke object based on graphics state properties.
 * Returns an empty Area if the dash pattern is all zeros.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getTriangles(),167,171,"/**
 * Retrieves a list of shaded triangles from patch coordinates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:<clinit>(),61,163,"/**
 * Creates a BlendMode object with a blend function.
 * @param name COSName of the blend mode
 * @param function BlendChannelFunction to apply
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.CharSequence),68,73,"/**
 * Processes the CharSequence as a String token.
 * Delegates to the String token processing method.
 */",{@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanNewLine,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanNewLine(),220,232,"/**
 * Processes a new line character, handling CRLF sequences.
 * Appends the newline char to buffer and notifies handler.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanWhitespace,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanWhitespace(),234,254,"/**
 * Appends whitespace characters to the buffer until a non-whitespace char.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanComment,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanComment(),256,276,"/**
 * Reads characters into a comment buffer until a line terminator.
 * Passes the comment to the handler.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanToken,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanToken(),278,315,"/**
 * Scans a token from the input stream and forwards it to handler.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getCurrentAccessPermission,org.apache.pdfbox.pdmodel.PDDocument:getCurrentAccessPermission(),1355,1362,"/**
* Returns the current access permission.
* Lazily initializes if null.
*/","* Returns the access permissions granted when the document was decrypted. If the document was not decrypted this
     * method returns the access permission for a document owner (ie can do everything). The returned object is in read
     * only mode so that permissions cannot be changed. Methods providing access to content should rely on this object
     * to verify if the current user is allowed to proceed.
     * 
     * @return the access permissions for the current user on the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRevisionNumber,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRevisionNumber(int),109,131,"/**
* Computes the revision number based on version and permissions.
*/","* Computes the revision version of the StandardSecurityHandler to
     * use regarding the version number and the permissions bits set.
     * See PDF Spec 1.6 p98
     * 
     * @param version The version number.
     *
     * @return The computed revision number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAESother,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",317,346,"/**
 * Encrypts or decrypts data using AES with a given key and IV.
 * @param finalKey encryption key
 * @param data input stream
 * @param output output stream
 * @param decrypt decrypt flag
 */
","* Encrypt or decrypt data with AES with key length other than 256 bits.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAES256,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)",357,390,"/**
 * Encrypts/decrypts data using AES-256.
 * @param data Input stream.
 * @param output Output stream.
 * @param decrypt Decryption flag.
 */
","* Encrypt or decrypt data with AES256.
     *
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],byte[],java.io.OutputStream)",300,304,"/**
 * Encrypts data using RC4 algorithm.
 * @param finalKey encryption key
 * @param input data to encrypt
 * @param output output stream for encrypted data
 */
","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(java.io.InputStream,java.io.OutputStream)",139,147,"/**
 * Copies data from an InputStream to an OutputStream.
 * @param data Source InputStream.
 * @param output Destination OutputStream.
 */
","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepQuery,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepQuery(java.lang.String),48,51,"/**
* Calls saslPrep with the 'true' flag.
* Delegates to saslPrep for query preparation.
*/
","* Return the {@code SASLPrep}-canonicalised version of the given {@code str} for use as a query
     * string. This implements the {@code SASLPrep} algorithm defined in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a query string is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepStored,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepStored(java.lang.String),66,69,"/**
* Calls saslPrep with 'stored' flag set to false.
*/","* Return the {@code SASLPrep}-canonicalised version of the given
     * @code str} for use as a stored string. This implements the {@code SASLPrep} algorithm defined
     * in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a stored string is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,createDERForRecipient,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:createDERForRecipient(byte[],java.security.cert.X509Certificate)",471,521,"/**
 * Creates a DER-encoded enveloped data object for recipient.
 * @param in Input byte array to be encrypted.
 * @param cert X.509 certificate of the recipient.
 * @return ASN1Primitive representing the enveloped data.
 * @throws IOException, GeneralSecurityException
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2A,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2A(byte[],byte[],byte[])",1116,1122,"/**
 * Computes a hash value based on password, salt, and user key.
 * @param password Password to hash.
 * @param salt Salt value.
 * @param u User key.
 * @return Hash value as a byte array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLine,org.apache.pdfbox.text.PDFTextStripper:writeLine(java.util.List),1859,1870,"/**
 * Writes words from a line, including their positions and separators.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getFont(),131,157,"/**
 * Retrieves the font, using cache or creating a new one.
 * @return FontBoxFont object or null if not found.
 */","* {@inheritDoc}
         * <p>
         * The method returns null if there is there was an error opening the font.
         *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,saveDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:saveDiskCache(),410,434,"/**
 * Saves font information to a disk cache file. Handles potential IO/security exceptions.
 */",* Saves the font metadata cache to disk.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,loadDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:loadDiskCache(java.util.List),494,651,"/**
 * Loads font information from disk cache or triggers a rebuild.
 * @return List of FSFontInfo objects or null if rebuild needed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,setProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:setProvider(org.apache.pdfbox.pdmodel.font.FontProvider),145,149,"/**
 * Sets the font provider and initializes font info.
 * @param fontProvider The FontProvider to set.
 */
",* Sets the font service provider.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:<init>(java.awt.geom.Point2D[],float[][])",58,92,"/**
 * Initializes a shaded triangle with given points and colors.
 * @param p Array of triangle points.
 * @param c Array of colors for the triangle.
 */
","* Constructor.
     *
     * @param p an array of the 3 vertices of a triangle
     * @param c an array of color corresponding the vertex array p",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMappers.java,<clinit>,org.apache.pdfbox.pdmodel.font.FontMappers$DefaultFontMapper:<clinit>(),36,36,"/**
* Singleton instance of the FontMapper class.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1CFont:getHeight(int),367,387,"/**
 * Gets the height of a glyph by its code.
 * @param code glyph code
 * @return glyph height, or 0 if CFF font is missing
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeTo,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeTo(java.io.OutputStream),91,176,"/**
 * Writes a CID CMap to the given output stream.
 * @param out Output stream to write the CMap to.
 * @throws IOException if an I/O error occurs.
 */
","* Writes the CMap as ASCII to the given output stream.
     *
     * @param out ASCII output stream
     * @throws IOException if the stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,load,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:load(java.lang.String,int)",48,64,"/**
 * Loads a GlyphList from a resource file.
 * @param filename name of the glyphlist file
 * @param numberOfEntries number of glyph entries
 * @return GlyphList object
 */",* Loads a glyph list from disk.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,<clinit>,org.apache.pdfbox.text.LegacyPDFStreamEngine:<clinit>(),79,101,"/**
 * Loads additional glyph list for Unicode mapping from resource.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getWidthFromFont(int),368,379,"/**
 * Gets the width of a glyph from the font.
 * @param code glyph code
 * @return glyph width in font units
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getHeight(int),381,391,"/**
 * Gets the height of a glyph by its code.
 * @param code Glyph code.
 * @return Glyph height, or 0 if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getGIDToCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getGIDToCode(),452,465,"/**
 * Retrieves a map of GID to code. Populates if empty.
 * @return Map of GID (Integer) to code (Integer).
 */
","* Inverts the font's code -&gt; GID mapping. Any duplicate (GID -&gt; code) mappings will be lost.
     * 
     * @return the GID for the given code
     * 
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(int),594,598,"/**
 * Checks if a glyph exists.
 * @param code Glyph code to check.
 * @return True if glyph exists, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(int),181,195,"/**
 * Checks if the font has a glyph for the given code point.
 * @param code The code point to check.
 * @return True if glyph exists, false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(int),197,215,"/**
 * Retrieves a GeneralPath based on the given code.
 * @param code glyph code to look up
 * @return GeneralPath object or empty path if not found
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNormalizedPath(int),217,240,"/**
 * Retrieves a normalized path by code, handling special cases.
 * @param code Glyph code to retrieve.
 * @return GeneralPath object or default path if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getWidthFromFont(int),349,359,"/**
 * Gets the width of a font character.
 * @param code character code
 * @return width of the character
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1Font:codeToName(int),561,565,"/**
 * Converts a code to its corresponding name, or "".notdef"" if null.
 * @param code The code to convert.
 * @return The name of the code.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(java.lang.String),616,629,"/**
 * Retrieves a path for a given font name.
 * @param name Font name to retrieve the path for.
 * @return GeneralPath object or empty path if .notdef and not embedded.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(java.lang.String),650,654,"/**
 * Checks if the font has a glyph for the given name.
 * @param name Glyph name to check.
 * @return True if glyph exists, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.cos.COSArray),90,97,"/**
 * Initializes the PDICCBased object with an ICC profile array.
 * @param iccArray COSArray containing the ICC profile data.
 * @throws IOException if an I/O error occurs.
 */
","* Creates a new ICC color space using the PDF array.
     *
     * @param iccArray the ICC stream object.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:<init>(),54,56,"/**
 * Default constructor for the PDDeviceCMYK class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:<init>(),38,40,"/**
 * Private constructor to prevent direct instantiation of PDDeviceGray.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:<init>(),39,41,"/**
 * Private constructor to prevent direct instantiation of PDDeviceRGB.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGB(float[]),140,145,"/**
 * Converts a color value to RGB format using the color space.
 * @param value Color value array
 * @return RGB color value array
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImage(java.awt.image.WritableRaster),155,160,"/**
 * Converts a WritableRaster to an RGB BufferedImage.
 * @param raster The raster to convert.
 * @return An RGB BufferedImage.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkConverterState,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),592,647,"/**
 * Validates PNG chunk integrity. Returns true if all chunks are sane.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getTriangles(),123,132,"/**
 * Generates a list of ShadedTriangle objects from Bezier curves.
 * Returns a list of triangles based on calculated coordinates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endTextClip,org.apache.pdfbox.rendering.PageDrawer:endTextClip(),474,493,"/**
 * Ends the text clip by intersecting the clipping path.
 * Resets state and clears text clippings for performance.
 */","* End buffering the text clipping path, if any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,clip,org.apache.pdfbox.rendering.PageDrawer:clip(int),958,979,"/**
 * Sets the clipping path winding rule. Applies the clip if valid.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setClip,org.apache.pdfbox.rendering.PageDrawer:setClip(),411,424,"/**
 * Updates the graphics clip to match the current clipping paths.
 */","* Sets the clipping path using caching for performance. We track lastClip manually because
     * {@link Graphics2D#getClip()} returns a new object instead of the same one passed to
     * {@link Graphics2D#setClip(java.awt.Shape) setClip()}. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getDataToSign,org.apache.pdfbox.pdfwriter.COSWriter:getDataToSign(),931,949,"/**
 * Returns an input stream for data to be signed.
 * Throws IllegalStateException if PDF isn't prepared.
 */
","* Return the stream of PDF data to be signed. Clients should use this method only to create
     * signatures externally. {@link #write(PDDocument)} method should have been called prior. The
     * created signature should be set using {@link #writeExternalSignature(byte[])}.
     * <p>
     * When {@link SignatureInterface} instance is used, COSWriter obtains and writes the signature
     * itself.
     * </p>
     *
     * @return data stream to be signed
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if input data is closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[]),61,65,"/**
* Reads data from the input stream into the provided byte array.
* @param b the byte array to read into
* @return the number of bytes read
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,mergeDiacritic,org.apache.pdfbox.text.TextPosition:mergeDiacritic(org.apache.pdfbox.text.TextPosition),667,745,"/**
* Merges a diacritic character into the existing text position.
* @param diacritic The diacritic character to merge.
*/","* Merge a single character TextPosition into the current object. This is to be used only for
     * cases where we have a diacritic that overlaps an existing TextPosition. In a graphical
     * display, we could overlay them, but for text extraction we need to merge them. Use the
     * contains() method to test if two objects overlap.
     *
     * @param diacritic TextPosition to merge into the current TextPosition.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPositionComparator.java,compare,"org.apache.pdfbox.text.TextPositionComparator:compare(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",31,69,"/**
 * Compares two TextPosition objects based on direction and coordinates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,contains,org.apache.pdfbox.text.TextPosition:contains(org.apache.pdfbox.text.TextPosition),568,608,"/**
 * Checks if this TextPosition overlaps with the given TextPosition.
 * @param tp2 The TextPosition to check for overlap.
 * @return True if overlaps, false otherwise.
 */","* Determine if this TextPosition logically contains another (i.e. they overlap and should be
     * rendered on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained in the bounding box of this text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,completelyContains,org.apache.pdfbox.text.TextPosition:completelyContains(org.apache.pdfbox.text.TextPosition),618,657,"/**
 * Checks if this TextPosition completely contains another.
 * @param tp2 The TextPosition to check for containment.
 * @return True if this TextPosition contains tp2, false otherwise.
 */
","* Determine if this TextPosition perfectly contains another (i.e. the other TextPosition
     * overlaps 100% with this one and fits entirely inside its bounding box when they are rendered
     * on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained completely inside the bounding box of this text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphSeparator,org.apache.pdfbox.text.PDFTextStripper:writeParagraphSeparator(),1701,1705,"/**
 * Writes a paragraph separator by ending and starting a paragraph.
 */","* writes the paragraph separator string to the output.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,isParagraphSeparation,"org.apache.pdfbox.text.PDFTextStripper:isParagraphSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1617,1687,"/**
 * Determines if the given position marks a new paragraph start.
 * @param position The current text position to evaluate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,createWord,"org.apache.pdfbox.text.PDFTextStripper:createWord(java.lang.String,java.util.List)",2041,2041,"/**
 * Creates a WordWithTextPositions object with normalized word and positions.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseDate,"org.apache.pdfbox.util.DateConverter:parseDate(java.lang.String,java.text.ParsePosition)",621,690,"/**
 * Parses a date string, attempting big-endian and standard formats.
 * @param text date string to parse
 * @param initialWhere initial parse position
 * @return Calendar object or null if parsing fails
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,setSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:setSignature(byte[]),45,49,"/**
* Writes the signature to the CosWriter.
* @param signature byte array representing the signature
* @throws IOException if an I/O error occurs
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromName,org.apache.pdfbox.pdfwriter.COSWriter:visitFromName(org.apache.pdfbox.cos.COSName),1362,1366,"/**
 * Writes the COS name to the standard output.
 * @param obj The COS name to write.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSName,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSName(java.io.OutputStream,org.apache.pdfbox.cos.COSName)",306,310,"/**
 * Writes a COS name to the output stream, followed by a space.
 * @param output Output stream to write to.
 * @param cosName COS name to write.
 */
","* Write the given {@link COSName} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosName The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(org.apache.pdfbox.cos.COSName),1479,1483,"/**
 * Writes a COS name to the output stream, followed by a space.
 * @param name The COS name to write.
 * @throws IOException If an I/O error occurs.
 */
","* Writes a COSName to the content stream.
     * 
     * @param name the name to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],boolean,java.io.OutputStream)",1644,1696,"/**
 * Writes a byte array to an OutputStream, as ASCII or hex.
 * @param bytes byte array to write
 * @param forceHex force hex encoding, regardless of ASCII chars
 * @param output output stream to write to
 */
","* This will output the given text/byte string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,sort,"org.apache.pdfbox.util.IterativeMergeSort:sort(java.util.List,java.util.Comparator)",64,78,"/**
 * Sorts the list in place using iterative merge sort.
 * @param list The list to be sorted.
 * @param cmp Comparator for sorting elements.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Constructs a NonStrokingColorN with the given PDFStreamEngine.
 * @param context The PDFStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a NonStrokingDeviceCMYKColor with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a NonStrokingDeviceGrayColor object.
 * @param context The PDFStreamEngine context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a NonStrokingDeviceRGBColor object with a PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Constructs a StrokingColorN object with the given PDFStreamEngine.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
* Constructs a StrokingDeviceCMYKColor with the given context.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a StrokingDeviceGrayColor with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a StrokingDeviceRGBColor with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LegacyFillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LegacyFillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
 * Constructs a LegacyFillNonZeroRule with the given context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(java.lang.String),62,70,"/**
 * Initializes the PDF marked content extractor with the given encoding.
 */","* Constructor. Will apply encoding-specific conversions to the output text.
     *
     * @param encoding The encoding that the output will be written in.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper:<init>(),196,201,"/**
 * Constructs a PDFTextStripper with default operators.
 */",* Instantiate a new PDFTextStripper object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(java.lang.String),144,147,"/**
* Gets a dictionary object by key.
* @param key The key of the dictionary object.
* @return The COSBase object associated with the key.
*/
","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(java.lang.String),1189,1192,"/**
* Retrieves a PDF object by its key.
* @param key The key of the object to retrieve.
* @return The COSBase object associated with the key.
*/
","* This will do a lookup into the dictionary.
     * 
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(java.lang.String),1299,1302,"/**
* Checks if the object contains the given key name.
* @param name The key name to check.
* @return True if the key exists, false otherwise.
*/
","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,<clinit>,org.apache.pdfbox.cos.COSName:<clinit>(),36,673,"This is a comprehensive list of COS (Common Object System) names used in PDF files.  It's very helpful for anyone working with PDF manipulation or parsing. Here's a breakdown of why this is useful and some potential use cases:

**Why is this list important?**

* **PDF Structure:** PDFs are structured using objects. These objects have names (COS names) that identify their purpose. Understanding these names is crucial for understanding the PDF's internal representation.
* **PDF Manipulation:**  Libraries that create, modify, or extract information from PDFs rely on these names.  Without knowing the names, you can't correctly interpret or modify the PDF's content.
* **PDF Parsing:**  When parsing a PDF file, you need to know what each COS name means to accurately extract data (text, images, fonts, etc.).
* **Standards Compliance:**  PDF specifications define these COS names.  Adhering to these names ensures compatibility and proper rendering across different PDF viewers.

**Potential Use Cases**

* **PDF Library Development:**  If you're building a PDF library (e.g., for creating, parsing, or modifying PDFs), you'll need this list as a reference.
* **PDF Analysis:**  You can use this list to analyze PDF files to understand their structure, identify potential issues, or extract specific information.
* **PDF Repair/Recovery:**  If a PDF file is corrupted, knowing the COS names can help you identify and potentially fix the errors.
* **PDF Forensics:**  In forensic investigations, understanding PDF structure is essential for recovering deleted data or identifying malicious content.
* **PDF Conversion:**  When converting PDFs to other formats (e.g., HTML, DOCX), you need to understand the PDF's internal representation to accurately convert the content.
* **Automated PDF Processing:**  You can use this list to automate tasks such as extracting data from PDF forms, indexing PDF documents, or converting PDFs to searchable formats.

**Key Observations and Groupings**

The list can be loosely grouped into categories, which can be helpful for understanding the overall structure:

* **Basic Types:** `X`, `Y`, `WIDTH`, `HEIGHT` - fundamental dimensions
* **Fonts:** `FONT`, `FONT_SUBTYPE`, `FONT_ENCODING`, `TO_UNICODE`, `XHEIGHT`
* **Colors & Appearance:** `COLOR_SPACE`, `WHITE_POINT`, `DEVICE_CMYK`, `DEVICE_RGB`
* **Images:** `IMAGE`, `IMAGE_MASK`, `SMASK`
* **Objects:** `XOBJECT`, `TEMPLATE`
* **Annotations:** `ANNOT`
* **Forms:** `WIDGET`, `TX`
* **Metadata:** `TITLE`, `AUTHOR`, `SUBJECT`, `CREATION_DATE`, `MODIFICATION_DATE`
* **Security:** `CRYPT`, `SIGNATURE`
* **XFA (XML Forms Architecture):**  A significant portion relates to XFA, used for interactive PDF forms.
* **Viewer Preferences:** `VIEWER_PREFERENCES` - controls how the PDF is displayed.
* **XREF (Cross-Reference Table):**  Crucial for PDF navigation and object referencing.

**How to Use This List**

1. **Reference:** Keep this list handy when working with PDF code.
2. **Search:** Use it to look up the meaning of an unfamiliar COS name.
3. **Documentation:** Include it in your project's documentation.
4. **Extend:**  As PDF standards evolve, new COS names may be introduced.  Keep your list updated.

This is a valuable resource for anyone working with PDFs! Remember that the specific meaning of a COS name can depend on the context in which it's used within the PDF.
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(java.lang.String),77,80,"/**
* Gets a filter by name.
* @param filterName The name of the filter.
* @return The filter object.
*/
","* Returns a filter instance given its name as a string.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSName,org.apache.pdfbox.pdfparser.BaseParser:parseCOSName(),861,918,"/**
 * Parses a COS name from the input stream.
 * @return A COSName object representing the parsed name.
 * @throws IOException if an I/O error occurs.
 */","* This will parse a PDF name from the stream.
     *
     * @return The parsed PDF name.
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:getCOSObject(),238,242,"/**
* Returns the PDF SymbolEncoding COS name.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:getCOSObject(),237,241,"/**
 * Returns a COS name representing the Zapf Dingbats encoding.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",51,79,"/**
 * Initializes a PDColor object from a COS array and color space.
 * @param array COS array containing color components/pattern name.
 * @param colorSpace The color space associated with the color.
 */
","* Creates a PDColor containing the given color value.
     * @param array a COS array containing the color value
     * @param colorSpace color space in which the color value is defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:getCOSObject(),35,39,"/**
* Returns a COS object based on the method's name.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<clinit>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<clinit>(),49,85,"/**
 * Defines a signature filter value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,of,org.apache.pdfbox.cos.COSArray:of(float[]),39,45,"/**
 * Converts a float array to a COSArray.
 * @param floats float array to convert.
 * @return COSArray containing the float values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<clinit>,org.apache.pdfbox.cos.COSFloat:<clinit>(),34,36,"/**
* Defines COSFloat constants for zero (0.0) and one (1.0).
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,get,org.apache.pdfbox.cos.COSInteger:get(long),87,100,"/**
 * Returns a COSInteger for the given value, caching within range.
 * @param val The integer value.
 * @return A COSInteger object.
 */
","* Returns a COSInteger instance with the given value.
     *
     * @param val integer value
     * @return COSInteger instance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,getInvalid,org.apache.pdfbox.cos.COSInteger:getInvalid(boolean),102,106,"/**
 * Returns a COSInteger with max/min value based on the flag.
 * @param maxValue if true, returns max value; otherwise, min.
 * @return COSInteger object representing the value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,parseHex,org.apache.pdfbox.cos.COSString:parseHex(java.lang.String),136,193,"/**
 * Parses a hex string into a COSString.
 * @param hex hex string to parse
 * @return COSString representation of the hex string
 */
","* This will create a COS string from a string of hex characters.
     *
     * @param hex A hex string.
     * @return A cos string with the hex characters converted to their actual bytes.
     * @throws IOException If there is an error with the hex string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSIntegers,org.apache.pdfbox.cos.COSArray:ofCOSIntegers(java.util.List),752,755,"/**
 * Creates a COSArray from a list of integers.
 * @param integer list of integers to be converted
 * @return COSArray containing the integer values
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSNames,org.apache.pdfbox.cos.COSArray:ofCOSNames(java.util.List),766,769,"/**
 * Creates a COSArray from a list of strings, converting each to a COSName.
 * @param strings list of strings to convert
 * @return COSArray containing the converted COSNames
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSStrings,org.apache.pdfbox.cos.COSArray:ofCOSStrings(java.util.List),780,783,"/**
 * Creates a COSArray from a list of strings.
 * @param strings List of strings to add to the array.
 * @return COSArray containing the strings.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(),55,59,"/**
 * Initializes a new COSArrayList with an empty COSArray and ArrayList.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",95,101,"/**
 * Initializes a COSArrayList with a parent dictionary and key.
 */","* This constructor is to be used if the array doesn't exist, but is to be created and added to
     * the parent dictionary as soon as the first element is added to the array.
     *
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is
     * added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,convertListOfByteArraysToCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:convertListOfByteArraysToCOSArray(java.util.List),641,644,"/**
* Creates a COSArray from a list of strings.
* @param strings List of strings to add to the array.
* @return COSArray containing the strings.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:<init>(),43,46,"/**
 * Default constructor. Initializes the internal COS array.
 */
","* Constructor to create empty page destination.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float,float,float)",117,125,"/**
 * Creates a PDRectangle with specified coordinates and dimensions.
 * @param x x-coordinate, @param y y-coordinate, @param width width, @param height height
 */
","* Constructor.
     *
     * @param x the x coordinate of the rectangle
     * @param y the y coordinate of the rectangle
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.fontbox.util.BoundingBox),132,140,"/**
 * Creates a PDRectangle from a BoundingBox.
 * @param box BoundingBox containing rectangle coordinates.
 */
","* Constructor.
     *
     * @param box the bounding box to be used for the rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFilters(java.util.List),258,260,"/**
 * Sets the filter array for the stream.
 * @param stream The stream object to modify.
 * @param filters COSName array of filters.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(),37,45,"/**
 * Initializes a PDFourColours object with an array of COSNull values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setAlternateColorSpaces,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setAlternateColorSpaces(java.util.List),497,504,"/**
* Sets the alternate array in the COS object.
* @param list List of COS objects for alternate representation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,org.apache.pdfbox.cos.COSDocument:createCOSStream(),172,180,"/**
 * Creates a new COSStream object and adds it to the stream list.
 * @return The newly created COSStream object.
 */
","* Creates a new COSStream using the current configuration for scratch files.
     * 
     * @return the new COSStream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(),69,72,"/**
 * Constructs a COSStream object with a null input stream.
 */","* Creates a new stream with an empty dictionary.
     * <p>
     * Try to avoid using this constructor because it creates a new scratch file in memory. Instead,
     * use {@link COSDocument#createCOSStream() document.getDocument().createCOSStream()} which will
     * use the existing scratch file (in memory or in temp file) of the document.
     * </p>",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,"org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache,org.apache.pdfbox.io.RandomAccessReadView)",93,99,"/**
 * Constructs a COSStream with a stream cache and read view.
 * @param streamCache Stream cache.
 * @param randomAccessReadView Read view for stream data.
 */
","* Creates a new stream with an empty dictionary. Data is read from the given random accessview. Written data is
     * stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.
     * @param randomAccessReadView source for the data to be read
     * @throws IOException if the length of the random access view isn't available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,asUnmodifiableDictionary,org.apache.pdfbox.cos.COSDictionary:asUnmodifiableDictionary(),1335,1338,"/**
 * Returns an unmodifiable COSDictionary based on this one.
 */","* Returns an unmodifiable view of this dictionary.
     * 
     * @return an unmodifiable view of this dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,getDecodeResult,org.apache.pdfbox.cos.COSInputStream:getDecodeResult(),96,106,"/**
 * Returns the last DecodeResult or a default one if empty.
 */","* Returns the result of the last filter, for use by repair mechanisms.
     * 
     * @return the result of the last filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getResources,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getResources(),174,190,"/**
* Retrieves the resources dictionary. Returns null if not found.
*/","* This will get the resources for this Form XObject.
     * This will return null if no resources are available.
     * 
     * @return The resources for this Form XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormResources(),213,220,"/**
 * Creates and sets holder form resources for the PDF structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormResource,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormResource(),260,267,"/**
 * Creates and sets inner form resources for the PDF structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormResources(),298,304,"/**
 * Creates and sets image form resources for the PDF structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(),43,45,"/**
 * Default constructor for the PDAttributeObject class.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject),39,42,"/**
 * Constructs a PDUserProperty with the given user attribute object.
 */","* Creates a new user property.
     * 
     * @param userAttributeObject the user attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(),38,40,"/**
 * Default constructor for a PDOutlineNode.
 */",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(),37,39,"/**
 * Default constructor for the PDDestinationNameTreeNode class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(),35,37,"/**
 * Default constructor for PDEmbeddedFilesNameTreeNode.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(),36,38,"/**
 * Default constructor for the PDJavascriptNameTreeNode class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(),36,39,"/**
 * Default constructor. Calls the superclass constructor.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Constructs a PDNonTerminalField, passing the acroForm.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,47,"/**
 * Constructs a PDTerminalField, passing the acroForm to the superclass.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,<clinit>,org.apache.pdfbox.filter.FilterFactory:<clinit>(),35,35,"/**
 * Returns the singleton FilterFactory instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),365,368,"/**
 * Constructs a PDLayoutAttributeObject from a COSDictionary.
 */","* Creates a new Layout attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),88,91,"/**
 * Constructs a PDListAttributeObject from a COSDictionary.
 */","* Creates a new List attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Constructs a PDPrintFieldAttributeObject from a COSDictionary.
 */","* Creates a new PrintField attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
* Constructs a PDTableAttributeObject from a COSDictionary.
*/
","* Creates a new Table attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.cos.COSStream),38,41,"/**
 * Constructs a PDAppearanceStream from a COSStream.
 * @param stream The COSStream to use for initialization.
 */
","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",47,50,"/**
 * Constructs a PDTransparencyGroup from a COSStream and ResourceCache.
 */
","* Creates a Transparency Group for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeCollection,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeCollection(java.io.File),657,670,"/**
 * Processes a TrueType collection file, adding fonts or logging errors.
 * @param ttcFile The TrueType collection file to process.
 */
","* Adds a TTC or OTC to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFontImpl,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFontImpl(org.apache.fontbox.ttf.FontHeaders,java.io.File,java.lang.String)",705,791,"/**
* Adds a TrueType font to the font info list, handling various cases.
* @param fontHeaders Font headers object containing font information.
* @param file The font file object.
* @param hash Hash value of the font file.
*/","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addType1Font,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addType1Font(java.io.File),796,825,"/**
 * Adds a Type 1 font to the font info list, handling exceptions.
 * @param pfbFile PFB file to process
 */
","* Adds a Type 1 font to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PMeshBasedShadingType from a COSDictionary.
 * @param shadingDictionary The shading dictionary to use.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(),108,112,"/**
 * Calls the overloaded method with null as the argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(),61,65,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(),129,133,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(),295,299,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(),65,69,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(),119,123,"/**
 * Calls constructAppearances with a null appearance strategy.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(),415,419,"/**
 * Calls constructAppearances with a null appearance strategy.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(),227,231,"/**
 * Delegates appearance construction to the overloaded method.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(),169,173,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(),185,189,"/**
 * Calls constructAppearances with a null appearance strategy.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(),62,66,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(),62,66,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(),65,69,"/**
 * Calls constructAppearances with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(),65,69,"/**
 * Calls constructAppearances with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(),233,237,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(),65,69,"/**
 * Calls the overloaded method with a null argument.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDDestination.java,create,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination:create(org.apache.pdfbox.cos.COSBase),46,97,"/**
 * Creates a PDDestination object from a COSBase.
 * @param base COSBase object to create the destination from.
 * @return PDDestination object or null if base is null.
 * @throws IOException if conversion fails.
 */
","* This will create a new destination depending on the type of COSBase
     * that is passed in.
     *
     * @param base The base level object.
     *
     * @return A new destination.
     *
     * @throws IOException If the base cannot be converted to a Destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
 * Constructs a PDCheckBox object from an AcroForm field.
 * @param acroForm The parent AcroForm.
 * @param field The COSDictionary representing the field.
 * @param parent The parent non-terminal field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
 * Initializes a PDPushButton with given form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
 * Constructs a PDRadioButton with given form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",65,68,"/**
 * Constructs a PChoice object, initializing with given parameters.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",57,60,"/**
 * Constructs a PDTextField with the given form, field, and parent.
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsState(),991,994,"/**
* Saves the current graphics state onto the graphics stack.
*/",* Pushes the current graphics state to the stack.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsStack,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsStack(),1009,1015,"/**
 * Saves the current graphics stack and pushes a clone onto it.
 * @return The saved graphics stack.
 */
","* Saves the entire graphics stack.
     * 
     * @return the saved graphics state stack.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacOSRomanEncoding.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:<clinit>(),30,55,"/**
 * Returns the singleton instance of the MacOSRomanEncoding class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:readEncodingFromFont(),283,304,"/**
 * Reads the encoding from the font, using AFM or FontBox.
 * @return Encoding object, or StandardEncoding if default.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:readEncodingFromFont(),492,513,"/**
 * Reads the encoding from the font. Returns Type1Encoding or StandardEncoding.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(),101,104,"/**
 * Constructs a COSDocument with a default memory-only stream cache.
 */",* Constructor. Uses main memory to buffer PDF streams.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",184,191,"/**
 * Initializes the object with provided data.
 * @param password Password for the keystore.
 * @param keyAlias Key alias for the keystore.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,toString,org.apache.pdfbox.cos.COSDictionary:toString(),1343,1355,"/**
 * Returns a string representation of the COSDictionary.
 * Handles potential IOExceptions, returning an error message.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,47,"/**
 * Closes and strokes the current path using the provided arguments.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,46,"/**
* Fills and strokes the current path using the PDF engine.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,47,"/**
 * Fills and strokes the current path using the provided operands.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",47,66,"/**
* Moves text position and sets leading using provided arguments.
* @param arguments List of COSBase objects representing arguments.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.NextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,54,"/**
 * Moves the text cursor to a new position, adjusting for leading.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,47,"/**
 * Draws a line and displays text using the PDF stream context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,54,"/**
 * Processes spacing and text display operators from arguments.
 * Arguments: operator, word spacing, char spacing, text line.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFMarkedContentExtractor:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",105,123,"/**
 * Adds a marked content sequence with tag and properties.
 * @param tag COSName identifying the content sequence
 * @param properties COSDictionary containing properties
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:constructAppearances(),193,213,"/**
* Constructs appearances for signature widgets. Handles visibility checks.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,transform,"org.apache.pdfbox.rendering.PDFRenderer:transform(java.awt.Graphics2D,int,org.apache.pdfbox.pdmodel.common.PDRectangle,float,float)",455,482,"/**
 * Transforms the graphics context with scaling, rotation, and translation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getBounds,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:getBounds(),1995,2022,"/**
 * Returns the rectangular bounds of the shape, adjusted for transformations.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,clipToRect,org.apache.pdfbox.contentstream.PDFStreamEngine:clipToRect(org.apache.pdfbox.pdmodel.common.PDRectangle),616,624,"/**
 * Clips the graphics to the provided rectangle.
 * @param rectangle The rectangle to clip to.
 */
","* Transforms the given rectangle using the CTM and then intersects it with the current
     * clipping area.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getTransformedAppearanceBBox,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getTransformedAppearanceBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),755,761,"/**
 * Gets the transformed bounding box of an appearance stream.
 * @param appearanceStream The appearance stream to transform.
 * @return The transformed Rectangle2D bounding box.
 */
","* Calculate the transformed appearance box.
     * 
     * Apply the Matrix (or an identity transform) to the BBox of
     * the appearance stream
     * 
     * @param appearanceStream
     * @return the transformed rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),85,88,"/**
 * Initializes graphics state with clipping path from the given rectangle.
 * @param page The rectangle defining the initial clipping path.
 */
","* Constructor with a given page size to initialize the clipping path.
     * @param page the size of the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:getLeft(),65,68,"/**
 * Returns the value at index 2 of the internal array.
 */","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getLeft(),61,64,"/**
 * Returns the value at index 2 in the underlying array.
 */","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getBottom(),90,93,"/**
 * Returns the value at index 3 of the internal array.
 */","* Get the bottom y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The bottom y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getRight(),119,122,"/**
 * Returns the value at index 4 in the array.
 */","* Get the right x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The right x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getTop(),149,152,"/**
 * Returns the integer value at index 5 of the array.
 */","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:getTop(),67,70,"/**
 * Returns the value at index 2 of the internal array.
 */","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getLeft(),64,67,"/**
 * Returns the value at index 2 of the internal array.
 */","* Get the left x coordinate.  Return values of 0 or -1 imply that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getTop(),93,96,"/**
 * Returns the value at index 3 of the internal array.
 */","* Get the top y coordinate.  Return values of 0 or -1 imply that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:fitBoundingBox(),64,67,"/**
 * Checks if the array's second element name equals TYPE_BOUNDED.
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:fitBoundingBox(),93,96,"/**
 * Checks if the array's second element name equals TYPE_BOUNDED.
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:fitBoundingBox(),95,98,"/**
* Checks if the array's second element name equals TYPE_BOUNDED.
*/","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(),205,208,"/**
 * Creates an output stream.
 * @throws IOException if an I/O error occurs
 */
","* Returns a new OutputStream for writing stream data, using the current filters.
     *
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(org.apache.pdfbox.cos.COSName),170,173,"/**
 * Creates an output stream for a given filter.
 * @param filter COSName representing the filter to apply
 * @return OutputStream for writing data with the filter
 */
","* This will get a stream that can be written to, with the given filter.
     *
     * @param filter the filter to be used.
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createThumbnail,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createThumbnail(org.apache.pdfbox.cos.COSStream),156,161,"/**
 * Creates a thumbnail image from a COSStream.
 * @param cosStream COSStream containing image data.
 * @return PDImageXObject representing the thumbnail.
 */
","* Creates a thumbnail Image XObject from the given COSBase and name.
     * @param cosStream the COS stream
     * @return an XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMask(),803,821,"/**
 * Retrieves the image mask, or null if it's a color key mask.
 */","* Returns the Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return Mask Image XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSoftMask(),837,846,"/**
 * Gets the soft mask for the image.
 * @return PDImageXObject representing the soft mask, or null.
 */
","* Returns the Soft Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return the SMask Image XObject, or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeAffineTransform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeAffineTransform(java.awt.geom.AffineTransform),1535,1543,"/**
 * Writes the affine transform matrix to the output stream.
 * @param transform AffineTransform object to write.
 */
","* Writes an AffineTransform to the content stream as an array.
     * 
     * @param transform AffineTransfrom to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginText(),134,142,"/**
 * Starts text mode, writing BEGIN_TEXT operator.
 * Throws exception if nested calls are attempted.
 */
","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endText(),151,159,"/**
 * Ends the text mode, writing the END_TEXT operator.
 * Throws exception if beginText() was not called first.
 */
","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLeading(float),333,337,"/**
* Sets the text leading value and writes it to the output.
* @param leading The leading value to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLine(),345,352,"/**
 * Writes a newline operator. Throws exception if not in text mode.
 */","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLineAtOffset(float,float)",363,372,"/**
 * Adds a newline at a specified text offset.
 * @param tx X offset. @param ty Y offset.
 */
","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:saveGraphicsState(),589,609,"/**
* Saves the current graphics state by pushing it onto stacks.
* Throws exception if in text mode. Writes a SAVE operator.
*/
","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:restoreGraphicsState(),615,635,"/**
 * Restores the graphics state, throwing exception in text mode.
 */","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float)",713,725,"/**
 * Sets the stroking color using RGB values.
 * @param r Red component (0.0-1.0)
 * @param g Green component (0.0-1.0)
 * @param b Blue component (0.0-1.0)
 */
","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
 * Sets the stroking color using CMYK values.
 * @param c, m, y, k CMYK color components (0.0-1.0)
 * @throws IllegalArgumentException if values are outside 0..1
 */
","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float),759,768,"/**
 * Sets the stroking color gray value.
 * @param g Gray value (0.0-1.0); throws IllegalArgumentException if out of range.
 */
","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
 * Sets the non-stroking color using RGB values.
 * @param r Red value (0..1)
 * @param g Green value (0..1)
 * @param b Blue value (0..1)
 */
","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
 * Sets the non-stroking CMYK color.
 * @param c,m,y,k CMYK color values (0.0 to 1.0)
 * @throws IllegalArgumentException if values are out of range
 */
","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float),877,886,"/**
 * Sets the non-stroking gray color.
 * @param g Gray value (0.0-1.0). Throws IllegalArgumentException if out of range.
 */
","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:addRect(float,float,float,float)",898,909,"/**
 * Adds a rectangle to the image.
 * @param x, y rectangle coordinates, width, height
 * @throws IOException if called in text mode
 */
","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a cubic Bezier curve to (x3, y3) using (x1, y1) & (x2, y2).
 * Throws exception if in text mode.
 */
","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a quadratic Bezier curve to (x3, y3) from current point.
 * @param x2 x-coordinate of the control point.
 * @param y2 y-coordinate of the control point.
 * @param x3 x-coordinate of the end point.
 * @param y3 y-coordinate of the end point.
 */
","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a cubic Bezier curve to (x3, y3) from (x1, y1).
 * @param x1, y1 Control point 1. x3, y3 Destination point.
 */
","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the cursor to the specified coordinates.
 * @param x The x-coordinate.
 * @param y The y-coordinate.
 */
","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to the specified coordinates.
 * @param x The x-coordinate of the line's endpoint.
 * @param y The y-coordinate of the line's endpoint.
 */
","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:stroke(),1031,1038,"/**
 * Writes a stroke path operator, throws exception in text mode.
 */","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndStroke(),1046,1053,"/**
 * Writes the CLOSE_AND_STROKE operator. Throws exception in text mode.
 */","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fill(),1061,1068,"/**
 * Writes the FILL_NON_ZERO operator. Throws exception in text mode.
 */","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillEvenOdd(),1076,1083,"/**
 * Writes the FILL_EVEN_ODD operator. Throws exception in text mode.
 */","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStroke(),1093,1100,"/**
 * Writes the FILL_NON_ZERO_AND_STROKE operator.
 * Throws exception if called within a text block.
 */
","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
 * Writes the FILL_EVEN_ODD_AND_STROKE operator.
 * Throws exception if called in text mode.
 */
","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStroke(),1127,1134,"/**
 * Writes the CLOSE_FILL_NON_ZERO_AND_STROKE operator.
 * Throws exception if called within a text block.
 */
","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Writes the CLOSE_FILL_EVEN_ODD_AND_STROKE operator.
 * Throws exception if called within a text block.
 */
","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closePath(),1177,1184,"/**
 * Closes the current subpath. Throws exception if in text mode.
 */","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clip(),1192,1202,"/**
* Clips the current subpath to the even-odd rule.
* Throws exception if called within a text block.
*/
","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clipEvenOdd(),1210,1220,"/**
 * Writes CLIP_EVEN_ODD operator and ENDPATH operator.
 * Throws exception if called within a text block.
 */
","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineWidth(float),1228,1232,"/**
* Sets the line width by writing the value and operator.
* @param lineWidth The line width to set.
* @throws IOException If an I/O error occurs.
*/
","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineJoinStyle(int),1241,1252,"/**
 * Sets the line join style.
 * @param lineJoinStyle Line join style (0-2). Throws IllegalArgumentException if invalid.
 */
","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineCapStyle(int),1261,1272,"/**
 * Sets the line cap style.
 * @param lineCapStyle Line cap style value (0-2).
 * @throws IllegalArgumentException if value is out of range.
 */
","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
 * Sets the line dash pattern with the given pattern and phase.
 * @param pattern float array representing the dash pattern
 * @param phase float representing the phase offset
 */
","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMiterLimit(float),1300,1308,"/**
 * Sets the miter limit.
 * @param miterLimit The miter limit value. Throws exception if <= 0.
 */
","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endMarkedContent(),1370,1373,"/**
 * Writes the END_MARKED_CONTENT operator.
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Sets character spacing.
 * @param spacing The spacing value to set.
 * @throws IOException If an I/O error occurs.
 */
","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setWordSpacing(float),1622,1626,"/**
 * Sets the word spacing value.
 * @param spacing The spacing value to set.
 * @throws IOException if an I/O error occurs.
 */
","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setHorizontalScaling(float),1635,1639,"/**
 * Sets the horizontal scaling factor.
 * @param scale The scaling factor to apply.
 * @throws IOException if an I/O error occurs.
 */
","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets the text rendering mode.
* @param rm The RenderingMode to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextRise(float),1662,1666,"/**
* Sets the text rise value and writes it to the output.
* @param rise The text rise value to set.
*/
","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.pdfbox.cos.COSArray),147,165,"/**
 * Creates a PDRectangle from a COSArray, clamping values to prevent errors.
 */","* Constructor.
     *
     * @param array An array of numbers as specified in the PDF Reference for a rectangle type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(org.apache.pdfbox.cos.COSArray,int)",52,76,"/**
 * Creates a line dash pattern from a COS array and phase.
 * @param array Array of floats defining the dash pattern.
 * @param phase Initial phase value for the dash pattern.
 */","* Creates a new line dash pattern from a dash array and phase.
     * @param array the dash array
     * @param phase the phase",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getDecodeArray,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage),741,784,"/**
 * Extracts decode array from image. Returns default if invalid.
 * @param pdImage The image to extract decode array from.
 * @return float[] decode array or default decode array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,checkFontMatrixValues,org.apache.pdfbox.pdmodel.font.PDType3Font:checkFontMatrixValues(org.apache.pdfbox.cos.COSArray),266,270,"/**
 * Checks if a font matrix is valid: not null and has 6 numbers.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,toString,org.apache.pdfbox.pdmodel.common.PDRange:toString(),136,140,"/**
 * Returns a string representation of the PDRange object.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:eval(float[]),68,103,"/**
 * Evaluates the function with given input, executes instructions,
 * and returns the resulting float array.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,readPatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)",175,232,"/**
* Reads a patch from the input stream, handling free or implicit edges.
* @param input ImageInputStream to read from, range and transform info.
* @return Patch object or null if EOF is reached.
*/
","* Read a single patch from a data stream, a patch contains information of its coordinates and color parameters.
     *
     * @param input the image source data stream
     * @param isFree whether this is a free patch
     * @param implicitEdge implicit edge when a patch is not free, otherwise it's not used
     * @param implicitCornerColor implicit colors when a patch is not free, otherwise it's not used
     * @param maxSrcCoord the maximum coordinate value calculated from source data
     * @param maxSrcColor the maximum color value calculated from source data
     * @param rangeX range for coordinate x
     * @param rangeY range for coordinate y
     * @param colRange range for color
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform transformation for user to device space
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return a single patch
     * @throws IOException when something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,readVertex,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:readVertex(javax.imageio.stream.ImageInputStream,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform)",196,236,"/**
 * Reads a vertex from the input stream, applying transformations.
 * @param input ImageInputStream to read from
 * @return Vertex object with transformed coordinates and color.
 */
","* Read a vertex from the bit input stream performs interpolations.
     *
     * @param input bit input stream
     * @param maxSrcCoord max value for source coordinate (2^bits-1)
     * @param maxSrcColor max value for source color (2^bits-1)
     * @param rangeX dest range for X
     * @param rangeY dest range for Y
     * @param colRangeTab dest range array for colors
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform the affine transformation
     * @return a new vertex with the flag and the interpolated values
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getBeforeColour(),66,69,"/**
 * Returns the ""before"" color value.
 * Delegates to getColourByIndex(0).
 */
","* Gets the colour for the before edge.
     * 
     * @return the colour for the before edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getAfterColour(),86,89,"/**
 * Returns the ""after"" colour PDGamma object.
 * Delegates to getColourByIndex(1).
 */
","* Gets the colour for the after edge.
     * 
     * @return the colour for the after edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getStartColour(),106,109,"/**
 * Returns the start color (index 2) of the gamma curve.
 * @return PDGamma object representing the start color.
 */
","* Gets the colour for the start edge.
     * 
     * @return the colour for the start edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getEndColour(),126,129,"/**
 * Returns the end color of the gradient.
 * Uses getColourByIndex(3) to retrieve the color.
 */
","* Gets the colour for the end edge.
     * 
     * @return the colour for the end edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getBlendMode(),582,585,"/**
* Gets the blend mode from the dictionary.
* Returns BlendMode object.
*/
","* Returns the blending mode stored in the COS dictionary
     *
     * @return the blending mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithTintTransform(java.awt.image.WritableRaster),286,346,"/**
 * Converts a raster to an RGB BufferedImage using a tint transform.
 * @param raster WritableRaster to convert
 * @return RGB BufferedImage
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getNumberOfComponents(),448,452,"/**
* Returns the number of colorant names.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toString(),584,605,"/**
 * Returns a string representation of the object's properties.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toString(),327,333,"/**
 * Returns a string representation of the IndexedColorModel.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toString(),304,311,"/**
 * Returns a string representation of the object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createMatrix,org.apache.pdfbox.util.Matrix:createMatrix(org.apache.pdfbox.cos.COSBase),143,162,"/**
 * Creates a Matrix from a COSArray. Returns an empty Matrix if invalid.
 */","* Convenience method to be used when creating a matrix from unverified data. If the parameter
     * is a COSArray with at least six numbers, a Matrix object is created from the first six
     * numbers and returned. If not, then the identity Matrix is returned.
     *
     * @param base a COS object, preferably a COSArray with six numbers.
     *
     * @return a Matrix object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setHighestImportedObjectNumber,org.apache.pdfbox.pdmodel.PDDocument:setHighestImportedObjectNumber(org.apache.pdfbox.pdmodel.PDPage),723,731,"/**
 * Updates the document's highest XRef object number based on imported page.
 */","* Determine the highest object number from the imported page to avoid mixed up numbers when saving the new pdf.
     * 
     * @param importedPage the imported page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,"org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",570,578,"/**
 * Retrieves a COSDictionary object given two keys.
 * @param firstKey First key for dictionary lookup.
 * @param secondKey Second key for dictionary lookup.
 * @return COSDictionary or null if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The COSDictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,boolean)",910,919,"/**
 * Gets a boolean value from the dictionary, or defaultValue if not found.
 */","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",1021,1030,"/**
 * Gets an integer value from a COS object, defaulting to defaultValue.
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getDecodeParams,"org.apache.pdfbox.filter.Filter:getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)",120,149,"/**
 * Retrieves decode parameters from a COSDictionary, based on index.
 * Returns a new COSDictionary if no parameters are found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getFilters(),246,259,"/**
 * Retrieves filter names from the parameters dictionary.
 * Returns a list of filter names or an empty list if none.
 */
","* Returns A list of filters applied to this stream.
     *
     * @return A (possibly empty) list of filters applied to this stream, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getDecode(),278,282,"/**
* Retrieves the decode array from the dictionary.
* Returns a COSArray object or null if not found.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getColorSpace(),239,247,"/**
 * Returns the color space, creating it if it doesn't exist.
 * @return The color space associated with this object.
 */
","* This will get the color space or null if none exists.
     *
     * @return the color space for the shading
     * @throws IOException if there is an error getting the color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(java.util.List,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",268,283,"/**
 * Filters COS objects by type.
 * @param keys COSObjectKeys to filter
 * @param type1 First type to match
 * @param type2 Second type to match (optional)
 * @return List of COSObjects matching the specified types
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,decode,"org.apache.pdfbox.filter.CryptFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,45,"/**
 * Decodes an input stream using a specified filter.
 * @param encoded Input stream to decode.
 * @param decoded Output stream for decoded data.
 * @param parameters COSDictionary containing filter parameters.
 * @param index Index of the filter.
 * @return DecodeResult object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,encode,"org.apache.pdfbox.filter.CryptFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",47,62,"/**
 * Encodes input stream using specified filter, or Identity if none.
 * @param input Input stream to encode.
 * @param encoded Output stream for encoded data.
 * @param parameters COSDictionary containing filter parameters.
 * @throws IOException if filter is unsupported.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,hasOnlyDocumentsOrParts,org.apache.pdfbox.multipdf.PDFMergerUtility:hasOnlyDocumentsOrParts(org.apache.pdfbox.cos.COSArray),1041,1058,"/**
 * Checks if array contains only documents or parts.
 * @param kLevelOneArray COSArray to check.
 * @return True if all entries are documents or parts.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isCatalog,org.apache.pdfbox.pdfparser.BruteForceParser:isCatalog(org.apache.pdfbox.cos.COSDictionary),765,769,"/**
* Checks if a COSDictionary is a catalog.
* Checks for ""type=Catalog"" or presence of ""FDF"" key.
*/
","* Tell if the dictionary is a PDF or FDF catalog.
     * 
     * @param dictionary the dictionary to be tested
     * @return true if the given dictionary is a root dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,isPageTreeNode,org.apache.pdfbox.pdmodel.PDPageTree:isPageTreeNode(org.apache.pdfbox.cos.COSDictionary),371,378,"/**
 * Checks if a COSDictionary node is a page tree node.
 * Returns true if the type is PAGES or contains KIDS.
 */
",* Returns true if the node is a page tree node (i.e. and intermediate).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getCryptFilterMethod(),107,110,"/**
* Returns the cryptographic filter method name.
* Uses the 'CFM' key from the cryptFilterDictionary.
*/
","* This will return the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @return the name of the crypt filter method.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStreamFilterName(),553,557,"/**
 * Returns the stream filter name, or IDENTITY if null.
 */","* Returns the name of the filter which is used for de/encrypting streams.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStringFilterName(),575,579,"/**
 * Returns the string filter name, or IDENTITY if null.
 */","* Returns the name of the filter which is used for de/encrypting strings.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptDictionary,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",594,621,"/**
 * Decrypts dictionary entries recursively.
 * @param dictionary Dictionary to decrypt.
 * @param objNum Object number for decryption.
 * @param genNum Generation number for decryption.
 */","* This will decrypt a dictionary.
     *
     * @param dictionary The dictionary to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error creating a new string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int),459,498,"/**
 * Converts a character code to a Unicode string using a CMap.
 * @param code character code to convert
 * @return Unicode string or null if conversion is not possible
 */
","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @return Unicode character(s)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getSubType,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getSubType(),134,141,"/**
 * Returns the subType COS name. Lazily initializes if null.
 */","* Returns the subtype of the soft mask (Alpha, Luminosity) - S entry
     * 
     * @return the subtype of the soft mask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getRelationship(),74,77,"/**
* Retrieves the relationship COS name from the dictionary.
*/
","* Get the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @return the relationship as a name. Valid values are P (the target is the parent of the
     * current document) and C (the target is a child of the current document). Invalid values or
     * null are also returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearanceState(),324,327,"/**
* Returns the appearance state COS name.
*/","* Returns the annotations appearance state, which selects the applicable appearance stream from an appearance
     * subdictionary.
     * 
     * @return the annotations appearance state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,isEncrypted,org.apache.pdfbox.cos.COSDocument:isEncrypted(),329,332,"/**
 * Checks if the document is encrypted.
 * Returns true if encryption exists, false otherwise.
 */","* This will tell if this is an encrypted document.
     *
     * @return true If this document is encrypted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:getEncryptionDictionary(),340,343,"/**
 * Returns the encryption dictionary from the trailer.
 * Returns null if no encryption dictionary exists.
 */
","* This will get the encryption dictionary if the document is encrypted or null if the document
     * is not encrypted.
     *
     * @return The encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,initialParse,org.apache.pdfbox.pdfparser.FDFParser:initialParse(),48,58,"/**
 * Parses the document's root object from the trailer dictionary.
 * Throws IOException if the root object is missing.
 */
","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(org.apache.pdfbox.pdmodel.fixup.PDDocumentFixup),128,146,"/**
 * Retrieves the cached AcroForm, applying fixups if needed.
 * @param acroFormFixup Fixup object to apply, if not already applied.
 * @return PDAcroForm object or null if not found.
 */
","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * Dependent on setting <code>acroFormFixup</code> some fixing/changes will be done to the AcroForm.
     * If you need to ensure that there are no fixes applied call <code>getAcroForm</code> with <code>null</code>.
     * 
     * Using <code>getAcroForm(PDDocumentFixup acroFormFixup)</code> might change the original content and
     * subsequent calls with <code>getAcroForm(null)</code> will return the changed content.
     * 
     * @param acroFormFixup the fix up action or null
     * @return The document's AcroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getViewerPreferences(),175,179,"/**
 * Retrieves viewer preferences from the document.
 * @return PDViewerPreferences object or null if not found.
 */
","* Get the viewer preferences associated with this document or null if they do not exist.
     *
     * @return The document's viewer preferences.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getNames(),327,331,"/**
 * Retrieves the names dictionary from the document.
 * Returns a PDDocumentNameDictionary or null if absent.
 */
",* @return The names dictionary for this document or null if none exist.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDests(),336,340,"/**
 * Retrieves the destination dictionary. Returns null if not present.
 */",* @return The named destinations dictionary for this document or null if none exists.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMarkInfo(),390,394,"/**
* Retrieves mark information from the document's COSDictionary.
* Returns PDMarkInfo object or null if not found.
*/
","* Get info about doc's usage of tagged features. This will return null if there is no
     * information.
     *
     * @return The new mark info.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getURI(),537,541,"/**
 * Retrieves the URI dictionary from the root object.
 * @return PDURIDictionary object or null if not present.
 */
","* Returns the document-level URI.
     * 
     * @return the document level URI if present, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getStructureTreeRoot(),558,562,"/**
 * Retrieves the structure tree root from the document's root dictionary.
 * @return PDStructureTreeRoot object or null if not found.
 */
","* Get the document's structure tree root, or null if none exists.
     * 
     * @return the structure tree root if present, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOCProperties(),641,645,"/**
 * Gets optional content properties from the root dictionary.
 * Returns null if OCProperties dictionary is not found.
 */
","* Get the optional content properties dictionary associated with this document.
     *
     * @return the optional properties dictionary or null if it is not present",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getDests(),79,89,"/**
 * Retrieves the destination names dictionary.
 * @return PDDestinationNameTreeNode or null if not found.
 */","* Get the destination named tree node. The values in this name tree will be
     * PDPageDestination objects.
     *
     * @return The destination name tree node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getEmbeddedFiles(),113,117,"/**
 * Retrieves the embedded files node from the name dictionary.
 * Returns null if the dictionary is empty.
 */
","* Get the embedded files named tree node. The values in this name tree will
     * be PDComplexFileSpecification objects.
     *
     * @return The embedded files name tree node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getJavaScript(),136,140,"/**
 * Retrieves the JavaScript dictionary.
 * Returns a PDJavascriptNameTreeNode or null if not found.
 */","* Get the document level JavaScript name tree. When the document is opened, all the JavaScript
     * actions in it shall be executed, defining JavaScript functions for use by other scripts in
     * the document.
     *
     * @return The document level JavaScript name tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getIndirectResourceObjects,"org.apache.pdfbox.pdmodel.PDPage:getIndirectResourceObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",164,176,"/**
 * Gets indirect resource objects of a specific kind.
 * @param pageResources Page resources dictionary.
 * @param kind Resource kind (e.g., Images, Fonts).
 * @return List of indirect COSObject resources.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTransition,org.apache.pdfbox.pdmodel.PDPage:getTransition(),717,721,"/**
 * Retrieves the transition dictionary for the page.
 * @return PDTransition object or null if no transition exists.
 */",* @return The page transition associated with this page or null if no transition is defined,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getIndirect,"org.apache.pdfbox.pdmodel.PDResources:getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",485,499,"/**
 * Retrieves a COSObject by kind and name from the resources.
 * @param kind COSName of the dictionary.
 * @param name COSName of the object to retrieve.
 * @return COSObject or null if not found/incorrect type.
 */
","* Returns the resource with the given name and kind as an indirect object, or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,get,"org.apache.pdfbox.pdmodel.PDResources:get(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",504,508,"/**
 * Retrieves a COS object by kind and name from the resources.
 * @param kind COS name of the dictionary.
 * @param name COS name of the object within the dictionary.
 */
","* Returns the resource with the given name and kind, or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getNames,org.apache.pdfbox.pdmodel.PDResources:getNames(org.apache.pdfbox.cos.COSName),583,587,"/**
 * Returns COS names associated with a given kind.
 * @param kind The kind of resource to retrieve names for.
 * @return A set of COS names or an empty set if not found.
 */
",* Returns the resource names of the given kind.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEFDictionary(),73,80,"/**
 * Returns the embedded font dictionary.
 * Retrieves from file stream if not already loaded.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getPage(),68,72,"/**
 * Returns the page associated with this document.
 * Returns null if no page is found.
 */
","* Gets the page.
     * 
     * @return the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getPage(),155,163,"/**
 * Retrieves the page associated with this object.
 * @return PDPage object or null if not found.
 */
","* Get the page on which the object shall be rendered.
     *
     * @return the referenced page or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getPage(),139,143,"/**
 * Returns the page associated with this document.
 * Returns a PDPage object or null if the page is null.
 */","* Returns the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * 
     * @return the page on which some or all of the content items designated by
     *  the K entry shall be rendered",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getIDTree(),98,102,"/**
 * Creates and returns a PDNameTreeNode for the ID tree, or null.
 */","* Returns the ID tree.
     * 
     * @return the ID tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTree(),125,129,"/**
 * Retrieves the parent tree as a PDNumberTreeNode, or null.
 */","* Returns the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     *
     * @return the parent tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getClassMap(),211,245,"/**
 * Extracts class map from COS dictionary, returns a Map.
 */","* Sets the ClassMap.
     * 
     * @return the ClassMap, never null. The elements are either {@link PDAttributeObject} or lists
     * of it.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getCryptFilterDictionary(org.apache.pdfbox.cos.COSName),492,505,"/**
 * Retrieves a CryptFilterDictionary by name.
 * @param cryptFilterName Name of the filter dictionary.
 * @return CryptFilterDictionary or null if not found.
 */
","* Returns the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * 
     * @return the crypt filter with the given name if available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderStyle(),898,902,"/**
 * Gets the border style dictionary. Returns null if not found.
 */","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the
     * annotation.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderEffect(),922,926,"/**
 * Gets the border effect dictionary.
 * @return PDBorderEffectDictionary or null if not present.
 */
","* This will retrieve the border style dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @return the border effect dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getSignature(),147,151,"/**
 * Retrieves the signature from the catalog's COSDictionary.
 * @return A PDSignature object or null if no signature exists.
 */
","* This will get the signature or null if there is none.
     *
     * @return The signature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getJavaScript(),544,548,"/**
 * Gets the JavaScript dictionary from the FDF.
 * Returns a FDFJavaScript object or null if absent.
 */
","* This will get the java script entry.
     *
     * @return The java script entry describing javascript commands.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceDictionary(),594,598,"/**
 * Retrieves the appearance dictionary. Returns null if not present.
 */","* This will get the appearance dictionary that specifies the appearance of a pushbutton field.
     *
     * @return The AP entry of this dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceStreamReference(),615,619,"/**
 * Gets the appearance stream reference from the field.
 * @return FDFNamedPageReference or null if not found.
 */
","* This will get named page references.
     *
     * @return The named page references or <code>null</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:getIconFit(),636,640,"/**
 * Gets the icon fit object from the field's IF dictionary.
 * @return FDFIconFit object or null if dictionary is missing.
 */
","* This will get the icon fit that is associated with this field.
     *
     * @return The 'IF' entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:getAdditionalActions(),722,726,"/**
 * Retrieves additional actions from the field's AA dictionary.
 * Returns a PDAdditionalActions object or null if no dictionary.
 */
","* This will get a list of additional actions that will get executed based on events.
     *
     * @return The 'AA' entry in this FDF field dictionary or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:getPageInfo(),101,110,"/**
 * Retrieves page info from the page's COSDictionary.
 * @return FDFPageInfo object or null if no info exists.
 */
","* This will get the FDF page info object.
     *
     * @return The Page info.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getTemplateReference(),71,75,"/**
 * Gets the template reference. Returns null if template is null.
 */
","* This is the template reference.
     *
     * @return The template reference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDFont:getFontDescriptor(),216,228,"/**
 * Returns the font descriptor, creating it if necessary.
 * @return PDFontDescriptor object representing the font.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getCIDSystemInfo,org.apache.pdfbox.pdmodel.font.PDCIDFont:getCIDSystemInfo(),362,366,"/**
 * Retrieves PDCIDSystemInfo from the dictionary, or null if absent.
 */","* Returns the CIDSystemInfo, or null if it is missing (which isn't allowed but could happen).
     * 
     * @return the CIDSystemInfo, or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getPanose,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getPanose(),810,823,"/**
 * Retrieves the Panose font descriptor.
 * @return PDPanose object or null if not present.
 */","* Returns the Panose entry of the Style dictionary, if any.
     *
     * @return A Panose wrapper object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3Font:getResources(),290,301,"/**
 * Returns the resources associated with this PDF dictionary.
 * Creates and caches resources if not already present.
 */
","* Returns the optional resources of the type3 stream.
     *
     * @return the resources bound to be used when parsing the type3 stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProcs,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProcs(),380,387,"/**
 * Returns the character processing dictionary.
 * Lazily initializes if null.
 */","* Returns the dictionary containing all streams to be used to render the glyphs.
     * 
     * @return the dictionary containing all glyph streams.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getProcess,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getProcess(),104,112,"/**
 * Retrieves the process dictionary as a PDDeviceNProcess object.
 * Returns null if the process dictionary is not found.
 */
","* Returns the DeviceN Process Dictionary, or null if it is missing.
     * @return the DeviceN Process Dictionary, or null if it is missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getRenderState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getRenderState(org.apache.pdfbox.rendering.RenderDestination),120,144,"/**
 * Gets the render state based on the destination.
 * @param destination RenderDestination (PRINT, VIEW, EXPORT)
 * @return RenderState or null if not found.
 */
","* @param destination to be rendered
     * @return state or null if undefined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getExtendedGraphicsState(),62,73,"/**
 * Returns the extended graphics state, or creates it if null.
 */","* This will get the external graphics state for this pattern.
     * @return The extended graphics state for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getResources(),198,203,"/**
 * Retrieves resources from the COSDictionary.
 * Returns PDResources object or null if not present.
 */","* This will get the resources for this pattern.
     * This will return null if no resources are available at this level.
     * @return The resources for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getTargetDirectory(),173,177,"/**
 * Gets the target directory.
 * Returns a PDTargetDirectory object or null if not found.
 */
","* Get the target directory.
     *
     * @return the target directory or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getWinLaunchParams(),94,98,"/**
 * Creates and returns PDWindowsLaunchParams from COSDictionary.
 * @return PDWindowsLaunchParams object or null if COSDictionary is null.
 */
","* This will get a dictionary containing Windows-specific launch parameters.
     *
     * @return The Win entry of of the specific launch action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getTargetDirectory(),126,130,"/**
 * Gets the target directory. Returns null if not present.
 */","* Get the target directory. If this entry is absent, the current document is the target file
     * containing the destination.
     *
     * @return the target directory or null if the current document is the target file containing
     * the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearance(),344,348,"/**
 * Retrieves the appearance dictionary.
 * @return PDAppearanceDictionary or null if not present.
 */
","* This will get the appearance dictionary associated with this annotation. This may return null.
     * 
     * @return This annotations appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getPage(),843,847,"/**
 * Returns the page associated with this document.
 * Returns null if the page dictionary is not found.
 */
","* This will retrieve the corresponding page of this annotation. See also
     * <a href=""https://stackoverflow.com/a/36894982/535646"">this answer</a> about what to do if
     * the page isn't available.
     *
     * @return The corresponding page or null if not available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getBorderEffect(),253,257,"/**
 * Retrieves the border effect dictionary.
 * Returns a PDBorderEffectDictionary or null if absent.
 */
","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getBorderStyle(),126,130,"/**
 * Retrieves the border style dictionary.
 * @return BorderStyleDictionary or null if not present.
 */
","* This will retrieve the border style dictionary, specifying the width and dash pattern used in
     * drawing the line.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getPreviousURI(),190,194,"/**
 * Returns the previous URI, or null if it doesn't exist.
 */","* This will set the previous URI action, in case it's needed.
     *
     * @return The previous URI.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getExternalData(),274,278,"/**
 * Retrieves the external data dictionary.
 * Returns a PDExternalDataDictionary or null if not present.
 */
","* This will return the external data dictionary.
     * 
     * @return the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getBorderStyle(),306,310,"/**
 * Retrieves the border style dictionary.
 * @return A PDBorderStyleDictionary or null if not present.
 */
","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getBorderEffect(),99,103,"/**
 * Retrieves the border effect dictionary.
 * @return PDBorderEffectDictionary or null if not present.
 */
","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getBorderEffect(),96,100,"/**
 * Retrieves the border effect dictionary.
 * Returns a PDBorderEffectDictionary or null if not present.
 */
","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAppearanceCharacteristics(),120,124,"/**
 * Gets appearance characteristics dictionary. Returns null if absent.
 */
","* Returns the appearance characteristics dictionary.
     * 
     * @return the appearance characteristics dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getActions(),164,168,"/**
 * Retrieves additional actions for the annotation.
 * Returns PDAnnotationAdditionalActions or null if no actions exist.
 */
","* Get the additional actions for this field. This will return null if there are no additional actions for this
     * field. As of PDF 1.6 this is only used for Widget Annotations.
     *
     * @return The actions of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getBorderStyle(),196,200,"/**
 * Gets the border style dictionary.
 * @return BorderStyleDictionary or null if not present.
 */
","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getNormalAppearance(),65,69,"/**
 * Retrieves the normal appearance entry.
 * Returns a PDAppearanceEntry or null if not found.
 */","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"".
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getFilter(),75,84,"/**
 * Retrieves the filter dictionary. Returns null if no filter exists.
 */
","* A build data dictionary for the signature handler that was
     * used to create the parent signature.
     *
     * @return the Filter as PDPropBuildFilter object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getPubSec(),103,112,"/**
 * Retrieves the public section data dictionary.
 * @return PDPropBuildDataDict object or null if not present.
 */
","* A build data dictionary for the PubSec software module
     * that was used to create the parent signature.
     *
     * @return the PubSec as PDPropBuildPubSec object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getApp(),130,139,"/**
 * Retrieves the application data dictionary.
 * @return PDPropBuildDataDict object or null if not present.
 */
","* A build data dictionary for the viewing application software
     * module that was used to create the parent signature.
     *
     * @return the App as PDPropBuildApp object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getMDP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getMDP(),408,412,"/**
 * Retrieves the MDP (Metadata for PDF) dictionary.
 * @return PDSeedValueMDP object or null if not found.
 */
","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @return the mdp dictionary as PDSeedValueMDP",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSeedValueCertificate(),441,445,"/**
 * Retrieves the seed value certificate from the dictionary.
 * Returns a PDSeedValueCertificate or null if not found.
 */
","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @return dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getTimeStamp(),465,469,"/**
 * Gets the time stamp from the COSDictionary.
 * Returns a PDSeedValueTimeStamp object or null.
 */","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @return the timestamp dictionary as PDSeedValueTimeStamp",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getPropBuild(),444,453,"/**
 * Retrieves the property build object from the dictionary.
 * @return PDPropBuild object or null if not present.
 */
","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @return the pdf signature build dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getStructureElement(),301,305,"/**
 * Retrieves a PDStructureElement from the COS dictionary.
 * Returns null if the dictionary is null.
 */
","* Get the structure element of this node.
     *
     * @return The structure element of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,hasChildren,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:hasChildren(),170,173,"/**
* Checks if the COS object has children.
* Returns true if FIRST dictionary exists, false otherwise.
*/
",* @return true if the node has at least one child,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOutlineItem,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOutlineItem(org.apache.pdfbox.cos.COSName),175,179,"/**
 * Retrieves a PDOutlineItem by its COS name.
 * @param name The COS name of the outline item.
 * @return A PDOutlineItem or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultResources(),542,547,"/**
 * Returns default resources from the document dictionary.
 * Returns null if no default resources are found.
 */
","* This will get the default resources for the AcroForm.
     *
     * @return The default resources or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getActions,org.apache.pdfbox.pdmodel.interactive.form.PDField:getActions(),224,228,"/**
 * Retrieves additional actions for the form field.
 * Returns null if no actions are present.
 */","* Get the additional actions for this field. This will return null if there
     * are no additional actions for this field.
     *
     * @return The actions of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValue(),141,145,"/**
 * Retrieves the signature value from the COS dictionary.
 * @return A PDSignature object or null if no signature exists.
 */
","* Returns the signature contained in this field.
     * 
     * @return A signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getDefaultValue(),152,156,"/**
 * Returns the default signature value, or null if not present.
 */","* Returns the default value, if any.
     *
     * @return A signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSeedValue(),172,176,"/**
 * Creates and returns a PDSeedValue object from the COS dictionary.
 * Returns null if the dictionary is null.
 */
","* <p>(Optional; PDF 1.5) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @return the seed value dictionary as PDSeedValue",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getMeasure(),125,129,"/**
 * Returns the measure dictionary. Returns null if not present.
 */
","* This will retrieve the measure dictionary.
     * 
     * @return the measure dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getThreadInfo(),71,75,"/**
 * Retrieves document information from the thread.
 * @return PDDocumentInformation object or null if not found.
 */","* Get info about the thread, or null if there is nothing.
     *
     * @return The thread information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getFirstBead(),93,97,"/**
* Retrieves the first PDThreadBead from the thread.
* Returns null if no bead is found.
*/
","* Get the first bead in the thread, or null if it has not been set yet.  This
     * is a required field for this object.
     *
     * @return The first bead in the thread.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getThread(),77,81,"/**
 * Creates and returns a PDThread object from the COSDictionary.
 * Returns null if the dictionary is null.
 */
","* This will get the thread that this bead is part of.  This is only required
     * for the first bead in a thread, so other beads 'may' return null.
     *
     * @return The thread that this bead is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getNextBead(),100,103,"/**
 * Returns the next PDThreadBead. Creates a new bead from COS data.
 */","* This will get the next bead.  If this bead is the last bead in the list then this
     * will return the first bead.
     *
     * @return The next bead in the list or the first bead if this is the last bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPreviousBead(),121,124,"/**
 * Returns the previous bead.
 * Creates a new PDThreadBead from the previous COSDictionary.
 */","* This will get the previous bead.  If this bead is the first bead in the list then this
     * will return the last bead.
     *
     * @return The previous bead in the list or the last bead if this is the first bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPage(),156,160,"/**
* Returns the page associated with this document.
* Returns null if the page dictionary is not found.
*/
","* Get the page that this bead is part of.
     *
     * @return The page that this bead is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMetadata(),252,256,"/**
 * Retrieves the metadata object. Returns null if no metadata exists.
 */","* Get the metadata that is part of the document catalog. This will return null if there is no
     * meta data for this object.
     *
     * @return The metadata for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMetadata,org.apache.pdfbox.pdmodel.PDPage:getMetadata(),672,676,"/**
 * Retrieves the metadata of the page.
 * @return PDMetadata object or null if no metadata exists.
 */","* Get the metadata that is part of the document catalog. This will return null if there is
     * no meta data for this object.
     * 
     * @return The metadata for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getDifferences(),469,472,"/**
* Retrieves the differences stream from the FDF object.
* Returns a COSStream object representing the differences.
*/
","* This will get the incremental updates since the PDF was last opened.
     *
     * @return The differences entry of the FDF dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile(),726,730,"/**
 * Returns the font file as a PDStream, or null if not present.
 */","* A stream containing a Type 1 font program.
     *
     * @return A stream containing a Type 1 font program.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile2(),747,751,"/**
 * Returns the font file 2 as a PDStream, or null if not present.
 */","* A stream containing a true type font program.
     *
     * @return A stream containing a true type font program.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile3(),768,772,"/**
 * Retrieves the Font File 3 stream.
 * @return PDStream object or null if not found.
 */
","* A stream containing a font program that is not true type or type 1.
     *
     * @return A stream containing a font program.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCIDSet(),789,793,"/**
 * Returns the CID set stream, or null if not present.
 */","* Get the CIDSet stream.
     *
     * @return A stream containing a CIDSet.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getDestOutputIntent,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getDestOutputIntent(),63,66,"/**
* Gets the destination output intent as a COSStream.
* Returns null if not present.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSound(),71,74,"/**
* Returns the sound stream associated with the action.
* Returns a COSStream object.
*/
","* Gets the sound object.
     * 
     * @return The sound object defining the sound that shall be played.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalIcon(),186,190,"/**
 * Retrieves the normal icon as a PDFormXObject.
 * Returns null if the icon stream is not found.
 */
","* This will retrieve the normal icon.
     * 
     * @return the normal icon.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverIcon(),197,201,"/**
 * Retrieves the rollover icon as a PDFormXObject.
 * Returns null if the icon is not present.
 */
","* This will retrieve the rollover icon.
     * 
     * @return the rollover icon",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateIcon(),208,212,"/**
* Retrieves the alternate icon as a PDFormXObject.
* Returns null if no icon is found.
*/
","* This will retrieve the alternate icon.
     * 
     * @return the alternate icon.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getDocumentID,org.apache.pdfbox.cos.COSDocument:getDocumentID(),361,364,"/**
* Retrieves the document ID as a COSArray from the trailer.
*/","* This will get the document ID.
     *
     * @return The document id.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,detectPossibleSignature,org.apache.pdfbox.pdfwriter.COSWriter:detectPossibleSignature(org.apache.pdfbox.cos.COSDictionary),1267,1291,"/**
 * Checks if a signature is present in an incremental update.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOutputIntents(),411,428,"/**
 * Retrieves a list of output intents from the document.
 * @return List of PDOutputIntent objects.
 */
","* Get the list of OutputIntents defined in the document.
     *
     * @return The list of PDOutputIntent, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getThreadBeads,org.apache.pdfbox.pdmodel.PDPage:getThreadBeads(),634,654,"/**
 * Retrieves a list of PDThreadBead objects from the page.
 * Returns a COSArrayList containing the extracted beads.
 */","* This will get a list of PDThreadBead objects, which are article threads in the document. This
     * will return an empty list if there are no thread beads.
     *
     * @return A list of article threads on this page, never null. The returned list is backed by
     * the beads COSArray, so any adding or deleting in this list will change the document too.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getViewports,org.apache.pdfbox.pdmodel.PDPage:getViewports(),832,853,"/**
* Extracts viewport dictionaries from the page's VP array.
* @return List of PDViewportDictionary objects or null if empty.
*/
","* Get the viewports.
     *
     * @return a list of viewports or null if there is no /VP entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getKids(),114,129,"/**
 * Returns a list of child nodes.
 * @return List of child PDNameTreeNodes or null if none.
 */","* Return the children of this node.  This list will contain PDNameTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getNames(),253,280,"/**
 * Retrieves names from a COS array. Returns null if array is absent.
 */","* This will return a map of names on this level. The key will be a string,
     * and the value will depend on where this class is being used.
     *
     * @return ordered map of COS objects or <code>null</code> if the dictionary
     * contains no 'Names' entry on this level.
     *
     * @throws IOException If there is an error while creating the sub types.
     * @see #getKids()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getKids(),88,103,"/**
 * Retrieves child nodes. Returns an empty list if none exist.
 */","* Return the children of this node.  This list will contain PDNumberTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getNumbers(),177,204,"/**
 * Extracts number indices from a COS array.
 * @return Map of integer indices to COSObjectable values.
 */","* This will return a map of numbers on this level. The key will be a java.lang.Integer, the
     * value will depend on where this class is being used.
     *
     * @return A map of COS objects.
     *
     * @throws IOException If there is a problem creating the values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getUpperLimit(),281,290,"/**
 * Gets the upper limit from the COS array.
 * Returns Integer value or null if not found.
 */
","* Get the highest value for a key in the number map.
     *
     * @return The highest value for a key in the map or null if missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getLowerLimit(),322,331,"/**
 * Gets the lower limit from the COS array.
 * Returns Integer value or null if not found.
 */
","* Get the lowest value for a key in the number map.
     *
     * @return The lowest value for a key in the map or null if missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeValues(),264,271,"/**
 * Returns the range values as a COSArray, or retrieves it if null.
 */
","* Returns all ranges for the output values as COSArray .
     * Required for type 0 and type 4 functions
     * @return the ranges array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainValues(),278,285,"/**
 * Returns the domain values as a COSArray. Lazily initializes if null.
 */","* Returns all domains for the input values as COSArray.
     * Required for all function types.
     * @return the domains array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSize,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getSize(),95,102,"/**
* Returns the size array. Lazily initializes if null.
*/
","* The ""Size"" entry, which is the number of samples in each input dimension
     * of the sample table.
     *
     * @return A List of java.lang.Integer objects.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeValues(),170,182,"/**
 * Returns the decode values, using range values if decode is null.
 */","* Returns all decode values as COSArray.
     * 
     * @return the decode array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getFunctions,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getFunctions(),133,140,"/**
 * Returns the array of functions associated with this object.
 * Lazily initializes if not already present.
 */
","* Returns all functions values as COSArray.
     * 
     * @return the functions array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getBounds,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getBounds(),147,154,"/**
 * Returns the bounds array, or fetches it if null.
 * @return COSArray containing the bounds, or null.
 */
","* Returns all bounds values as COSArray.
     * 
     * @return the bounds array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncode,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncode(),161,168,"/**
 * Returns the encode COSArray, lazily initialized if null.
 */","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,getOwnerUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:getOwnerUserProperties(),64,74,"/**
 * Retrieves a list of user properties associated with the owner.
 * @return List of PDUserProperty objects.
 */
","* Returns the user properties.
     * 
     * @return the user properties",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isAttached(java.lang.String),123,137,"/**
 * Checks if the given edge is attached to this object.
 * @param edge The edge to check.
 * @return True if attached, false otherwise.
 */
","* Is the artifact attached to the given edge?
     * 
     * @param edge the edge
     * @return <code>true</code> if the artifact is attached to the given edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getColor(),447,460,"/**
 * Retrieves the color from the annotation's COS array.
 * @return Color object or null if no color data is available.
 */
","* Get the annotation color.
     *
     * @return The annotation color, or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getInteriorColor(),120,133,"/**
 * Retrieves the interior color from the annotation.
 * @return Color object representing the interior color, null if absent.
 */","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getCallout(),157,161,"/**
* Returns an array of floats from the CL COS array, or null.
*/","* This will get the coordinates of the callout line.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:getInkList(),139,155,"/**
 * Retrieves a list of ink arrays from the annotation.
 * @return List of float arrays or null if inklist is missing.
 */
","* Get the paths making up the freehand ""scribble"".
     *
     * @see #setInkList(List)
     * @return the List of arrays representing the paths.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLine(),172,176,"/**
 * Retrieves the line data from the annotation.
 * @return Float array representing the line or null.
 */","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getStartPointEndingStyle(),206,210,"/**
* Returns the start point ending style from the annotation.
* Returns LE_NONE if the array is null.
*/
","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getEndPointEndingStyle(),240,244,"/**
* Gets the endpoint style from the annotation's LE array.
* Returns LE_NONE if the array is null.
*/
","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getInteriorColor(),266,279,"/**
 * Retrieves the interior color from the annotation.
 * Returns Color object or null if no color is defined.
 */","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionHorizontalOffset(),405,409,"/**
 * Gets the horizontal offset of the caption.
 * Returns 0.0 if the array is null.
 */","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionVerticalOffset(),434,438,"/**
 * Gets the vertical offset of the caption.
 * Returns 0.f if the array is null.
 */","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getVertices(),126,130,"/**
 * Returns the vertices of the annotation as a float array.
 * Returns null if vertices are not present.
 */
","* This will get the coordinates of the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getInteriorColor(),152,165,"/**
 * Retrieves the interior color from the annotation.
 * Returns a Color object or null if no color is defined.
 */
","* This will get interior color of the drawn area.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getVertices(),143,147,"/**
 * Returns the vertices as a float array, or null if none exist.
 */","* This will get the coordinates of the the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getStartPointEndingStyle(),176,180,"/**
 * Gets the ending style of the line's endpoint.
 * Returns LE_NONE if the endpoint style is not defined.
 */
","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getEndPointEndingStyle(),209,213,"/**
 * Gets the endpoint ending style from the annotation.
 * Returns the style name or PDAnnotationLine.LE_NONE if null.
 */
","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getInteriorColor(),235,248,"/**
 * Retrieves the interior color from the annotation.
 * @return Color object representing the interior color, or null.
 */
","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getInteriorColor(),121,134,"/**
 * Retrieves the interior color from the annotation.
 * @return Color object representing the interior color, null if absent.
 */
","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,getCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:getCoords(),98,109,"/**
 * Retrieves the coordinates from the annotation as a float array.
 * Returns null if no coordinates are found.
 */
","* Get the coordinates of individual words or group of words.
     * 
     * @see #setCoords(float[])
     * @return the array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getID(),305,308,"/**
* Returns the ID array from the FDF document.
*/","* This is the FDF id.
     *
     * @return The FDF ID.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFields(),325,339,"/**
 * Retrieves a list of FDF fields from the FDF document.
 * @return List of FDFField objects or null if no fields exist.
 */
","* This will get the list of FDF Fields. This will return a list of FDFField objects.
     *
     * @return A list of FDF fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getPages(),376,390,"/**
 * Retrieves a list of FDF pages from the FDF document.
 * @return List of FDFPage objects or null if no pages exist.
 */
","* This will get the list of FDF Pages. This will return a list of FDFPage objects.
     *
     * @return A list of FDF pages.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getKids,org.apache.pdfbox.pdmodel.fdf.FDFField:getKids(),177,190,"/**
 * Retrieves a list of child FDF fields.
 * @return List of FDFField objects or null if none exist.
 */
","* This will get the list of kids. This will return a list of FDFField objects.
     * This will return null if the underlying list is null.
     *
     * @return The list of kids.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:getOptions(),661,683,"/**
 * Retrieves options from a COS array. Returns null if no options exist.
 */","* This will return a list of options for a choice field.
     * The values in the list will be 1 of 2 types:<ul>
     *     <li><code>String</code> </li>
     *     <li>{@link FDFOptionElement}</li>
     * </ul>
     *
     * @return A list of all options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:getTemplates(),71,84,"/**
 * Retrieves a list of FDF templates from the page.
 * @return List of FDFTemplate objects or null if none exist.
 */
","* This will get a list of FDFTemplage objects that describe the named pages that serve as templates.
     *
     * @return A list of templates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getFields(),92,105,"/**
 * Retrieves a list of FDF fields from the template.
 * @return List of FDFField objects or null if no fields exist.
 */
","* This will get a list of fields that are part of this template.
     *
     * @return A list of fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readWidths,org.apache.pdfbox.pdmodel.font.PDCIDFont:readWidths(),74,139,"/**
 * Reads glyph widths from the CIDFont dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readVerticalDisplacements,org.apache.pdfbox.pdmodel.font.PDCIDFont:readVerticalDisplacements(),141,192,"/**
 * Reads vertical displacements and position vectors from COS arrays.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDFont:getAverageFontWidth(),388,430,"/**
 * Returns the average font width, calculating if needed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidths,org.apache.pdfbox.pdmodel.font.PDFont:getWidths(),525,540,"/**
 * Returns the widths as a list of floats.
 * Returns an empty list if widths are not present.
 */
","* The widths of the characters. This will be null for the standard 14 fonts.
     *
     * @return The widths of the characters.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getDescendantFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:getDescendantFont(org.apache.pdfbox.cos.COSDictionary),310,322,"/**
 * Retrieves the first descendant font dictionary.
 * Returns null if not found or not a COSDictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,applyDifferences,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:applyDifferences(),151,175,"/**
 * Applies differences from the encoding's COS array.
 * Updates the object's state based on differences.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getMatrix(),140,151,"/**
 * Returns the transformation matrix as a float array.
 * Returns identity matrix if not found in dictionary.
 */
","* Returns the linear interpretation matrix, which is an array of nine numbers.
     * If the underlying dictionary contains null then the identity matrix will be returned.
     * @return the linear interpretation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getComponents(),90,103,"/**
 * Extracts component names from the dictionary's COMPONENTS array.
 * @return List of component names, or an empty list if not found.
 */
","* Returns the names of the color components.
     * @return the names of the color components",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBackground(),153,160,"/**
 * Returns the background COS array, lazily initialized.
 * Returns null if no background is defined.
 */
","* This will return the background.
     *
     * @return the background",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getDomain(),83,90,"/**
 * Returns the domain COS array, lazily initialized if null.
 */","* This will get the optional Domain values of a function based shading.
     *
     * @return the domain values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getExtend(),56,63,"/**
 * Returns the extend COS array, lazily initialized if null.
 */","* This will get the optional Extend values for this shading.
     *
     * @return the extend values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getDomain(),81,88,"/**
 * Returns the domain COS array, lazily initialized if null.
 */","* This will get the optional Domain values for this shading.
     *
     * @return the domain values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getCoords(),106,113,"/**
 * Returns the coordinates array. Lazily initializes if null.
 */","* This will get the Coords values for this shading.
     *
     * @return the coordinate values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeValues(),131,138,"/**
 * Returns the decode values COS array. Lazily initializes if null.
 */","* Returns all decode values as COSArray.
     *
     * @return the decode array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFontSetting(),437,441,"/**
 * Retrieves the font setting. Returns null if no font is defined.
 */","* This will get the font setting of the graphics state.
     *
     * @return The font setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFields(),59,62,"/**
 * Returns the fields array from the action object.
 */","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFields(),85,88,"/**
* Returns the fields array from the action object.
*/","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:getRectDifferences(),92,96,"/**
 * Returns an array of floats representing differences in margins.
 * Returns an empty array if margin data is not available.
 */","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the boundaries of the underlying caret.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifferences(),179,183,"/**
 * Returns an array of floats representing page margins.
 * Returns an empty array if margins are not present.
 */
","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getCallout(),208,212,"/**
 * Returns an array of floats representing the callout data.
 * Returns null if callout data is not present.
 */
","* This will get the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:getInkList(),86,107,"/**
 * Retrieves the ink list as a 2D float array. Returns an empty array if not found.
 */","* Get one or more disjoint paths that make this annotation.
     *
     * @return An array of arrays, each representing a stroked path. Each array shall be a series of
     * alternating horizontal and vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLine(),145,149,"/**
 * Extracts line coordinates from a COS array.
 * @return float[] line coordinates or null if absent.
 */
","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getStartPointEndingStyle(),178,186,"/**
 * Gets the start point ending style from the COS array.
 * Returns LE_NONE if the array is invalid or empty.
 */
","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getEndPointEndingStyle(),215,223,"/**
 * Gets the endpoint ending style from the COS array.
 * Returns LE_NONE if the array is invalid.
 */
","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionHorizontalOffset(),370,374,"/**
 * Gets the horizontal offset of the caption.
 * Returns 0.f if the offset is not available.
 */","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionVerticalOffset(),399,403,"/**
 * Gets the vertical offset from the CO array.
 * Returns 0.f if the array is null.
 */
","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getQuadPoints(),211,215,"/**
 * Returns an array of floats representing quad points, or null.
 */","* This will retrieve the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @return An array of floats representing the quad points.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getVertices(),111,115,"/**
 * Returns the vertices as a float array, or null if none exist.
 */","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getPath,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getPath(),136,157,"/**
* Extracts path data from a COS array.
* @return A float[][] representing the path, or null if not found.
*/
","* PDF 2.0: This will retrieve the arrays that shall represent the alternating horizontal
     * and vertical coordinates for path building.
     *
     * @return An array of float arrays, each supplying the operands for a path building operator
     * (m, l or c). The first array should have 2 elements, the others should have 2 or 6 elements.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getStartPointEndingStyle(),84,92,"/**
 * Gets the start point ending style from the COS array.
 * Returns PDAnnotationLine.LE_NONE if array is invalid.
 */
","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getEndPointEndingStyle(),121,129,"/**
 * Returns the endpoint style from a COS array.
 * Returns PDAnnotationLine.LE_NONE if not found.
 */
","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getVertices(),157,161,"/**
 * Returns an array of vertices as floats, or null if none exist.
 */","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifferences(),168,172,"/**
* Returns an array of floats representing page margins.
* Returns an empty array if margins are not found.
*/
","* This will get the differences between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:getQuadPoints(),69,73,"/**
 * Retrieves an array of quad points from the COS object.
 * Returns null if no quad points are found.
 */
","* This will retrieve the set of quadpoints which encompass the areas of this annotation.
     *
     * @return An array of floats representing the quad points.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSubFilter(),279,283,"/**
 * Retrieves sub-filter names from the dictionary.
 * Returns an empty list if no sub-filter is present.
 */
","* If <b>SubFilter</b> is not null and the {@link #isSubFilterRequired()} indicates this
     * entry is a required constraint, then the first matching encodings shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isSubFilterRequired()}
     * indicates that this is an optional constraint, then the first matching encoding shall
     * be used if it is available. If it is not available, a different encoding may be used
     * instead.
     *
     * @return the subfilter that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getDigestMethod(),305,309,"/**
 * Returns a list of digest methods from the dictionary.
 * Returns an empty list if no digest methods are found.
 */
","* An array of names indicating acceptable digest algorithms to use when
     * signing. The value shall be one of <b>SHA1</b>, <b>SHA256</b>, <b>SHA384</b>,
     * <b>SHA512</b>, <b>RIPEMD160</b>. The default value is implementation-specific.
     *
     * @return the digest method that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getReasons(),377,381,"/**
 * Retrieves a list of reasons as COS name strings.
 * Returns empty list if no reasons are present.
 */
","* If the Reasons array is provided and {@link #isReasonRequired()} indicates that
     * Reasons is a required constraint, one of the reasons in the array shall be used
     * for the signature dictionary; otherwise signing shall not take place. If the
     * {@link #isReasonRequired()} indicates Reasons is an optional constraint, one of
     * the reasons in the array may be chose or a custom reason can be provided.
     *
     * @return the reasons that should be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getLegalAttestation(),492,496,"/**
 * Retrieves legal attestations as a list of strings.
 * Returns an empty list if no attestations are present.
 */
","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @return the reasons that should be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubject(),219,223,"/**
 * Retrieves the subject as a list of byte arrays.
 * Returns null if the subject is not present.
 */","* Returns list of byte arrays that contains DER-encoded X.509v3 certificates
     * 
     * @return list of byte arrays containing DER-encoded X.509v3 certificates",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getKeyUsage(),339,355,"/**
 * Retrieves the key usage extensions as a list of strings.
 * Returns null if no key usage is defined.
 */","* Returns list of key usages of certificate strings where each string is 9 characters long and each character is
     * one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't care. each index in the string
     * represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     * 
     * @return list of key usages of certificate strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getIssuer(),458,462,"/**
 * Retrieves the issuer as a list of byte arrays.
 * Returns null if the issuer is not present.
 */
","* Returns list of array of bytes of DER-encoded X.509v3 certificates
     * 
     * @return list of array of bytes of DER-encoded X.509v3 certificates",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getOID(),514,518,"/**
 * Retrieves a list of byte arrays representing OID values.
 * Returns null if OID array is not found in the dictionary.
 */
","* Returns A list of array of bytes that contain Object Identifiers (OIDs) of the certificate policies that must be
     * present in the signing certificate
     * 
     * @return list of array of bytes that contain Object Identifiers of the certificate policies",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getByteRange(),298,311,"/**
 * Retrieves byte range as an integer array.
 * Returns empty array if byte range is not present.
 */","* Read out the byterange from the file.
     *
     * @return an integer array with the byterange, or an empty array if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getCalcOrder(),696,720,"/**
 * Retrieves a list of calculated fields in the order specified.
 * Returns empty list if no calculation order is defined.
 */","* Return the calculation order in which field values should be recalculated when the value of
     * any field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @return field list. Note these objects may not be identical to PDField objects retrieved from
     * other methods (depending on cache setting). The best strategy is to call
     * {@link #getCOSObject()} to check for identity. The list is not backed by the /CO COSArray in
     * the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getSelectedOptionsIndex(),225,229,"/**
 * Returns a list of selected option indices from a COS array.
 * Returns empty list if the array is null.
 */
","* This will get the indices of the selected options - the 'I' key.
     * <p>
     * This is only needed if a choice field allows multiple selections and
     * two different items have the same export value or more than one values
     * is selected.
     * </p>
     * <p>The indices are zero-based</p>
     *
     * @return List containing the indices of all selected options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeXs(),78,93,"/**
 * Retrieves number format dictionaries from COS array 'X'.
 * @return Array of PDNumberFormatDictionary or null if absent.
 */","* This will return the changes along the x-axis.
     * 
     * @return changes along the x-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeYs(),115,130,"/**
 * Retrieves number format dictionaries for the 'Y' array.
 * @return Array of PDNumberFormatDictionary objects or null.
 */","* This will return the changes along the y-axis.
     * 
     * @return changes along the y-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getDistances(),152,167,"/**
 * Retrieves an array of PDNumberFormatDictionary objects from COS array.
 * @return Array of PDNumberFormatDictionary or null if not found.
 */","* This will return the distances.
     * 
     * @return distances",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAreas(),189,204,"/**
 * Retrieves number format areas from the COS array.
 * @return Array of PDNumberFormatDictionary objects, or null.
 */","* This will return the areas.
     * 
     * @return areas",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAngles(),226,241,"/**
* Retrieves number format dictionaries from COS array.
* @return Array of PDNumberFormatDictionary objects or null.
*/
","* This will return the angles.
     * 
     * @return angles",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getLineSloaps(),263,278,"/**
 * Retrieves line slopes from COS array.
 * @return Array of PDNumberFormatDictionary or null if empty.
 */","* This will return the sloaps of a line.
     * 
     * @return the sloaps of a line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCoordSystemOrigin(),300,304,"/**
 * Gets the origin of the coordinate system as a float array.
 * Returns null if the origin is not defined.
 */
","* This will return the origin of the coordinate system.
     * 
     * @return the origin",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getVisibilityPolicy(),108,111,"/**
 * Returns the visibility policy from the dictionary.
 */","* Get the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     *
     * @return the visibility policy, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String),1040,1043,"/**
 * Gets a long value associated with the given key.
 * @param key The key to look up.
 * @return The long value or default if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     *
     * @return The long value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName),1052,1055,"/**
 * Gets a long value associated with the given key.
 * @param key The COSName key to look up.
 * @return The long value, or -1L if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The long value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String,long)",1065,1068,"/**
 * Gets a long value by key, using default if not found.
 * @param key The key to retrieve.
 * @param defaultValue Default value if key is not present.
 */
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,decode,"org.apache.pdfbox.filter.Filter:decode(java.io.InputStream,java.util.List,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.filter.DecodeOptions,java.util.List)",234,298,"/**
 * Applies filters to an encoded stream and returns a buffer.
 * @param filterList List of filters to apply.
 * @return RandomAccessReadWriteBuffer containing filtered data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setStartxref,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setStartxref(long),233,302,"/**
* Sets the startXref position and resolves the Xref trailer.
* @param startxrefBytePosValue The byte position of the Xref.
*/","* Sets the byte position of the first XRef
     * (has to be called after very last startxref was read).
     * This is used to resolve chain of active XRef/trailer.
     *
     * In case startxref position is not found we output a
     * warning and use all XRef/trailer objects combined
     * in byte position order.
     * Thus for incomplete PDF documents with missing
     * startxref one could call this method with parameter value -1.
     * 
     * @param startxrefBytePosValue starting position of the first XRef
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String),1096,1099,"/**
 * Gets the float value associated with the given key.
 * @param key The key to look up.
 * @return The float value or the default if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName),1108,1111,"/**
* Gets the float value associated with the given COS name.
* @param key COS name to look up; returns default if not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String,float)",1121,1124,"/**
* Gets a float value by key, using defaultValue if not found.
*/","* This is a convenience method that will get the dictionary object that is expected to be a float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getUserUnit,org.apache.pdfbox.pdmodel.PDPage:getUserUnit(),877,881,"/**
 * Gets the user unit from the page, defaults to 1.0f if invalid.
 */","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch, or 1 if it hasn't been set. This is supported by PDF 1.6
     * and higher.
     *
     * @return the user unit.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineWidth(),122,125,"/**
* Gets the width value from the dictionary.
* @return Width as a float, defaults to 1 if not found.
*/
","* Get the width of the of the guideline in default user space units.
     * The default is 1.
     *
     * @return The width of the guideline.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getOpacity(),815,819,"/**
 * Returns the opacity value from the annotation.
 * @return Float representing the opacity.
 */","* Get the opacity value.
     *
     * @return The opacity of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontWeight(),337,340,"/**
 * Returns the font weight value, defaults to 0 if not found.
 */","* The weight of the font.  According to the PDF spec ""possible values are
     * 100, 200, 300, 400, 500, 600, 700, 800 or 900""  Where a higher number is
     * more weight and appears to be more bold.
     *
     * @return The font weight.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getItalicAngle(),442,445,"/**
 * Returns the italic angle as a float, defaults to 0.
 */","* This will get the italic angle for the font.
     *
     * @return The italic angle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAscent(),462,465,"/**
* Returns the ascent value from the dictionary, or 0 if not found.
*/","* This will get the ascent for the font.
     *
     * @return The ascent.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getDescent(),482,485,"/**
 * Returns the descent value, defaulting to 0 if not found.
 */","* This will get the descent for the font.
     *
     * @return The descent.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getLeading(),502,505,"/**
* Returns the leading value from the dictionary, defaults to 0.
*/","* This will get the leading for the font.
     *
     * @return The leading.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCapHeight(),522,533,"/**
 * Returns the cap height. Corrects negative values observed in some fonts.
 */","* This will get the CapHeight for the font.
     *
     * @return The cap height.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getXHeight(),552,563,"/**
 * Returns the x-height value, handling potential negative values.
 */","* This will get the x height for the font.
     *
     * @return The x height.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemV(),581,584,"/**
* Returns the stem V value from the dictionary.
* @return The stem V value as a float.
*/
","* This will get the stemV for the font.
     *
     * @return The stem v value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemH(),601,604,"/**
* Returns the stem height from the dictionary, defaults to 0.
*/","* This will get the stemH for the font.
     *
     * @return The stem h value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAverageWidth(),621,624,"/**
* Returns the average width.
* Uses COSName.AVG_WIDTH, defaults to 0 if not found.
*/
","* This will get the average width for the font.
     *
     * @return The average width value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMaxWidth(),641,644,"/**
* Returns the maximum width value from the dictionary.
* @return The maximum width as a float, defaults to 0.
*/
","* This will get the max width for the font.
     *
     * @return The max width value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMissingWidth(),681,684,"/**
 * Returns the missing width value from the dictionary, defaults to 0.
 */","* This will get the missing width for the font from the /MissingWidth dictionary entry.
     *
     * @return The missing width value, or 0 if there is no such dictionary entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getGamma(),113,116,"/**
* Returns the gamma value from the dictionary, defaults to 1.0f.
*/","* This will get the gamma value. If none is present then the default of 1
     * will be returned.
     *
     * @return The gamma value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getXStep(),146,149,"/**
 * Returns the X step value as a float, defaults to 0.
 */","* This will return the XStep value.
     * @return The XStep value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getYStep(),164,167,"/**
* Returns the Y step value from the COS object, defaults to 0.
*/","* This will return the YStep value.
     * @return The YStep value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getVolume(),97,101,"/**
 * Returns the volume value, clamping it between 1 and -1.
 */","* Sets the volume.
     *
     * @return The volume at which to play the sound, in the range −1.0 to 1.0. Default value: 1.0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineLength(),272,275,"/**
* Returns the leader line length from the COS object.
* Returns 0 if the value is not found.
*/
","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineExtensionLength(),292,295,"/**
* Returns the leader line extension length from the COS object.
*/","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineOffsetLength(),312,315,"/**
* Gets the leader line offset length from the COS object.
* Returns 0 if the value is not found.
*/
","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getConstantOpacity(),114,117,"/**
* Returns the constant opacity value from the COS object.
*/","* This will retrieve the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @return the constant opacity value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getWidth(),124,133,"/**
 * Returns the width of the object. Returns 0 if COSName.
 */","* This will retrieve the border width in points, 0 = no border.
     *
     * @return The width of the border in points.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDuration(),147,150,"/**
* Returns the duration value as a float.
* Uses COSName.D as the key, defaults to 1.
*/
",* @return The duration in seconds of the transition effect or the default 1 if no duration is found.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getFlyScale(),164,167,"/**
* Returns the fly scale value from the COS object.
* Returns 1.0 if the value is not present.
*/
","* @return The starting or ending scale at which the changes shall be drawn or the default 1 if no scale is found.
     * Only for {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,extractRegions,org.apache.pdfbox.text.PDFTextStripperByArea:extractRegions(org.apache.pdfbox.pdmodel.PDPage),113,130,"/**
 * Extracts text regions from a PDF page.
 * Populates regionCharacterList and regionText with extracted data.
 */","* Process the page to extract the region text.
     *
     * @param page The page to extract the regions from.
     * @throws IOException If there is an error while extracting text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,validatePerms,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:validatePerms(org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,boolean)",318,356,"/**
 * Validates encryption permissions, decrypting and verifying values.
 * @param encryption Encryption object containing permissions.
 * @param dicPermissions User permissions to compare.
 * @param encryptMetadata Flag indicating metadata encryption.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidthForCID,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidthForCID(int),272,280,"/**
* Gets the width for a given CID, using default if not found.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getAverageFontWidth(),326,355,"/**
* Calculates average font width, using cached value if available.
* Returns default width if average is invalid.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(),67,70,"/**
 * Returns the color space. Overloads getColorSpace(null).
 */","* Returns the group color space or null if it isn't defined.
     *
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,create,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:create(org.apache.pdfbox.cos.COSDictionary),40,56,"/**
 * Creates a PDPropertyList based on the provided COSDictionary.
 * @param dict The COSDictionary to use for creation.
 * @return A PDPropertyList or subclass based on the dictionary type.
 */","* Creates a property list from the given dictionary.
     * 
     * @param dict COS dictionary
     * @return a new instance of a PDPropertyList using the given dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineWidth(),222,225,"/**
* Returns the line width as a Float.
* Uses COSName.LW to retrieve the value.
*/
","* This will get the line width.  This will return null if there is no line width
     *
     * @return null or the LW value of the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getMiterLimit(),283,286,"/**
 * Returns the miter limit value.
 * Uses COSName.ML to retrieve the value.
 */
","* This will get the miter limit.
     *
     * @return null or the ML value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFlatnessTolerance(),458,461,"/**
 * Returns the flatness tolerance value.
 * Uses COSName.FL to fetch the value.
 */
","* This will get the flatness tolerance.
     *
     * @return The flatness tolerance or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSmoothnessTolerance(),478,481,"/**
 * Returns the smoothness tolerance value.
 * Uses COSName.SM to retrieve the float value.
 */
","* This will get the smothness tolerance.
     *
     * @return The smothness tolerance or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingAlphaConstant(),518,521,"/**
* Returns the stroking alpha constant from the PDF object.
*/
","* This will get the stroking alpha constant.
     *
     * @return The stroking alpha constant or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingAlphaConstant(),538,541,"/**
 * Returns the non-stroking alpha constant.
 * Retrieves the value from COS using COSName.CA_NS.
 */","* This will get the non stroking alpha constant.
     *
     * @return The non stroking alpha constant or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,getBFCOSObjectOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:getBFCOSObjectOffsets(),117,125,"/**
 * Retrieves offsets for COS objects found during a search.
 * @return Map of COS object keys to their offsets.
 */
","* Returns all found objects of a brute force search.
     * 
     * @return map containing all found objects of a brute force search
     * 
     * @throws IOException if something went wrong
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,validateXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:validateXrefOffsets(java.util.Map),393,440,"/**
 * Validates and corrects xref offsets, updating the xrefOffset map.
 * Returns true if valid, false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefTable,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefTable(),753,799,"/**
 * Writes the XRef table to the output stream.
 * Handles incremental updates and writes XRef ranges/entries.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSBase),629,635,"/**
* Writes a COSBase object to the output stream.
* Adds object to writtenObjects and writes its key.
*/
","* This will write a COS object.
     *
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeReference,org.apache.pdfbox.pdfwriter.COSWriter:writeReference(org.apache.pdfbox.cos.COSBase),1381,1389,"/**
 * Writes a PDF object reference to the standard output stream.
 * @param obj The COSBase object to write the reference for.
 */
","* visitFromObjRef method comment.
     *
     * @param obj The object that is being visited.
     *
     * @throws IOException If there is an exception while visiting this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.OutputStream),201,205,"/**
 * Writes the document to the given output stream.
 * @param output The output stream to write to.
 * @throws IOException if an I/O error occurs.
 */
","* This will save the document to an output stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,clear,org.apache.pdfbox.cos.COSArray:clear(),140,144,"/**
 * Clears the object list and updates the state.
 */",* This will remove all of the objects in the collection.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeAll,org.apache.pdfbox.cos.COSArray:removeAll(java.util.Collection),152,155,"/**
* Removes all objects from the collection and updates the state.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,retainAll,org.apache.pdfbox.cos.COSArray:retainAll(java.util.Collection),163,168,"/**
 * Retains only elements from objectsList in objects, updates state.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(int),459,464,"/**
 * Removes and returns the object at the specified index.
 * @param i index of the object to remove
 * @return Removed COSBase object, or null if index is out of bounds
 */
","* This will remove an element from the array.
     *
     * @param i The index of the object to remove.
     *
     * @return The object that was removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(org.apache.pdfbox.cos.COSBase),474,482,"/**
 * Removes the specified object.
 * @param o The object to remove.
 * @return True if the object was removed, false otherwise.
 */
","* This will remove an element from the array.
     *
     * @param o The object to remove.
     *
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,clear,org.apache.pdfbox.cos.COSDictionary:clear(),130,134,"/**
 * Clears all items and updates the state.
 */",* This will clear all items in the map.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,removeItem,org.apache.pdfbox.cos.COSDictionary:removeItem(org.apache.pdfbox.cos.COSName),1164,1168,"/**
* Removes an item from the items map and updates the state.
* @param key The key of the item to remove.
*/
","* This will remove an item for the dictionary. This will do nothing of the object does not exist.
     *
     * @param key The key to the item to remove from the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,updateDifferentOrigin,org.apache.pdfbox.cos.COSIncrement:updateDifferentOrigin(org.apache.pdfbox.cos.COSUpdateState),258,265,"/**
 * Updates updateState if origin states differ.
 * @param updateState The COSUpdateState to potentially update.
 */
","* Check whether the given {@link COSUpdateState}´s {@link COSDocumentState} differs from the {@link COSIncrement}´s
     * known {@link #incrementOrigin}.<br>
     * Should that be the case, the {@link COSUpdateState} originates from another {@link COSDocument} and must be added
     * to the {@link COSIncrement}, hence call {@link COSUpdateState#update()}.
     *
     * @param updateState The {@link COSUpdateState} that shall be updated, if it's originating from another
     *                    {@link COSDocument}.
     * @see #incrementOrigin",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,setToNull,org.apache.pdfbox.cos.COSObject:setToNull(),135,143,"/**
 * Sets the base object to COSNull, updates state, and clears parser.
 */",* Sets the referenced object to COSNull and removes the initially assigned parser.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,"org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState,boolean)",118,164,"/**
 * Sets the origin document state if not already set.
 * @param originDocumentState The origin document state to set.
 * @param dereferencing Flag indicating if dereferencing is active.
 */
","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     * <p>
     * Additionally to {@link #setOriginDocumentState(COSDocumentState)}, this shall also deny changing
     * {@link #updated}, should the flag {@code dereferencing} indicate, that this is caused by dereferencing a
     * {@link COSObject}.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @param dereferencing       {@code true}, if this update of the {@link COSDocumentState} is caused by
     *                            dereferencing a {@link COSObject}.
     * @see #originDocumentState
     * @see #updated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,org.apache.pdfbox.cos.COSArray:getString(int),407,410,"/**
 * Retrieves a string at the specified index.
 * @param index The index of the string to retrieve.
 */","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The string or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String),639,642,"/**
* Gets name as string, delegates to PDFName version.
* @param key The key to get the name for.
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)",687,695,"/**
 * Gets name as string, using default if null.
 * @param key COSName to retrieve.
 * @param defaultValue Default value if key is null.
 * @return String value of the name or default.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefStreamOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefStreamOffset(long),352,390,"/**
 * Checks if a given offset points to a valid XRef stream.
 * @param startXRefOffset Offset to check; returns true if valid.
 */","* Check if the cross reference stream can be found at the current offset.
     * 
     * @param startXRefOffset the expected start offset of the XRef stream
     * @return the revised offset
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageMode(),468,487,"/**
 * Retrieves the page mode. Returns PageMode.USE_NONE if null or invalid.
 */","* Returns the page display mode.
     * 
     * @return the PageMode of the document, if not present PageMode.USE_NONE is returned",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLayout(),504,520,"/**
 * Retrieves the page layout from the root COS object.
 * Returns PageLayout.SINGLE_PAGE if layout is invalid.
 */
","* Returns the page layout.
     * 
     * @return the PageLayout of the document, if not present PageLayout.SINGLE_PAGE is returned",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getVersion(),599,602,"/**
 * Gets the version string from the root object.
 * @return Version string, or null if not present.
 */
","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. ""1.4"")",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTrapped(),251,254,"/**
 * Retrieves the ""Trapped"" information as a string.
 */","* This will get the trapped value for the document.
     * This will return null if one is not found.
     *
     * @return The trapped value for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStyle(),104,107,"/**
 * Returns the style as a string from the root object.
 */","* Returns the numbering style for this page range.
     * 
     * @return one of the STYLE_* constants",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,getType,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:getType(),58,61,"/**
 * Returns the type of the COS object as a String.
 */","* Gets the type.
     * 
     * @return the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,getOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:getOwner(),122,125,"/**
 * Returns the owner of the COS object as a string.
 */","* Returns the owner of the attributes.
     * 
     * @return the owner of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureType(),76,79,"/**
 * Returns the structure type as a String from the COS object.
 */","* Returns the structure type (S).
     * 
     * @return the structure type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:create(org.apache.pdfbox.cos.COSDictionary),68,80,"/**
 * Creates a PDStructureNode based on the provided COSDictionary.
 * @param node The COSDictionary defining the node type.
 * @return A PDStructureNode or throws IllegalArgumentException.
 */
","* Creates a node in the structure tree. Can be either a structure tree root,
     *  or a structure element.
     * 
     * @param node the node dictionary
     * @return the structure node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getType(),99,102,"/**
 * Returns the type of the COS object as a String.
 */","* Returns the type.
     * 
     * @return the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObjectFromDic,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObjectFromDic(org.apache.pdfbox.cos.COSDictionary),392,414,"/**
 * Creates a COSObjectable from a dictionary based on its type.
 * @param kidDic Dictionary to create the object from.
 * @return Corresponding COSObjectable or null if type is unknown.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getName(),63,66,"/**
* Gets the name of the COS object as a String.
*/
","* Returns the property name.
     * 
     * @return the property name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getLanguage(),108,112,"/**
 * Returns the language as a String, or null if not set.
 */","* Gets the language (Lang).
     * 
     * @return the language",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getType(),45,48,"/**
* Returns the type as a String from the properties.
*/","* Gets the type (Type).
     * 
     * @return the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getSubtype,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getSubtype(),110,113,"/**
* Returns the subtype name as a String.
* Retrieves the value associated with the SUBTYPE property.
*/
","* Gets the subtype (Subtype).
     * 
     * @return the subtype",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getFilter(),159,162,"/**
* Retrieves the filter name from the dictionary.
* Returns the filter name as a String.
*/
","* Get the name of the filter.
     *
     * @return The filter name contained in this encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSubFilter(),169,172,"/**
* Retrieves the sub-filter name from the dictionary.
*/","* Get the name of the subfilter.
     *
     * @return The subfilter name contained in this encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,create,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:create(org.apache.pdfbox.cos.COSDictionary),323,403,"/**
 * Creates an FDF annotation based on the subtype in the dictionary.
 * @param fdfDic COSDictionary containing annotation information.
 * @return An FDFAnnotation object or null if type is unsupported.
 */
","* Create the correct FDFAnnotation.
     *
     * @param fdfDic The FDF dictionary.
     *
     * @return A newly created FDFAnnotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getIntent(),856,859,"/**
* Returns the intent name as a String from the annotation.
*/","* Get the intent of the annotation.
     * 
     * @return The intent of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getLineEndingStyle(),292,295,"/**
* Returns the line ending style as a String.
*/","* This will retrieve the line ending style.
     *
     * @return The ending style for the start point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getVersion(),96,99,"/**
* Returns the version string from the catalog.
*/","* This will get the version that was specified in the catalog dictionary.
     *
     * @return The FDF version.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEncoding(),408,417,"/**
 * Returns the document encoding, defaulting to ""PDFDocEncoding"".
 */","* The encoding to be used for a FDF field. The default is PDFDocEncoding and this method will never return null.
     *
     * @return The encoding value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleOption(),95,103,"/**
 * Returns the scale option, defaulting to SCALE_OPTION_ALWAYS if null.
 */","* This will get the scale option. See the SCALE_OPTION_XXX constants. This is guaranteed to never return null.
     * Default: Always
     *
     * @return The scale option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleType(),121,129,"/**
 * Returns the scale type, defaulting to proportional if null.
 */","* This will get the scale type. See the SCALE_TYPE_XXX constants. This is guaranteed to never return null. Default:
     * Proportional
     *
     * @return The scale type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDCIDFont:getBaseFont(),205,208,"/**
 * Returns the base font name from the dictionary.
 */","* The PostScript name of the font.
     *
     * @return The postscript name of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getRegistry,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getRegistry(),47,50,"/**
 * Retrieves the registry name from the dictionary.
 * @return The registry name as a String.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getOrdering,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getOrdering(),52,55,"/**
 * Retrieves the ordering string from the dictionary.
 * @return The ordering string, or null if not present.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getType,org.apache.pdfbox.pdmodel.font.PDFont:getType(),505,508,"/**
 * Returns the type name as a string from the dictionary.
 */","* This will always return ""Font"" for fonts.
     * 
     * @return The type of object that this is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSubType,org.apache.pdfbox.pdmodel.font.PDFont:getSubType(),515,518,"/**
 * Returns the subtype name as a String from the dictionary.
 */","* This will get the subtype of font.
     * 
     * @return the subtype",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontName(),285,288,"/**
 * Returns the font name from the dictionary.
 */","* Get the font name.
     *
     * @return The name of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontStretch(),361,364,"/**
* Returns the font stretch value from the dictionary.
*/","* A string representing the preferred font stretch.
     * According to the PDF Spec:
     * The font stretch value; it must be one of the following (ordered from
     * narrowest to widest): UltraCondensed, ExtraCondensed, Condensed, SemiCondensed,
     * Normal, SemiExpanded, Expanded, ExtraExpanded or UltraExpanded.
     *
     * @return The stretch of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBaseFont(),258,261,"/**
 * Returns the base font name from the dictionary.
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType0Font:getBaseFont(),414,417,"/**
 * Returns the base font name from the dictionary.
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBaseFont(),153,156,"/**
 * Returns the base font name from the dictionary.
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getBaseFont(),371,374,"/**
* Returns the base font name from the dictionary.
*/","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType3Font:getName(),89,93,"/**
* Gets the name as a string from the dictionary.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:isNChannel(),118,121,"/**
 * Checks if the dictionary is an NChannel dictionary.
 * Returns true if the subtype is ""NChannel"", false otherwise.
 */
","* Returns true if this is an NChannel (PDF 1.6) color space.
     * @return true if this is an NChannel color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getType(),83,86,"/**
 * Returns the type as a String from the action.
 */","* This will get the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @return The Type of PDF object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getSubType(),104,107,"/**
 * Returns the sub-type name as a String.
 */","* This will get the type of action that the actions dictionary describes.
     *
     * @return The S entry of actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,createAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:createAction(org.apache.pdfbox.cos.COSDictionary),46,104,"/**
 * Creates a PDAction based on the provided COSDictionary.
 * @param action The COSDictionary representing the action.
 * @return A PDAction object or null if action is invalid.
 */","* This will create the correct type of action based on the type specified
     * in the dictionary.
     *
     * @param action An action dictionary.
     *
     * @return An action of the correct type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getSubtype(),244,247,"/**
* Returns the subtype name from the COS object.
*/","* This will retrieve the subtype of the annotation.
     *
     * @return The subtype of this annotation, see the SUB_TYPE_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionPositioning(),332,335,"/**
 * Gets the caption positioning string from the COS object.
 */","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getIntent(),253,256,"/**
 * Retrieves the intent of the COS object as a string.
 */","* This will retrieve the intent of the annotation The values and meanings are specific to the actual annotation See
     * the IT_* constants for the annotation classes.
     *
     * @return the intent",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getSubtype(),77,80,"/**
* Returns the subtype name from the COS object.
*/","* returns the subtype of the external data dictionary.
     * 
     * @return the subtype of the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getName(),71,74,"/**
 * Gets the name as a string from the dictionary.
 */","* The name of the software module that was used to create the signature.
     * @return the name of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getFilter(),254,257,"/**
 * Retrieves the filter name from the dictionary.
 * @return Filter name as a String, or null if not present.
 */
","* If <b>Filter</b> is not null and the {@link #isFilterRequired()} indicates this entry is a
     * required constraint, then the signature handler specified by this entry shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isFilterRequired()} indicates
     * that this is an optional constraint, this handler may be used if it is available. If it is
     * not available, a different handler may be used instead.
     *
     * @return the filter that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURLType(),597,600,"/**
 * Retrieves the URL type from the dictionary.
 * @return URL type as a String.
 */
","* A name indicating the usage of the URL entry. There are standard uses and there can be
     * implementation-specific use for this URL. The following value specifies a valid standard
     * usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     *
     * @return string of URL type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getFilter(),204,207,"/**
 * Retrieves the filter name from the dictionary.
 * @return Filter name as a String, or null if not present.
 */
","* Returns the filter.
     * @return the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSubFilter(),214,217,"/**
* Gets the subfilter name from the dictionary.
* Returns the name as a String.
*/
","* Returns the subfilter.
     *
     * @return the subfilter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldType(),172,176,"/**
 * Returns the field type as a String from the COS object.
 */","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getName(),105,108,"/**
 * Returns the name of the COS object as a String.
 */
","* This will retrieve the name of the viewport.
     * 
     * @return the name of the viewport",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getDuplex(),408,411,"/**
 * Retrieves the duplex setting as a string from preferences.
 */","* Get the Duplex preference.  See DUPLEX enumeration.
     *
     * @return the Duplex preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String),704,707,"/**
* Gets string value by key, using PDF name conversion.
* @param key The key to retrieve the string value for.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName,java.lang.String)",748,756,"/**
 * Gets string value for a key, using default if null.
 * @param key COSName key to retrieve
 * @param defaultValue Default value if key is not found
 * @return String value for the key or default value
 */
","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getLanguage(),579,582,"/**
 * Returns the language string from the root COS object.
 */","* Returns the language for the document, or null.
     * 
     * @return the language of the document if present, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTitle(),90,93,"/**
 * Returns the title from the info object.
 * @return The title string, or null if not present.
 */
","* This will get the title of the document.  This will return null if no title exists.
     *
     * @return The title of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:getAuthor(),110,113,"/**
 * Retrieves the author string from the COS info.
 * @return The author string, or null if not present.
 */
","* This will get the author of the document.  This will return null if no author exists.
     *
     * @return The author of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:getSubject(),130,133,"/**
* Retrieves the subject from the PDF info dictionary.
* @return The subject as a String, or null if not present.
*/
","* This will get the subject of the document.  This will return null if no subject exists.
     *
     * @return The subject of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:getKeywords(),150,153,"/**
* Retrieves the keywords associated with the info object.
* @return String containing the keywords, or null if absent.
*/
","* This will get the keywords of the document.  This will return null if no keywords exists.
     *
     * @return The keywords of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreator(),170,173,"/**
 * Returns the creator of the object as a string.
 */","* This will get the creator of the document.  This will return null if no creator exists.
     *
     * @return The creator of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:getProducer(),190,193,"/**
 * Returns the producer string from the COS info.
 */","* This will get the producer of the document.  This will return null if no producer exists.
     *
     * @return The producer of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getPrefix(),162,165,"/**
 * Returns the prefix value from the root configuration.
 */","* Returns the page label prefix for this page range.
     * 
     * @return the page label prefix for this page range, or {@code null} if no
     *         prefix has been defined.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnicode(),128,131,"/**
 * Returns the file Unicode string from the PDF's file system.
 */","* This will get the unicode file name.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFile(),150,154,"/**
 * Returns the file name as a string from the file system.
 */","* This will get the file name.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDos(),174,177,"/**
 * Retrieves the DOS file attribute string.
 * @return DOS file attribute string.
 */
","* This will get the name representing a Dos file.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileMac(),184,187,"/**
 * Retrieves the MAC address from the file system.
 * @return MAC address as a String, or null if not found.
 */
","* This will get the name representing a Mac file.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnix(),194,197,"/**
 * Gets the file's UNIX timestamp string.
 * @return UNIX timestamp as a String.
 */
","* This will get the name representing a Unix file.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDescription(),353,356,"/**
 * Returns the file description.
 * @return File description string, or null if not set.
 */
","* This will get the description.
     *
     * @return The file description.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getElementIdentifier(),117,120,"/**
 * Returns the element identifier as a string.
 * Fetches the identifier from the COS object.
 */
","* Returns the element identifier (ID).
     * 
     * @return the element identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getTitle(),502,505,"/**
 * Returns the title of the PDF document.
 * Returns the string value associated with the ""T"" key.
 */
","* Returns the title (T).
     * 
     * @return the title",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getLanguage(),522,525,"/**
 * Gets the language of the COS object as a String.
 */","* Returns the language (Lang).
     * 
     * @return the language",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAlternateDescription(),542,545,"/**
* Gets the alternate description from the COS object.
* Returns a String value or null if not present.
*/
","* Returns the alternate description (Alt).
     * 
     * @return the alternate description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getExpandedForm(),562,565,"/**
 * Returns the expanded form string from the COS object.
 */","* Returns the expanded form (E).
     * 
     * @return the expanded form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getActualText(),582,585,"/**
 * Returns the actual text content of the COS object.
 */","* Returns the actual text (ActualText).
     * 
     * @return the actual text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getFormattedValue(),105,108,"/**
 * Returns the formatted value from the COS object.
 */","* Returns the string for the property value.
     * 
     * @return the string for the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getActualText(),119,123,"/**
* Returns the actual text string from properties, or null.
*/","* Gets the actual text (ActualText).
     * 
     * @return the actual text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getAlternateDescription(),130,134,"/**
* Returns the alternate description from properties, or null.
*/","* Gets the alternate description (Alt).
     * 
     * @return the alternate description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getExpandedForm(),141,145,"/**
 * Gets the expanded form from properties, or null if properties are null.
 */","* Gets the expanded form (E).
     * 
     * @return the expanded form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getDate(),482,485,"/**
 * Returns the date string from the annotation.
 */","* Modification date.
     *
     * @return The date as a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getName(),712,715,"/**
 * Returns the name from the annotation.
 * @return String representation of the name.
 */
","* Get the annotation name.
     *
     * @return The unique name of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getContents(),753,756,"/**
 * Retrieves the contents string from the annotation.
 * @return The contents string, or null if not present.
 */
","* Get the text, or a description, of the annotation.
     *
     * @return The text, or a description, of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getTitle(),773,776,"/**
 * Retrieves the title from the annotation.
 * @return The title as a String, or null if not present.
 */
","* Get the annotation title.
     *
     * @return The title of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getSubject(),836,839,"/**
 * Returns the subject string from the annotation.
 */","* Get the description of the annotation.
     *
     * @return The subject of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getSymbol(),141,144,"/**
* Returns the symbol string from the annotation.
*/","* This will retrieve the symbol that shall be associated with the caret.
     * 
     * @return the symbol",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getRotation(),207,210,"/**
 * Returns the rotation value from the annotation.
 * @return String representing the rotation value.
 */
","* This will get the clockwise rotation in degrees.
     * 
     * @return The number of degrees of clockwise rotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultAppearance(),227,231,"/**
 * Returns the default appearance string from the annotation.
 */","* Get the default appearance string.
     *
     * @return The default appearance of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultStyle(),248,251,"/**
 * Returns the default style as a string from the annotation.
 */","* Get the default style string.
     *
     * @return The default style of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionStyle(),366,369,"/**
 * Returns the caption style as a string from the annotation.
 */","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getState(),113,116,"/**
 * Returns the state string from the annotation.
 */","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getStateModel(),133,136,"/**
 * Returns the state model string from the annotation.
 */","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getStatus(),356,359,"/**
 * Returns the status string from the PDF dictionary.
 */","* This will get the status string to be displayed as the result of an action.
     *
     * @return The status.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getTarget(),489,492,"/**
 * Retrieves the target string from the PDF dictionary.
 * @return The target string, or null if not present.
 */
","* This will get the target frame in the browser to open this document.
     *
     * @return The target frame.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:getPartialFieldName(),211,214,"/**
 * Returns the partial field name as a String.
 */","* This will get the ""T"" entry in the field dictionary. A partial field name.
     * Where the fully qualified field name is a concatenation of the parent's fully qualified
     * field name and ""."" as a separator. For example<br>
     * Address.State<br>
     * Address.City<br>
     *
     * @return The partial field name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getName(),69,72,"/**
 * Retrieves the name from the referenced COS object.
 * @return The name as a String.
 */
","* This will get the name of the referenced page. A required parameter.
     *
     * @return The name of the referenced page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFamily(),310,313,"/**
 * Returns the font family name from the dictionary.
 */","* A string representing the preferred font family.
     *
     * @return The font family.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCharSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCharSet(),701,704,"/**
* Returns the character set from the dictionary.
* @return The character set string, or null if not present.
*/
","* This will get the character set for the font.
     *
     * @return The character set value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getInfo(),68,71,"/**
* Retrieves the ""INFO"" string from the dictionary.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputCondition(),78,81,"/**
 * Retrieves the output condition string from the dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputConditionIdentifier(),88,91,"/**
* Retrieves the output condition identifier from the dictionary.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getRegistryName(),98,101,"/**
 * Retrieves the registry name from the dictionary.
 * @return The registry name as a String.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getName(),101,104,"/**
 * Returns the name from the dictionary.
 * @return The name as a String.
 */
","* Returns the PDF name for the state.
         *
         * @return the name of the state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroupNames,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroupNames(),228,251,"/**
 * Retrieves an array of group names from the COS array.
 * Returns an empty array if no group names are found.
 */","* Lists all optional content group names.
     * @return an array of all names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getF(),118,121,"/**
* Retrieves the value of the 'F' property as a string.
*/
","* This will get the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @return The F entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getD(),141,144,"/**
 * Returns the value of the 'D' property as a string.
 */","* This will get the string specifying the default directory in standard DOS syntax.
     *
     * @return The D entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getO(),165,168,"/**
 * Returns the value of the 'O' property as a String.
 */","* This will get the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @return The O entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getP(),190,193,"/**
 * Retrieves the value of property ""P"" as a string.
 */","* This will get a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @return The P entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,getURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:getURI(),62,84,"/**
 * Retrieves the URI from the action dictionary. Returns null if not found.
 */","* This will get the uniform resource identifier to resolve. It should be encoded in 7-bit
     * ASCII, but UTF-8 and UTF-16 are supported too.
     *
     * @return The URI entry of the specific URI action dictionary or null if there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getFilename(),103,106,"/**
 * Returns the filename associated with the PDF dictionary.
 * @return The filename as a String.
 */
","* Get the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @return a filename or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationName(),242,245,"/**
 * Retrieves the annotation name from the dictionary.
 * @return Annotation name as a String.
 */
","* If the value in the /A entry is a string, this will get the value of the /NM entry in the
     * annotation dictionary.
     *
     * @return the /NM value of an annotation dictionary or null if the /A entry value is missing or
     * not a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getFilename(),79,82,"/**
 * Returns the filename from the parameters.
 * @return The filename as a String.
 */
","* The file to launch.
     *
     * @return The executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getDirectory(),99,102,"/**
 * Gets the directory path from the parameters.
 * @return The directory string or null if not present.
 */
","* The dir to launch from.
     *
     * @return The dir of the executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getExecuteParam(),142,145,"/**
 * Retrieves the value of the 'P' parameter as a string.
 */","* A parameter to pass the executable.
     *
     * @return The parameter to pass the executable.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getContents(),606,609,"/**
 * Retrieves the contents string from the dictionary.
 * @return The contents string, or null if not present.
 */
","* Get the ""contents"" of the field.
     * 
     * @return the value of the contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getModifiedDate(),626,629,"/**
 * Returns the modified date as a string from the COS object.
 */","* This will retrieve the date and time the annotation was modified.
     * 
     * @return the modified date/time (often in date format, but can be an arbitrary string).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationName(),661,664,"/**
 * Returns the annotation name from the COS object.
 */","* This will get the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @return The identifying name for the Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultAppearance(),76,79,"/**
* Returns the default appearance string from the COS object.
*/
","* Get the default appearance.
     * 
     * @return a string describing the default appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultStyleString(),98,101,"/**
* Returns the default style string from the COS object.
*/","* Get the default style string.
     *
     * The default style string defines the default style for rich text fields.
     *
     * @return the DS element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getTitlePopup(),72,75,"/**
* Retrieves the title from a COS object as a String.
*/","* Retrieve the string used as the title of the popup window shown when open and active (by convention this
     * identifies who added the annotation).
     *
     * @return The title of the popup.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getSubject(),210,213,"/**
 * Returns the document subject.
 * Retrieves the subject string from the COS object.
 */
","* This will retrieve the short description of the subject of the annotation.
     *
     * @return the subject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getState(),188,191,"/**
 * Returns the state of the COS object as a string.
 */","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getStateModel(),208,211,"/**
* Returns the state model string from the COS object.
*/","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalCaption(),126,129,"/**
 * Returns the normal caption from the COS object.
 * Returns a String value.
 */","* This will retrieve the normal caption.
     * 
     * @return the normal caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverCaption(),146,149,"/**
 * Returns the rollover caption from the COS object.
 */","* This will retrieve the rollover caption.
     * 
     * @return the rollover caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateCaption(),166,169,"/**
 * Returns the alternate caption from the COS object.
 */","* This will retrieve the alternate caption.
     * 
     * @return the alternate caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getDate(),93,96,"/**
 * Retrieves the date string from the dictionary.
 * @return Date string stored in the dictionary.
 */
","* The build date of the software module. This string is normally produced by the compiler that
     * is used to compile the software, for example using the Date and Time preprocessor flags. As
     * such, this not likely to be in PDF Date format.
     *
     * @return the build date of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getOS(),219,224,"/**
* Retrieves the operating system name from the dictionary.
* Returns OS name from array or string, if available.
*/
","* Indicates the operating system. The string format isn't specified yet. In its PDF Signature
     * Build Dictionary Specifications Adobe differently specifies the value type to store operating
     * system string:<ul>
     * <li>Specification for PDF v1.5 specifies type as string;</li>
     * <li>Specification for PDF v1.7 specifies type as array and provided example for
     * <code>/PropBuild</code> dictionary indicate it as array of names.</li>
     * </ul>
     * This method supports both types to retrieve the value.
     *
     * @return the operating system id or name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubjectDN(),276,299,"/**
 * Extracts Subject DN entries from COS array as list of maps.
 * @return List of maps representing Subject DN or null if absent.
 */
","* Returns list of maps that contains subject distinguished names like [(cn: John Doe, o: Doe), (cn: John Smith)]
     * both keys are typically of the form 'cn', 'o', 'email', '2.5.4.43'; and values are text strings.
     * 
     * @return list maps that contains subject distinguished names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURL(),567,570,"/**
* Retrieves the URL from the dictionary.
* @return The URL as a String, or null if not present.
*/
","* returns String of the URL
     * 
     * @return string of the URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:getURL(),67,70,"/**
 * Retrieves the URL string from the dictionary.
 * @return The URL as a String, or null if not present.
 */
","* Returns the URL.
     * 
     * @return the URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getName(),226,229,"/**
 * Returns the name from the dictionary.
 * @return The name as a String.
 */
","* Returns the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @return the name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getLocation(),236,239,"/**
 * Retrieves the location string from the dictionary.
 * @return The location string, or null if not present.
 */
","* Returns the CPU host name or physical location of the signing.
     *
     * @return the location",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getReason(),246,249,"/**
 * Retrieves the reason string from the dictionary.
 * @return The reason string, or null if not present.
 */
","* Returns the reason for the signing, such as (I agree...).
     *
     * @return the reason",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContactInfo(),257,260,"/**
 * Retrieves contact information from the dictionary.
 * @return Contact info string or null if not present.
 */
","* Returns the contact info provided by the signer to enable a recipient to contact the signer
     * to verify the signature, e.g. a phone number.
     *
     * @return the contact info",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTitle(),165,168,"/**
 * Retrieves the title from the COS object as a String.
 */","* Get the title of this node.
     *
     * @return The title of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getPartialName(),380,383,"/**
 * Retrieves the partial name from the dictionary.
 * Returns a String value associated with the COSName ""T"".
 */","* Returns the partial name of the field.
     * 
     * @return the name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getAlternateFieldName(),431,434,"/**
 * Gets the alternate field name from the dictionary.
 * Returns a String value from the dictionary using COSName.TU.
 */
","* Gets the alternate name of the field (""shall be used in place of the actual field name
     * wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)"").
     *
     * @return the alternate name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getMappingName(),457,460,"/**
 * Retrieves the mapping name from the dictionary.
 * @return The mapping name as a String.
 */
","* Gets the mapping name of the field.
     * 
     * The mapping name shall be used when exporting interactive form field
     * data from the document.
     * 
     * @return the mapping name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultStyleString(),154,157,"/**
 * Returns the default style string from the COS object.
 */","* Get the default style string.
     * 
     * The default style string defines the default style for
     * rich text fields.
     * 
     * @return the DS element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getScaleRatio(),58,61,"/**
 * Returns the scale ratio from the COS object.
 * Retrieves the value associated with the COSName.R.
 */
","* This will return the scale ration.
     * 
     * @return the scale ratio.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getRoleMap(),176,191,"/**
 * Retrieves the role map from the COS dictionary.
 * Returns an empty map if no role map is found.
 */
","* Returns the role map.
     * 
     * @return the role map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptions(),87,91,"/**
* Retrieves a list of options from the COS object.
*/","* This will get the option values ""Opt"".
     * 
     * <p>
     * For a choice field the options array can either be an array
     * of text strings or an array of a two-element arrays.<br>
     * The method always only returns either the text strings or,
     * in case of two-element arrays, an array of the first element of 
     * the two-element arrays
     * </p>   
     * <p>
     * Use {@link #getOptionsExportValues()} and {@link #getOptionsDisplayValues()}
     * to get the entries of two-element arrays.
     * </p>
     * 
     * @return List containing the export values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsDisplayValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsDisplayValues(),191,195,"/**
 * Retrieves display values from the COS dictionary.
 * Uses COSName.OPT to get and FieldUtils to process.
 */
","* This will get the display values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the display value is the 
     * second entry in the two-element array.
     * </p>
     * 
     * @return List containing all the display values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValue(),110,140,"/**
 * Retrieves the value of the attribute, handling indexing or returning as is.
 */","* Returns the selected value.
     * 
     * <p>Off is the default value which will also be returned if the
     * value hasn't been set at all.
     * 
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValue(),432,435,"/**
 * Returns the value of this object as a list of strings.
 */","* Returns the selected values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getDefaultValue(),443,446,"/**
 * Returns the default value as a list of strings.
 */","* Returns the default values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:<init>(),35,38,"/**
 * Default constructor. Initializes the file specification with an empty string.
 */","* Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:setFile(java.lang.String),66,70,"/**
* Sets the file name for the object.
* @param fileName The name of the file.
*/
","* This will set the file name.
     *
     * @param fileName The name of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(java.lang.String),39,42,"/**
 * Initializes a PDNamedDestination with the provided destination string.
 * @param dest The named destination string.
 */
","* Constructor.
     *
     * @param dest The named destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:setNamedDestination(java.lang.String),110,120,"/**
 * Sets the named destination. Null if dest is null.
 * @param dest The destination string.
 * @throws IOException if COSString creation fails.
 */
","* Set the named destination.
     *
     * @param dest The new named destination.
     *
     * @throws IOException If there is an error setting the named destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,getPathForCharacterCode,org.apache.pdfbox.rendering.GlyphCache:getPathForCharacterCode(int),47,97,"/**
 * Retrieves a GeneralPath for the given character code.
 * @param code character code to retrieve the path for
 * @return GeneralPath representing the glyph or an empty path
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType2,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType2(),264,269,"/**
 * Decodes a row using type 2 format, optionally resetting buffer.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType4,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType4(),271,298,"/**
 * Decodes a row of type 4 data, handling alignment and calling
 * decode1D/decode2D based on options and read bit.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType6,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType6(),300,305,"/**
 * Decodes a row of data with type 6, optionally resetting buffer.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRowType6,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRowType6(),130,132,"/**
 * Encodes a row using type 6, reusing the encode2D implementation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",174,179,"/**
* Decodes an input stream to an output stream with default options.
* @param encoded Input stream to decode.
* @param decoded Output stream for decoded data.
* @param parameters COSDictionary for decoding parameters.
* @param index Index of the stream.
* @return DecodeResult object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[]),291,295,"/**
 * Writes all bytes from the provided array to the underlying stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readGenerationNumber,org.apache.pdfbox.pdfparser.BaseParser:readGenerationNumber(),1369,1378,"/**
 * Reads the generation number from the input stream.
 * Throws IOException if invalid (negative or > threshold).
 */
","* This will read a integer from the Stream and throw an {@link IllegalArgumentException} if the integer value
     * has more than the maximum object revision (i.e. : bigger than {@link #GENERATION_NUMBER_THRESHOLD})
     * @return the generation number being read.
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readObjectNumber,org.apache.pdfbox.pdfparser.BaseParser:readObjectNumber(),1353,1361,"/**
 * Reads and validates an object number.
 * @throws IOException if the number is invalid.
 */
","* This will read a long from the Stream and throw an {@link IOException} if
     * the long value is negative or has more than 10 digits (i.e. : bigger than
     * {@link #OBJECT_NUMBER_THRESHOLD})
     *
     * @return the object number being read.
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",1021,1036,"/**
* Compares user password with computed hash.
* @param password User password.
* @return True if passwords match.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword(byte[],byte[],int,int)",657,669,"/**
 * Retrieves user password based on revision.
 * @param ownerPassword owner's password, revision, length
 * @return Password bytes or empty array for specific revisions.
 */
","* Get the user password based on the owner password.
     *
     * @param ownerPassword The plaintext owner password.
     * @param owner The o entry of the encryption dictionary.
     * @param encRevision The encryption revision number.
     * @param length The key length.
     *
     * @return The u entry of the encryption dictionary.
     *
     * @throws IOException If there is an error accessing data while generating the user password.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
 * Constructs a TensorPatch with given control points and color data.
 */","* Constructor of a patch for type 7 shading.
     *
     * @param tcp 16 control points
     * @param color 4 corner colors",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,tokenize,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:tokenize(),197,218,"/**
 * Tokenizes the input stream until no more characters are available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)",284,289,"/**
 * Encrypts data using RC4 algorithm.
 * @param finalKey Encryption key.
 * @param input Input stream.
 * @param output Output stream.
 */
","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientsField,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientsField(byte[]),433,469,"/**
 * Creates recipient fields based on the protection policy and seed.
 * @param seed seed value used in recipient field construction
 * @return Array of recipient fields.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword56(byte[],byte[],byte[],int)",619,643,"/**
 * Checks if the owner password matches the user's password.
 * @param ownerPassword Owner password bytes
 * @param user User password bytes
 * @param owner Owner password bytes
 * @param encRevision Encryption revision
 * @return True if passwords match, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev56(byte[],boolean,byte[],byte[],byte[],byte[],int)",780,837,"/**
 * Computes an encrypted key based on password and flags.
 * @param password Password to use for encryption.
 * @return Encrypted key as a byte array.
 * @throws IOException if encryption fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword56(byte[],byte[],int)",1038,1057,"/**
* Validates user password using a hash comparison.
* @param password Password to validate.
* @param user User data containing hash and salt.
* @param encRevision Encryption revision number.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getProvider(),154,161,"/**
 * Returns the FontProvider instance, creating one if needed.
 */",* Returns the font service provider. Defaults to using FileSystemFontProvider.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,createShadedTriangleList,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:createShadedTriangleList(int,int,org.apache.pdfbox.pdmodel.graphics.shading.Vertex[][])",157,188,"/**
 * Creates a list of shaded triangles from the lattice array.
 * @param rowNum number of rows
 * @param numPerRow number of points per row
 * @param latticeArray 2D array of vertices
 * @return List of ShadedTriangle objects
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getShadedTriangles,org.apache.pdfbox.pdmodel.graphics.shading.Patch:getShadedTriangles(org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][]),173,225,"/**
 * Extracts shaded triangles from a coordinate color grid.
 * @param patchCC 2D array of CoordinateColorPair objects
 * @return List of ShadedTriangle objects
 */","* An assistant method to accomplish type 6 and type 7 shading.
     *
     * @param patchCC all the crossing point coordinates and color of a grid
     * @return a ShadedTriangle list which can compose the grid patch",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<clinit>,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<clinit>(),36,43,"/**
 * Loads a GlyphList from a file.
 * @param filename file containing glyph list data
 * @param count number of glyphs in the list
 * @return GlyphList object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1Font:getHeight(int),376,391,"/**
 * Gets the height of a character.
 * @param code character code
 * @return character height as float
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getWidthFromFont(int),450,465,"/**
 * Gets the width of a font character.
 * @param code character code
 * @return width of the character
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(int),631,636,"/**
 * Retrieves a GeneralPath by code.
 * @param code encoding code
 * @return GeneralPath object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getNormalizedPath(int),638,648,"/**
 * Retrieves a normalized path by code.
 * @param code Path code to normalize.
 * @return Normalized GeneralPath or default if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",108,132,"/**
 * Creates a PDICCBased color space from an ICC array and resources.
 * @param iccArray ICC array
 * @param resources Resources object
 * @return PDICCBased color space
 */
","* Creates a new ICC color space using the PDF array, optionally using a resource cache.
     *
     * @param iccArray the ICC stream object.
     * @param resources resources to use as cache, or null for no caching.
     * @return an ICC color space.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:<clinit>(),45,47,"/**
 * Initializes the INSTANCE variable with a new PDDeviceCMYK object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:<clinit>(),34,34,"/**
 * Returns the singleton instance of PDDeviceGray.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,<clinit>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:<clinit>(),35,35,"/**
* Singleton instance of PDDeviceRGB. Provides access to RGB device.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
 * Constructs a CoonsPatch with given points and color data.
 * @param points Control points for the patch.
 * @param color Color data for the patch.
 */
","* Constructor of a patch for type 6 shading.
     *
     * @param points 12 control points
     * @param color 4 corner colors",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endText,org.apache.pdfbox.rendering.PageDrawer:endText(),456,460,"/**
* Ends the current text clip by calling endTextClip().
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginText,org.apache.pdfbox.rendering.PageDrawer:beginText(),449,454,"/**
 * Starts a text clip by setting clip and initiating text clip.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,getContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:getContent(),39,43,"/**
 * Returns the data to be signed.
 * @return InputStream containing the data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPositionComparator.java,compare,"org.apache.pdfbox.text.TextPositionComparator:compare(java.lang.Object,java.lang.Object)",29,29,"/**
 * Compares two TextPosition objects based on their offset.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,processTextPosition,org.apache.pdfbox.text.PDFMarkedContentExtractor:processTextPosition(org.apache.pdfbox.text.TextPosition),156,249,"/**
* Processes a text position, potentially suppressing duplicates.
* @param text The text position to process.
*/
","* This will process a TextPosition object and add the
     * text to the list of characters on a page.  It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripper:processTextPosition(org.apache.pdfbox.text.TextPosition),897,1056,"/**
 * Processes a TextPosition, potentially suppressing duplicates.
 */","* This will process a TextPosition object and add the text to the list of characters on a page. It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,removeContainedSpaces,org.apache.pdfbox.text.PDFTextStripper:removeContainedSpaces(java.util.List),772,793,"/**
 * Removes redundant text positions from the list.
 * Iterates and removes positions contained within previous ones.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleLineSeparation,"org.apache.pdfbox.text.PDFTextStripper:handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1566,1590,"/**
 * Advances to the next line, handling paragraph and article separators.
 * @return Updated lastLineStartPosition for the next iteration.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeAdd,"org.apache.pdfbox.text.PDFTextStripper:normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)",2117,2131,"/**
 * Processes line elements, normalizing words and building the line.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(java.lang.String),701,708,"/**
 * Converts a COSString to a Calendar object.
 * @param text COSString to convert; null input returns null.
 * @return Calendar object or null if input is null.
 */
","* Returns the Calendar for a given COS string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     * 
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
 * Starts a marked content sequence with the given tag.
 * @param tag The tag for the marked content sequence.
 */
","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Starts a marked content sequence with the given tag and mcid.
 * @param tag COSName identifying the marked content
 * @param mcid Integer representing the MCID
 */
","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
 * Sets a marked content point with the given tag.
 * @param tag COSName representing the marked content tag.
 */","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(org.apache.pdfbox.cos.COSString,java.io.OutputStream)",1621,1624,"/**
 * Writes a COSString to an OutputStream.
 * @param string COSString to write
 * @param output Output stream to write to
 * @throws IOException if an I/O error occurs
 */
","* This will output the given byte getString as a PDF object.
     *
     * @param string COSString to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],java.io.OutputStream)",1633,1636,"/**
* Writes a byte array to an OutputStream.
* @param bytes The byte array to write.
* @param output The OutputStream to write to.
*/
","* This will output the given text/byte getString as a PDF object.
     *
     * @param bytes byte array representation of a string to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFGraphicsStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine:<init>(org.apache.pdfbox.pdmodel.PDPage),107,176,"/**
 * Initializes the PDF graphics stream engine with the given page.
 * @param page The PDF page to associate with this engine.
 */
","* Constructor.
     * 
     * @param page the page the content stream belongs to",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(),52,55,"/**
 * Default constructor. Initializes the PDF marked content extractor.
 */",* Instantiate a new PDFMarkedContentExtractor object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,<init>,org.apache.pdfbox.text.PDFTextStripperByArea:<init>(),45,48,"/**
 * Default constructor. Disables bead separation.
 */","* Constructor.
     * @throws IOException If there is an error loading properties.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getObjectFromPath,org.apache.pdfbox.cos.COSDictionary:getObjectFromPath(java.lang.String),1311,1328,"/**
 * Retrieves a COSBase object from the given path.
 * @param objPath Path to the COSBase object.
 * @return The COSBase object at the specified path.
 */","* Nice method, gives you every object you want Arrays works properly too. Try ""P/Annots/[k]/Rect"" where k means the
     * index of the Annots array.
     *
     * @param objPath the relative path to the object.
     * @return the object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String),74,77,"/**
* Retrieves the value of a PDF attribute.
* @param attrName Name of the attribute to retrieve.
* @return COSBase object representing the attribute value.
*/
","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @return the attribute value for a given name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String,org.apache.pdfbox.cos.COSBase)",86,94,"/**
 * Retrieves attribute value; returns default if not found.
 * @param attrName Attribute name to retrieve.
 * @param defaultValue Value if attribute is missing.
 */
","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @param defaultValue the default value
     * @return the attribute value for a given name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,isSpecified,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:isSpecified(java.lang.String),66,69,"/**
 * Checks if a specified key exists in the COS object's dictionary.
 * @param name The name of the key to check.
 * @return True if the key exists, false otherwise.
 */
","* Is the attribute with the given name specified in this attribute object?
     * 
     * @param name the attribute name
     * @return <code>true</code> if the attribute is specified,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getArrayOfString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getArrayOfString(java.lang.String),103,117,"/**
 * Extracts string array from COS object by name.
 * @param name COS object key. Returns null if not a COSArray.
 */
","* Gets an array of strings.
     * 
     * @param name the attribute name
     * @return the array of strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNameOrArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNameOrArrayOfName(java.lang.String,java.lang.String)",168,190,"/**
 * Gets name or array of names, or default if not found.
 * @param name Name to retrieve.
 * @param defaultValue Default value if name is not found.
 * @return String or String[] representing the name(s).
 */
","* Gets a name value or array of name values.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a String or array of Strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrName(java.lang.String,java.lang.String)",232,244,"/**
 * Retrieves a number or name from COS object, or default if not found.
 * @param name COS object key.
 * @param defaultValue Value if key is not found.
 * @return Float value, name, or default value.
 */
","* Gets a number or a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default name
     * @return a Float or a String",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrArrayOfNumber(java.lang.String,float)",302,328,"/**
 * Gets a number or array of numbers from COS object.
 * @param name COS object key.
 * @param defaultValue Default value if not found.
 * @return Number, float array, or default value.
 */
","* Gets a number or an array of numbers.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a Float or an array of floats",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColor,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColor(java.lang.String),383,391,"/**
 * Retrieves a PDGamma object by name from the COS array.
 * @param name Name of the COS array to retrieve.
 * @return PDGamma object or null if not found.
 */
","* Gets a colour.
     * 
     * @param name the attribute name
     * @return the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,createKey,"org.apache.pdfbox.pdmodel.PDResources:createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",740,758,"/**
 * Creates a unique key within a COSDictionary.
 * @param kind The kind of dictionary.
 * @param prefix Prefix for the new key.
 * @return A unique COSName object.
 */
",* Returns a unique key for a new resource.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",47,65,"/**
* Sets the color using arguments and color space.
* Throws exception if operands are missing or types mismatch.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(org.apache.pdfbox.cos.COSName),799,822,"/**
 * Retrieves a PDColor object based on the provided COSName.
 * @param itemName COSName representing the color item.
 * @return PDColor object or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getColor(org.apache.pdfbox.cos.COSName),214,237,"/**
 * Retrieves a PDColor object based on the provided COSName.
 * @param itemName COSName representing the color definition.
 * @return PDColor object or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,int)",242,246,"/**
 * Sets the object at the given index to a COSInteger.
 * @param index Index of the object to set.
 * @param intVal Integer value for the COSInteger.
 */
","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param intVal The object to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,get,org.apache.pdfbox.cos.COSNumber:get(java.lang.String),58,95,"/**
 * Parses a string into a COSNumber (Integer or Float).
 * @param number String representation of a number
 * @return COSNumber object or throws IOException if invalid.
 */
","* This factory method will get the appropriate number object.
     *
     * @param number The string representation of the number.
     *
     * @return A number object, either float or int.
     *
     * @throws IOException If the string is not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(int),620,627,"/**
 * Appends a child element with the given MCID.
 * @param mcid The MCID of the child element to append.
 */
","* Appends a marked-content sequence kid.
     * 
     * @param mcid the marked-content id (MCID).
     * @throws IllegalArgumentException if the mcid is negative.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,getCOSBase,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:getCOSBase(),69,72,"/**
* Returns the COSBase representation of the degrees value.
*/
",* @return the value for this direction,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,<clinit>,org.apache.pdfbox.cos.COSInteger:<clinit>(),44,79,"/**
 * Returns a COSInteger object for the specified integer value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSHexString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSHexString(),693,746,"/**
 * Parses a COSHexString from the source.
 * @return Parsed COSString or null if parsing fails.
 * @throws IOException if an I/O error occurs.
 */","* This will parse a PDF HEX string with fail fast semantic
     * meaning that we stop if a not allowed character is found.
     * This is necessary in order to detect malformed input and
     * be able to skip to next object start.
     *
     * We assume starting '&lt;' was already read.
     * 
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getConvertedContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getConvertedContents(java.io.InputStream),363,388,"/**
 * Converts InputStream contents, filtering '<' and '(', to byte array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFileFilters(java.util.List),379,382,"/**
* Sets the filter list for the stream.
* @param filters List of filter names to apply.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(),93,96,"/**
 * Default constructor, initializes rectangle with zero dimensions.
 */","* Constructor.
     *
     * Initializes to 0,0,0,0",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float)",104,107,"/**
 * Constructs a PDRectangle with specified width and height.
 * @param width The width of the rectangle.
 * @param height The height of the rectangle.
 */
","* Constructor.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectangle(),164,168,"/**
 * Creates and returns a PDRectangle object from bounding box values.
 */","* Returns the updated <code>Rect</code> entry for the annotation.
     * The rectangle completely contains the cloudy border.
     *
     * @return Annotation <code>Rect</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectDifference(),185,201,"/**
 * Calculates the difference rectangle based on annotations.
 * Returns a PDRectangle representing the difference.
 */","* Returns the updated <code>RD</code> entry for Square and Circle annotations.
     *
     * @return Annotation <code>RD</code> value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,applyRectDiff,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",496,535,"/**
 * Applies a minimum value and calculates a modified rectangle.
 * @param rd The rectangle to modify, or null.
 * @param min The minimum value to apply.
 * @return A new PDRectangle object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getPaddedRectangle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",218,222,"/**
 * Creates a padded rectangle based on the input rectangle.
 * @param rectangle The base rectangle to pad.
 * @param padding The padding amount to apply.
 * @return A new PDRectangle with added padding.
 */
","* Get a padded rectangle.
     * 
     * <p>Creates a new rectangle with padding applied to each side.
     * .
     * @param rectangle the rectangle.
     * @param padding the padding to apply.
     * @return the padded rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,addRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",235,246,"/**
 * Adjusts rectangle dimensions based on provided differences.
 * @param rectangle The rectangle to adjust.
 * @param differences Array of 4 floats representing adjustments.
 * @return A new PDRectangle with adjusted dimensions.
 */
","* Get a rectangle enlarged by the differences.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,applyRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",259,269,"/**
 * Applies differences to a rectangle, adjusting its position/size.
 * @param rectangle The rectangle to modify.
 * @param differences Array of 4 floats: [dx, dy, dw, dh]
 * @return A new PDRectangle with the applied differences.
 */
","* Get a rectangle with the differences applied to each side.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,applyPadding,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",1045,1051,"/**
 * Applies padding to a PDRectangle.
 * @param box The rectangle to pad.
 * @param padding Padding value to apply.
 * @return A new PDRectangle with applied padding.
 */
","* Apply padding to a box.
     * 
     * @param box box
     * @return the padded box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createStream,org.apache.pdfbox.multipdf.Overlay:createStream(java.lang.String),602,611,"/**
 * Creates a COS stream from the given content.
 * @param content String data to be written to the stream
 * @return COSStream object containing the content
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSStream,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSStream(org.apache.pdfbox.cos.COSStream),144,166,"/**
 * Clones a COSStream to a new stream in the destination document.
 * @param stream The COSStream to clone.
 * @return The cloned COSStream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,<init>,org.apache.pdfbox.pdfparser.PDFXRefStream:<init>(org.apache.pdfbox.cos.COSDocument),57,60,"/**
 * Creates a PDF XRefStream using the provided COSDocument.
 * @param cosDocument The document to create the stream from.
 */
","* Create a fresh XRef stream like for a fresh file or an incremental update.
     * 
     * @param cosDocument the COSDocmernt to be used to create a new COSStream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,createStream,org.apache.pdfbox.pdmodel.common.PDObjectStream:createStream(org.apache.pdfbox.pdmodel.PDDocument),51,57,"/**
 * Creates a PDObjectStream from a PDDocument.
 * @param document The PDDocument to create the stream from.
 * @return A new PDObjectStream object.
 */
","* This will create a new PDObjectStream object.
     *
     * @param document The document that the stream will be part of.
     * @return A new stream object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),61,64,"/**
 * Creates a new PDStream associated with the given document.
 */","* Creates a new empty PDStream object.
     * 
     * @param document The document that the stream will be part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSDocument),71,74,"/**
 * Creates a new PDStream using the provided COSDocument.
 * @param document The COSDocument to use for stream creation.
 */
","* Creates a new empty PDStream object.
     *
     * @param document The document that the stream will be part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",131,138,"/**
 * Creates a PDStream from an input stream, applying specified filters.
 */","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied, if any. This method closes the InputStream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createRawStream,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",166,175,"/**
 * Creates a COSStream from an InputStream.
 * @param document PDDocument to add stream to.
 * @param rawInput Input stream to create stream from.
 * @return COSStream object.
 */
",* Creates a COS stream from raw (encoded) data.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createCOSStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createCOSStream(),106,109,"/**
 * Creates a COSStream object. Uses document's stream if available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,encode,"org.apache.pdfbox.filter.Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,112,"/**
 * Encodes input stream to output stream using parameters.
 * Delegates to the overloaded method with an unmodifiable dict.
 */","* Encodes data.
     * @param input the byte stream to encode
     * @param encoded the stream where encoded data will be written
     * @param parameters the parameters used for encoding
     * @param index the index to the filter being encoded
     * @throws IOException if the stream cannot be encoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(),38,40,"/**
 * Default constructor for the PDDefaultAttributeObject class.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(),43,46,"/**
 * Initializes the PDUserAttributeObject with the OWNER_USER_PROPERTIES owner.
 */",* Default constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(),44,46,"/**
 * Default constructor for the PDStandardAttributeObject class.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(),53,56,"/**
 * Default constructor for a PDOutlineItem, calls superclass constructor.
 */",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),47,50,"/**
 * Constructs a PDVariableText object, initializing with an AcroForm.
 */","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDExportFormatAttributeObject from a COSDictionary.
 */","* Creates a new ExportFormat attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getAppearanceStream(),84,91,"/**
* Returns the appearance stream for this entry.
* Throws exception if not an appearance stream.
*/
","* Returns the entry as an appearance stream.
     *
     * @return the entry as an appearance stream
     * 
     * @throws IllegalStateException if this entry is not an appearance stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getSubDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getSubDictionary(),100,120,"/**
 * Extracts appearance streams from the sub-dictionary.
 * Returns a map of COSName to PDAppearanceStream.
 */","* Returns the entry as an appearance subdictionary.
     *
     * @return the entry as an appearance subdictionary
     * 
     * @throws IllegalStateException if this entry is not an appearance subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,createXObject,"org.apache.pdfbox.pdmodel.graphics.PDXObject:createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",52,90,"/**
 * Creates a PDXObject based on the COSBase and resources.
 * @param base The COSBase object to create from.
 * @param resources The resources to use.
 * @return A PDXObject or null if base is null.
 */
","* Creates a new XObject instance of the appropriate type for the COS stream.
     *
     * @param base The stream which is wrapped by this XObject.
     * @param resources the resources of this XObject
     * @return A new XObject instance.
     * @throws java.io.IOException if there is an error creating the XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFont(java.io.File),675,700,"/**
 * Adds a TrueType font file. Handles OTF/TTF formats; logs errors.
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
 * Constructs a PDShadingType6 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
 * Constructs a PDShadingType7 object from a COSDictionary.
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,69,"/**
 * Converts a COSBase to a PDPageDestination.
 * @param base COSBase object to convert; may be a COSDictionary.
 * @return PDPageDestination or null if conversion fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,getDestination,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:getDestination(java.lang.String),65,85,"/**
* Retrieves a PDDestination object by name.
* @param name Destination name to retrieve.
* @return PDDestination object or null if not found.
*/
","* Returns the destination corresponding to the parameter.
     *
     * @param name The destination name.
     * @return The destination for that name, or null if there isn't any.
     * 
     * @throws IOException if something goes wrong when creating the destination object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getDestination(),70,73,"/**
* Retrieves the destination object.
* Returns a PDDestination object from the COS dictionary.
*/
","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:getDestination(),66,69,"/**
 * Gets the destination object.
 * Returns a PDDestination object from the COS dictionary.
 */","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getDestination(),140,143,"/**
 * Retrieves the destination object.
 * Returns a PDDestination object from the COS dictionary.
 */","* Get the destination to be displayed when the annotation is activated. Either this or the
     * action entry should be set, but not both.
     *
     * @return The destination for this annotation.
     *
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getDestination(),186,189,"/**
* Retrieves the destination object.
* Returns a PDDestination object from the COS dictionary.
*/
","* Get the page destination of this node.
     *
     * @return The page destination of this node.
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
 * Constructs a PDComboBox object.
 * @param acroForm The acroForm.
 * @param field The field.
 * @param parent The parent field.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",49,52,"/**
 * Constructs a PDListBox object.
 * @param acroForm The AcroForm object.
 * @param field The COSDictionary representing the field.
 * @param parent The parent PDNonTerminalField.
 */
","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,process,"org.apache.pdfbox.contentstream.operator.state.Save:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,43,"/**
 * Saves the current graphics state on the context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",165,169,"/**
 * Constructs a COSParser with a key store and alias.
 * @param source Input stream, password, keystore, and alias.
 */","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     *
     * @throws IOException if the source data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",93,95,"/**
 * Calls the superclass constructor with provided parameters.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(),158,161,"/**
 * Creates an output stream.
 * @return An OutputStream object.
 * @throws IOException if an I/O error occurs.
 */
","* This will get a stream that can be written to.
     * 
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStreamElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStreamElement(org.w3c.dom.Element),185,283,"/**
* Parses a stream element and populates a COSStream object.
* @param streamEl Element representing the stream to parse
* @return Populated COSStream object
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,createCOSStreamwithIccProfile,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:createCOSStreamwithIccProfile(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",411,460,"/**
* Creates a COS stream for the image, including ICC profile data.
* @return COSStream object containing image data and ICC profile.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,writeToStream,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",875,881,"/**
 * Writes byte data to a PDF appearance stream.
 * @param data The byte array to write.
 * @param appearanceStream The stream to write to.
 */
","* Writes the stream to the actual stream in the COSStream.
     *
     * @throws IOException If there is an error writing to the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,boolean)",58,61,"/**
 * Creates an AppearanceContentStream with a given stream.
 * @param appearance The appearance stream.
 * @param compress Whether to compress the stream.
 */
","* Create a new appearance stream.
     *
     * @param appearance The appearance stream to write to.
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the transformation matrix for text rendering.
* @param matrix The Matrix object defining the transformation.
* @throws IOException If an I/O error occurs.
*/
","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
 * Transforms the matrix, throwing an exception in text mode.
 * Writes the affine transform and concatenates the operator.
 */","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginText(),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDFormContentStream:beginText(),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPageContentStream:beginText(),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginText(),26,26,"/**
 * Extends PDAbstractContentStream to handle patterned content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endText(),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable for appearance content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,endText,org.apache.pdfbox.pdmodel.PDFormContentStream:endText(),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPageContentStream:endText(),37,37,"/**
* Extends ContentStream, implementing Closeable for resource management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPatternContentStream:endText(),26,26,"/**
 * Represents a content stream in a PDF document. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLeading(float),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDFormContentStream:setLeading(float),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPageContentStream:setLeading(float),37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLeading(float),26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLine(),36,36,"/**
 * Extends PDAbstractContentStream, implementing Closeable for content stream management.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDFormContentStream:newLine(),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPageContentStream:newLine(),37,37,"/**
* Extends ContentStream for writing to a PDF page. Implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPatternContentStream:newLine(),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLineAtOffset(float,float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDFormContentStream:newLineAtOffset(float,float)",26,26,"/**
 * Extends PDAbstractContentStream for PDF form content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPageContentStream:newLineAtOffset(float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPatternContentStream:newLineAtOffset(float,float)",26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:saveGraphicsState(),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:saveGraphicsState(),26,26,"/**
* Represents a content stream for a Portable Document Form (PDF).
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:saveGraphicsState(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:saveGraphicsState(),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:restoreGraphicsState(),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:restoreGraphicsState(),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:restoreGraphicsState(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:restoreGraphicsState(),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float)",26,26,"/**
* Represents a content stream for a PDF form, extending AbstractContentStream.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float)",26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implements Closeable for appearance content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float,float)",26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float),37,37,"/**
* Extends ContentStream, implements Closeable for writing to PDF pages.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for writing content to a PDF page.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float)",26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float,float)",36,36,"/**
 * Extends PDAbstractContentStream, implements Closeable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float,float)",26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float,float)",26,26,"/**
 * Represents a content stream in a PDF pattern, extending PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float),36,36,"/**
 * Extends PDAbstractContentStream, implementing Closeable for content stream appearance.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addRect(float,float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implements Closeable for appearance content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDFormContentStream:addRect(float,float,float,float)",26,26,"/**
 * Represents a content stream for a PDF form, extending AbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPageContentStream:addRect(float,float,float,float)",37,37,"/**
* Content stream for drawing on a PDF page. Extends AbstractContentStream.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPatternContentStream:addRect(float,float,float,float)",26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo(float,float,float,float,float,float)",36,36,"/**
 * Extends PDAbstractContentStream, implementing Closeable interface.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo(float,float,float,float,float,float)",26,26,"/**
 * Represents a content stream for a Portable Document Form (PDF).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo(float,float,float,float,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo(float,float,float,float,float,float)",26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo2(float,float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo2(float,float,float,float)",26,26,"/**
* Represents a content stream for a PDF form. Extends PDAbstractContentStream.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo2(float,float,float,float)",37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo2(float,float,float,float)",26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo1(float,float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo1(float,float,float,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo1(float,float,float,float)",37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo1(float,float,float,float)",26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:moveTo(float,float)",36,36,"/**
* Extends PDAbstractContentStream; implements Closeable for content stream appearance.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:moveTo(float,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:moveTo(float,float)",37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF page content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:moveTo(float,float)",26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:lineTo(float,float)",36,36,"/**
 * Represents content stream for PDF appearance dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:lineTo(float,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:lineTo(float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:lineTo(float,float)",26,26,"/**
 * Represents a content stream in a PDF document. Extends PDAbstractContentStream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:stroke(),36,36,"/**
 * Extends PDAbstractContentStream, implements Closeable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDFormContentStream:stroke(),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPageContentStream:stroke(),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:stroke(),26,26,"/**
 * Represents a content stream for a Pattern object. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndStroke(),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndStroke(),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndStroke(),37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndStroke(),26,26,"/**
 * Represents a content stream for pattern content in PDF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fill(),36,36,"/**
 * Represents content stream for appearance dictionary. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,fill,org.apache.pdfbox.pdmodel.PDFormContentStream:fill(),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPageContentStream:fill(),37,37,"/**
* Extends AbstractContentStream, implements Closeable for content writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPatternContentStream:fill(),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillEvenOdd(),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillEvenOdd(),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillEvenOdd(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillEvenOdd(),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStroke(),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStroke(),26,26,"/**
 * Represents a content stream for a PDF form, extending AbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStroke(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStroke(),26,26,"/**
 * Abstract class for content streams in PDF, extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStrokeEvenOdd(),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStrokeEvenOdd(),26,26,"/**
 * Extends PDAbstractContentStream for PDF form content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStrokeEvenOdd(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStrokeEvenOdd(),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStroke(),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStroke(),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStroke(),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStroke(),26,26,"/**
 * Represents a content stream in a PDF pattern, extending PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStrokeEvenOdd(),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStrokeEvenOdd(),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStrokeEvenOdd(),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStrokeEvenOdd(),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closePath(),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for resource management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDFormContentStream:closePath(),26,26,"/**
 * Represents a content stream for a Portable Document Form (PDF).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPageContentStream:closePath(),37,37,"/**
* Extends AbstractContentStream, implements Closeable for content writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPatternContentStream:closePath(),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clip(),36,36,"/**
 * Represents content stream for PDF appearance dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,clip,org.apache.pdfbox.pdmodel.PDFormContentStream:clip(),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPageContentStream:clip(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPatternContentStream:clip(),26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clipEvenOdd(),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable for appearance content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:clipEvenOdd(),26,26,"/**
 * Extends PDAbstractContentStream for PDF form content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:clipEvenOdd(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:clipEvenOdd(),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidth(float),36,36,"/**
* Extends PDAbstractContentStream; implements Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineWidth(float),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineWidth(float),37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable functionality.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineWidth(float),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineJoinStyle(int),36,36,"/**
 * Extends PDAbstractContentStream, implements Closeable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineJoinStyle(int),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineJoinStyle(int),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineJoinStyle(int),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineCapStyle(int),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineCapStyle(int),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineCapStyle(int),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineCapStyle(int),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineDashPattern(float[],float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDFormContentStream:setLineDashPattern(float[],float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPageContentStream:setLineDashPattern(float[],float)",37,37,"/**
* Extends ContentStream, implements Closeable for writing to PDF pages.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineDashPattern(float[],float)",26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMiterLimit(float),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDFormContentStream:setMiterLimit(float),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPageContentStream:setMiterLimit(float),37,37,"/**
* Extends ContentStream, implements Closeable for writing content to a PDF page.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMiterLimit(float),26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endMarkedContent(),36,36,"/**
 * Extends PDAbstractContentStream, implements Closeable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:endMarkedContent(),26,26,"/**
 * Represents a content stream within a Portable Document Form (PDF).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:endMarkedContent(),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:endMarkedContent(),26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setCharacterSpacing(float),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setCharacterSpacing(float),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setCharacterSpacing(float),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setCharacterSpacing(float),26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setWordSpacing(float),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setWordSpacing(float),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setWordSpacing(float),37,37,"/**
* Extends ContentStream, implements Closeable for writing to PDF pages.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setWordSpacing(float),26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setHorizontalScaling(float),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDFormContentStream:setHorizontalScaling(float),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPageContentStream:setHorizontalScaling(float),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPatternContentStream:setHorizontalScaling(float),26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable for appearance content.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDFormContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),26,26,"/**
 * Represents a content stream for a Portable Document Form (PDF).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPageContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPatternContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextRise(float),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextRise(float),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextRise(float),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content writing.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextRise(float),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignSignatureRectangle,"org.apache.pdfbox.pdmodel.PDDocument:assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",600,612,"/**
 * Sets the signature rectangle for a widget, using annotation dict.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getBBox(),55,59,"/**
 * Returns the bounding box of the PDF object.
 * @return PDRectangle object representing the bounding box, or null.
 */
","* Gets the artifact's bounding box (BBox).
     * 
     * @return the artifact's bounding box",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:getBBox(),841,850,"/**
 * Returns the bounding box of the PDF object as a PDRectangle.
 * Returns null if the bounding box is not found.
 */
","* Gets the bounding box.
     * 
     * @return the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRectangle(),732,736,"/**
 * Gets the rectangle from the annotation.
 * @return PDRectangle object or null if not present.
 */
","* The rectangle associated with this annotation.
     *
     * @return The annotation rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getFringe(),115,119,"/**
 * Extracts the fringe rectangle from the annotation.
 * @return PDRectangle object or null if not present.
 */
","* This will retrieve the fringe. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getFringe(),152,156,"/**
 * Extracts the fringe rectangle from the annotation.
 * @return PDRectangle object representing the fringe, or null.
 */","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getFringe(),271,275,"/**
 * Retrieves the fringe rectangle from the annotation.
 * Returns a PDRectangle or null if not present.
 */","* This will get the fringe. Giving the difference between the annotations rectangle and where
     * the drawing occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getFringe(),153,157,"/**
 * Extracts the fringe rectangle from the annotation.
 * @return PDRectangle object representing the fringe, or null.
 */","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontBoundingBox(),411,420,"/**
 * Gets the font bounding box from the dictionary.
 * @return PDRectangle object representing the bounding box.
 */
","* This will get the fonts bounding box.
     *
     * @return The fonts bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBBox(),308,312,"/**
 * Gets the font bounding box.
 * @return PDRectangle object or null if not found.
 */
","* This will get the fonts bounding box from its dictionary.
     *
     * @return The fonts bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getBBox(),208,213,"/**
 * Gets the bounding box of the COS object.
 * @return PDRectangle object or null if no bounding box exists.
 */
","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges, respectively,
     * of the form XObject's bounding box.
     * These boundaries are used to clip the form XObject and to determine its size for caching.
     * @return The BBox of the form.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getBBox(),221,226,"/**
* Gets the bounding box of the COS object.
* Returns a PDRectangle or null if bounding box is missing.
*/
","* An array of four numbers in the form coordinate system (see
     * below), giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the pattern's bounding box.
     *
     * @return The BBox of the pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBBox(),169,180,"/**
 * Returns the bounding box rectangle.
 * Creates it if it's null, from the dictionary.
 */","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the shading's bounding box.
     *
     * @return the BBox of the form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getRectangle(),256,275,"/**
 * Retrieves a PDRectangle from the dictionary's RECT array.
 * @return PDRectangle object or null if invalid.
 */
","* The annotation rectangle, defining the location of the annotation on the page in default user space units. This
     * is usually required and should not return null on valid PDF documents. But where this is a parent form field with
     * children, such as radio button collections then the rectangle will be null.
     * 
     * @return The Rect value of this annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifference(),279,283,"/**
 * Gets the rectangle difference from the COS object.
 * @return PDRectangle object or null if RD array is missing.
 */
","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifference(),122,126,"/**
* Calculates the difference rectangle from the COS object.
* Returns a PDRectangle or null if the RD array is missing.
*/
","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getBBox(),84,88,"/**
 * Gets the bounding box of the COS object.
 * @return PDRectangle object or null if bounding box is missing.
 */
","* This will retrieve the rectangle specifying the location of the viewport.
     * 
     * @return the location",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getRectangle(),179,183,"/**
 * Retrieves a rectangle from the bead's COS array.
 * @return A PDRectangle object or null if no rectangle exists.
 */
","* The rectangle on the page that this bead is part of.
     *
     * @return The part of the page that this bead covers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setLineDashPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:setLineDashPattern(org.apache.pdfbox.cos.COSArray,int)",1080,1084,"/**
 * Sets the line dash pattern using the provided array and phase.
 */
","* @param array dash array
     * @param phase dash phase",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineDashPattern(),303,317,"/**
 * Retrieves the line dash pattern from the dictionary.
 * @return PDLineDashPattern object or null if not found.
 */
","* This will get the dash pattern.
     *
     * @return null or the D value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getStencilImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",61,125,"/**
* Creates a stencil image from a PDImage with specified paint.
* @param pdImage Source image for stencil.
* @param paint Paint to use for the stencil.
* @return Buffered image representing the stencil.
*/
","* Returns an ARGB image filled with the given paint and using the given image as a mask.
     * @param paint the paint to fill the visible portions of the image with
     * @return a masked image filled with the given paint
     * @throws IOException if the image cannot be read
     * @throws IllegalStateException if the image is not a stencil.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,readRasterFromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:readRasterFromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster)",263,357,"/**
 * Reads raster data from a PDF image into a WritableRaster.
 * @param pdImage PDF image to read from.
 * @param raster WritableRaster to populate with data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from1Bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",359,458,"/**
* Creates a BufferedImage from a 1-bit PDImage.
* @param pdImage source image
* @param clipped clip rectangle
* @param subsampling subsampling factor
* @param width output image width
* @param height output image height
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,fromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",554,703,"/**
 * Creates a BufferedImage from a PDImage, handling subsampling & color keys.
 * @param pdImage Source PDImage object
 * @param raster WritableRaster to write image data to
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getDefaultDecode(int),454,464,"/**
 * Creates a default decode array based on the number of components.
 * @param bitsPerComponent Number of bits per component (unused).
 * @return Float array representing the default decode values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontMatrix(),254,264,"/**
 * Gets the font matrix, using cached or default value.
 * Returns a Matrix object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getMatrix(),235,239,"/**
 * Returns a Matrix object from the COS object's dictionary.
 */","* This will get the optional matrix of an XObjectForm. It maps the form space to user space.
     * @return the form matrix if available, or the identity matrix.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getMatrix(),134,137,"/**
 * Retrieves a matrix object.
 * Returns a Matrix object from the COS dictionary.
 */","* Returns the pattern matrix, or the identity matrix is none is available.
     * 
     * @return the pattern matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getMatrix(),56,59,"/**
 * Retrieves the matrix object.
 * Returns a Matrix object from the COS dictionary.
 */","* This will get the optional Matrix of a function based shading.
     *
     * @return the matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getInheritableAttribute,"org.apache.pdfbox.pdmodel.PDPageTree:getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",108,122,"/**
 * Retrieves an inheritable attribute from a COSDictionary.
 * @param node Dictionary to search.
 * @param key Attribute key. Returns value or null if not found.
 */","* Returns the given attribute, inheriting from parent tree nodes if necessary.
     *
     * @param node page object
     * @param key the key to look up
     * @return COS value for the given key",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,findFieldType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:findFieldType(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",133,146,"/**
 * Finds the field type of a dictionary, avoiding infinite recursion.
 * @param dic COSDictionary to search, seen dictionaries to avoid loops
 * @return String representing the field type, or null if not found
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,boolean)",895,898,"/**
 * Gets a boolean value associated with the given key.
 * @param key COSName of the boolean value
 * @param defaultValue Default value if key not found
 * @return Boolean value or default if key is absent
 */
","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getInterpolate(),229,233,"/**
* Returns the interpolate flag from parameters, default false.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,isStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:isStencil(),284,288,"/**
* Checks if the object is a stencil image.
* Returns true if COSName.IM is true, false otherwise.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,int)",994,997,"/**
* Gets an integer value associated with the given key.
* @param key COSName representing the key
* @param defaultValue Default value if key not found
* @return Integer value or defaultValue if not present
*/
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the defaultvalue will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1007,1010,"/**
 * Gets an integer value from a COS object.
 * @param firstKey First key to search.
 * @param secondKey Second key to search.
 */
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value -1 will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getHeight(),205,209,"/**
* Returns the height value, defaulting to -1 if not found.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getWidth(),217,221,"/**
* Returns the width of the object.
* Returns -1 if the width is not specified.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:<init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",68,103,"/**
 * Creates a PDInlineImage object from parameters, data, and resources.
 * Decodes image data based on specified filters.
 */","* Creates an inline image from the given parameters and data.
     *
     * @param parameters the image parameters
     * @param data the image data
     * @param resources the current resources
     * @throws IOException if the stream cannot be decoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(java.util.List),311,328,"/**
 * Decodes data using filters until a stop filter is encountered.
 * @param rawData Input data as byte array
 * @return Filtered data as ByteArrayInputStream
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getSuffix(),386,407,"/**
 * Determines the image suffix based on filters. Returns ""png"" if no match.
 */","* Returns the suffix for this image type, e.g. jpg/png.
     *
     * @return The image suffix.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",252,265,"/**
* Retrieves COS objects of specified types.
* @param type1 The first COSName type.
* @param type2 The second COSName type.
* @return List of COSObjects matching the types.
*/
","* This will get all dictionaries objects by type.
     *
     * @param type1 The first possible type of the object, mandatory.
     * @param type2 The second possible type of the object, usually an abbreviation, optional.
     *
     * @return This will return all objects with the specified type(s).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",448,451,"/**
 * Converts an integer code to its Unicode representation.
 * Uses the default glyph list if one isn't provided.
 */
","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @param customGlyphList a custom glyph list to use instead of the Adobe Glyph List
     * @return Unicode character(s)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",276,331,"/**
 * Converts a glyph code to its Unicode representation.
 * @param code Glyph code to convert
 * @param customGlyphList Custom glyph list to use if applicable
 * @return Unicode string or null if not found
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,isEncrypted,org.apache.pdfbox.pdmodel.PDDocument:isEncrypted(),812,815,"/**
 * Checks if the document is encrypted.
 * @return True if encrypted, false otherwise.
 */","* This will tell if this document is encrypted or not.
     * 
     * @return true If this document is encrypted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,parse,org.apache.pdfbox.pdfparser.FDFParser:parse(),66,88,"/**
 * Parses the FDF document.
 * @return Parsed FDFDocument object.
 * @throws IOException if parsing fails.
 */
","* This will parse the stream and populate the FDFDocument object.
     *
     * @return the parsed FDFDocument
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(),111,114,"/**
* Returns the AcroForm object for the document.
* Delegates to a helper method for form retrieval.
*/
","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * @return The document's AcroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removeResources,org.apache.pdfbox.pdmodel.PDPage:removeResources(org.apache.pdfbox.cos.COSDictionary),134,162,"/**
 * Removes resources (color spaces, fonts, etc.) from the cache.
 * @param resources The COSDictionary containing resources to remove.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,"org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",206,236,"/**
* Retrieves a PDColorSpace by name, caching if possible.
* @param name COSName of the color space
* @param wasDefault True if the color space was default
* @return PDColorSpace object
*/
","* Returns the color space resource with the given name, or null if none exists. This method is
     * for PDFBox internal use only, others should use {@link #getColorSpace(COSName)}.
     *
     * @param name Name of the color space resource.
     * @param wasDefault if current color space was used by a default color space. This parameter is
     * to
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,hasColorSpace,org.apache.pdfbox.pdmodel.PDResources:hasColorSpace(org.apache.pdfbox.cos.COSName),244,247,"/**
* Checks if a COS object has a color space.
* @param name COS name to check.
* @return True if color space exists, false otherwise.
*/
","* Returns true if the given color space name exists in these resources.
     *
     * @param name Name of the color space resource.
     * @return true if the given color space name exists in these resources, otherwise false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGState,org.apache.pdfbox.pdmodel.PDResources:getExtGState(org.apache.pdfbox.cos.COSName),255,280,"/**
 * Retrieves an extended graphics state by name, caching if possible.
 * @param name COSName identifying the extended graphics state.
 * @return PDExtendedGraphicsState object or null if not found.
 */
","* Returns the extended graphics state resource with the given name, or null if none exists.
     *
     * @param name Name of the graphics state resource.
     * @return the extended graphics state with the given name or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isImageXObject,org.apache.pdfbox.pdmodel.PDResources:isImageXObject(org.apache.pdfbox.cos.COSName),391,409,"/**
 * Checks if a COSName represents an image XObject.
 * @param name COSName to check; returns true if it is.
 */
","* Tells whether the XObject resource with the given name is an image.
     *
     * @param name Name of the XObject resource.
     * @return true if it is an image XObject, false if not.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpaceNames,org.apache.pdfbox.pdmodel.PDResources:getColorSpaceNames(),515,518,"/**
 * Returns a list of color space names.
 * Uses getNames with the COLORSPACE key.
 */","* Returns the names of the color space resources, if any.
     * 
     * @return an iterable containing all names of available colorspaces",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObjectNames,org.apache.pdfbox.pdmodel.PDResources:getXObjectNames(),525,528,"/**
* Returns a list of XObject names.
* Uses the getNames method with COSName.XOBJECT.
*/","* Returns the names of the XObject resources, if any.
     * 
     * @return an iterable containing all names of available xobjects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFontNames,org.apache.pdfbox.pdmodel.PDResources:getFontNames(),535,538,"/**
 * Returns a list of font names defined in the PDF.
 */","* Returns the names of the font resources, if any.
     * 
     * @return an iterable containing all names of available fonts",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPropertiesNames,org.apache.pdfbox.pdmodel.PDResources:getPropertiesNames(),545,548,"/**
 * Returns a list of property names.
 * Uses getNames(COSName.PROPERTIES) internally.
 */","* Returns the names of the property list resources, if any.
     * 
     * @return an iterable containing all names of available property lists",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShadingNames,org.apache.pdfbox.pdmodel.PDResources:getShadingNames(),555,558,"/**
 * Returns shading names from the document.
 * Uses the getNames method with COSName.SHADING.
 */","* Returns the names of the shading resources, if any.
     * 
     * @return an iterable containing all names of available shadings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPatternNames,org.apache.pdfbox.pdmodel.PDResources:getPatternNames(),565,568,"/**
* Returns a list of pattern names.
* Uses getNames with COSName.PATTERN as the key.
*/","* Returns the names of the pattern resources, if any.
     * 
     * @return an iterable containing all names of available patterns",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGStateNames,org.apache.pdfbox.pdmodel.PDResources:getExtGStateNames(),575,578,"/**
 * Returns the names associated with the extended graphics state.
 */","* Returns the names of the extended graphics state resources, if any.
     * 
     * @return an iterable containing all names of available extended graphics states",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getObjectFromEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName),82,90,"/**
 * Retrieves a COS object from the EF dictionary by key.
 * @param key COSName of the object to retrieve
 * @return COSBase object or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStdCryptFilterDictionary(),470,473,"/**
 * Returns the standard cryptographic filter dictionary.
 * Delegates to the internal method for retrieval.
 */","* Returns the standard crypt filter.
     * 
     * @return the standard crypt filter if available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getDefaultCryptFilterDictionary(),480,483,"/**
 * Returns the default cryptographic filter dictionary.
 * Delegates to getCryptFilterDictionary with DEFAULT_CRYPT_FILTER.
 */","* Returns the default crypt filter (for public-key security handler).
     * 
     * @return the default crypt filter if available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType0Font:getFontDescriptor(),449,453,"/**
* Returns the font descriptor of the descendant font.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getResources(),88,99,"/**
 * Retrieves resources, using charstream if present, else font.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType3Font:hasGlyph(java.lang.String),135,140,"/**
 * Checks if a glyph exists by name.
 * @param name Glyph name to check.
 * @return True if glyph exists, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProc,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProc(int),395,404,"/**
 * Retrieves a PDType3CharProc by character code.
 * @param code Character code to retrieve.
 * @return PDType3CharProc object or null if not found.
 */
","* Returns the stream of the glyph for the given character code
     * 
     * @param code character code
     * @return the stream to be used to render the glyph",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getRolloverAppearance(),99,103,"/**
 * Gets the rollover appearance entry.
 * Returns a new entry or normal appearance if null.
 */","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getDownAppearance(),133,137,"/**
* Gets the down appearance entry.
* Returns a new PDAppearanceEntry or the normal appearance.
*/
","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDButton:constructAppearances(),284,304,"/**
 * Sets appearance state for widgets based on COS attributes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getFirstChild(),184,187,"/**
 * Returns the first child outline item.
 * Uses COSName.FIRST to retrieve the child.
 */",* @return The first child or null if there is no child.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getLastChild(),202,205,"/**
 * Returns the last child outline item.
 * Uses internal method to retrieve the item.
 */",* @return The last child or null if there is no child.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSignature,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSignature(),92,95,"/**
 * Returns the signature value.
 */","* Get the signature dictionary.
     * 
     * @return the signature dictionary
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValueAsString(),158,163,"/**
 * Returns the value as a string, or an empty string if null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getIDTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),1133,1156,"/**
 * Converts an ID tree to a map of names, merging child trees.
 * @param idTree The ID tree to convert.
 * @return A map of names or an empty map if idTree is null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getNumberTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),1161,1187,"/**
 * Converts a number tree to a map.
 * @param tree The number tree to convert.
 * @return A map of integers to COSObjectable objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,findLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),100,124,"/**
 * Recursively finds and stores page labels from a node.
 * Processes child nodes and extracts label ranges.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getValue(java.lang.Integer),141,167,"/**
 * Retrieves a value by index from numbers or recursively from kids.
 * @param index The index of the value to retrieve.
 * @return The value at the given index, or null if not found.
 */
","* Returns the value corresponding to an index in the number tree.
     *
     * @param index The index in the number tree.
     *
     * @return The value corresponding to the index.
     *
     * @throws IOException If there is a problem creating the values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfOutputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfOutputParameters(),159,174,"/**
 * Returns the number of output parameters.
 * Uses cached value or calculates from rangeValues.
 */","* This will get the number of output parameters that
     * have a range specified.  A range for output parameters
     * is optional so this may return zero for a function
     * that does have output parameters, this will simply return the
     * number that have the range specified.
     *
     * @return The number of output parameters that have a range
     * specified.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeForOutput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeForOutput(int),185,189,"/**
 * Creates a PDRange object using range values and a given size.
 * @param n The size of the range.
 * @return A PDRange object.
 */
","* This will get the range for a certain output parameters.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The output parameter number to get the range for.
     *
     * @return The range for this component.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,clipToRange,org.apache.pdfbox.pdmodel.common.function.PDFunction:clipToRange(float[]),293,313,"/**
 * Clips input values to ranges defined in rangesArray, or returns input.
 */","* Clip the given input values to the ranges.
     * 
     * @param inputValues the input values
     * @return the clipped values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfInputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfInputParameters(),209,217,"/**
 * Returns the number of input parameters.
 * Caches the value for efficiency.
 */","* This will get the number of input parameters that
     * have a domain specified.
     *
     * @return The number of input parameters that have a domain
     * specified.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainForInput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainForInput(int),228,232,"/**
 * Creates a PDRange object using domain values and input size n.
 */","* This will get the range for a certain input parameter.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The parameter number to get the domain for.
     *
     * @return The domain range for this component.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,calcSampleIndex,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:calcSampleIndex(int[]),351,372,"/**
 * Calculates a sample index based on the input vector.
 * @param vector Input vector of integers.
 * @return Calculated sample index.
 */
","* calculate array index (structure described in p.171 PDF spec 1.7) in multiple dimensions.
         *
         * @param vector with coordinates
         * @return index in flat array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeForParameter(int),220,229,"/**
 * Gets the PDRange for a parameter from decode values.
 * @param paramNum Parameter number to get the range for.
 * @return PDRange object or null if not found.
 */
","* Get the decode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The decode parameter range or null if none is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncodeForParameter(int),177,181,"/**
 * Creates a PDRange object using the encode array and parameter n.
 */","* Get the encode for the input parameter.
     *
     * @param n The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isTopAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isTopAttached(),67,70,"/**
 * Checks if the ""Top"" element is attached.
 * Delegates to the isAttached method.
 */","* Is the artifact attached to the top edge?
     * 
     * @return <code>true</code> if the artifact is attached to the top edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isBottomAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isBottomAttached(),78,81,"/**
 * Checks if the element is attached to the bottom.
 * Delegates to the isAttached method.
 */
","* Is the artifact attached to the bottom edge?
     * 
     * @return <code>true</code> if the artifact is attached to the bottom edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isLeftAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isLeftAttached(),89,92,"/**
 * Checks if the element is attached to the ""Left"" side.
 */","* Is the artifact attached to the left edge?
     * 
     * @return <code>true</code> if the artifact is attached to the left edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isRightAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isRightAttached(),100,103,"/**
* Checks if the element is attached to the ""Right"" side.
*/","* Is the artifact attached to the right edge?
     * 
     * @return <code>true</code> if the artifact is attached to the right edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFont:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",66,72,"/**
 * Initializes a PDCIDFont with a dictionary and parent font.
 */","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontDescriptor(org.apache.pdfbox.cos.COSDictionary),296,308,"/**
 * Retrieves the font descriptor from a COSDictionary.
 * @param dictionary The COSDictionary to search.
 * @return The font descriptor COSDictionary, or null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary),78,100,"/**
* Initializes encoding with font encoding and applies differences.
* @param fontEncoding The COSDictionary containing font encoding data.
*/","* Creates a new DictionaryEncoding for a Type 3 font from a PDF.
     *
     * @param fontEncoding The Type 3 encoding dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",109,149,"/**
 * Initializes the DictionaryEncoding with base encoding.
 * @param fontEncoding The font's dictionary.
 * @param isNonSymbolic Indicates if the font is non-symbolic.
 * @param builtIn The font's built-in encoding.
 */
","* Creates a new DictionaryEncoding from a PDF.
     *
     * @param fontEncoding The encoding dictionary.
     * @param isNonSymbolic True if the font is non-symbolic. False for Type 3 fonts.
     * @param builtIn The font's built-in encoding. Null for Type 3 fonts.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:toString(),105,126,"/**
 * Returns a string representation of this process, including colorants.
 * Returns ""ERROR"" if colorant information retrieval fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,72,"/**
 * Initializes a ShadingContext with shading data, color model, transform, and matrix.
 */","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws java.io.IOException if there is an error getting the color space
     * or doing background color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeForParameter(int),157,166,"/**
 * Gets the decode range for a parameter.
 * @param paramNum Parameter number to get decode range for.
 * @return PDRange object or null if invalid parameter.
 */
","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getPathArray,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getPathArray(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon),157,178,"/**
 * Retrieves the path array from annotation, converting if needed.
 * @param annotation Annotation polygon to extract path from.
 * @return Path array or null if no path or vertices exist.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(java.io.InputStream),412,418,"/**
 * Reads and returns the byte array from the provided PDF input stream.
 */
","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(byte[]),431,437,"/**
 * Reads and returns the byte array of filtered PDF content.
 * @param pdfFile The PDF file as a byte array.
 * @return Filtered byte array of the PDF content.
 */
","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getRevision(),141,144,"/**
 * Retrieves the revision number from the dictionary.
 * @return Revision number as a long value.
 */
","* The software module revision number, corresponding to the Date attribute.
     *
     * @return the revision of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getMinimumRevision(),165,168,"/**
 * Gets the minimum revision number from the dictionary.
 * Returns a long value representing the minimum revision.
 */
","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @return the revision of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions)",67,74,"/**
 * Decodes input stream with filters, returns a COSInputStream.
 * @param in Input stream, filters, params, options, results.
 * @return COSInputStream with decoded data and filter results.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createView,org.apache.pdfbox.cos.COSStream:createView(),181,197,"/**
 * Creates a RandomAccessRead view based on filters or raw input.
 * @return RandomAccessRead view.
 * @throws IOException if an I/O error occurs.
 */
","* Returns a new RandomAccessRead which reads the decoded stream data.
     * 
     * @return RandomAccessRead containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(java.util.List),201,219,"/**
 * Decodes an input stream using filters.
 * @param stream Input stream to decode.
 * @return RandomAccessInputStream containing decoded data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String),290,293,"/**
* Gets a float value by name from the COS object.
* @param name Name of the float value to retrieve.
* @return The float value associated with the name.
*/
","* Gets a number value.
     * 
     * @param name the attribute name
     * @return the number value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getConversionFactor(),129,132,"/**
 * Returns the conversion factor from the COS object.
 */","* This will return the conversion factor.
     * 
     * @return the conversion factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderLength(),306,309,"/**
* Returns the leader line length from the annotation.
* @return The leader line length as a float.
*/
","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderExtend(),326,329,"/**
* Returns the leader extend value from the annotation.
* @return float value representing the leader extend.
*/
","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderOffset(),346,349,"/**
 * Returns the leader offset value from the annotation.
 */","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getV(),348,351,"/**
* Returns the value of the 'V' property as a float.
*/","* The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @return the minimum required capability of the signature field seed value
     * dictionary parser",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCYX(),321,324,"/**
 * Returns the CYX value from the COS object as a float.
 */","* This will return the CYX factor.
     * 
     * @return CYX factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String,float)",279,282,"/**
 * Gets a float value by name from COS object, using default if missing.
 */","* Gets a number value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the number value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getIntensity(),91,94,"/**
* Returns the intensity value as a float.
* Retrieves the value from the COS object.
*/
","* This will retrieve the intensity of the applied effect.
     *
     * @return the intensity value 0 to 2",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,computeFontHeight,org.apache.pdfbox.text.LegacyPDFStreamEngine:computeFontHeight(org.apache.pdfbox.pdmodel.font.PDFont),324,369,"/**
 * Computes the font height based on bounding box and descriptor.
 * @param font The PDFont object to analyze.
 * @return The computed font height as a float.
 */
","* Compute the font height. Override this if you want to use own calculations.
     * 
     * @param font the font.
     * @return the font height.
     * 
     * @throws IOException if there is an error while getting the font bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:toRGB(float[]),83,105,"/**
 * Converts a color value to RGB, handling white point adjustments.
 * @param value input color value array
 * @return RGB color value array
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:getLineWidth(),148,170,"/**
 * Gets the line width of the annotation border.
 * Returns 1 if no width is specified.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:getLineWidth(),174,196,"/**
 * Returns the line width of the annotation border.
 * Returns 1 if no width is specified.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getLineWidth(),207,229,"/**
 * Gets the line width of the annotation border.
 * Returns 1 if no width is specified.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:getLineWidth(),125,147,"/**
 * Gets the line width of the annotation border.
 * Returns 1 if no width is specified.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultPositionVector(int),267,270,"/**
 * Creates a default position vector based on the given CID.
 * @param cid Identifier for calculating vector position.
 * @return A Vector object representing the default position.
 */","* Returns the default position vector (v).
     *
     * @param cid CID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidth(int),317,324,"/**
 * Gets the width for a given CID code.
 * @param code The CID code to get the width for.
 * @return The width of the CID code.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getAverageFontWidth(),485,489,"/**
* Returns the average font width of the descendant font.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getProperties,org.apache.pdfbox.pdmodel.PDResources:getProperties(org.apache.pdfbox.cos.COSName),358,383,"/**
* Retrieves properties by name, using cache if available.
* @param name COSName identifying the properties
* @return PDPropertyList object or null if not found
*/
","* Returns the property list resource with the given name, or null if none exists.
     * 
     * @param name Name of the property list resource.
     * @return the property list with the given name or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getOptionalContent(),284,288,"/**
* Gets optional content as a PDPropertyList, or null if absent.
*/","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOptionalContent(),1055,1059,"/**
 * Retrieves optional content as a PDPropertyList, or null.
 */","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getOCGs(),62,86,"/**
 * Retrieves a list of PDPropertyLists from the OCGs dictionary.
 * Returns an empty list if no OCGs are found.
 */
","* Get a list of optional content groups.
     * 
     * @return List of optional content groups, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getOptionalContent(),705,709,"/**
 * Retrieves optional content as a PDPropertyList or null.
 */","* This will get the optional content group or optional content membership dictionary for the
     * annotation.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenNotVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenNotVisibilityExpression(org.apache.pdfbox.cos.COSArray),2269,2288,"/**
 * Checks if a visibility expression is hidden.
 * @param veArray The visibility expression array.
 * @return True if hidden, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getObjectOffset,"org.apache.pdfbox.pdfparser.COSParser:getObjectOffset(org.apache.pdfbox.cos.COSObjectKey,boolean)",498,523,"/**
 * Gets the offset for a COS object.
 * @param objKey COS object key
 * @param requireExistingNotCompressedObj Flag to validate object
 * @return Offset or object stream number, or null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:checkXrefOffsets(),448,462,"/**
 * Validates and updates xref offsets, falling back to brute force if needed.
 */","* Check the XRef table by dereferencing all objects and fixing the offset if necessary.
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObjects,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObjects(),527,533,"/**
 * Writes all objects from the queue to their destination.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeArray,org.apache.pdfbox.pdfwriter.COSWriter:writeArray(org.apache.pdfbox.cos.COSArray),1154,1165,"/**
 * Writes a COS array to the output, handling direct and indirect arrays.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.File),174,180,"/**
 * Saves data to the specified file.
 * @param fileName File to save data to.
 * @throws IOException if an I/O error occurs.
 */
","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(java.lang.Object),217,237,"/**
 * Removes the specified object from the list.
 * @param o object to remove
 * @return true if removed, false otherwise
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(int),520,529,"/**
 * Removes the element at the given index.
 * @param index index of the element to remove
 * @return the removed element
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeObject,org.apache.pdfbox.cos.COSArray:removeObject(org.apache.pdfbox.cos.COSBase),492,511,"/**
 * Removes the specified object. Returns true if removed.
 * @param o The COSBase object to remove.
 */
","* This will remove an element from the array.
     * This method will also remove a reference to the object.
     *
     * @param o The object to remove.
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,removeUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),104,115,"/**
 * Removes a user property from the COS array.
 * @param userProperty The property to remove.
 */","* Removes a user property.
     * 
     * @param userProperty the user property",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeSubject(byte[]),261,268,"/**
 * Removes a subject from the dictionary's subject array.
 * @param subject The subject to remove as a byte array.
 */
","* removes a subject from the list
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeKeyUsage(java.lang.String),444,451,"/**
* Removes a key usage extension from the key usage array.
* @param keyUsageExtension The key usage extension to remove.
*/
","* Removes a key usage extension
     *
     * @param keyUsageExtension ASCII string that consists of {0, 1, X}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeIssuer(byte[]),499,506,"/**
 * Removes an issuer from the issuer array in the dictionary.
 * @param issuer byte array representing the issuer to remove.
 */
","* Removes an issuer from the issuers list
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeOID(byte[]),553,560,"/**
 * Removes an OID from the dictionary's OID array.
 * @param oid The OID to remove as a byte array.
 */
","* removes an OID from the list
     *
     * @param oid Object Identifier of the certificate policy to be removed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,clear,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:clear(),136,141,"/**
 * Clears the map and actuals list, effectively emptying the data.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,removePossibleOrphanAnnotation,"org.apache.pdfbox.multipdf.Splitter$KCloner:removePossibleOrphanAnnotation(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary)",555,582,"/**
 * Removes orphan annotations from the structure tree if not found on page.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,remove,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:remove(java.lang.Object),117,122,"/**
 * Removes the specified key.
 * @param key The key to remove.
 * @return The value associated with the removed key.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSDictionary),112,157,"/**
 * Recursively collects updated COS entries based on update state.
 * Checks exclusion, containment, and update status for inclusion.
 */","* Collect all updates made to the given {@link COSDictionary} and it's contained structures.
     *
     * @param dictionary The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSDictionary} represents a direct child structure, that would
     * require it´s parent to be updated instead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSObject),193,231,"/**
 * Recursively collects a COS object and its updates.
 * Returns false if object is already processed.
 */","* Collect all updates made to the given {@link COSObject} and it's contained structures.
     *
     * @param object The {@link COSObject} updates shall be collected for.
     * @return Always returns {@code false}. {@link COSObject}s by definition are indirect and shall never cause a
     * parent structure to be updated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState),82,85,"/**
 * Sets the origin document state.
 * @param originDocumentState The state to set.
 */","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see #updated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getUpperLimit(),334,343,"/**
 * Retrieves the upper limit from the COS array.
 * Returns the string at index 1 or null if array is null.
 */
","* Get the highest value for a key in the name map.
     *
     * @return The highest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getLowerLimit(),368,377,"/**
 * Gets the lower limit from the COS array.
 * Returns the string at index 0 or null if array is null.
 */
","* Get the lowest value for a key in the name map.
     *
     * @return The lowest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String),144,147,"/**
 * Retrieves the name from the COS object, using the provided name.
 */","* Gets a name value.
     * 
     * @param name the attribute name
     * @return the name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getRenderingIntent(),334,345,"/**
 * Retrieves the rendering intent from the configuration dictionary.
 * @return RenderingIntent object or null if not found.
 */
","* This will get the rendering intent.
     *
     * @return null or the RI value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,getN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:getN(),54,57,"/**
 * Returns the name as a string, using the ""N"" key.
 */","* This will get the name of the action to be performed.
     *
     * @return The name of the action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String,java.lang.String)",674,677,"/**
* Gets name as string, using COSName conversion.
* @param key The key to look up.
* @param defaultValue Value if key is not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineStyle(),144,147,"/**
 * Retrieves the guideline style name from the dictionary.
 */","* Get the style for the guideline.  The default is ""S"" for solid.
     *
     * @return The guideline style.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getIcon(),103,106,"/**
* Retrieves the icon name as a String from the annotation.
*/","* This will retrieve the icon (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the PDAnnotationText.NAME_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getAttachmentName(),104,107,"/**
 * Gets the attachment name from the COS object.
 */","* This is the name used to draw the type of attachment. See the ATTACHMENT_NAME_XXX constants.
     *
     * @return The name that describes the visual cue for the attachment.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getLineEndingStyle(),230,233,"/**
 * Gets the line ending style from the COS object.
 */","* This will retrieve the line ending style.
     *
     * @return The line ending style, possible values shown in the LE_ constants section, LE_NONE if
     * missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getHighlightMode(),160,163,"/**
 * Returns the highlight mode as a String.
 * Uses COSName.H, defaults to HIGHLIGHT_MODE_INVERT.
 */
","* Set the highlight mode for when the mouse is depressed. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @return The string representation of the highlight mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getReplyType(),231,234,"/**
* Returns the reply type as a string.
*/","* This will retrieve the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for
     * the available values.
     *
     * @return the relationship.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:getName(),131,134,"/**
 * Returns the name of the COS object as a String.
 */","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * DRAFT.
     *
     * @return The name of this rubber stamp, see the NAME_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getName(),178,181,"/**
* Gets the name from the COS object.
* Returns the name as a String.
*/
","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the NAME_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getHighlightingMode(),77,80,"/**
* Gets the highlighting mode from the COS object.
* Returns the name as a String, defaulting to ""I"".
*/
","* Returns the highlighting mode. Default value: <code>I</code>
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @return the highlighting mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getStyle(),150,153,"/**
 * Gets the style string from the COS object.
 */","* This will retrieve the border style, see the STYLE_* constants for valid values.
     *
     * @return the style of the border",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getType,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getType(),67,70,"/**
 * Returns the type of the COS object.
 * Returns ""ExData"" if the type is not set.
 */
","* returns the type of the external data dictionary. It must be ""ExData"", if present
     * 
     * @return the type of the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:getSubtype(),82,86,"/**
 * Returns the subtype of the COS object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getStyle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getStyle(),70,73,"/**
* Returns the transition style as a String.
*/","* @return the style for this transition
     * @see PDTransitionStyle#valueOf(String)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDimension(),80,83,"/**
 * Returns the dimension string from the COS object.
 */","* @return The dimension in which the specified transition effect shall occur or the default
     * {@link PDTransitionDimension#H} if no dimension is found.
     * @see PDTransitionDimension",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getMotion(),101,104,"/**
 * Gets the motion name from the COS object.
 */","* @return The direction of motion for the specified transition effect or the default {@link PDTransitionMotion#I}
     * if no motion is found.
     * @see PDTransitionMotion",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getNonFullScreenPageMode(),287,291,"/**
 * Gets the non-fullscreen page mode from preferences.
 * Returns the value or a default if not found.
 */
","* Get the non full screen page mode preference.
     *
     * @return the non full screen page mode preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getReadingDirection(),308,311,"/**
 * Gets the reading direction from preferences.
 * Returns ""L2R"" if not found.
 */","* Get the reading direction preference.
     *
     * @return the reading direction preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewArea(),328,331,"/**
 * Returns the view area as a string, using a default if missing.
 */","* Get the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @return the ViewArea preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewClip(),348,351,"/**
 * Retrieves the view clip setting as a String.
 */","* Get the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @return the ViewClip preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintArea(),368,371,"/**
* Retrieves the print area as a string from preferences.
* Uses BOUNDARY.CropBox as default if not found.
*/
","* Get the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @return the PrintArea preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintClip(),388,391,"/**
 * Retrieves the print clip name from preferences.
 * Returns a String, defaulting to BOUNDARY.CropBox.toString().
 */","* Get the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @return the PrintClip preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintScaling(),428,431,"/**
 * Retrieves the print scaling preference.
 * @return Print scaling value as a string.
 */
","* Get the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @return the PrintScaling preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefOffset(long),295,316,"/**
 * Checks/calculates XRef offset; returns offset or -1 if invalid.
 */","* Check if the cross reference table/stream can be found at the current offset.
     * 
     * @param startXRefOffset
     * @return the revised offset
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,isEmpty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:isEmpty(),143,147,"/**
* Checks if the object is empty (only owner present).
*/","* Detects whether there are no properties in the attribute object.
     * 
     * @return <code>true</code> if the attribute object is empty,
     *  <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:toString(),193,197,"/**
 * Returns a string representation of the object, showing the owner.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getParent(),96,100,"/**
 * Gets the parent structure node. Returns null if parent is absent.
 */","* Returns the parent in the structure hierarchy (P).
     * 
     * @return the parent in the structure hierarchy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObject(org.apache.pdfbox.cos.COSBase),364,390,"/**
* Creates an object from a COSBase, returns null if creation fails.
*/","* Creates an object for a kid of this structure node.
     * The type of object depends on the type of the kid. It can be
     * <ul>
     * <li>a {@link PDStructureElement},</li>
     * <li>a {@link PDObjectReference},</li>
     * <li>a {@link PDMarkedContentReference},</li>
     * <li>an {@link Integer}</li>
     * </ul>
     * 
     * @param kid the kid
     * @return the object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(org.apache.pdfbox.cos.COSDictionary),93,97,"/**
 * Initializes the encryption handler with a COSDictionary.
 * @param dictionary COSDictionary containing encryption details.
 */
","* creates a new encryption dictionary from the low level dictionary provided.
     * @param dictionary a COS encryption dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSecurityHandler,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSecurityHandler(),104,112,"/**
 * Returns the security handler.
 * @throws IOException if no security handler is configured.
 */
","* Returns the security handler specified in the dictionary's Filter entry.
     * @return a security handler instance
     * @throws IOException if there is no security handler available which matches the Filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getAnnotations(),437,451,"/**
 * Retrieves a list of FDF annotations from the FDF document.
 * @return List of FDFAnnotation objects, or null if none exist.
 */
","* This will get the list of FDF Annotations. This will return a list of FDFAnnotation objects or null if the entry
     * is not set.
     *
     * @return A list of FDF annotations.
     *
     * @throws IOException If there is an error creating the annotation list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getName,org.apache.pdfbox.pdmodel.font.PDCIDFont:getName(),210,214,"/**
 * Returns the name of the font.
 * @return Font name as a String.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,isCharSetMatch,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)",666,710,"/**
 * Checks if FontInfo matches CIDSystemInfo based on registry/ordering.
 */","* Returns true if the character set described by CIDSystemInfo is present in the given font.
     * Only applies to Adobe-GB1, Adobe-CNS1, Adobe-Japan1, Adobe-Korea1, as per the PDF spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getName,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getName(),323,327,"/**
 * Returns the name of the font.
 * Delegates to the base font's name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType0Font:getName(),613,617,"/**
 * Returns the name of the font.
 * Delegates to the base font's name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toString,org.apache.pdfbox.pdmodel.font.PDType0Font:toString(),672,681,"/**
 * Returns a string representation of the font object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getName,org.apache.pdfbox.pdmodel.font.PDType1CFont:getName(),248,252,"/**
 * Returns the name of the font. Delegates to the base font.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType1Font:getName(),531,535,"/**
 * Returns the name of the font.
 * Delegates to the base font's name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:isNChannel(),437,440,"/**
 * Checks if the attributes are N-channel.
 * Returns true if attributes exist and are N-channel.
 */
","* Returns true if this color space has the NChannel subtype.
     * @return true if subtype is NChannel",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOpenAction(),284,299,"/**
 * Gets the open action. Returns PDDestination or PDAction, or null.
 */","* Get the Document Open Action for this object.
     *
     * @return The action to perform when the document is opened.
     * @throws IOException If there is an error creating the destination or action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),50,58,"/**
 * Converts a COSBase (expected COSDictionary) to a PDActionJavaScript.
 * @param base COSBase object to convert
 * @return PDActionJavaScript object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAction,org.apache.pdfbox.pdmodel.fdf.FDFField:getAction(),702,705,"/**
* Returns the action associated with the field.
* Uses PDActionFactory to create the action object.
*/
","* This will get the action that is associated with this field.
     *
     * @return The 'A' entry in the FDF field dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getDoc(),140,165,"/**
 * Extracts JavaScript actions from the document's COS array.
 * @return Map of action names to PDActionJavaScript objects.
 */","* Returns the dictionary's ""Doc"" entry, that is, a map of key value pairs to be added to the document's JavaScript
     * name tree.
     * 
     * @return Map of named ""JavaScript"" dictionaries.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:getF(),66,69,"/**
* Retrieves the 'F' action from the COSDictionary.
* Creates and returns a PDAction object.
*/
","* Get the F action.
     *
     * @return The F action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getE(),69,73,"/**
 * Retrieves the ""E"" action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */
","* This will get an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @return The E entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getX(),92,96,"/**
 * Gets the 'X' action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */
","* This will get an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @return The X entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getD(),116,120,"/**
 * Gets the ""D"" action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */
","* This will get an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @return The d entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getU(),141,145,"/**
 * Retrieves the ""U"" action from the actions dictionary.
 * Returns a PDAction object or null if no such action exists.
 */
","* This will get an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @return The U entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getFo(),165,169,"/**
 * Retrieves the ""FO"" action from the action dictionary.
 * Returns a PDAction object or null if not found.
 */
","* This will get an action to be performed when the annotation
     * receives the input focus.
     *
     * @return The Fo entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getBl(),189,193,"/**
 * Retrieves the ""BL"" action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */
","* This will get an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @return The Bl entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPO(),215,219,"/**
 * Retrieves the PO action from the actions dictionary.
 * Returns the action or null if not found.
 */","* This will get an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @return The PO entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPC(),241,245,"/**
 * Retrieves the PC action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */","* This will get an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @return The PC entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPV(),265,269,"/**
 * Retrieves the PV action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */","* This will get an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @return The PV entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPI(),288,292,"/**
 * Retrieves the PI action from the actions dictionary.
 * Returns the action or null if not found.
 */","* This will get an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @return The PI entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWC(),70,74,"/**
 * Retrieves the WC action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */","* This will get a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @return The WC entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWS(),95,99,"/**
 * Retrieves the WS action from the actions dictionary.
 * Returns the action or null if not found.
 */","* This will get a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @return The WS entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDS(),120,124,"/**
 * Retrieves the DS action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */","* This will get a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @return The DS entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWP(),145,149,"/**
 * Retrieves the WP action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */","* This will get a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @return The WP entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDP(),170,174,"/**
 * Retrieves the DP action from the actions dictionary.
 * Returns the action or null if not found.
 */","* This will get a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @return The DP entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getK(),71,75,"/**
 * Gets the ""K"" action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */","* This will get a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @return The K entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getF(),97,101,"/**
 * Retrieves the ""F"" action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */","* This will get a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @return The F entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getV(),123,127,"/**
 * Retrieves the ""V"" action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */
","* This will get a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @return The V entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getC(),151,155,"/**
* Retrieves the 'C' action from the actions dictionary.
* Returns a PDAction object or null if not found.
*/
","* This will get a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @return The C entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getO(),71,75,"/**
 * Retrieves the action associated with the ""O"" key.
 * Returns a PDAction object or null if not found.
 */
","* This will get an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @return The O entry of page object's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getC(),97,101,"/**
 * Retrieves the ""C"" action from the actions dictionary.
 * Returns a PDAction object or null if not found.
 */
","* This will get an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @return The C entry of page object's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getAction(),92,96,"/**
 * Creates and returns a PDAction object from the COS dictionary.
 * Returns null if the dictionary is null.
 */
","* Get the action to be performed when this annotation is to be activated. Either this or the
     * destination entry should be set, but not both.
     *
     * @return The action to be performed when this annotation is activated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAction(),142,146,"/**
 * Creates and returns a PDAction object from the COS dictionary.
 * Returns null if the dictionary is null.
 */
","* Get the action to be performed when this annotation is to be activated.
     *
     * @return The action to be performed when this annotation is activated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getAction(),281,284,"/**
* Returns the action associated with this PDF object.
*/","* Get the action of this node.
     *
     * @return The action of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldType(),87,96,"/**
 * Gets the field type. Returns null if not found, inherits from parent.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getPropertyStringValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getPropertyStringValue(java.lang.String),80,83,"/**
 * Retrieves a string value associated with the given property key.
 * @param propertyKey Key for the property string value.
 * @return String value or null if key doesn't exist.
 */
","* Return the properties String value.
     * <p>
     * Allows to retrieve the
     * low level date for validation purposes.
     * </p> 
     * 
     * @param propertyKey the dictionaries key
     * @return the properties value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCustomMetadataValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCustomMetadataValue(java.lang.String),280,283,"/**
 * Retrieves the value of a custom metadata field.
 * @param fieldName Name of the metadata field to retrieve.
 * @return The value of the specified field, or null if not found.
 */
","*  This will get the value of a custom metadata information field for the document.
     *  This will return null if one is not found.
     *
     * @param fieldName Name of custom metadata field from pdf document.
     *
     * @return String Value of metadata field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getString(java.lang.String),78,81,"/**
 * Retrieves a string value by name from the COS object.
 * @param name The name of the string to retrieve.
 * @return The string value, or null if not found.
 */
","* Gets a string attribute value.
     * 
     * @param name the attribute name
     * @return the string attribute value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,getBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:getBase(),70,73,"/**
 * Retrieves the ""Base"" string value from the COS object.
 */","* This will get the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @return The URI entry of the specific URI dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getVersion(),131,134,"/**
 * Retrieves the version string from the configuration dictionary.
 */","* A text string indicating the version of the application implementation, as described by the
     * <code>/Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     *
     * @return the application implementation version",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getUnits(),109,112,"/**
 * Retrieves the ""U"" string value from the COS object.
 */","* This will return the label for the units.
     * 
     * @return the label for the units",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String,java.lang.String)",735,738,"/**
* Retrieves a string value by key, returns defaultValue if not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",780,784,"/**
 * Gets string value from COS dictionary, or default if not found.
 * @param embedded COS name of dictionary
 * @param key COS name of key
 * @param defaultValue Default value if key is not present
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getOperation(),122,125,"/**
* Returns the operation name, defaulting to OPERATION_OPEN.
*/","* Get the operation to perform on the file.  This method will not return null,
     * OPERATION_OPEN is the default.
     *
     * @return The operation to perform for the file.
     * @see PDWindowsLaunchParams#OPERATION_OPEN
     * @see PDWindowsLaunchParams#OPERATION_PRINT",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultAppearance(),500,503,"/**
 * Returns the default appearance string from the dictionary.
 * Returns an empty string if not found.
 */
","* Get the default appearance.
     * 
     * @return the DA element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFilename,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFilename(),101,121,"/**
 * Retrieves the filename, trying multiple sources if needed.
 */","* <p>Preferred method for getting the filename.
     * It will determinate the recommended file name.</p>
     * <p>First of all we try to get the unicode filename if it exist.
     * If it doesn't exist we take a look at the DOS, MAC UNIX filenames.
     * If no one exist the required F entry will be returned.</p>
     *
     * @return The preferred file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFTextStripper:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",862,874,"/**
 * Starts a marked content sequence with tag and properties.
 * Pushes marked content onto stack, handles actual text.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFTextStripper:endMarkedContentSequence(),876,889,"/**
 * Ends the current marked content sequence, removing it from the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,probablyBarcodeFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),646,660,"/**
 * Checks if a font is likely a barcode font based on name.
 * @param fontDescriptor Font descriptor object to check.
 * @return True if font name suggests a barcode font.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,toString,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:toString(),146,150,"/**
 * Returns a string representation of the object, including its name.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,hasGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:hasGroup(java.lang.String),258,269,"/**
 * Checks if a group with the given name exists.
 * @param groupName The name of the group to check.
 * @return True if the group exists, false otherwise.
 */
","* Indicates whether a particular optional content group is found in the PDF file.
     * @param groupName the group name
     * @return true if the group exists, false otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getFullyQualifiedName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getFullyQualifiedName(),406,422,"/**
 * Returns the fully qualified name, combining parent and partial names.
 */","* Returns the fully qualified name of the field, which is a concatenation of the names of all the parents fields.
     * 
     * @return the name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsExportValues(),209,212,"/**
 * Returns a list of exportable option values.
 * Delegates to the getOptions() method.
 */
","* This will get the export values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the export value is the 
     * first entry in the two-element array.
     * </p>
     *
     * @return List containing all export values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValueAsString(),223,227,"/**
 * Returns the value as a String. Delegates to getValue().
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueAsString(),465,469,"/**
 * Returns the value as a string representation of an array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRow,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRow(),307,372,"/**
 * Decodes a row based on the compression type.
 * Throws IllegalArgumentException for unsupported types.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRow,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRow(),99,127,"/**
 * Encodes a row of data, swaps buffers, and handles row termination.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",608,617,"/**
 * Checks if the user password matches the owner's password.
 * @param ownerPassword Owner's password hash.
 * @return True if passwords match, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
 * Creates a TensorPatch instance using the provided points and color.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,parse,"org.apache.pdfbox.pdmodel.common.function.type4.Parser:parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",45,48,"/**
 * Tokenizes the input string using the provided handler.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptData,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)",216,238,"/**
 * Encrypts or decrypts data using RC4 or AES based on parameters.
 * @param decrypt True for decryption, false for encryption
 */","* Encrypt or decrypt a set of data.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKey,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)",722,735,"/**
* Computes an encrypted key based on revision and input parameters.
* @param password Password used for encryption.
*/","* Compute the encryption key.
     *
     * @param password The password to compute the encrypted key.
     * @param o The O entry of the encryption dictionary.
     * @param u The U entry of the encryption dictionary.
     * @param oe The OE entry of the encryption dictionary.
     * @param ue The UE entry of the encryption dictionary.
     * @param permissions The permissions for the document.
     * @param id The document id.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     * @param isOwnerPassword whether the password given is the owner password (for revision 6)
     *
     * @return The encrypted key bytes.
     *
     * @throws IOException If there is an error with encryption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",1002,1019,"/**
 * Checks user password based on encryption revision.
 * @param password Password to verify.
 * @return True if password matches, false otherwise.
 * @throws IOException if revision is unknown.
 */
","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata.
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",399,464,"/**
* Finds a FontBoxFont by format and PostScript name, trying variations.
* @param format Font format (e.g., embedded, subset)
* @param postScriptName PostScript font name to search for
* @return FontBoxFont object or null if not found
*/
","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
 * Creates a Coons patch from the given points and color data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalize,org.apache.pdfbox.text.PDFTextStripper:normalize(java.util.List),1879,1893,"/**
 * Normalizes line items and returns a list of WordWithTextPositions.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(org.apache.pdfbox.cos.COSString),701,708,"/**
 * Converts a COSString to a Calendar object.
 * @param text COSString to convert; returns null if null.
 */
","* Returns the Calendar for a given COS string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     * 
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable for appearance content.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),37,37,"/**
* Extends AbstractContentStream, implements Closeable for content stream writing.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",36,36,"/**
 * Extends PDAbstractContentStream, implementing Closeable interface.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",26,26,"/**
 * Abstract class for content streams in PDF, extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),26,26,"/**
 * Extends PDAbstractContentStream for PDF form content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),37,37,"/**
* Stream for writing content to a PDF page. Implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.cos.COSBase),160,222,"/**
* Writes a COSBase object to the output stream in PDF format.
* Handles various COS types and writes them recursively.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSString,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSString(java.io.OutputStream,org.apache.pdfbox.cos.COSString)",258,262,"/**
* Writes a COS string to the output stream, followed by a space.
* @param output The output stream to write to.
* @param cosString The COS string to write.
*/
","* Write the given {@link COSString} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosString The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextInternal,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextInternal(java.lang.String),276,325,"/**
 * Writes text to the output stream, using the current font.
 * @param text The text to write.
 * @throws IOException if an I/O error occurs.
 */
","* Outputs a string using the correct encoding and subsetting as required.
     *
     * @param text The Unicode text to show.
     * 
     * @throws IOException If an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,<init>,org.apache.pdfbox.rendering.PageDrawer:<init>(org.apache.pdfbox.rendering.PageDrawerParameters),190,199,"/**
 * Constructs a PageDrawer with provided parameters.
 * @param parameters PageDrawerParameters object containing settings
 */
","* Constructor.
     *
     * @param parameters Parameters for page drawing.
     * @throws IOException If there is an error loading properties from the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(),794,797,"/**
 * Returns the color using the default color type (C).
 * @return The color object.
 */
","* This will retrieve the color used in drawing various elements. As of PDF 1.6 these are :
     * <ul>
     * <li>Background of icon when closed</li>
     * <li>Title bar of popup window</li>
     * <li>Border of a link annotation</li>
     * </ul>
     *
     * @return Color object representing the colour
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBorderColour(),86,89,"/**
* Returns the border color of the PDF form field.
* Uses getColor(COSName.BC) to retrieve the color.
*/
","* This will retrieve the border color.
     * 
     * @return the border color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBackground(),106,109,"/**
* Returns the background color.
* Uses getColor(COSName.BG) to retrieve the color.
*/
","* This will retrieve the background color.
     * 
     * @return the background color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setHighValue,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setHighValue(int),322,325,"/**
 * Sets the value at index 2 of the array to the given high value.
 */","* Sets the highest value that is allowed. This cannot be higher than 255.
     * @param high the highest value for the lookup table",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPageNumber(int),166,169,"/**
* Sets the page number at index 0 in the array.
* @param pageNumber The page number to set.
*/
","* Set the page number for a remote destination. For an internal destination, call 
     * {@link #setPage(PDPage) setPage(PDPage page)}.
     *
     * @param pageNumber The page for a remote destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSNumber,org.apache.pdfbox.pdfparser.BaseParser:parseCOSNumber(),1018,1043,"/**
 * Parses a COSNumber from the input stream.
 * @return A COSNumber object parsed from the stream.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSString(),528,679,"/**
 * Parses a COS string, handling escaped characters and nesting.
 * @return COSString object representing the parsed string
 * @throws IOException if parsing fails
 */","* This will parse a PDF string.
     *
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(java.io.InputStream),337,344,"/**
 * Extracts content from an InputStream based on byte range.
 * @param pdfFile Input stream containing PDF data.
 * @return Byte array of extracted content.
 */
","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(byte[]),354,361,"/**
 * Extracts a byte range from a PDF file and returns its contents.
 * @param pdfFile The PDF file as a byte array.
 * @return Extracted byte array.
 */
","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:<init>(float,float)",31,34,"/**
 * Creates a new immutable rectangle with specified width and height.
 */","* Constructor for immutable rectangle.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getBBox,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getBBox(),153,156,"/**
 * Returns the bounding box rectangle.
 * Returns the rectangle object.
 */
","* Returns the <code>BBox</code> entry (bounding box) for the
     * appearance stream form XObject.
     *
     * @return Bounding box for appearance stream form XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument),43,48,"/**
 * Constructs a Metadata object for the given document.
 * Sets the type and subtype COS names.
 */
","* This will create a new PDMetadata object with the /Type and /Subtype entries for a document
     * level metadata object.
     *
     * @param document The document that the stream will be part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument),40,44,"/**
 * Creates a PDEmbeddedFile object associated with a PDDocument.
 * Sets the type to EMBEDDED_FILE in the COS object.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",125,130,"/**
 * Constructs a PDXObject with a document and subtype.
 * @param document The document this object belongs to.
 * @param subtype The subtype of the XObject.
 */
","* Creates a new XObject of the given subtype for writing.
     * @param document The document in which to create the XObject.
     * @param subtype The subtype of the new XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,102,"/**
 * Creates a PDImageXObject with a new PDStream.
 * @param document The document this image belongs to.
 */
","* Creates an Image XObject in the given document. This constructor is for internal PDFBox use
     * and is not for PDF generation. Users who want to create images should look at {@link #createFromFileByExtension(File, PDDocument)
     * }.
     *
     * @param document the current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormStream(org.apache.pdfbox.pdmodel.PDDocument),205,211,"/**
 * Creates a holder form stream within the given PDF document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormStream(org.apache.pdfbox.pdmodel.PDDocument),251,258,"/**
 * Creates an inner form stream within a PDF document.
 * Sets the stream in the pdfStructure.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormStream(org.apache.pdfbox.pdmodel.PDDocument),290,296,"/**
 * Creates an image form stream within the given PDF document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",94,97,"/**
 * Constructs a PDStream with a document and input stream.
 * @param doc The parent document.
 * @param input The input stream for the stream data.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document. This
     * method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",108,111,"/**
 * Constructs a PDStream with a COSBase filter.
 * @param doc The document.
 * @param input The input stream.
 * @param filter The filter for the stream.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filter applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filter Filter to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)",122,125,"/**
 * Constructs a PDStream with filters cast to COSArray.
 * @param doc The parent document.
 * @param input Input stream for the stream data.
 * @param filters Filters applied to the stream.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filters Filters to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",118,130,"/**
 * Creates a PDImageXObject from an image stream.
 * @param document PDDocument, stream, filter, width, height, bits, colorSpace
 */
","* Creates an Image XObject in the given document using the given filtered stream. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param document the current document
     * @param encodedStream an encoded stream of image data
     * @param cosFilter the filter or a COSArray of filters
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @throws IOException if there is an error creating the XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,close,org.apache.pdfbox.cos.COSOutputStream:close(),104,153,"/**
 * Closes the buffer and releases resources. Applies filters in reverse order.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(),355,358,"/**
 * Constructs a PDLayoutAttributeObject, setting its owner to OWNER_LAYOUT.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(),78,81,"/**
 * Initializes the PDListAttributeObject with the OWNER_LIST owner.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(),71,74,"/**
 * Constructs a PDPrintFieldAttributeObject, setting the owner.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(),57,60,"/**
 * Initializes the PDTableAttributeObject, setting its owner to OWNER_TABLE.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:create(org.apache.pdfbox.cos.COSDictionary),63,93,"/**
 * Creates a PDAttributeObject based on the provided COSDictionary.
 * @param dictionary The COSDictionary to create the object from.
 * @return A PDAttributeObject subclass or PDDefaultAttributeObject.
 */
","* Creates an attribute object.
     * 
     * @param dictionary the dictionary
     * @return the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isValidAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),297,313,"/**
 * Checks if an appearance stream is valid.
 * @param appearance The appearance entry to validate.
 * @return True if the stream is valid, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getNormalAppearanceStream(),366,390,"/**
* Retrieves the normal appearance stream from the appearance dictionary.
* Returns null if no normal appearance is defined.
*/
","* Returns the appearance stream for this annotation, if any. The annotation state is taken into account, if
     * present.
     * 
     * @return the appearance stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValueForWidget,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),351,370,"/**
 * Gets the ""on"" value for a widget's appearance dictionary.
 * Returns the name if found, """" otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:getOnValue(),100,121,"/**
 * Gets the 'On' value from the annotation widget's appearance.
 * Returns """" if no 'On' value is found.
 */
","* Get the value which sets the check box to the On state.
     * 
     * <p>The On value should be 'Yes' but other values are possible
     * so we need to look for that. On the other hand the Off value shall
     * always be 'Off'. If not set or not part of the normal appearance keys
     * 'Off' is the default</p>
     *
     * @return the value setting the check box to the On state. 
     *          If an empty string is returned there is no appearance definition.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getGroup,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getGroup(),149,165,"/**
 * Returns the transparency group, or creates it if null.
 * @return PDTransparencyGroup object, or null if not present.
 */
","* Returns the G entry of the soft mask object
     * 
     * @return form containing the transparency group
     * @throws IOException if the group could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,scanFonts,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:scanFonts(java.util.List),369,386,"/**
* Processes font files (ttf, otf, ttc, otc, pfb) and adds them.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,findNamedDestinationPage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),348,372,"/**
* Finds a named destination page.
* @param namedDest Named destination object to search for.
* @return PDPageDestination object or null if not found.
*/
","* Find the page destination from a named destination.
     * @param namedDest the named destination.
     * @return a PDPageDestination object or null if not found.
     * @throws IOException if there is an error creating the PDPageDestination object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead),150,153,"/**
 * Constructs a COSParser with a RandomAccessRead source.
 * @param source Input stream for parsing COS data.
 */
","* Default constructor.
     *
     * @param source input representing the pdf.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",74,78,"/**
 * Constructs a PDF parser with a key store and alias.
 * @param source Input stream for PDF data.
 * @param decryptionPassword Password for decryption.
 * @param keyStore Key store for encryption.
 * @param alias Key alias.
 */
","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security 
     * @param alias alias to be used for decryption when using public key security
     *
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),45,48,"/**
 * Constructs a PDAppearanceContentStream from an appearance stream.
 */","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to write to.
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDFormContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),35,38,"/**
 * Creates a PDFormContentStream from a PDFormXObject.
 * @param form The form XObject to create the stream from.
 */
","* Create a new form XObject content stream.
     *
     * @param form The form XObject stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",209,212,"/**
* Creates a PDPageContentStream with a provided appearance stream.
* @param doc The document.
* @param appearance The appearance stream.
*/
","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the page is part of.
     * @param appearance The appearance stream to write to.
     * @throws IOException If there is an error writing to the page contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDPatternContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),35,38,"/**
 * Constructs a PDPatternContentStream from a PDTilingPattern.
 * @param pattern The tiling pattern to use.
 */
","* Create a new tiling pattern content stream.
     *
     * @param pattern The tiling pattern stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectAppearanceStreams,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",354,374,"/**
 * Injects appearance streams into PDF streams for form elements.
 * @param holderFormStream Stream for the holder form
 * @param innerFormStream Stream for the inner form
 * @param imageFormStream Stream for the image form
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:transform(org.apache.pdfbox.util.Matrix),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,transform,org.apache.pdfbox.pdmodel.PDFormContentStream:transform(org.apache.pdfbox.util.Matrix),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPageContentStream:transform(org.apache.pdfbox.util.Matrix),37,37,"/**
* Implements a content stream for writing to a PDF page.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPatternContentStream:transform(org.apache.pdfbox.util.Matrix),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,curveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:curveTo(double,double,double,double,double,double)",1067,1074,"/**
 * Draws a cubic Bezier curve to the output.
 * @param ax,ay control point 1, bx,by control point 2, cx,cy end point
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",357,368,"/**
* Draws an arrow on the content stream.
* @param cs Content stream to draw on.
* @param x x-coordinate of the arrow's base.
* @param y y-coordinate of the arrow's base.
* @param len Length of the arrow.
*/
","* Add the two arms of a horizontal arrow.
     * 
     * @param cs Content stream
     * @param x
     * @param y
     * @param len The arm length. Positive goes to the right, negative goes to the left.
     * 
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawShape,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawShape(float,boolean,boolean)",262,288,"/**
 * Draws a shape based on line width, stroke, and fill flags.
 */","* Draw a shape.
     *
     * <p>
     * Dependent on the lineWidth and whether or not there is a background to be generated there are
     * different commands to be used for draw a shape.
     *
     * @param lineWidth the line width of the path.
     * @param hasStroke shall there be a stroking color.
     * @param hasFill shall there be a fill color.
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,finish,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:finish(),1076,1091,"/**
 * Closes the output and adjusts bounding box based on line width.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawDiamond,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",380,387,"/**
 * Draws a diamond shape on the content stream.
 * @param cs Content stream to draw on.
 * @param x X-coordinate of the diamond's center.
 * @param y Y-coordinate of the diamond's center.
 * @param r Radius of the diamond.
 */
","* Add a square diamond shape (corner on top) to the path.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius (to a corner)
     * 
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",399,409,"/**
 * Draws a circle on the content stream at (x, y) with radius r.
 */","* Add a circle shape to the path in clockwise direction.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     * 
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle2,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",422,432,"/**
 * Draws a circle on the PDF content stream.
 * @param cs Content stream to draw on.
 * @param x Circle's x coordinate.
 * @param y Circle's y coordinate.
 * @param r Circle's radius.
 */
","* Add a circle shape to the path in counterclockwise direction. You'll need this e.g. when
     * drawing a doughnut shape. See ""Nonzero Winding Number Rule"" for more information.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     *
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPaperclip,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPaperclip(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),100,130,"/**
 * Draws a paperclip shape using the provided content stream.
 */
","* Draw a paperclip. Shape is from
     * <a href=""https://raw.githubusercontent.com/Iconscout/unicons/master/svg/line/paperclip.svg"">Iconscout</a>
     * (Apache licensed).
     *
     * @param contentStream
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,addPath,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)",617,667,"/**
 * Adds a GeneralPath to the PDF content stream.
 * @param contentStream PDF content stream to add path to.
 * @param path GeneralPath to add.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineWidthOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidthOnDemand(float),239,248,"/**
 * Sets line width, avoiding redundant commands for default (1).
 * @param lineWidth The desired line width.
 * @throws IOException if an I/O error occurs.
 */
","* Sets the line width. The command is only emitted if the lineWidth is
     * different to 1.
     * 
     * @param lineWidth the line width of the path.
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setLineWidth(float)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,beginOutput,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:beginOutput(double,double)",1010,1019,"/**
 * Initializes output boundaries and sets line join style.
 * @param x Initial min/max X coordinate.
 * @param y Initial min/max Y coordinate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:toString(),1477,1684,"/**
 * Returns a string representation of the object.
 * Includes specified properties in the string.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:generateBoundingBox(),215,237,"/**
 * Generates a bounding box for the font, using various sources.
 * Returns a default bounding box if none are available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:generateBoundingBox(),206,222,"/**
 * Generates a bounding box for the font, using font descriptor or ttf.
 * @return BoundingBox object.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:generateBoundingBox(),339,350,"/**
 * Generates a bounding box for the font.
 * Uses font descriptor or falls back to ttf's bbox.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:generateBoundingBox(),264,275,"/**
 * Generates a bounding box for the font, using descriptor or generic bbox.
 * @return BoundingBox object representing the font's bounding box.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:generateBoundingBox(),547,558,"/**
 * Generates a bounding box for the font, using descriptor or generic.
 * @return BoundingBox object representing the font's bounding box.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType3Font:getHeight(int),206,240,"/**
 * Gets the height of a font glyph based on its descriptor.
 * @param code glyph code
 * @return Font height or 0 if descriptor is null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getBBox(),101,105,"/**
* Returns the font's bounding box.
* Delegates to the underlying font object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getImage,"org.apache.pdfbox.rendering.TilingPaint:getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",127,179,"/**
 * Creates a BufferedImage from a tiling pattern.
 * @param drawer Drawer for rendering.
 * @return BufferedImage containing the rendered pattern.
 */
",* Returns the pattern image in parent stream coordinates.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getAnchorRect,org.apache.pdfbox.rendering.TilingPaint:getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),201,246,"/**
 * Calculates the anchor rectangle for a tiling pattern.
 * @param pattern The tiling pattern to process.
 * @return Rectangle2D representing the anchor rectangle.
 */
","* Returns the anchor rectangle, which includes the XStep/YStep and scaling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRectangle(),101,104,"/**
 * Retrieves the rectangle from the annotation.
 * @return The rectangle object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,resolveTransformationMatrix,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:resolveTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",733,744,"/**
 * Calculates a transformation matrix based on annotation and appearance stream.
 * @param annotation Annotation object.
 * @param appearanceStream Appearance stream object.
 * @return Transformation matrix.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",48,84,"/**
 * Sets the line dash pattern using an array and phase.
 * @param arguments List of arguments, must contain COSArray and COSNumber.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getStencilImage(java.awt.Paint),562,570,"/**
 * Gets the stencil image for the image with the given paint.
 * @param paint The paint to use for the stencil.
 * @return The stencil image.
 */
","* {@inheritDoc}
     * The returned images are not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRawRaster(org.apache.pdfbox.pdmodel.graphics.image.PDImage),226,261,"/**
* Retrieves the raw raster data from a PDF image.
* @param pdImage PDF image object
* @return WritableRaster containing image data
* @throws IOException if image is empty or invalid.
*/
","* Extract the raw unconverted raster of the given image
     * @param pdImage  The image to get the raw raster data from
     * @return the raw raster of this image
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",170,218,"/**
 * Creates a BufferedImage from a PDImage, region, subsampling, and color key.
 * @param pdImage The PDF image.
 * @param region The region to extract.
 * @return A BufferedImage or throws IOException.
 */
","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param region The region of the source image to get, or null if the entire image is needed.
     *               The actual region will be clipped to the dimensions of the source image.
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value
     * of 1 meaning every pixel will be read. It must not be larger than the image width or height.
     * @param colorKey an optional color key mask
     * @return content of this image as an (A)RGB buffered image
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getMatrix,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getMatrix(),154,158,"/**
 * Returns the font matrix.
 * @return The font matrix object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getResources,org.apache.pdfbox.pdmodel.PDPage:getResources(),326,340,"/**
 * Retrieves the resources associated with the page.
 * Returns PDResources object, caches if available.
 */",* A dictionary containing any resources required by the page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMediaBox,org.apache.pdfbox.pdmodel.PDPage:getMediaBox(),400,416,"/**
 * Returns the media box rectangle, or U.S. Letter if not found.
 * @return PDRectangle representing the media box.
 */
","* A rectangle, expressed in default user space units, defining the boundaries of the physical medium on which the
     * page is intended to be displayed or printed.
     * 
     * @return the media box of the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getRotation,org.apache.pdfbox.pdmodel.PDPage:getRotation(),583,595,"/**
 * Gets the page rotation angle. Returns 0 if no rotation is set.
 */","* Returns the rotation angle in degrees by which the page should be rotated
     * clockwise when displayed or printed. Valid values in a PDF must be a
     * multiple of 90.
     *
     * @return The rotation angle in degrees in normalized form (0, 90, 180 or
     * 270) or 0 if invalid or not set at this level.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(java.lang.String,boolean)",881,884,"/**
* Gets a boolean value by key, using default if not found.
* @param key The key to retrieve the boolean value for.
* @param defaultValue The default boolean value if key is absent.
* @return The boolean value associated with the key.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a cos boolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The value converted to a boolean.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,isVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:isVolatile(),215,218,"/**
* Checks if the file system object is volatile.
* Returns true if volatile, false otherwise.
*/
","* Get if the file is volatile.  Default: false
     *
     * @return True if the file is volatile attribute is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isHidden(),127,130,"/**
 * Checks if the object is hidden.
 * Returns true if hidden, false otherwise.
 */
","* Shall the property be hidden?
     * 
     * @return <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDEncryption:isEncryptMetaData(),417,421,"/**
 * Checks if metadata encryption is enabled.
 * Returns true by default based on standard.
 */
","* Will get the EncryptMetaData dictionary info.
     * 
     * @return true if EncryptMetaData is explicitly set to false (the default is true)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaption(),296,299,"/**
 * Returns the caption as a boolean value. Defaults to false.
 */","* This will retrieve if the contents are shown as a caption or not.
     *
     * @return boolean if the content is shown as a caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,shouldScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:shouldScaleToFitAnnotation(),184,187,"/**
 * Checks if the annotation should scale to fit.
 * @return True if scaling is enabled, false otherwise.
 */
","* This will tell if the icon should scale to fit the annotation bounds. Default: false
     *
     * @return A flag telling if the icon should scale.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,shouldRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:shouldRename(),122,125,"/**
* Checks if the template should be renamed.
* Returns true if the ""RENAME"" property is true, otherwise false.
*/
","* A flag telling if the fields imported from the template may be renamed if there are conflicts.
     *
     * @return A flag telling if the fields can be renamed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isIsolated,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isIsolated(),94,97,"/**
 * Checks if the COS object is isolated.
 * Returns true if isolated, false otherwise.
 */","* Returns true if this group is isolated. Isolated groups begin with the fully transparent image, non-isolated
     * begin with the current backdrop.
     * 
     * @return true if this group is isolated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isKnockout,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isKnockout(),105,108,"/**
* Checks if the COS object represents a knockout.
* Returns true if K flag is set, false otherwise.
*/
","* Returns true if this group is a knockout. A knockout group blends with original backdrop, a non-knockout group
     * blends with the current backdrop.
     * 
     * @return true if this group is a knockout",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getAntiAlias(),228,231,"/**
 * Returns whether anti-aliasing is enabled.
 * Returns true if enabled, false otherwise.
 */
","* This will return the AntiAlias value.
     *
     * @return the AntiAlias value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingOverprintControl(),362,365,"/**
* Returns the overprint control value from the dictionary.
*/
","* This will get the overprint control.
     *
     * @return The overprint control or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAutomaticStrokeAdjustment(),498,501,"/**
 * Returns true if automatic stroke adjustment is enabled.
 */","* This will get the automatic stroke adjustment flag.
     *
     * @return The automatic stroke adjustment flag or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAlphaSourceFlag(),560,563,"/**
* Checks if the alpha source flag is enabled.
* Returns true if enabled, false otherwise.
*/
","* This will get the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @return The alpha source flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTextKnockoutFlag(),615,618,"/**
 * Returns the text knockout flag from the dictionary.
 * Defaults to true if the flag is not present.
 */
","/**
     * This will get the text knockout flag.
     *
     * @return The text knockout flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getH(),79,82,"/**
* Returns the value of the 'H' flag as a boolean.
* Defaults to true if 'H' is not present.
*/
","* A flag indicating whether to hide the annotation or show it
     *
     * @return true if annotation is hidden",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSynchronous(),123,126,"/**
* Returns whether the action is synchronous.
* Uses COSName.SYNCHRONOUS, defaults to false.
*/
","* Gets the synchronous flag. It specifyes whether to play the sound synchronously or
     * asynchronously. When true, the reader allows no further user interaction other than canceling
     * the sound until the sound has been completely played.
     *
     * @return Whether to play the sound synchronously (true) or asynchronously (false, also the
     * default).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getRepeat(),143,146,"/**
* Returns the repeat flag from the action object.
* Returns false if the flag is not set.
*/
","* Gets whether to repeat the sound indefinitely.
     *
     * @return Whether to repeat the sound indefinitely (default: false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getMix(),168,171,"/**
 * Returns the mix value from the action object.
 * @return True if mix is enabled, false otherwise.
 */
","* Gets the flag specifying whether to mix this sound with any other sound already playing. If
     * this flag is false, any previously playing sound shall be stopped before starting this sound;
     * this can be used to stop a repeating sound (see Repeat).
     *
     * @return whether to mix this sound with any other sound already playing (default: false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,hasCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:hasCaption(),262,265,"/**
 * Checks if the COS object has a caption.
 * Returns true if present, false otherwise.
 */","* This will retrieve whether the text specified by the /Contents or /RC entries shall be
     * shown as a caption in the appearance of the line.
     *
     * @return boolean if the contents shall be shown as a caption (default: false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getOpen(),156,159,"/**
* Returns the 'Open' flag from the COS object, defaulting to false.
*/","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getPreRelease(),190,193,"/**
 * Checks if the document is a pre-release version.
 * Returns true if pre-release, false otherwise.
 */
","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @return true if the software module or signature handler was a pre release.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getNonEFontNoWarn(),262,265,"/**
 * Checks if non-e-font warnings are disabled.
 * Returns true if disabled, false otherwise.
 */
","* If there is a LegalPDF dictionary in the catalog
     * of the PDF file and the NonEmbeddedFonts attribute in this dictionary
     * has a non zero value, and the viewing application has a preference
     * set to suppress the display of this warning then the value of this
     * attribute will be set to true.
     *
     * @return true if NonEFontNoWarn is set to true
     * @see #setNonEFontNoWarn(boolean)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getTrustedMode(),295,298,"/**
* Checks if trusted mode is enabled.
* Returns true if enabled, false otherwise.
*/
","* If true, the application was in trusted mode when signing took place.
     *
     * @return true if the application was in trusted mode while signing.
     *              default: false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getNeedAppearances(),521,524,"/**
* Returns whether appearances are needed, defaulting to false.
*/","* True if the viewing application should construct the appearances of all field widgets.
     * The default value is false.
     * 
     * @return the value of NeedAppearances, false if the value isn't set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,isFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:isFlyAreaOpaque(),182,185,"/**
* Checks if the fly area is opaque.
* Returns true if opaque, false otherwise.
*/
","* @return true if the area that shall be flown in is rectangular and opaque. Default is false. Only for
     * {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideToolbar(),167,170,"/**
 * Checks if the toolbar should be hidden based on preferences.
 * @return True if toolbar is hidden, false otherwise.
 */
","* Get the toolbar preference.
     *
     * @return the toolbar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideMenubar(),187,190,"/**
 * Checks if the menubar should be hidden based on preferences.
 * @return True if menubar is hidden, false otherwise.
 */
","* Get the menubar preference.
     *
     * @return the menubar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideWindowUI(),207,210,"/**
 * Checks if window UI should be hidden based on preferences.
 * @return True if hidden, false otherwise.
 */
","* Get the window UI preference.
     *
     * @return the window UI preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,fitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:fitWindow(),227,230,"/**
 * Checks if window fitting is enabled based on preferences.
 * @return True if fit window is enabled, false otherwise.
 */
","* Get the fit window preference.
     *
     * @return the fit window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,centerWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:centerWindow(),247,250,"/**
 * Checks if the window should be centered.
 * @return True if centered, false otherwise.
 */
","* Get the center window preference.
     *
     * @return the center window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,displayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:displayDocTitle(),267,270,"/**
 * Checks if document title display is enabled in preferences.
 * @return True if enabled, false otherwise.
 */
","* Get the display doc title preference.
     *
     * @return the display doc title preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getBitsPerComponent(),111,122,"/**
* Returns the bits per component. 1 if stencil, otherwise from params.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getStencilImage(java.awt.Paint),371,379,"/**
 * Gets the stencil image for the given paint.
 * @param paint The paint used for the stencil.
 * @return The stencil image.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",943,947,"/**
 * Gets an integer from an embedded dictionary, returns default if null.
 * @param embeddedDictionary The dictionary containing the embedded dictionary.
 * @param key The key for the integer value.
 * @param defaultValue The default value if the key is not found.
 */
","* Get an integer from an embedded dictionary. Useful for 1-1 mappings.
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     * @param defaultValue The value if there is no embedded dictionary or it does not contain the key.
     *
     * @return The value of the embedded integer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String),956,959,"/**
* Gets an integer value associated with the given key.
* @param key The key to retrieve the integer value for.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName),968,971,"/**
* Gets an integer value associated with the given COS name.
* @param key The COS name to look up.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value..",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String,int)",981,984,"/**
* Gets an integer value associated with the given key.
* @param key The key to retrieve the integer value for.
* @param defaultValue Returns defaultValue if key not found.
*/
","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFlag,"org.apache.pdfbox.cos.COSDictionary:getFlag(org.apache.pdfbox.cos.COSName,int)",1153,1157,"/**
 * Checks if a bit is set in the integer value of a COS field.
 * @param field COS field to check. @param bitFlag Bit flag to check for.
 */
","* Gets the boolean value from the flags at the given bit position.
     *
     * @param field The COSName of the field to get the flag from.
     * @param bitFlag the bitPosition to get the value from.
     *
     * @return true if the number at bitPos is '1'",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getCount,org.apache.pdfbox.pdmodel.PDPageTree:getCount(),439,442,"/**
 * Returns the count value from the root object.
 * @return The count value, defaults to 0 if not found.
 */
","* Returns the number of leaf nodes (page objects) that are descendants of this root within the page tree.
     * 
     * @return the number of leaf nodes, 0 if not present",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStart(),133,136,"/**
 * Returns the start value from the root, defaulting to 1.
 */","* Returns the start value for page numbering in this page range.
     * 
     * @return a positive integer the start value for numbering.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getOrder,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getOrder(),123,126,"/**
 * Returns the order value from the COS object, defaults to 1.
 */","* Get the order of interpolation between samples. Valid values are 1 and 3,
     * specifying linear and cubic spline interpolation, respectively. Default
     * is 1. See p.170 in PDF spec 1.7.
     *
     * @return order of interpolation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRevisionNumber(),470,473,"/**
* Gets the revision number from the COS object.
* Returns 0 if the revision number is not found.
*/
","* Returns the revision number (R).
     * 
     * @return the revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getLength(),84,87,"/**
* Returns the length of the crypt filter dictionary.
* Returns 40 if not found.
*/
","* This will return the Length entry of the crypt filter dictionary.<br><br>
     * The length in <b>bits</b> for the crypt filter algorithm. This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getVersion(),203,206,"/**
 * Returns the version number from the dictionary.
 * Returns 0 if the version is not found.
 */
","* This will return the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.
     *
     * @return The encryption version to use.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getLength(),224,227,"/**
* Gets the length value from the dictionary.
* Returns the integer value or 40 if not found.
*/
","* This will return the Length entry of the encryption dictionary.<br><br>
     * The length in <b>bits</b> for the encryption algorithm.  This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRevision(),249,252,"/**
 * Returns the revision number from the dictionary.
 * Uses DEFAULT_VERSION if revision is not found.
 */
","* This will return the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.
     *
     * @return The encryption revision to use.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPermissions(),407,410,"/**
 * Gets the permission flags from the COS dictionary.
 * @return Integer representing the permission flags.
 */","* This will get the permissions bit mask.
     *
     * @return The permissions bit mask.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getJustification(),187,190,"/**
* Returns the justification value from the annotation.
*/","* This will get the form of quadding (justification) of the annotation text.
     * 
     * @return The quadding of the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDFont:getWidth(int),255,311,"/**
 * Gets the width of a character based on its code.
 * @param code character code to determine width
 * @return float width of the character
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFlags(),386,393,"/**
 * Returns the flags value, caching it for subsequent calls.
 */","* This will get the font flags.
     *
     * @return The font flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDSimpleFont:hasExplicitWidth(int),452,464,"/**
 * Checks if a character code has an explicit width defined.
 * @param code The character code to check.
 * @return True if width is defined, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,create,"org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:create(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",48,64,"/**
 * Creates a PDAbstractPattern based on the provided dictionary.
 * @param dictionary COSDictionary containing pattern definition
 * @param resourceCache Resource cache for pattern resources
 * @return PDAbstractPattern instance
 */
","* Create the correct PD Model pattern based on the COS base pattern.
     * @param dictionary the COS pattern dictionary
     * @param resourceCache the resource cache, may be null, useful for tiling patterns.
     * @return the newly created pattern object
     * @throws IOException If we are unable to create the PDPattern object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getPaintType(),110,113,"/**
* Returns the paint type from the COS object, defaults to 0.
*/","* This will return the paint type.
     * @return The paint type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getTilingType(),128,131,"/**
* Returns the tiling type from the COS object, defaulting to 0.
*/","* This will return the tiling type.
     * @return The tiling type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,create,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:create(org.apache.pdfbox.cos.COSDictionary),274,305,"/**
 * Creates a PDShading object based on the shading type in dict.
 * @param shadingDictionary COSDictionary containing shading info.
 * @return PDShading object or throws IOException on error.
 */
","* Create the correct PD Model shading based on the COS base shading.
     *
     * @param shadingDictionary the COS shading dictionary
     * @return the newly created shading resources object
     * @throws IOException if we are unable to create the PDShading object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerFlag(),69,72,"/**
* Gets the bits per flag from the COS object, -1 if not found.
*/","* The bits per flag of this shading. This will return -1 if one has not
     * been set.
     *
     * @return The number of bits per flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getVerticesPerRow(),65,68,"/**
* Gets the number of vertices per row from a COS object.
* Returns -1 if the value is not found.
*/
","* The vertices per row of this shading. This will return -1 if one has not
     * been set.
     *
     * @return the number of vertices per row",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerComponent(),60,68,"/**
 * Returns the bits per color component.
 * Returns -1 if not initialized.
 */
","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerCoordinate(),87,95,"/**
 * Returns the bits per coordinate, caching the value.
 * Returns -1 if not found in COS object.
 */
","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFlags(),77,80,"/**
* Returns the flags value. Returns 0 if not found.
*/","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFlags(),103,106,"/**
* Returns the flags value.
* Uses COSName.FLAGS, defaults to 0 if not found.
*/
","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getPageNumber(),149,152,"/**
* Gets the page number from the dictionary.
* Returns -1 if the page number is not found.
*/
","* If the value in the /P entry is an integer, this will get the page number (zero-based) in the
     * current document containing the file attachment annotation.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationIndex(),212,215,"/**
* Returns the annotation index from the dictionary, -1 if not found.
*/
","* If the value in the /A entry is an integer, this will get the index (zero-based) of the
     * annotation in the /Annots array of the page specified by the /P entry.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationFlags(),292,295,"/**
* Gets annotation flags from the COS object.
* Returns integer value; defaults to 0 if not present.
*/
","* This will get the flags for this field.
     * 
     * @return flags The set of flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getQ(),125,128,"/**
* Returns the value of the 'Q' integer parameter.
* Defaults to 0 if not found in COS object.
*/
","* This will get the 'quadding' or justification of the text to be displayed.
     * <br>
     * 0 - Left (default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * Please see the QUADDING_CONSTANTS in {@link PDVariableText }.
     *
     * @return The justification of the text strings.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRotation(),66,69,"/**
* Gets the rotation value from the COS object.
* Returns 0 if the value is not found.
*/
","* This will retrieve the rotation of the annotation widget. It must be a multiple of 90. Default is 0
     * 
     * @return the rotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,isTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:isTimestampRequired(),86,89,"/**
* Checks if a timestamp is required based on dictionary value.
*/","* Indicates if a timestamp is required.
     * 
     * @return true if a timestamp is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOpenCount(),224,227,"/**
* Gets the open count from a COS object, defaults to 0.
*/
","* Get the number of open nodes or a negative number if this node is closed.
     * See PDF Reference 32000-1:2008 table 152 and 153 for more details. This
     * value is updated as you append children and siblings.
     *
     * @return The Count attribute of the outline dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getTextAlign,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getTextAlign(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),648,652,"/**
* Gets the text alignment value. Uses widget's or field's Q value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getQ(),611,614,"/**
* Returns the Q value from the dictionary, defaults to 0.
*/","* This will get the document-wide default value for the quadding/justification of variable text
     * fields. 
     * <p>
     * 0 - Left(default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * See the QUADDING constants of {@link PDVariableText}.
     *
     * @return The justification of the variable text fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createChoiceSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",97,109,"/**
 * Creates a choice sub-type (PDComboBox or PDListBox) based on flags.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createButtonSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",111,130,"/**
* Creates a button subtype (radio, push, or checkbox).
* @param form PDAcroForm instance
* @param field COSDictionary representing the field
* @param parent NonTerminalField parent
* @return PDField subtype based on flags
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,getTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:getTopIndex(),59,62,"/**
 * Returns the top index from the COS object, defaults to 0.
 */","* This will get the top index ""TI"" value.
     *
     * @return the top index, default value 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldFlags(),68,73,"/**
* Gets the field flags from the COS object.
* Returns an integer representing the flags.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,process,"org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,62,"/**
 * Draws an image to the PDF graphics context.
 * Uses operator's image data; returns if data is invalid.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName),239,242,"/**
* Returns a list of COS objects of the specified type.
* @param type COSName representing the object type to retrieve.
*/
","* This will get all dictionaries objects by type.
     *
     * @param type The type of the object.
     *
     * @return This will return all objects with the specified type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int),270,274,"/**
 * Converts an integer code point to its Unicode representation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removePageResourceFromCache,org.apache.pdfbox.pdmodel.PDPage:removePageResourceFromCache(),124,132,"/**
 * Removes page resources from the cache, excluding inherited resources.
 */
","* Remove all page resources from the cache to avoid relying on the implementation of the Cache. Does make sense
     * after processing a page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName),191,194,"/**
 * Gets a color space by name.
 * @param name The name of the color space.
 * @return The color space object.
 */
","* Returns the color space resource with the given name, or null if none exists.
     * 
     * @param name Name of the color space resource.
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isAllowedCache,org.apache.pdfbox.pdmodel.PDResources:isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject),453,480,"/**
 * Checks if a PDXObject can be cached, based on its color space.
 * @param xobject The PDXObject to check.
 * @return True if caching is allowed, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFile(),225,233,"/**
 * Retrieves the embedded file from the EF dictionary.
 * @return PDEmbeddedFile object or null if not a stream.
 */
","* Get the embedded file.
     *
     * @return The embedded file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileDos(),261,269,"/**
 * Retrieves the embedded file's DOS dictionary.
 * @return PDEmbeddedFile object or null if not a stream.
 */
","* Get the embedded dos file.
     *
     * @return The embedded dos file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileMac(),276,284,"/**
 * Retrieves the embedded file (MAC) as a PDEmbeddedFile.
 * @return PDEmbeddedFile object or null if not found.
 */
","* Get the embedded Mac file.
     *
     * @return The embedded Mac file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnix(),291,299,"/**
 * Gets the embedded file from the dictionary using UNIX key.
 * @return PDEmbeddedFile object or null if not found.
 */
","* Get the embedded Unix file.
     *
     * @return The embedded file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnicode(),306,314,"/**
 * Retrieves an embedded file using the UF dictionary.
 * @return PDEmbeddedFile object or null if not a COSStream.
 */
","* Get the embedded unicode file.
     *
     * @return The embedded unicode file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,findSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",484,499,"/**
 * Finds the PDSignatureField with matching COS object.
 * @return The PDSignatureField or null if not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncoding(),95,113,"/**
* Reads the encoding from the dictionary, or uses default glyph list.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",69,129,"/**
 * Initializes an AxialShadingContext with shading data and transforms.
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",71,135,"/**
 * Creates a RadialShadingContext with specified parameters.
 * @param shading The PDShadingType3 object.
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,58,"/**
 * Creates a TriangleBasedShadingContext with given parameters.
 * @param shading The shading to use.
 * @param cm The color model.
 * @param xform The affine transform.
 * @param matrix The matrix.
 */
","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if there is an error getting the color space or doing background color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",50,82,"/**
 * Initializes Type1ShadingContext with provided parameters.
 * @param shading Type1 shading object
 * @param colorModel ColorModel
 * @param xform AffineTransform
 * @param matrix Matrix
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getDecodeForParameter(int),43,43,"/**
* Extends PDTriangleBasedShadingType for shading type 4.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getDecodeForParameter(int),41,41,"/**
 * Extends PDTriangleBasedShadingType for shading type 5.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream)",52,52,"/**
* Creates a decoded input stream with specified filters and options.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),169,173,"/**
 * Creates a COS input stream with specified decode options.
 * @param options Decode options to apply; null for defaults.
 * @return COSInputStream instance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFObjectStreamParser:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)",49,73,"/**
 * Creates a PDF object stream parser.
 * @param stream COSStream to parse, @param document COSDocument context
 */","* Constructor.
     *
     * @param stream The stream to parse.
     * @param document The document for the current parsing.
     * @throws IOException If there is an error initializing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.PDPage:getContentsForRandomAccess(),259,302,"/**
 * Creates a RandomAccessRead object for page contents.
 * Returns a buffer if content stream is malformed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType0:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",74,166,"/**
 * Initializes a PDCIDFontType0 font from a COSDictionary and parent.
 * @param fontDictionary Font dictionary.
 * @param parent Parent PDType0Font.
 */
","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * 
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",83,155,"/**
 * Creates a PDCIDFontType2 font from a dictionary and parent.
 * @param fontDictionary Font dictionary.
 * @param parent Parent font.
 * @param trueTypeFont TrueType font, or null to auto-detect.
 */","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @param trueTypeFont The true type font used to create the parent font
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,readCMap,org.apache.pdfbox.pdmodel.font.PDFont:readCMap(org.apache.pdfbox.cos.COSBase),208,228,"/**
 * Reads a CMap from a COSBase object (Name or Stream).
 * @param base COSBase object containing the CMap data.
 * @throws IOException if the base object is not a Name or Stream.
 */
","* Reads a CMap given a COS Stream or Name. May return null if a predefined CMap does not exist.
     *
     * @param base COSName or COSStream
     * @return the CMap if present
     * 
     * @throws IOException if the CMap could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontHeader,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontHeader(org.apache.pdfbox.cos.COSDictionary),324,360,"/**
 * Reads the font header from a COSDictionary.
 * @param fontDescriptor Font descriptor dictionary.
 * @return Byte array representing the font header, or null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentsForRandomAccess(),82,86,"/**
 * Returns a RandomAccessRead view of the character stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentsForRandomAccess(),163,167,"/**
 * Returns a RandomAccessRead view of the document contents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentsForRandomAccess(),182,191,"/**
 * Returns a RandomAccessRead view of the contents, if a stream.
 * @return RandomAccessRead view or null if not a stream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(java.util.List),928,928,"/**
* Creates an input stream using provided filters.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getPositionVector(int),288,298,"/**
 * Retrieves the position vector for a given code.
 * @param code The code to look up.
 * @return The position vector or default if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getWidth(int),511,515,"/**
* Gets the width of a glyph for the given character code.
* @param code The character code.
* @return The width of the glyph.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,78,"/**
 * Begins a marked content sequence using the given tag and properties.
 * @param tag The tag for the marked content sequence.
 * @param operands List of operands for the operator.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,75,"/**
 * Marks a content point in the PDF stream, requiring a tag and property dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCMD,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary),2148,2185,"/**
 * Checks if optional content is hidden based on visibility policy.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenVisibilityExpression(org.apache.pdfbox.cos.COSArray),2187,2209,"/**
 * Checks if a visibility expression is hidden.
 * @param veArray COSArray representing the visibility expression
 * @return True if hidden, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBody,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBody(org.apache.pdfbox.cos.COSDocument),426,449,"/**
 * Writes the document body, including root, info, and encrypt dicts.
 * @param doc The COSDocument to write.
 * @throws IOException if an I/O error occurs.
 */
","* This will write the body of the document.
     *
     * @param doc The document to write the body for.
     *
     * @throws IOException If there is an error writing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDictionary,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDictionary(org.apache.pdfbox.cos.COSDictionary),1186,1265,"/**
 * Visits a COSDictionary, writing its contents to the output.
 * Handles signatures, XObjects, and references.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.lang.String),189,192,"/**
 * Saves data to a file.
 * @param fileName The name of the file to save to.
 * @throws IOException If an I/O error occurs.
 */
","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,removeFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:removeFields(java.util.List),855,871,"/**
 * Removes fields from their respective COS arrays.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSBase),83,103,"/**
 * Recursively collects COSBase objects, avoiding duplicates.
 * Returns false if the base is already contained.
 */
","* Collect all updates made to the given {@link COSBase} and it's contained structures.<br>
     * This shall forward all {@link COSUpdateInfo} objects to the proper specialized collection methods.
     *
     * @param base The {@link COSBase} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSBase} represents a direct child structure, that would require it´s
     * parent to be updated instead.
     * @see #collect(COSDictionary)
     * @see #collect(COSArray)
     * @see #collect(COSObject)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setTrailer,org.apache.pdfbox.cos.COSDocument:setTrailer(org.apache.pdfbox.cos.COSDictionary),395,399,"/**
 * Sets the trailer dictionary and updates its origin document state.
 */","* // MIT added, maybe this should not be supported as trailer is a persistence construct.
     * This will set the document trailer.
     *
     * @param newTrailer the document trailer dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSBase),255,262,"/**
 * Updates the object's state based on a child object.
 * @param child The child object to use for updating.
 */
","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given child, initializing it´s {@link #updated} state
     * and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param child The child that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(java.lang.Iterable),298,311,"/**
* Updates the origin document state for COSUpdateInfo children.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getValue(java.lang.String),213,241,"/**
 * Retrieves a value by name, searching names and kids.
 * @param name The name to search for.
 * @return The value associated with the name, or null.
 */
","* The name to retrieve.
     *
     * @param name The name in the tree.
     * @return The value of the name in the tree.
     * @throws IOException If there is a problem creating the destinations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String,java.lang.String)",156,159,"/**
 * Gets the name as a String, using default if name is null.
 * @param name Name to retrieve.
 * @param defaultValue Default value if name is null.
 */
","* Gets a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getStyle(),111,114,"/**
 * Retrieves the style name from the COS object.
 * Returns the style as a String, defaults to STYLE_SOLID.
 */
","* This will retrieve the border effect, see the STYLE_* constants for valid values.
     *
     * @return the effect of the border or {@link #STYLE_SOLID} if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:toString(),109,125,"/**
 * Returns a string representation of the object, including attributes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:toString(),127,131,"/**
 * Returns a string representation of the object.
 * Includes owner user properties in the string.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureTreeRoot(),739,751,"/**
 * Retrieves the root of the structure tree.
 * Returns PDStructureTreeRoot or null if not found.
 */
","* Returns the structure tree root.
     * 
     * @return the structure tree root",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getKids(),109,133,"/**
 * Retrieves a list of kid objects from the COS structure.
 */","* Returns a list of objects for the kids (K).
     * 
     * @return a list of objects for the kids, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getEncryption,org.apache.pdfbox.pdmodel.PDDocument:getEncryption(),825,832,"/**
 * Returns the encryption object, creating it if needed.
 */","* This will get the encryption dictionary for this document. This will still return the parameters if the document
     * was decrypted. As the encryption architecture in PDF documents is pluggable this returns an abstract class,
     * but the only supported subclass at this time is a
     * PDStandardEncryption object.
     *
     * @return The encryption dictionary(most likely a PDStandardEncryption object)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,prepareDecryption,org.apache.pdfbox.pdfparser.COSParser:prepareDecryption(),1197,1245,"/**
 * Prepares decryption by initializing security handler and materials.
 * Throws IOException on failure.
 */","* Prepare for decryption.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readEncodingFromFont(),263,315,"/**
 * Reads the encoding from the font, based on font properties.
 * @return Encoding object representing the font's encoding.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,encode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:encode(int),393,443,"/**
 * Encodes a Unicode code point into a byte array.
 * @param unicode The Unicode code point to encode.
 * @return Byte array representing the encoded value.
 * @throws IllegalArgumentException if encoding unavailable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(int),473,500,"/**
 * Retrieves a GeneralPath based on the given code.
 * @param code Glyph code to retrieve.
 * @return GeneralPath representing the glyph or an empty path.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType0Font:readEncoding(),321,355,"/**
 * Reads the font encoding and determines if it's a predefined CMap.
 */","* Reads the font's Encoding entry, which should be a CMap name/stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDType0Font:toUnicode(int),535,611,"/**
 * Converts a character code to its Unicode representation.
 * Returns null if no mapping is found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,encode,org.apache.pdfbox.pdmodel.font.PDType1CFont:encode(int),389,412,"/**
 * Encodes a Unicode code point to a byte representation.
 * @param unicode The Unicode code point to encode.
 * @return A byte array representing the encoded value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getStringWidth(java.lang.String),414,436,"/**
 * Calculates the string width using the CFF font.
 * @param string The string to measure.
 * @return The string width in font units.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength1,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength1(byte[],int)",292,318,"/**
* Adjusts length1 based on 'exec' marker position in bytes.
* Returns adjusted length1 or original if invalid.
*/
","* Some Type 1 fonts have an invalid Length1, which causes the binary segment of the font
     * to be truncated, see PDFBOX-2350, PDFBOX-3677.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @return repaired Length1 value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength2,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength2(byte[],int,int)",355,364,"/**
 * Adjusts length2, ensuring it's within valid bounds.
 * @param length2 The length to validate.
 * @return Validated length, or max length if invalid.
 */
","* Some Type 1 fonts have an invalid Length2, see PDFBOX-3475. A negative /Length2 brings an
     * IllegalArgumentException in Arrays.copyOfRange(), a huge value eats up memory because of
     * padding.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @param length2 Length2 from the Type 1 stream
     * @return repaired Length2 value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType1Font:encode(int),393,448,"/**
 * Encodes a Unicode code point to a byte array.
 * @param unicode The Unicode code point to encode.
 * @return Byte array representing the encoded glyph.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getFormattedValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getFormattedValue(java.lang.String),274,295,"/**
 * Formats a field value using a scripting action, if available.
 * @param apValue The field value to format.
 * @return The formatted value or the original if formatting fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getFractionalDisplay(),149,152,"/**
 * Returns the fractional display string from the COS object.
 */","* This will return the value for the manner to display a fractional value.
     *  
     * @return the manner to display a fractional value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getThousandsSeparator(),221,224,"/**
 * Returns the thousands separator string from the COS object.
 * Defaults to "","" if not found.
 */
","* This will return the text to be used between orders of thousands in display of numerical values.
     * 
     * @return thousands separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDecimalSeparator(),241,244,"/**
 * Returns the decimal separator from the COS object, defaulting to ""."".
 */","* This will return the text to be used as the decimal point in displaying numerical values.
     * 
     * @return decimal separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPrefixString(),260,263,"/**
 * Gets the label prefix string from the COS object.
 * Returns the string value associated with the ""PS"" key.
 */
","* This will return the text to be concatenated to the left of the label specified by U.
     * @return label prefix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelSuffixString(),279,282,"/**
* Gets the label suffix string from the COS object.
* Returns the value of the ""SS"" attribute or a space if null.
*/
","* This will return the text to be concatenated after the label specified by U.
     * 
     * @return label suffix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPositionToValue(),299,302,"/**
 * Gets the label position to value string from the COS object.
 */","* This will return a value indicating the ordering of the label specified by U to the calculated unit value.
     * 
     * @return label position",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",766,769,"/**
* Gets embedded string by key, using default encoding.
* @param embedded COS object containing the string.
* @param key Key to retrieve the string by.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontMatches,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",553,644,"/**
 * Finds font matches based on descriptor and CID system info.
 * @param fontDescriptor PDFontDescriptor object
 * @param cidSystemInfo PDCIDSystemInfo object, optional filter
 * @return PriorityQueue of FontMatch objects
 */
","* Returns a list of matching fonts, scored by suitability. Positive scores indicate matches
     * for certain attributes, while negative scores indicate mismatches. Zero scores are neutral.
     * 
     * @param fontDescriptor FontDescriptor, always present.
     * @param cidSystemInfo Font's CIDSystemInfo, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,toString,org.apache.pdfbox.pdmodel.interactive.form.PDField:toString(),472,477,"/**
 * Returns a string representation of the object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fetch,org.apache.pdfbox.filter.CCITTFaxDecoderStream:fetch(),126,150,"/**
 * Refreshes the decoded data when the current position is past the end.
 * Handles ArrayIndexOutOfBoundsException and EOFException.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int),78,87,"/**
 * Writes a byte to the input buffer. Encodes row if buffer is full.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",589,606,"/**
* Checks if the provided password matches the owner's password.
* @param ownerPassword Owner's password to verify.
*/
","* Check for owner password.
     *
     * @param ownerPassword The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parse,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parse(java.lang.CharSequence),55,60,"/**
 * Parses a CharSequence into an InstructionSequence.
 * Uses a builder to construct the sequence.
 */
","* Parses the given text into an instruction sequence representing a Type 4 function
     * that can be executed.
     * @param text the Type 4 function text
     * @return the instruction sequence",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",498,553,"/**
 * Decrypts a COSStream based on its filter and metadata type.
 * @param stream COSStream to decrypt.
 * @param objNum Object number of the stream.
 * @param genNum Generation number of the stream.
 */
","* This will decrypt a stream.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",566,583,"/**
 * Encrypts the data within a COSStream.
 * @param stream COSStream to encrypt
 * @param objNum Object number for encryption
 * @param genNum Generation number for encryption
 */
","* This will encrypt a stream, but not the dictionary as the dictionary is
     * encrypted by visitFromString() in COSWriter and we don't want to encrypt
     * it twice.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptString(org.apache.pdfbox.cos.COSString,long,long)",632,653,"/**
 * Decrypts a COSString using the provided object and generation numbers.
 * Returns the decrypted COSString or the original if decryption fails.
 */
","* This will decrypt a string.
     *
     * @param string the string to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     * 
     * @return the decrypted COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptString(org.apache.pdfbox.cos.COSString,long,int)",666,672,"/**
 * Encrypts a COSString and returns a new COSString object.
 * @param string COSString to encrypt
 * @param objNum Object number for encryption
 * @param genNum Generation number for encryption
 * @return Encrypted COSString
 */
","* This will encrypt a string.
     *
     * @param string the string to encrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @return the encrypted COSString
     * 
     * @throws IOException If an error occurs writing the new string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1075,1089,"/**
 * Checks user password based on revision.
 * @param password Password to verify.
 * @return True if password matches, false otherwise.
 */","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFontBoxFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFontBoxFont(java.lang.String),371,392,"/**
 * Finds a FontBox font by postscript name, tries PFB, TTF, OTF.
 * @param postScriptName Font's postscript name.
 * @return FontBoxFont or null if not found.
 */
","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePage,org.apache.pdfbox.text.PDFTextStripper:writePage(),495,728,"/**
 * Writes a page of text to the PDF document.
 * Handles sorting, spacing, and line breaks.
 */
","* This will print the text of the processed page to ""output"". It will estimate, based on the coordinates of the
     * text, where newlines and word spacings should be placed. The text will be sorted only if that feature was
     * enabled.
     *
     * @throws IOException If there is an error writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName),805,813,"/**
 * Retrieves a calendar object from the dictionary by key.
 * @param key COSName representing the key to retrieve
 * @return Calendar object or null if not a COSString.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.cos.COSBase),70,73,"/**
* Writes a COS base object to the output stream.
* Delegates to writeObject for actual writing.
*/
","* Writes a single operand token.
     *
     * @param base The operand to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.contentstream.operator.Operator),131,158,"/**
 * Writes an operator to the output stream, handling inline images.
 * @param op The operator to write.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObject(java.io.OutputStream,org.apache.pdfbox.cos.COSBase,boolean)",168,250,"/**
 * Writes a COSBase object to the output stream, handling references.
 * @param output Output stream to write to
 * @param object COSBase object to write
 * @param topLevel True if writing top-level object
 */
","* This method prepares and writes COS data to the object stream by selecting appropriate specialized methods for
     * the content.
     *
     * @param output The stream, that shall be written to.
     * @param object The content, that shall be written.
     * @param topLevel True, if the currently written object is a top level entry of this object stream.
     * @throws IOException Shall be thrown, when an exception occurred for the write operation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Writes text and operands to output, adjusting positioning.
 * @param textWithPositioningArray Array of Strings and Floats.
 * @throws IOException if an I/O error occurs.
 */
","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showText(java.lang.String),262,267,"/**
 * Displays text, adds a space, and logs the SHOW_TEXT operator.
 * @param text The text to display.
 */
","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createPageDrawer,org.apache.pdfbox.rendering.PDFRenderer:createPageDrawer(org.apache.pdfbox.rendering.PageDrawerParameters),526,531,"/**
 * Creates a PageDrawer instance with provided parameters.
 * @param parameters PageDrawerParameters object
 * @return A new PageDrawer object.
 */
","* Returns a new PageDrawer instance, using the given parameters. May be overridden.
     * 
     * @param parameters parameters to be used when creating the PageDrawer instance
     * @return a new PageDrawer instance
     * 
     * @throws IOException id the PageDrawer instance could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getColor(),96,99,"/**
 * Returns the color from the associated annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<clinit>,org.apache.pdfbox.pdmodel.common.PDRectangle:<clinit>(),47,84,"/**
 * Creates an immutable rectangle representing a standard paper size.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,103,"/**
 * Constructs a PDFormXObject associated with the given document.
 */","* Creates a Form Image XObject for writing, in the given document.
     * @param document The current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,"org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",59,64,"/**
 * Creates a Metadata object, initializing its COS attributes.
 * @param doc The parent PDDocument.
 * @param str Input stream for metadata data.
 */
","* Constructor. Reads all data from the input stream and embeds it into the document, this will
     * close the InputStream. The /Type and /Subtype entries for a document level metadata object
     * will be created.
     *
     * @param doc The document that will hold the stream.
     * @param str The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",57,61,"/**
 * Creates an embedded file object from a document and input stream.
 * @param doc The parent document.
 * @param str Input stream for the embedded file data.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",66,70,"/**
 * Creates an embedded file object from a document, input stream, and filter.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,configureOutputProfile,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",108,115,"/**
 * Creates a PDStream for the color profile.
 * @param doc Document object.
 * @param colorProfile Input stream for the color profile.
 * @return PDStream object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createJPEG,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",305,328,"/**
 * Creates a JPEG image XObject from a BufferedImage.
 * @param document PDF document
 * @param image BufferedImage to encode
 * @param quality JPEG quality (0.0-1.0)
 * @param dpi Dots per inch
 * @return PDImageXObject representing the JPEG image
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",243,256,"/**
* Creates a PDImageXObject from byte array, width, height, bits, color space.
*/","* Create a PDImageXObject using the Flate filter.
     * 
     * @param document The document.
     * @param byteArray array with data.
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @return the newly created PDImageXObject with the data compressed.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(java.lang.String),64,67,"/**
* Constructs a PDExportFormatAttributeObject with the given owner.
* @param owner The owner of the attribute object.
*/
","* Default constructor.
     * 
     * @param owner the owner of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAttributes(),161,196,"/**
 * Retrieves the attributes associated with this structure element.
 * @return Revisions object containing PDAttributeObject instances.
 */","* Returns the attributes together with their revision numbers (A).
     * 
     * @return the attributes as a list, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getAppearance,org.apache.pdfbox.contentstream.PDFStreamEngine:getAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),466,469,"/**
* Retrieves the normal appearance stream from an annotation.
* @param annotation The annotation to get the appearance from.
* @return The appearance stream, or null if it doesn't exist.
*/
","* Returns the appearance stream to process for the given annotation. May be used to render
     * a specific appearance such as ""hover"".
     *
     * @param annotation The current annotation.
     * @return The stream to process.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,addFontFromWidget,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:addFontFromWidget(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation)",153,190,"/**
 * Adds font resources from a widget's appearance stream to AcroForm.
 */","* Add font resources from the widget to the AcroForm to make sure embedded fonts are being used
     * and not added by ensureFontResources potentially using a fallback font.
     * 
     * @param acroFormResources AcroForm default resources, should not be null.
     * @param annotation annotation, should not be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValues(),316,333,"/**
 * Retrieves a set of ""on"" values from widgets and export values.
 * Returns an empty set if no values are found.
 */
","* Get the values to set individual buttons within a group to the on state.
     * 
     * <p>The On value could be an arbitrary string as long as it is within the limitations of
     * a PDF name object. The Off value shall always be 'Off'. If not set or not part of the normal
     * appearance keys 'Off' is the default</p>
     *
     * @return the potential values setting the check box to the On state. 
     *         If an empty Set is returned there is no appearance definition.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValue(int),338,346,"/**
 * Gets the ""on"" value for the widget at the given index.
 * @param index Index of the widget. Returns """" if index is out of bounds.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,isChecked,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:isChecked(),64,67,"/**
 * Checks if the current value is equal to the ""on"" value.
 */","* This will tell if this radio button is currently checked or not.
     * This is equivalent to calling {@link #getValue()}.
     *
     * @return true If this field is checked.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,check,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:check(),74,77,"/**
* Sets the value to the on-value.
*/","* Checks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:<init>(org.apache.pdfbox.pdmodel.font.FontCache),323,363,"/**
 * Initializes the font provider, caches fonts, and scans the system.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,<init>,org.apache.pdfbox.pdfparser.FDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),36,39,"/**
 * Creates a FDF parser with the given input source.
 * @param source RandomAccessRead object for parsing
 */
","* Constructs parser for given file using memory buffer.
     * 
     * @param source the source of the pdf to be parsed
     * 
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",58,61,"/**
 * Constructs a PDFParser with a source and optional password.
 * @param source Reader for PDF data; @param decryptionPassword decryption password
 */
","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPushPin,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPushPin(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),132,183,"/**
 * Draws a push pin graphic onto the content stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawGraph,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawGraph(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),185,271,"/**
 * Draws a graph using the provided content stream.
 * Transforms and draws shapes based on predefined coordinates.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawTag,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawTag(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),273,323,"/**
 * Draws a tag graphic onto the content stream.
 * Uses predefined transformations and curves.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawStyle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",298,345,"/**
* Draws a line style based on the given style string.
* @param style line style string
*/
","* Draw a line ending style.
     * 
     * @param style
     * @param cs
     * @param x
     * @param y
     * @param width
     * @param hasStroke
     * @param hasBackground
     * @param ending false if left, true if right of an imagined horizontal line (important for
     * arrows).
     *
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(double,double)",1034,1046,"/**
 * Moves the cursor to the specified coordinates.
 * @param x The x-coordinate.
 * @param y The y-coordinate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(double,double)",1053,1065,"/**
 * Draws a line to the specified coordinates.
 * @param x The x-coordinate.
 * @param y The y-coordinate.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:toString(),235,264,"/**
 * Returns a string representation of the object, including specified attributes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getBoundingBox(),205,213,"/**
 * Returns the bounding box for the font. Lazily initialized.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getBoundingBox(),196,204,"/**
 * Returns the bounding box of the font.
 * @return BoundingBox object representing the font's bounding box.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBoundingBox(),329,337,"/**
 * Returns the bounding box for the font.
 * Lazily generates if not already present.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBoundingBox(),254,262,"/**
 * Returns the bounding box for the font.
 * @return BoundingBox object, or null if generation fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:getBoundingBox(),537,545,"/**
 * Returns the bounding box of the font.
 * @return BoundingBox object, or null if generation fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",97,104,"/**
 * Paints a tiling pattern onto the page using the provided parameters.
 */","* Creates a new tiling Paint. The parameters color and colorSpace must be null for a colored
     * tiling Paint (because it has its own colors), and non null for an uncolored tiling Paint.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param colorSpace color space for this tiling
     * @param color color for this tiling
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setTransformationMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),509,516,"/**
* Sets the appearance stream's bounding box and transformation matrix.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawRaster(),525,529,"/**
* Returns the raw raster of the image.
* Delegates to SampledImageReader for implementation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawRaster(),359,363,"/**
* Returns the raw raster of the image.
* Delegates to SampledImageReader for implementation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(java.awt.Rectangle,int)",597,600,"/**
 * Gets an opaque image from a region with specified subsampling.
 * @param region The region to extract.
 * @param subsampling Subsampling factor.
 * @return BufferedImage object.
 */
","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @param region The region of the source image to get, or null if the entire image is needed. The actual region
     * will be clipped to the dimensions of the source image.
     * 
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value of 1 meaning every
     * pixel will be read. It must not be larger than the image width or height.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(java.awt.Rectangle,int)",353,357,"/**
 * Retrieves an image from a region with specified subsampling.
 * @param region Region to extract from the image.
 * @param subsampling Subsampling factor.
 * @return BufferedImage representing the extracted image.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)",136,139,"/**
* Gets an RGB BufferedImage from a PDImage with a color key.
* @param pdImage The PDF image.
* @param colorKey Color key for image conversion.
*/
","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param colorKey an optional color key mask
     * @return content of this image as an RGB buffered image
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,pushResources,org.apache.pdfbox.contentstream.PDFStreamEngine:pushResources(org.apache.pdfbox.contentstream.PDContentStream),576,602,"/**
 * Retrieves resources, prioritizing stream resources.
 * @param contentStream Stream containing potential resources.
 * @return PDResources object, initially parent resources.
 */
","* Pushes the given stream's resources, returning the previous resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,hasBlendMode,org.apache.pdfbox.rendering.PDFRenderer:hasBlendMode(org.apache.pdfbox.pdmodel.PDPage),533,556,"/**
* Checks if the page has any blend modes defined.
* Returns true if a non-normal blend mode is found.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,calculateAffineTransform,"org.apache.pdfbox.multipdf.Overlay:calculateAffineTransform(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.common.PDRectangle)",575,583,"/**
 * Calculates an AffineTransform to center an overlay on a page.
 * @param page The page to calculate transform for.
 * @param overlayMediaBox Overlay rectangle dimensions.
 * @return AffineTransform object.
 */
","* Calculate the transform to be used when positioning the overlay. The default implementation
     * centers on the destination. Override this method to do your own, e.g. move to a corner, or
     * rotate.
     *
     * @param page The page that will get the overlay.
     * @param overlayMediaBox The overlay media box.
     * @return The affine transform to be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedMediaBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage),348,361,"/**
* Returns the rotated media box of a page.
* Rotates if page rotation is 90 or 270 degrees.
* @param page The page to get the media box from.
* @return The rotated PDRectangle.
*/
","* This will find the MediaBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The MediaBox at this level in the hierarchy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isMarked(),67,70,"/**
 * Checks if the element is marked.
 * Returns true if ""Marked"" is true in the dictionary, false otherwise.
 */
","* Tells if this is a tagged PDF.
     *
     * @return true If this is a tagged PDF.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,usesUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:usesUserProperties(),87,90,"/**
 * Checks if user properties are enabled in the dictionary.
 * Returns true if enabled, false otherwise.
 */
","* Tells if structure elements use user properties.
     *
     * @return A boolean telling if the structure elements use user properties.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isSuspect(),108,111,"/**
 * Checks if a suspect exists in the dictionary.
 * @return True if ""Suspects"" exists and is true, false otherwise.
 */
","* Tells if this PDF contain 'suspect' tags.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this property.
     *
     * @return true if the suspect flag has been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,shouldTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:shouldTrackMousePosition(),106,109,"/**
 * Checks if mouse position tracking is enabled.
 * Returns true if ""IsMap"" is true in the action, false otherwise.
 */
","* This will specify whether to track the mouse position when the URI is
     * resolved. Default value: false. This entry applies only to actions
     * triggered by the user's clicking an annotation; it is ignored for actions
     * associated with outline items or with a document's OpenAction entry.
     *
     * @return A flag specifying whether to track the mouse position when the
     * URI is resolved.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getOpen(),74,77,"/**
 * Returns the ""Open"" boolean value from the COS object, defaults to false.
 */","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,isFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:isFD(),201,204,"/**
* Checks if the document field ""FD"" is true.
* Returns true if ""FD"" is true, false otherwise.
*/
","* This will return the value indication if the denominator of the fractional value is reduced/truncated .
     * 
     * @return fd",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:toString(),145,152,"/**
 * Returns a string representation of the object's properties.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingOverprintControl(),383,386,"/**
* Returns the non-stroking overprint control from the dictionary.
*/
","* This will get the overprint control for non stroking operations.  If this
     * value is null then the regular overprint control value will be returned.
     *
     * @return The overprint control or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",929,932,"/**
* Gets an integer from an embedded dictionary by key.
* @param embeddedDictionary The dictionary to search.
* @param key The key to retrieve the integer for.
*/
","* Get an integer from an embedded dictionary. Useful for 1-1 mappings. default:-1
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     *
     * @return The value of the embedded integer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDenominator(),181,184,"/**
 * Returns the denominator value from the COS object.
 */","* This will return the precision or denominator of a fractional amount.
     * 
     * @return the precision or denominator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,encode,"org.apache.pdfbox.filter.CCITTFaxFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,158,"/**
 * Encodes input stream data to the output stream using CCITT fax.
 * @param input Input stream to encode.
 * @param encoded Encoded output stream.
 * @param parameters COSDictionary containing encoding parameters.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,wrapPredictor,"org.apache.pdfbox.filter.Predictor:wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",235,250,"/**
 * Wraps an OutputStream with a PredictorOutputStream if predictor > 1.
 * @param out The original OutputStream.
 * @param decodeParams COS dictionary with predictor parameters.
 * @return Wrapped OutputStream or original if no predictor.
 */
","* Wraps and <code>OutputStream</code> in a predictor decoding stream as necessary.
     * If no predictor is specified by the parameters, the original stream is returned as is.
     *
     * @param out The stream to which decoded data should be written
     * @param decodeParams Decode parameters for the stream
     * @return An <code>OutputStream</code> is returned, which will write decoded data
     * into the given stream. If no predictor is specified, the original stream is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getStructParents,org.apache.pdfbox.pdmodel.PDPage:getStructParents(),366,369,"/**
* Returns the number of structural parents.
* Retrieves the value from the 'page' object.
*/
","* This will get the key of this Page in the structural parent tree.
     * 
     * @return the integer key of the page's entry in the structural parent tree or -1 if
     * there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getBitsPerSample(),111,114,"/**
* Returns the number of bits per sample from the COS object.
*/","* Get the number of bits that the output value will take up.  
     * 
     * Valid values are 1,2,4,8,12,16,24,32.
     *
     * @return Number of bits for each output value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getMCID(),89,92,"/**
* Returns the MCID value from the COS object as an integer.
*/","* Gets the marked content identifier.
     * 
     * @return the marked content identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTreeNextKey(),155,158,"/**
 * Returns the next key of the parent tree.
 * Retrieves the value from the COS object.
 */","* Returns The next key for the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     *
     * @return The next key for the parent tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getMCID(),97,101,"/**
* Returns the MCID value from properties, -1 if properties are null.
*/","* Gets the marked-content identifier.
     * 
     * @return the marked-content identifier, or -1 if it doesn't exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getSupplement,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getSupplement(),57,60,"/**
* Returns the supplement value from the dictionary.
* @return The supplement integer value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineCapStyle(),242,245,"/**
 * Returns the line cap style from the dictionary.
 * @return An integer representing the line cap style.
 */
","* This will get the line cap style.
     *
     * @return null or the LC value of the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineJoinStyle(),262,265,"/**
* Retrieves the line join style from the dictionary.
* @return int representing the line join style.
*/
","* This will get the line join style.
     *
     * @return null or the LJ value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getStructParent(),683,686,"/**
 * Returns the parent structure ID from the COS object.
 */","* This will get the key of this annotation in the structural parent tree.
     *
     * @return the integer key of the annotation's entry in the structural parent tree or -1 if
     * there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,getP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:getP(),67,70,"/**
 * Returns the value of the 'P' property from the dictionary.
 */","* Return the P value.
     * 
     * @return the P value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getMaxLen(),193,196,"/**
 * Returns the maximum length value from the COS object.
 */","* Returns the maximum number of characters of the text field.
     * 
     * @return the maximum number of characters, returns -1 if the value isn't present",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getInteger(java.lang.String,int)",253,256,"/**
 * Gets an integer value by name from COS object, returns default if not found.
 */","* Gets an integer.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the integer",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isInvisible(),502,505,"/**
 * Checks if the object is invisible based on its annotation flag.
 */","* Get the invisible flag.
     *
     * @return The invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isHidden(),522,525,"/**
 * Checks if the object is hidden.
 * Returns true if the hidden flag is set, false otherwise.
 */
","* Get the hidden flag.
     *
     * @return The hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isPrinted(),542,545,"/**
 * Checks if the document's print flag is set.
 * Returns true if printed, false otherwise.
 */
","* Get the printed flag.
     *
     * @return The printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoZoom(),562,565,"/**
* Checks if no-zoom flag is set in the annotation.
* Returns true if set, false otherwise.
*/
","* Get the noZoom flag.
     *
     * @return The noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoRotate(),582,585,"/**
 * Checks if the annotation flag indicates no rotation.
 * @return True if no rotation is specified, false otherwise.
 */","* Get the noRotate flag.
     *
     * @return The noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoView(),602,605,"/**
* Checks if the annotation has the ""no view"" flag set.
* Returns true if set, false otherwise.
*/
","* Get the noView flag.
     *
     * @return The noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isReadOnly(),622,625,"/**
* Checks if the object is read-only based on annotation flag.
*/","* Get the readOnly flag.
     *
     * @return The readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLocked(),642,645,"/**
* Checks if the object is locked.
* Returns true if the 'locked' flag is set, false otherwise.
*/
","* Get the locked flag.
     *
     * @return The locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isToggleNoView(),662,665,"/**
 * Checks if the ""no view"" toggle flag is enabled.
 * Returns true if enabled, false otherwise.
 */","* Get the toggleNoView flag.
     *
     * @return The toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLockedContents(),682,685,"/**
* Checks if the contents are locked based on a flag.
*/","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isInvisible(),397,400,"/**
 * Checks if the object is invisible based on its flag.
 * @return True if invisible, false otherwise.
 */
","* Get the invisible flag.
     * 
     * @return The invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isHidden(),417,420,"/**
* Checks if the object is hidden.
* Returns true if the hidden flag is set, false otherwise.
*/
","* Get the hidden flag.
     * 
     * @return The hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isPrinted(),437,440,"/**
 * Checks if the PDF object is flagged as printed.
 * @return True if printed flag is set, false otherwise.
 */","* Get the printed flag.
     * 
     * @return The printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoZoom(),457,460,"/**
 * Checks if the COS object has the no-zoom flag set.
 * @return True if no-zoom flag is set, false otherwise.
 */
","* Get the noZoom flag.
     * 
     * @return The noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoRotate(),477,480,"/**
 * Checks if the PDF object should not be rotated.
 * @return True if no rotation is required, false otherwise.
 */","* Get the noRotate flag.
     * 
     * @return The noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoView(),497,500,"/**
 * Checks if the COS object has the ""no view"" flag set.
 * Returns true if set, false otherwise.
 */
","* Get the noView flag.
     * 
     * @return The noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isReadOnly(),517,520,"/**
* Checks if the COS object is read-only.
* Returns true if the 'F' flag is set to FLAG_READ_ONLY.
*/
","* Get the readOnly flag.
     * 
     * @return The readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLocked(),537,540,"/**
 * Checks if the COS object is locked.
 * Returns true if locked, false otherwise.
 */
","* Get the locked flag.
     * 
     * @return The locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isToggleNoView(),557,560,"/**
 * Checks if the no-view toggle flag is enabled.
 * Returns true if enabled, false otherwise.
 */
","* Get the toggleNoView flag.
     * 
     * @return The toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLockedContents(),578,581,"/**
* Checks if the document's contents are locked.
* Returns true if locked, false otherwise.
*/
","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.
     * @see #setLockedContents(boolean)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isFilterRequired(),116,119,"/**
 * Checks if filtering is required based on a flag.
 * Returns true if the filter flag is set, false otherwise.
 */
","*
     * @return true if the Filter is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isSubFilterRequired(),135,138,"/**
 * Checks if a subfilter is required based on the COS object.
 */","*
     * @return true if the SubFilter is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isDigestMethodRequired(),154,157,"/**
* Checks if digest method is required based on COS flag.
*/","*
    * @return true if the DigestMethod is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isVRequired(),173,176,"/**
* Checks if the 'V' flag is set on the COS object.
* Returns true if set, false otherwise.
*/
","*
    * @return true if the V entry is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isReasonRequired(),192,195,"/**
 * Checks if a reason is required based on the COS object.
 */","*
    * @return true if the Reason is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isLegalAttestationRequired(),211,214,"/**
* Checks if legal attestation is required based on COS flag.
*/","*
    * @return true if the LegalAttestation is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isAddRevInfoRequired(),230,233,"/**
 * Checks if adding revision info is required based on COS flag.
 */","*
    * @return true if the AddRevInfo is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectRequired(),104,107,"/**
* Checks if the subject field is required based on dictionary flags.
*/","*
     * @return true if the Subject is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isIssuerRequired(),123,126,"/**
 * Checks if the issuer flag is set in the dictionary.
 * Returns true if set, false otherwise.
 */
","*
     * @return true if the Issuer is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isOIDRequired(),142,145,"/**
 * Checks if the OID flag is required in the dictionary.
 * @return True if OID flag is required, false otherwise.
 */
","*
     * @return true if the OID is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectDNRequired(),161,164,"/**
 * Checks if the Subject DN flag is required in the dictionary.
 * Returns true if required, false otherwise.
 */
","*
     * @return true if the Subject DN is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isKeyUsageRequired(),180,183,"/**
 * Checks if key usage flag is required in the dictionary.
 * Returns true if required, false otherwise.
 */","*
     * @return true if the KeyUsage is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isURLRequired(),199,202,"/**
 * Checks if a URL is required based on the dictionary flag.
 */","*
     * @return true if the URL is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isItalic(),364,367,"/**
 * Checks if the PDF content is italic.
 * Returns true if italic flag is set, false otherwise.
 */","* A flag telling if the text should be italic.
     *
     * @return The italic flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isBold(),384,387,"/**
 * Checks if the PDF object is bold.
 * Returns true if bold flag is set, false otherwise.
 */","* A flag telling if the text should be bold.
     *
     * @return The bold flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isSignaturesExist(),632,635,"/**
 * Checks if signature existence flag is set in the dictionary.
 * Returns true if the flag is set, false otherwise.
 */
","* Determines if SignaturesExist is set.
     * 
     * @return true if the document contains at least one signature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isAppendOnly(),652,655,"/**
 * Checks if the dictionary is append-only.
 * Returns true if the flag is set, false otherwise.
 */
","* Determines if AppendOnly is set.
     * 
     * @return true if the document contains signatures that may be invalidated if the file is saved.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isPushButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isPushButton(),87,90,"/**
 * Checks if the COS object represents a push button.
 * Returns true if the FF flag is set to FLAG_PUSHBUTTON.
 */
","* Determines if push button bit is set.
     * 
     * @return true if type of button field is a push button.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isRadioButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isRadioButton(),97,100,"/**
 * Checks if the COS object represents a radio button.
 * Returns true if the FF flag is set to FLAG_RADIO.
 */
","* Determines if radio button bit is set.
     * 
     * @return true if type of button field is a radio button.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isSort(),272,275,"/**
* Checks if the COS object's FF flag is set to FLAG_SORT.
*/","* Determines if Sort is set.
     * 
     * <p>
     * If set, the field’s option items shall be sorted alphabetically.
     * The sorting has to be done when writing the PDF. PDF Readers are supposed to
     * display the options in the order in which they occur in the Opt array. 
     * </p>
     * 
     * @return true if the options are sorted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isMultiSelect(),293,296,"/**
* Checks if multi-select is enabled.
* Returns true if the FF flag is set on the COS object.
*/
","* Determines if MultiSelect is set.
     * 
     * @return true if multi select is allowed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isDoNotSpellCheck(),313,316,"/**
 * Checks if spell checking is disabled for this object.
 */","* Determines if DoNotSpellCheck is set.
     * 
     * @return true if spell checker is disabled.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCommitOnSelChange(),333,336,"/**
 * Checks if a commit is triggered on selection change.
 */","* Determines if CommitOnSelChange is set.
     * 
     * @return true if value shall be committed as soon as a selection is made.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCombo(),353,356,"/**
* Checks if the COS object represents a combo.
* Returns true if the FF flag is set to FLAG_COMBO.
*/
","* Determines if Combo is set.
     * 
     * @return true if value the choice is a combo box..",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,isEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:isEdit(),63,66,"/**
* Checks if the COS object has the ""edit"" flag set.
*/","* Determines if Edit is set.
     * 
     * @return true if the combo box shall include an editable text box as well as a drop-down list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:isReadOnly(),157,160,"/**
* Checks if the dictionary is read-only.
* Returns true if the FF flag is set to FLAG_READ_ONLY.
*/
","* 
     * @return true if the field is readonly",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:isRequired(),177,180,"/**
* Checks if a flag is required in the dictionary.
* Returns true if the flag is set, false otherwise.
*/
","* @return true if the field is required to have a value at the time it is exported by a
     * submit-form action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:isNoExport(),196,199,"/**
* Checks if the PDF has the no-export flag set.
* @return True if the no-export flag is set, false otherwise.
*/
","* 
     * @return true if the field is not to be exported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,isRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:isRadiosInUnison(),78,81,"/**
* Checks if radios are in unison, using a COS flag.
*/","*
     * @return true If the flag is set for radios in unison.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isMultiline(),65,68,"/**
 * Checks if the COS object is multiline.
 * Returns true if the FF flag is set to FLAG_MULTILINE.
 */
",* @return true if the field is multiline,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isPassword(),83,86,"/**
 * Checks if the COS object has a password flag set.
 * @return True if password flag is set, false otherwise.
 */",* @return true if the field is a password field.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isFileSelect(),101,104,"/**
 * Checks if the COS object's file select flag is set.
 */",* @return true if the field is a file select field.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotSpellCheck(),119,122,"/**
 * Checks if spell checking is disabled for a COS object.
 * @return True if spell check is disabled, false otherwise.
 */
",* @return true if the field is not suppose to spell check.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotScroll(),137,140,"/**
 * Checks if scrolling should be disabled based on COS flags.
 * @return True if scrolling is disabled, false otherwise.
 */",* @return true if the field is not suppose to scroll.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isComb(),155,158,"/**
* Checks if the COS object is a COMB object.
* Returns true if the FF flag is set to FLAG_COMB.
*/
",* @return true if the field is not suppose to comb the text display.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isRichText(),173,176,"/**
 * Checks if the COS object represents rich text.
 * Returns true if the FF flag is set to FLAG_RICH_TEXT.
 */
",* @return true if the field is a rich text field.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,next,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:next(),314,341,"/**
 * Returns the next label string. Throws NoSuchElementException if hasNext() is false.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",119,289,"/**
 * Prepares decryption by extracting recipient information.
 * @param encryption Encryption object containing decryption details.
 * @param documentIDArray COSArray representing document IDs.
 * @param decryptionMaterial Decryption material for decryption.
 */
","* Prepares everything to decrypt the document.
     *
     * @param encryption encryption dictionary, can be retrieved via
     * {@link PDDocument#getEncryption()}
     * @param documentIDArray document id which is returned via
     * {@link org.apache.pdfbox.cos.COSDocument#getDocumentID()} (not used by
     * this handler)
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws IOException If there is an error accessing data. If verbose mode
     * is enabled, the exception message will provide more details why the
     * match wasn't successful.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerKey(),273,291,"/**
 * Retrieves the owner key as bytes. Returns null if not found.
 */","* This will get the O entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserKey(),312,330,"/**
 * Retrieves the user key as a byte array.
 * Returns null if the user key is not found.
 */
","* This will get the U entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDFont:getDisplacement(int),250,253,"/**
 * Creates a displacement vector based on the given code.
 * @param code code used to calculate displacement
 * @return A Vector representing the displacement.
 */
","* Returns the displacement vector (w0, w1) in text space, for the given character. For horizontal text only the x
     * component is used, for vertical text only the y component.
     *
     * @param code character code
     * @return displacement vector
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDFont:getStringWidth(java.lang.String),367,380,"/**
 * Calculates the width of a string encoded as bytes.
 * @param text String to calculate width for.
 * @return The calculated width as a float.
 */
","* Returns the width of the given Unicode string.
     *
     * @param text The text to get the width of.
     * @return The width of the string in 1/1000 units of text space.
     * @throws IOException If there is an error getting the width information.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFlagBitOn,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFlagBitOn(int),250,253,"/**
 * Checks if a specific bit is set in the flags.
 * @param bit The bit to check.
 * @return True if the bit is set, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPattern,org.apache.pdfbox.pdmodel.PDResources:getPattern(org.apache.pdfbox.cos.COSName),325,350,"/**
 * Retrieves a pattern by name, using cache if available.
 * @param name COSName representing the pattern's name.
 * @return PDAbstractPattern object or null if not found.
 */
","* Returns the pattern resource with the given name, or null if none exists.
     * 
     * @param name Name of the pattern resource.
     * @return the pattern with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShading,org.apache.pdfbox.pdmodel.PDResources:getShading(org.apache.pdfbox.cos.COSName),290,315,"/**
* Retrieves a PDShading object by name, caching if available.
* @param name Shading name; used to fetch shading.
* @return PDShading object or null if not found.
*/
","* Returns the shading resource with the given name, or null if none exists.
     *
     * @param name Name of the shading resource.
     * @return the shading state with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getShading(),90,101,"/**
 * Returns the shading object, creating it if it doesn't exist.
 * @return PDShading object or null if shading is not defined.
 */
","* This will get the shading resources for this pattern.
     * @return The shading resources for this pattern.
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerComponent(),43,43,"/**
 * Extends PDTriangleBasedShadingType for a specific shading type.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerComponent(),41,41,"/**
 * Extends PDTriangleBasedShadingType for shading type 5.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerCoordinate(),43,43,"/**
 * Extends PDTriangleBasedShadingType for a specific shading type.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerCoordinate(),41,41,"/**
 * Extends PDTriangleBasedShadingType for shading type 5.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveRotation,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveRotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),346,355,"/**
 * Gets the rotation value from the widget's appearance characteristics.
 * Returns 0 if characteristics are null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,isNodeOpen,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:isNodeOpen(),274,277,"/**
 * Checks if the node is open based on the open count.
 * @return True if open count is greater than 0, false otherwise.
 */
","* @return true if this node count is greater than zero, false otherwise.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createField,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",50,95,"/**
 * Creates a PDF field based on the field type.
 * @param form  The form object.
 * @param field The field dictionary.
 * @param parent The parent field.
 * @return A PDF field object or null if unknown type.
 */
","* Creates a COSField subclass from the given field.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created 
     * @return the corresponding PDField instance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxSelectionHighlight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",772,811,"/**
 * Draws selection highlights for a PDF listbox.
 * @param contents Content stream to draw highlights.
 * @param appearanceStream Appearance stream for the listbox.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldFlags(),71,85,"/**
 * Gets the field flags. Returns 0 if not found, inherits from parent.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,63,"/**
 * Sets the non-stroking color space based on the provided COSName.
 * @param arguments List containing the COSName for the color space.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,53,"/**
 * Processes the CMYK color operator if enabled in the context.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,53,"/**
 * Processes the 'g' operator, setting the grayscale color space.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,53,"/**
 * Processes the operator if color operators are enabled.
 * Sets the color space to DeviceRGB before calling super.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,63,"/**
 * Sets the stroking color space based on the provided COSName.
 * @param arguments Arguments list containing the COSName.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,52,"/**
 * Processes the operator if color operators are enabled, sets CMYK color space.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,53,"/**
 * Processes the operator if color operators are enabled.
 * Sets the stroking color space to DeviceGray before processing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,60,"/**
 * Processes the operator if color operators should be processed.
 * Sets the stroking color space to DeviceRGB before processing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObject,org.apache.pdfbox.pdmodel.PDResources:getXObject(org.apache.pdfbox.cos.COSName),419,451,"/**
 * Retrieves a PDXObject by name, using cache if available.
 * @param name XObject name
 * @return PDXObject or null if not found
 */
","* Returns the XObject resource with the given name, or null if none exists.
     * 
     * @param name Name of the XObject resource.
     * @return the XObject with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",56,69,"/**
 * Creates a paint context for axial shading.
 * Returns a black context on error.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
 * Creates a PaintContext for radial shading, handling potential IO errors.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",51,55,"/**
 * Constructs a GouraudShadingContext with given parameters.
 * @param shading The shading object.
 * @param colorModel The color model.
 * @param xform The affine transform.
 * @param matrix The matrix.
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
 * Creates a paint context for Type1 shading.
 * Returns a black context on error.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(),164,167,"/**
 * Creates a COS input stream using default decode options.
 * @return COSInputStream object
 * @throws IOException if an I/O error occurs
 */
","* Returns a new InputStream which reads the decoded stream data.
     * 
     * @return InputStream containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),186,189,"/**
 * Creates an input stream for decoding.
 * @param options Decode options to apply.
 * @return COSInputStream for decoding.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectStreamObject,"org.apache.pdfbox.pdfparser.COSParser:parseObjectStreamObject(long,org.apache.pdfbox.cos.COSObjectKey)",621,658,"/**
 * Parses an object from an object stream, returning a COSBase.
 * @param objstmObjNr Object stream number.
 * @param key COSObjectKey for the object.
 * @return COSBase object or null if not found.
 */
","* Parse the object with the given key from the object stream with the given number.
     * 
     * @param objstmObjNr the number of the offset stream
     * @param key the key of the object to be parsed
     * @return the parsed object
     * @throws IOException if something went wrong when parsing the object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContents,org.apache.pdfbox.pdmodel.PDPage:getContents(),221,230,"/**
 * Returns an InputStream for the contents, or an empty stream.
 */","* Returns the content stream(s) of this page as a single input stream.
     *
     * @return An InputStream, never null. Multiple content streams are concatenated and separated
     * with a newline. An empty stream is returned if the page doesn't have any content stream.
     * @throws IOException If the stream could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForStreamParsing,org.apache.pdfbox.pdmodel.PDPage:getContentsForStreamParsing(),232,257,"/**
 * Returns a stream reader for parsing content, or falls back to random access.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",70,73,"/**
 * Constructs a PDCIDFontType2 with a parent font, using default encoding.
 * @param fontDictionary Font dictionary.
 * @param parent Parent font.
 */
","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getCIDFont(),673,676,"/**
 * Creates and returns a PDCIDFontType2 object.
 * Uses existing cidFont, parent, and ttf objects.
 */",* Returns the descendant CIDFont.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadUnicodeCmap,org.apache.pdfbox.pdmodel.font.PDFont:loadUnicodeCmap(),134,172,"/**
 * Loads the Unicode CMap from the dictionary.
 * @return CMap object or null if not found or invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontTypeFromFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontTypeFromFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",214,258,"/**
 * Determines FontType based on font descriptor and type.
 * @param fontDescriptor Font descriptor dictionary.
 * @param fontType Font type COSName.
 * @return FontType object or null if type is unrecognized.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContents,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContents(),76,80,"/**
 * Returns an InputStream for accessing the resource contents.
 * Uses RandomAccessInputStream for random access functionality.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContents,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContents(),157,161,"/**
 * Returns an InputStream for accessing the resource contents.
 * Returns a RandomAccessInputStream for random access.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContents,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContents(),174,180,"/**
 * Returns an InputStream for the contents, or null if unavailable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDType0Font:getPositionVector(int),491,496,"/**
 * Gets the position vector for a character code.
 * @param code Character code. Returns scaled vector.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenAndVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenAndVisibilityExpression(org.apache.pdfbox.cos.COSArray),2211,2238,"/**
* Checks if a visibility expression indicates hidden state.
* Recursively checks COSArray and COSDictionary elements.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeDictionary,org.apache.pdfbox.pdfwriter.COSWriter:writeDictionary(org.apache.pdfbox.cos.COSDictionary),1167,1178,"/**
 * Writes a COSDictionary, either directly or as a reference.
 * @param dictionary The COSDictionary to write.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSArray),166,184,"/**
* Recursively collects update information from a COSArray.
* Returns true if any child demands a parent update.
*/
","* Collect all updates made to the given {@link COSArray} and it's contained structures.
     *
     * @param array The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSArray}´s elements changed. A {@link COSArray} shall always be
     * treated as a direct structure, that would require it´s parent to be updated instead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,getObjects,org.apache.pdfbox.cos.COSIncrement:getObjects(),337,345,"/**
 * Returns a set of COS objects. Initializes if not already done.
 */
","* Returns all indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.<br>
     * Calling this method will cause the increment to be initialized.
     *
     * @return All indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.
     * @see #objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.cos.COSBase),83,97,"/**
 * Adds a COSBase object to the list, wrapping if needed.
 * @param object The COSBase object to add.
 */
","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,"org.apache.pdfbox.cos.COSArray:add(int,org.apache.pdfbox.cos.COSBase)",121,135,"/**
 * Adds an object to the list at the specified index.
 * @param i index to insert at
 * @param object COSBase object to add
 */
","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param object The object to add at that index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.cos.COSBase)",220,234,"/**
 * Sets the object at the given index, updating the state.
 * @param index index of the object to set
 * @param object COSBase object to set at the index
 */
","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",198,219,"/**
 * Sets the value for a given key in the item dictionary.
 * @param key The key for the item.
 * @param value The value to associate with the key.
 */
","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(java.util.Collection),176,181,"/**
* Adds a list of objects and updates the update state.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,"org.apache.pdfbox.cos.COSArray:addAll(int,java.util.Collection)",207,212,"/**
* Adds a list of objects and updates the state if successful.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSArray),278,281,"/**
* Updates the object with the provided COS array.
* @param children COSArray containing child objects to update.
*/
","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRoleMap(),758,766,"/**
 * Retrieves the role map from the structure tree root.
 * Returns an empty map if the root is null.
 */","* Returns the role map.
     * 
     * @return the role map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addObjectToPool,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addObjectToPool(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",100,157,"/**
 * Adds a COSBase object to the object pool, managing its key.
 * @param key object key
 * @param base COSBase object to add
 * @return The original COSBase object.
 */
","* Adds the given {@link COSBase} to this pool, using the given {@link COSObjectKey} as it's referencable ID. This
     * method shall determine an appropriate key, for yet unregistered objects, to register them. Depending on the type
     * of object, it shall either be appended as-is or shall be appended to a compressed {@link COSWriterObjectStream}.
     *
     * @param key The {@link COSObjectKey} that shall be used as the {@link COSBase}s ID, if possible.
     * @param base The {@link COSBase}, that shall be registered in this pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,protect,org.apache.pdfbox.pdmodel.PDDocument:protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),1323,1345,"/**
 * Applies protection policy using a security handler.
 * @param policy The protection policy to apply.
 * @throws IOException If no security handler is available.
 */
","* Protects the document with a protection policy. The document content will be really
     * encrypted when it will be saved. This method only marks the document for encryption. It also
     * calls {@link #setAllSecurityToBeRemoved(boolean)} with a false argument if it was set to true
     * previously and logs a warning.
     * <p>
     * Do not use the document after saving, because the structures are encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @see org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy
     * @see org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy
     *
     * @param policy The protection policy.
     * @throws IOException if there isn't any suitable security handler.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getNormalizedPath(int),540,569,"/**
 * Returns a normalized GeneralPath based on the given code.
 * Returns an empty path if normalization fails.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getGlyphName,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getGlyphName(int),306,314,"/**
 * Gets the glyph name for a given Unicode code point.
 * @param code The Unicode code point.
 * @return Glyph name or "".notdef"" if not found.
 */
","* Returns the name of the glyph with the given character code. This is done by looking up the
     * code in the parent font's ToUnicode map and generating a glyph name from that.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToGID(int),249,333,"/**
 * Translates a character code to a glyph ID, handling embedded/non-embedded fonts.
 * @param code The character code to translate.
 * @return Glyph ID or 0 if not found.
 */
","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID
     * @throws IOException if the mapping could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacSubtype(),179,183,"/**
 * Gets the MAC subtype from the COSDictionary.
 * Returns null if the dictionary or subtype is missing.
 */
","* Get the mac subtype.
     *
     * @return The mac subtype.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacCreator(),209,213,"/**
 * Gets the MAC creator from the COS parameters.
 * Returns null if parameters are not found.
 */
","* Get the mac Creator.
     *
     * @return The mac Creator.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacResFork(),239,243,"/**
 * Gets the MAC ResFork string from the COS dictionary.
 * Returns null if the dictionary or string is not found.
 */
","* Get the mac ResFork.
     *
     * @return The mac ResFork.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getCIDFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",494,544,"/**
 * Gets a CIDFontMapping based on baseFont, descriptor, and CID info.
 */","* Finds a CFF CID-Keyed font with the given PostScript name, or a suitable substitute, or null.
     * This method can also map CJK fonts via their CIDSystemInfo (ROS).
     * 
     * @param fontDescriptor FontDescriptor
     * @param cidSystemInfo the CID system info, e.g. ""Adobe-Japan1"", if any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(),427,442,"/**
 * Reads the next byte from the decoded row.
 * Returns a byte value or 0x0 if end of data is reached.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(byte[],int,int)",444,465,"/**
 * Reads up to {@code len} bytes from the decoded row into the buffer.
 * @param b buffer to read to
 * @param off offset in the buffer
 * @param len maximum number of bytes to read
 * @return number of bytes read
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,skip,org.apache.pdfbox.filter.CCITTFaxDecoderStream:skip(long),467,485,"/**
 * Skips `n` bytes of decoded data. Returns the actual skipped bytes.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1107,1113,"/**
 * Checks if the provided password matches the owner's password.
 * @param password Password to check (converted to bytes)
 */
","* Check for owner password.
     *
     * @param password The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromStream,org.apache.pdfbox.pdfwriter.COSWriter:visitFromStream(org.apache.pdfbox.cos.COSStream),1391,1423,"/**
* Writes a COSStream object to the output stream, encrypting if needed.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromString,org.apache.pdfbox.pdfwriter.COSWriter:visitFromString(org.apache.pdfbox.cos.COSString),1425,1441,"/**
 * Writes a COSString to the output, encrypting if enabled.
 * @param obj The COSString object to write.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,writePage,org.apache.pdfbox.text.PDFTextStripperByArea:writePage(),155,164,"/**
 * Writes pages based on region data. Iterates through regions.
 */","* This will print the processed page text to the output stream.
     *
     * @throws IOException If there is an error writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String),793,796,"/**
 * Retrieves a date object by its key.
 * @param key The key representing the date.
 * @return A Calendar object representing the date.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",834,842,"/**
 * Gets date from COS name, using default if not found.
 * @param key COS name to search for the date.
 * @param defaultValue Default Calendar value if not found.
 * @return Calendar object representing the date.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreationDate(),210,213,"/**
 * Retrieves the creation date from the info object.
 * @return Calendar object representing the creation date.
 */","* This will get the creation date of the document.  This will return null if no creation date exists.
     *
     * @return The creation date of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getModificationDate(),230,233,"/**
* Returns the modification date from the document info.
* @return Calendar object representing the modification date.
*/","* This will get the modification date of the document.  This will return null if no modification date exists.
     *
     * @return The modification date of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getCreationDate(),785,788,"/**
 * Gets the creation date from the annotation.
 * @return Calendar object representing creation date
 */","* The annotation create date.
     *
     * @return The date of the creation of the annotation date
     *
     * @throws IOException If there is an error converting the string to a Calendar object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getCreationDate(),166,169,"/**
* Returns the creation date of the COS object as a Calendar.
*/","* This will retrieve the date and time the annotation was created.
     *
     * @return the creation date/time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignDate(),267,270,"/**
 * Retrieves the sign date from the dictionary.
 * @return Calendar object representing the sign date.
 */
","* Returns the sign date.
     *
     * @return the sign date",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.contentstream.operator.Operator),81,84,"/**
 * Writes an operator token to the output stream.
 * @param op The operator to write.
 * @throws IOException If an I/O error occurs.
 */
","*  Writes a single operator token.
     *
     * @param op The operator to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(java.lang.Object),115,129,"/**
 * Writes an object to the stream, handling COSBase and Operator types.
 * @param o The object to write. Throws IOException if type is unknown.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectsToStream,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectsToStream(org.apache.pdfbox.cos.COSStream),109,157,"/**
 * Writes prepared objects to a COS stream, creating a compressed stream.
 * @param stream COSStream to write to
 * @return Updated COSStream
 */
","* Writes all prepared {@link COSObject}s to the given {@link COSStream}.
     *
     * @param stream The stream for the compressed objects.
     * @return The given {@link COSStream} of this object stream.
     * @throws IOException Shall be thrown, if writing the object stream failed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSDictionary,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSDictionary(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",342,359,"/**
 * Writes a COSDictionary to the output stream.
 * @param output The output stream to write to.
 * @param cosDictionary The COSDictionary to write.
 */","* Write the given {@link COSDictionary} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosDictionary The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showTextWithPositioning(java.lang.Object[]),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDFormContentStream:showTextWithPositioning(java.lang.Object[]),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPageContentStream:showTextWithPositioning(java.lang.Object[]),37,37,"/**
* Extends PDAbstractContentStream; implements Closeable for content stream writing.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPatternContentStream:showTextWithPositioning(java.lang.Object[]),26,26,"/**
 * Represents a content stream for a pattern in PDF. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showText(java.lang.String),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,showText,org.apache.pdfbox.pdmodel.PDFormContentStream:showText(java.lang.String),26,26,"/**
 * Extends PDAbstractContentStream for PDF form content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPageContentStream:showText(java.lang.String),37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPatternContentStream:showText(java.lang.String),26,26,"/**
 * Represents a content stream for a pattern in PDF. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.PDDocument),56,60,"/**
 * Creates a new PDTransparencyGroup associated with the document.
 */","* Creates a Transparency Group for writing, in the given document.
     * @param document The current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),48,51,"/**
 * Creates a new PDAppearanceStream instance associated with a document.
 */","* Creates a Form Image XObject for writing, in the given document.
     * 
     * @param document The current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",274,278,"/**
* Creates a PDImageXObject from a BufferedImage.
* @param document PDDocument to add image to.
* @param image BufferedImage to convert.
* @param quality JPEG quality (0.0-1.0).
* @param dpi Dots per inch.
* @return PDImageXObject representing the image.
*/
","* Creates a new JPEG Image XObject from a BufferedImage, a given quality and dpi metadata.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     * 
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @param quality The desired JPEG compression quality; between 0 (best
     * compression) and 1 (best image quality). See
     * {@link ImageWriteParam#setCompressionQuality(float)} for more details.
     * @param dpi the desired dpi (resolution) value of the JPEG to be stored in metadata. This
     * value has no influence on image content or size.
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromGrayImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",136,162,"/**
 * Creates a PDImageXObject from a grayscale BufferedImage.
 * @param image BufferedImage containing grayscale image data.
 * @param document PDDocument to associate the image with.
 * @return PDImageXObject representing the grayscale image.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",164,229,"/**
 * Creates a PDImageXObject from a BufferedImage, handling transparency.
 * @param image BufferedImage to convert
 * @param document Document to add the image to
 * @return PDImageXObject representation of the image
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,checkValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:checkValue(java.lang.String),378,387,"/**
 * Validates if the given value is a valid option.
 * @param value The value to check against allowed options.
 */
","* Checks value.
     *
     * @param value Name of radio button to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<clinit>,org.apache.pdfbox.pdmodel.font.FontMapperImpl$DefaultFontProvider:<clinit>(),139,139,"/**
 * Creates a singleton instance of FileSystemFontProvider.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.File),74,89,"/**
 * Loads an FDF document from a file.
 * @param file The file containing the FDF document.
 * @return FDFDocument object or null if an error occurs.
 */
","* This will load a document from a file.
     *
     * @param file The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to
     * read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.InputStream),102,109,"/**
 * Loads an FDF document from an input stream.
 * @param input Input stream containing the FDF data.
 * @return FDFDocument object representing the loaded FDF.
 */
","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document. To read the stream
     * {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),45,48,"/**
* Constructs a PDFParser with a source and default password.
* @param source RandomAccessRead source for PDF data.
*/
","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source source representing the pdf.
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,outputCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)",477,494,"/**
 * Draws a curve based on the template points, offset by (x, y).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArcSegment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)",643,700,"/**
 * Draws a cubic Bezier curve from start to end angle.
 * @param startAng starting angle
 * @param endAng ending angle
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(java.awt.geom.Point2D$Double),1030,1032,"/**
* Moves the object to the specified x and y coordinates.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(java.awt.geom.Point2D$Double),1049,1051,"/**
 * Draws a line to the specified point (p.x, p.y).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)",79,83,"/**
 * Calls the overloaded constructor with null parameters.
 * @param drawer PageDrawer instance
 * @param pattern PDTilingPattern instance
 * @param xform AffineTransform for tiling
 */
","* Creates a new colored tiling Paint, i.e. one that has its own colors.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,create,"org.apache.pdfbox.rendering.TilingPaintFactory:create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",53,71,"/**
 * Creates a TilingPaint, retrieving from cache if available.
 * @param pattern Tiling pattern
 * @param colorSpace Color space
 * @param color Color
 * @param xform Transform
 * @return TilingPaint object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearanceEntryAsContentStream,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry,boolean)",492,507,"/**
 * Creates a content stream from a PDAppearanceEntry.
 * @param appearanceEntry The appearance entry to process.
 * @param compress Whether to compress the content stream.
 * @return A PDAppearanceContentStream object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(),579,582,"/**
 * Returns an opaque image.
 * @throws IOException if an I/O error occurs
 */
","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(),347,351,"/**
 * Retrieves the image as a BufferedImage.
 * Uses SampledImageReader to get the image.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,decode,"org.apache.pdfbox.filter.FlateFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",35,48,"/**
 * Decodes an input stream to an output stream using FlateFilter.
 * @param encoded Input stream to decode.
 * @param decoded Output stream for decoded data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,decode,"org.apache.pdfbox.filter.LZWFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",64,72,"/**
 * Decodes data from an input stream to an output stream.
 * @param encoded Input stream with encoded data.
 * @param decoded Output stream for decoded data.
 * @param parameters COSDictionary containing decode parameters.
 * @param index Index of the stream.
 * @return DecodeResult object containing parameters.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:toString(),105,109,"/**
 * Returns a string representation of the object, including its MCID.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),635,647,"/**
 * Appends a marked content kid to the parent.
 * @param markedContent The PDMarkedContent object to append.
 */
","* Appends a marked-content sequence kid.
     * 
     * @param markedContent the marked-content sequence with the MCID.
     * @throws IllegalArgumentException if the mcid is negative or doesn't exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:toString(),68,72,"/**
 * Returns a string representation of the object.
 * Concatenates registry, ordering, and supplement.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,fetchCMapUCS2,org.apache.pdfbox.pdmodel.font.PDType0Font:fetchCMapUCS2(),360,407,"/**
 * Fetches and constructs a CMap UCS2 based on font properties.
 */",* Fetches the corresponding UCS2 CMap if the font's CMap is predefined.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isVisibleAnnotation,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isVisibleAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),319,332,"/**
 * Checks if an annotation is visible based on its properties.
 * Returns true if visible, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isMultiLine,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isMultiLine(),681,684,"/**
 * Checks if the field is a multi-line text field.
 * Returns true if it is, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,shallComb,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:shallComb(),698,706,"/**
 * Checks if a field is a comb field (single-line, not password/file).
 */","* Determine if the appearance shall provide a comb output.
     * 
     * <p>
     * May be set only if the MaxLen entry is present in the text field dictionary
     * and if the Multiline, Password, and FileSelect flags are clear.
     * If set, the field shall be automatically divided into as many equally spaced positions,
     * or combs, as the value of MaxLen, and the text is laid out into those combs.
     * </p>
     * 
     * @return the comb state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,computeLabels,"org.apache.pdfbox.pdmodel.common.PDPageLabels:computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler,int)",258,287,"/**
 * Generates page labels based on provided ranges and handler.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",145,297,"/**
 * Prepares decryption by setting up filters and keys.
 * @param encryption PDF encryption object
 * @param documentIDArray Array of document IDs
 * @param decryptionMaterial Decryption material to use
 */","* Prepares everything to decrypt the document.
     *
     * Only if decryption of single objects is needed this should be called.
     *
     * @param encryption  encryption dictionary
     * @param documentIDArray  document id
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType0Font:getDisplacement(int),498,509,"/**
 * Gets the displacement vector for a given code.
 * @param code The character code.
 * @return Displacement vector, or from superclass if not vertical.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSpaceWidth,org.apache.pdfbox.pdmodel.font.PDFont:getSpaceWidth(),553,605,"/**
 * Returns the width of the space character for the font.
 * Uses various methods to determine the width, defaulting to 250f.
 * @return float width of the space character
 */
","* Determines the width of the space character. This is very important for text extraction.
     *
     * @return the width of the space character",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,calculateWidth,"org.apache.pdfbox.pdmodel.interactive.PlainText$Line:calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",258,276,"/**
 * Calculates the total width of words in a PDF font.
 * @param font PDFont object.
 * @param fontSize Font size.
 * @return Total width in PDF units.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFixedPitch(),75,78,"/**
 * Checks if the fixed-pitch flag is enabled.
 * Returns true if enabled, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSerif(),95,98,"/**
 * Checks if the serif flag is enabled.
 * Returns true if serif is enabled, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSymbolic(),115,118,"/**
 * Checks if the symbolic flag is set.
 * Returns true if set, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isScript(),135,138,"/**
 * Checks if the script flag is set.
 * Returns true if the flag is on, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isNonSymbolic(),155,158,"/**
 * Checks if the non-symbolic flag is set.
 * Returns true if the flag is on, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isItalic(),175,178,"/**
 * Checks if the italic flag is set.
 * Returns true if italic is enabled, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isAllCap(),195,198,"/**
 * Checks if the ""all caps"" flag is enabled.
 * Returns true if enabled, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSmallCap(),215,218,"/**
* Checks if the ""small cap"" flag is enabled.
* Uses isFlagBitOn to determine flag status.
*/
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isForceBold(),235,238,"/**
 * Checks if the force bold flag is enabled.
 * Returns true if enabled, false otherwise.
 */
","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getPattern,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor),117,128,"/**
 * Retrieves a pattern by color.
 * @param color The color for which to retrieve the pattern.
 * @return The pattern object.
 * @throws IOException if pattern is not found.
 */
","* Returns the pattern for the given color.
     * 
     * @param color color containing a pattern name
     * @return pattern for the given color
     * @throws java.io.IOException if the pattern name was not found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveNonRootField,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveNonRootField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",197,218,"/**
* Retrieves a field from the PDF parent dictionary.
* Returns the field or null if not found or PDF is broken.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,fromDictionary,"org.apache.pdfbox.pdmodel.interactive.form.PDField:fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
 * Creates a PDField instance from a COSDictionary.
 * @param form  The PDF form.
 * @param field The field dictionary.
 * @param parent The parent non-terminal field.
 */
","* Creates a COSField subclass from the given COS field. This is for reading fields from PDFs.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created, or null if root.
     * @return a new PDField instance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.graphics.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",53,104,"/**
 * Draws an XObject (image or form) from the PDF graphics context.
 * Throws exception if no operands are provided.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasTransparency,org.apache.pdfbox.rendering.PageDrawer:hasTransparency(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1611,1635,"/**
 * Checks if a form has transparency.
 * @param form The form to check.
 * @return True if transparency is found, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasBlendMode,"org.apache.pdfbox.rendering.PageDrawer:hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",2026,2082,"/**
 * Checks if a transparency group has a non-normal blend mode.
 * @param group The transparency group to check.
 * @return True if a blend mode exists, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,toTextString,org.apache.pdfbox.cos.COSStream:toTextString(),363,376,"/**
 * Converts the stream to a string.
 * Returns an empty string if an IO error occurs.
 */
","* Returns the contents of the stream as a PDF ""text string"".
     * 
     * @return the PDF string representation of the stream content",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",63,139,"/**
 * Decodes a JBIG2 image stream into a decoded image.
 * @param encoded Input encoded stream
 * @param decoded Output decoded stream
 * @param parameters COSDictionary containing parameters
 * @param index Index of the image
 * @param options Decode options
 * @return DecodeResult object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createCombinedContentStream,org.apache.pdfbox.multipdf.Overlay:createCombinedContentStream(org.apache.pdfbox.cos.COSBase),340,357,"/**
 * Creates a combined content stream from a COSBase object.
 * @param contents COSBase containing content streams
 * @return Combined COSStream object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(),181,184,"/**
 * Creates an input stream from the underlying COS stream.
 * @return COSInputStream object for reading COS data.
 * @throws IOException if an I/O error occurs.
 */
","* This will get a stream that can be read from.
     * 
     * @return An input stream that can be read from.
     * @throws IOException If an IO error occurs during reading.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFont:readCIDToGIDMap(),399,419,"/**
* Reads the CID-to-GID map from a COS stream.
* @return int[] CID-to-GID mapping or null if no map exists.
* @throws IOException if an I/O error occurs.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,collectPatches,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:collectPatches(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",61,155,"/**
 * Collects patches from a COS stream, decoding and processing them.
 * @param xform AffineTransform for coordinate transformations.
 * @param matrix Matrix for coordinate transformations.
 * @param controlPoints Control points for patch processing.
 * @return List of Patch objects extracted from the stream.
 */","* Create a patch list from a data stream, the returned list contains all the patches contained in the data stream.
     *
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return the obtained patch list
     * @throws IOException when something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",90,209,"/**
 * Collects shaded triangles from a COS stream.
 * @param xform AffineTransform for coordinate transformations.
 * @param matrix Matrix for coordinate transformations.
 * @return List of ShadedTriangle objects.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",86,155,"/**
 * Collects shaded triangles from a COS stream, transforming vertices.
 * @param xform Affine transform for vertex coordinates.
 * @param matrix Matrix for coordinate transformations.
 * @return List of ShadedTriangle objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromStream,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromStream(org.apache.pdfbox.cos.COSStream),110,116,"/**
 * Reads all bytes from a COSStream into a byte array.
 * @param stream COSStream to read from
 * @return Byte array containing stream data
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(org.apache.pdfbox.filter.DecodeOptions),919,923,"/**
* Creates an input stream with specified decode options.
* @param options Decode options to apply
* @return Input stream or null if creation fails
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createDescendantFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",368,386,"/**
 * Creates a PDCIDFont based on the provided dictionary and parent.
 */","* Creates a new PDCIDFont instance with the appropriate subclass.
     *
     * @param dictionary descendant font dictionary
     * @return a PDCIDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromArray,org.apache.pdfbox.pdfwriter.COSWriter:visitFromArray(org.apache.pdfbox.cos.COSArray),1108,1152,"/**
 * Writes COSArray elements to the output, handling dictionaries, arrays, objects, and nulls.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,iterator,org.apache.pdfbox.cos.COSIncrement:iterator(),352,356,"/**
 * Returns an iterator for the objects contained within this object.
 */","* Return an iterator for the determined {@link #objects} contained in this {@link COSIncrement}.
     *
     * @return An iterator for the determined {@link #objects} contained in this {@link COSIncrement}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.pdmodel.common.COSObjectable),104,112,"/**
 * Adds a COSObjectable object to the container.
 * Delegates to add(COSBase) after retrieving COSObject.
 */","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,"org.apache.pdfbox.cos.COSArray:growToSize(int,org.apache.pdfbox.cos.COSBase)",611,620,"/**
 * Resizes the list to the specified size, adding objects if needed.
 * @param size The target size of the list.
 * @param object The object to add if resizing.
 */
","* This will add the object until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.
     * @param object The object to fill the array with.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setFloatArray,org.apache.pdfbox.cos.COSArray:setFloatArray(float[]),655,662,"/**
* Sets the array of floats. Clears existing content and adds new floats.
*/
","* Clear the current contents of the COSArray and set it with the float[].
     *
     * @param value The new value of the float array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSArray,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSArray(org.apache.pdfbox.cos.COSArray),126,142,"/**
 * Clones a COSArray, recursively cloning its elements.
 * @param array The COSArray to clone
 * @return A new COSArray with cloned elements
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createArrayClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createArrayClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",390,411,"/**
 * Creates a cloned COSArray. Recursively clones array elements.
 * @param src Source COSArray to clone.
 * @return Cloned COSArray or null if empty.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneTreeElement,"org.apache.pdfbox.multipdf.Splitter:cloneTreeElement(java.util.Map,java.util.Map,int)",304,348,"/**
* Clones a structure element or array from the source tree.
* @param sp Structure parent identifier.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSArray,org.apache.pdfbox.pdfparser.BaseParser:parseCOSArray(),755,822,"/**
 * Parses a COS array from the input source.
 * @return COSArray object representing the parsed array.
 * @throws IOException if an I/O error occurs.
 */","* This will parse a PDF array object.
     *
     * @return The parsed PDF array.
     *
     * @throws IOException If there is an error parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getStream,org.apache.pdfbox.pdfparser.PDFXRefStream:getStream(),67,116,"/**
* Creates and populates a COSStream object representing the stream.
* @return The created COSStream object.
* @throws IOException if an I/O error occurs.
*/
","* Returns the stream of the XRef.
     * @return the XRef stream
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,initParserValues,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:initParserValues(org.apache.pdfbox.cos.COSStream),66,102,"/**
 * Initializes parser values from a COS stream, validating its structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",118,127,"/**
 * Initializes a COSArrayList with an item, dictionary, and key.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,converterToCOSArray,org.apache.pdfbox.pdmodel.common.COSArrayList:converterToCOSArray(java.util.List),305,348,"/**
* Creates a COSArray from a list of COSObjectable objects.
* Reuses existing array if input is a COSArrayList.
* @return COSArray object containing converted objects.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(),37,43,"/**
 * Initializes a new PDRange object with default values.
 */",* Constructor with an initial range of 0..1.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeValues(),144,163,"/**
* Retrieves the encode array, creating it if null.
* Uses size values to initialize if no encode exists.
*/
","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:<init>(org.apache.pdfbox.cos.COSBase),54,71,"/**
 * Constructs a PDFunctionType2 with a COSBase object.
 * Initializes c0, c1 arrays and exponent from the COS object.
 */","* Constructor.
     *
     * @param function The function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(org.apache.pdfbox.cos.COSArray),47,58,"/**
 * Constructs a PDFourColours object from a COSArray.
 * Pads the array with COSNull if it has fewer than 4 elements.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseArrayElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseArrayElement(org.w3c.dom.Element),285,355,"/**
 * Parses an array element and adds its children to a COSArray.
 * @param arrayEl Element representing the array to parse.
 * @return COSArray object containing parsed elements.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(),38,43,"/**
 * Constructs a new FDFOptionElement with an initialized COSArray.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getWidths(int[]),417,511,"/**
* Creates a COSArray from an array of widths, handling CID variations.
* @param widths array of character widths
* @return COSArray representing the widths
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getVerticalMetrics(int[]),547,668,"/**
 * Parses vertical metrics from an array of values.
 * @param values Array of integer values representing metrics.
 * @return COSArray containing parsed vertical metric data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(),45,50,"/**
 * Initializes a PDFontSetting with a COSArray and default values.
 */","* Creates a blank font setting, font will be null, size will be 1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getCOSObject(),78,85,"/**
 * Creates a COS object containing the array and phase.
 * @return A COSBase object representing the array and phase.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getWhitepoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getWhitepoint(),115,126,"/**
 * Retrieves the whitepoint value. Returns default if not present.
 */","* This will return the whitepoint tristimulus. As this is a required field
     * this will never return null. A default of 1,1,1 will be returned if the
     * pdf does not have any values yet.
     *
     * @return the whitepoint tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getBlackPoint(),135,146,"/**
 * Retrieves the black point tristimulus values.
 * Returns a PDTristimulus object; uses default if null.
 */","* This will return the BlackPoint tristimulus. This is an optional field
     * but has defaults so this will never return null. A default of 0,0,0 will
     * be returned if the pdf does not have any values yet.
     *
     * @return the blackpoint tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toCOSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toCOSArray(),208,216,"/**
 * Creates a COS array from the components, adding pattern name if present.
 * @return COSArray representing the components and pattern name.
 */
","* Returns the color component values as a COS array
     * @return the color component values as a COS array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(),72,81,"/**
 * Initializes a PDDeviceN object with a COSArray and null values.
 */
",* Creates a new DeviceN color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(),39,45,"/**
 * Initializes a PDGamma object with default values for gamma.
 */","* Creates a new gamma.
     * Defaults all values to 0, 0, 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getAlternateColorSpace(),389,432,"/**
 * Gets the alternate color space. Creates default if null.
 * @return PDColorSpace object representing the alternate color space.
 */
","* Returns a list of alternate color spaces for non-conforming readers.
     * WARNING: Do not use the information in a conforming reader.
     * @return A list of alternateColorSpace color spaces.
     * @throws IOException If there is an error getting the alternateColorSpace color spaces.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(),61,68,"/**
 * Initializes an Indexed color space with default values.
 */","* Creates a new Indexed color space.
     * Default DeviceRGB, hival 255.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultRangeArray,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultRangeArray(),184,192,"/**
 * Creates and returns a default range array for PDF processing.
 */","* creates a range array with default values (-100..100 -100..100).
     * @return the new range array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources),46,51,"/**
* Initializes a PDPattern object with provided resources.
* @param resources PDResources object containing pattern data
*/
","* Creates a new pattern color space.
     * 
     * @param resources The current resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(),69,77,"/**
 * Initializes a PDSeparation object with a predefined COSArray.
 */",* Creates a new Separation color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(),38,44,"/**
 * Initializes a PDTristimulus with zero values for tristimulus.
 */","* Constructor. Defaults all values to 0, 0, 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(float[]),59,66,"/**
 * Creates a PDTristimulus object from a float array (up to 3 values).
 */
","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setMatrix(java.awt.geom.AffineTransform),245,255,"/**
 * Sets the transformation matrix for the COS object.
 * @param transform AffineTransform object representing the matrix.
 */
","* Sets the optional Matrix entry for the form XObject.
     * @param transform the transformation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",95,139,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document The document to associate with the image.
 * @param byteArray The byte array containing the image data.
 * @return PDImageXObject created from the byte array.
 */
","* Creates a new JPEG Image XObject from a byte array containing JPEG data.
     *
     * @param document the document where the image will be created
     * @param byteArray bytes of JPEG image
     * @return a new Image XObject
     *
     * @throws IOException if the input stream cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createProcSetArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createProcSetArray(),172,183,"/**
 * Creates and sets the ProcSet array for the PDF structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toCOSArray,org.apache.pdfbox.util.Matrix:toCOSArray(),566,576,"/**
 * Creates a COSArray from a subset of the 'single' array.
 * @return COSArray containing float values from 'single'.
 */
","* Returns a COS array which represent the geometric relevant components of the matrix. The last column of the
     * matrix is ignored, only the first two columns are returned. This is analog to the Matrix(COSArray) constructor.
     * 
     * @return a COSArray representing the geometric relevant components of the matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",254,262,"/**
 * Sets the COS object at the given index.
 * @param index index of the object to set
 * @param object COSObjectable object to set, or null
 */
","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setInt,"org.apache.pdfbox.cos.COSArray:setInt(int,int)",338,341,"/**
* Sets an integer value at the specified index in the COS object.
* @param index The index where the integer will be set.
* @param value The integer value to set.
*/
","* Set the value in the array as an integer.
     *
     * @param index The index into the array.
     * @param value The value to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setName,"org.apache.pdfbox.cos.COSArray:setName(int,java.lang.String)",348,351,"/**
* Sets the name at the given index using a PDF name object.
* @param index Index of the name to set.
* @param name The name to be set.
*/
","* Set the value in the array as a name.
     * @param index The index into the array.
     * @param name The name to set in the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setString,"org.apache.pdfbox.cos.COSArray:setString(int,java.lang.String)",389,399,"/**
* Sets the string at the given index.
* @param index Index of the string to set.
* @param string String to set, or null to clear.
*/
","* Set the value in the array as a string.
     * @param index The index into the array.
     * @param string The string to set in the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteSignature,org.apache.pdfbox.pdfwriter.COSWriter:doWriteSignature(),863,916,"/**
 * Writes the signature byte range and performs signing operations.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMin,org.apache.pdfbox.pdmodel.common.PDRange:setMin(float),107,110,"/**
* Sets the minimum value for the range.
* @param min The minimum value to set.
*/
","* This will set the minimum value for the range.
     *
     * @param min The new minimum for the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMax,org.apache.pdfbox.pdmodel.common.PDRange:setMax(float),128,131,"/**
* Sets the maximum value for the range array.
* @param max The maximum float value to set.
*/
","* This will set the maximum value for the range.
     *
     * @param max The new maximum for the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftX(float),225,228,"/**
* Sets the x-coordinate of the lower-left corner.
* @param value The new x-coordinate value.
*/
","* This will set the lower left x coordinate.
     *
     * @param value The lower left x.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftY(float),245,248,"/**
* Sets the Y coordinate of the lower-left corner of the rectangle.
*/
","* This will set the lower left y coordinate.
     *
     * @param value The lower left y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightX(float),265,268,"/**
* Sets the x-coordinate of the upper-right corner of the rectangle.
*/","* This will set the upper right x coordinate.
     *
     * @param value The upper right x .",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightY(float),285,288,"/**
* Sets the Y coordinate of the rectangle's upper-right corner.
* @param value The new Y coordinate value.
*/
","* This will set the upper right y coordinate.
     *
     * @param value The upper right y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setColourByIndex,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setColourByIndex(int,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",175,187,"/**
* Sets the colour at the given index in the array.
* @param index index of the colour to set
* @param colour the colour to set, or null for COSNull
*/
","* Sets the colour by edge index.
     * 
     * @param index the edge index
     * @param colour the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptArray,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptArray(org.apache.pdfbox.cos.COSArray,long,long)",683,689,"/**
 * Decrypts elements within a COS array.
 * @param array COS array to decrypt.
 * @param objNum Object number for decryption.
 * @param genNum Generation number for decryption.
 */
","* This will decrypt an array.
     *
     * @param array The array to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setOption(java.lang.String),91,94,"/**
* Sets the value of the first option to the given string.
* @param opt The string value to set for the option.
*/
","* This will set the string for an available option.
     *
     * @param opt One of the available options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setDefaultAppearanceString(java.lang.String),111,114,"/**
* Sets the default appearance string in the option object.
* @param da The default appearance string to set.
*/
","* This will set the default appearance string.
     *
     * @param da The default appearance string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFontSize(float),115,118,"/**
* Sets the font size within the font setting.
* @param size The desired font size as a float.
*/
","* This will set the size of the font.
     *
     * @param size The new size of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setColorantNames(java.util.List),495,498,"/**
 * Sets the colorant names array in the given array.
 * @param array the array to set the colorant names in
 * @param names array of COS names to be set
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes),505,521,"/**
 * Sets device attributes to the array. Removes if null.
 * @param attributes The device attributes to set.
 */
","* Sets the color space attributes.
     * If null is passed in then all attribute will be removed.
     * @param attributes the color space attributes, or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),545,554,"/**
* Sets the alternate color space and updates the array.
* @param cs The alternate color space to set.
*/
","* This will set the alternate color space.
     *
     * @param cs The alternate color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setR(float),88,91,"/**
* Sets the red color component (R) to the specified float value.
*/
","* Sets the r value of the tristimulus.
     * @param r the r value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setG(float),106,109,"/**
* Sets the value of the 'g' parameter as a COSFloat.
*/
","* Sets the g value of the tristimulus.
     * @param g the g value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setB(float),124,127,"/**
* Sets the value of the 'b' field to the given float value.
*/
","* Sets the b value of the tristimulus.
     * @param b he b value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setRangeForComponent,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",511,527,"/**
* Sets the range for a component, extending the array if needed.
* @param range The range object containing min/max values.
* @param n The index for setting the range values.
*/","* Sets the range for this color space.
     * @param range the new range for the a component
     * @param n the component to set the range for",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setBaseColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),312,316,"/**
 * Sets the base color space.
 * @param base The PDColorSpace object to set.
 */
","* Sets the base color space.
     * @param base the base color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setColorantName(java.lang.String),274,277,"/**
* Sets the colorant name in the array.
* @param name The colorant name to set.
*/
","* Sets the colorant name.
     * @param name the name of the colorant",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),283,292,"/**
 * Sets the alternate color space for the PDF object.
 * @param colorSpace The color space to set, or null to clear.
 */
","* Sets the alternate color space.
     * @param colorSpace The alternate color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setX(float),91,94,"/**
* Sets the value of the first element to the given float.
*/","* Sets the x value of the tristimulus.
     * @param x the x value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setY(float),109,112,"/**
* Sets the Y coordinate value.
* @param y The Y coordinate to set.
*/
","* Sets the y value of the tristimulus.
     * @param y the y value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setZ(float),127,130,"/**
* Sets the Z coordinate value.
* @param z The Z coordinate to set.
*/
","* Sets the z value of the tristimulus.
     * @param z the z value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",227,235,"/**
 * Sets the item in the dictionary, handling null values.
 * @param key COSName key for the item
 * @param value COSObjectable value to set
 */
","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(java.lang.String,boolean)",254,257,"/**
* Sets a boolean value for the given key in the PDF document.
* @param key The key for the boolean value.
* @param value The boolean value to set.
*/
","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(org.apache.pdfbox.cos.COSName,boolean)",265,268,"/**
* Sets a boolean value for the given key in the document.
* @param key COSName representing the key
* @param value boolean value to set
*/
","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",276,279,"/**
* Sets an item in the dictionary, using the key's PDF name.
* @param key The key for the item.
* @param value The value to set for the key.
*/
","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(org.apache.pdfbox.cos.COSName,java.lang.String)",300,308,"/**
 * Sets the COS name for a key with the given string value.
 * @param key The key to set.
 * @param value The string value to convert to a COS name.
 */
","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(org.apache.pdfbox.cos.COSName,java.lang.String)",372,380,"/**
* Sets a string value for the given key in the COS object.
* @param key COSName representing the key.
* @param value String value to be set.
*/
","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(org.apache.pdfbox.cos.COSName,int)",421,424,"/**
* Sets an integer value for the given key in the document.
* @param key COSName representing the key
* @param value Integer value to set
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(org.apache.pdfbox.cos.COSName,long)",443,447,"/**
* Sets the COS item to the specified long value.
* @param key COS name of the item to set.
* @param value The long value to set.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(org.apache.pdfbox.cos.COSName,float)",484,488,"/**
* Sets the float value for the given key in the COS object.
* @param key COS name representing the key.
* @param value float value to be set.
*/
","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,"org.apache.pdfbox.cos.COSDocument:createCOSStream(org.apache.pdfbox.cos.COSDictionary,long,long)",192,200,"/**
 * Creates a COSStream object with data from a stream.
 * @param dictionary COS dictionary for stream metadata
 * @param startPosition Start position of the stream data
 * @param streamLength Length of the stream data
 * @return COSStream object
 */
","* Creates a new COSStream using the current configuration for scratch files. Not for public use.
     * Only COSParser should call this method.
     * 
     * @param dictionary    the corresponding dictionary
     * @param startPosition the start position within the source
     * @param streamLength  the stream length
     * @return the new COSStream
     * @throws IOException if the random access view can't be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary),351,354,"/**
 * Sets the encryption dictionary in the trailer.
 * @param encDictionary The COSDictionary containing encryption data.
 */
","* This will set the encryption dictionary, this should only be called when
     * encrypting the document.
     *
     * @param encDictionary The encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setDocumentID,org.apache.pdfbox.cos.COSDocument:setDocumentID(org.apache.pdfbox.cos.COSArray),374,377,"/**
* Sets the document ID in the PDF trailer.
* @param id The COSArray representing the document ID.
*/
","* This will set the document ID. This should be an array of two strings. This method cannot be
     * used to remove the document id by passing null or an empty array; it will be recreated. Only
     * the first existing string is used when writing, the second one is always recreated. If you
     * don't want this, you'll have to modify the {@code COSWriter} class, look for {@link COSName#ID}.
     *
     * @param id The document id.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,wrapInSaveRestore,org.apache.pdfbox.multipdf.LayerUtility:wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage),89,130,"/**
* Wraps a PDF page's content in save/restore graphics state.
* Handles both stream and array content types.
*/
","* Some applications may not wrap their page content in a save/restore (q/Q) pair which can
     * lead to problems with coordinate system transformations when content is appended. This
     * method lets you add a q/Q pair around the existing page's content.
     * @param page the page
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,transferDict,"org.apache.pdfbox.multipdf.LayerUtility:transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",291,300,"/**
* Copies specified dictionary entries to a target dictionary.
* @param filter Filter containing names of entries to copy.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSDictionary(org.apache.pdfbox.cos.COSDictionary),168,185,"/**
 * Creates a deep copy of a COSDictionary.
 * @param dictionary The COSDictionary to clone.
 * @return A new COSDictionary that is a deep copy.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneMergeCOSBase,"org.apache.pdfbox.multipdf.PDFCloneUtility:cloneMergeCOSBase(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",204,236,"/**
 * Merges COSBase objects, cloning values for new documents.
 * @param source Source COSBase to merge from.
 * @param target Target COSBase to merge into.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateParentEntry,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",1067,1082,"/**
 * Updates parent entry and structure type for entries in array.
 * @param kArray COSArray to update.
 * @param newParent New parent dictionary.
 * @param newStructureType New structure type (optional).
 */
","* Update the P reference to the new parent dictionary.
     *
     * @param kArray the kids array
     * @param newParent the new parent
     * @param newStructureType the new structure type in /S or null so it doesn't get replaced",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeRoleMap,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.multipdf.PDFCloneUtility)",1189,1220,"/**
 * Merges role map from src to dest, cloning as needed.
 * @param srcStructTree Source structure tree.
 * @param destStructTree Destination structure tree.
 * @param cloner Utility for cloning COS objects.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",1430,1478,"/**
 * Updates page references and clones objects in a tree entry.
 * Uses objMapping to replace existing objects and clones orphans.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeInto,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Set)",1547,1555,"/**
* Copies entries from src to dst, excluding specified keys.
* @param src Source map
* @param dst Destination map
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneRoleMap,"org.apache.pdfbox.multipdf.Splitter:cloneRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",281,297,"/**
 * Copies role map from source to destination structure tree.
 * Copies only roles present in the roleSet.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary),382,450,"/**
 * Searches for a trailer dictionary using a brute-force approach.
 */","* Brute force search for all trailer marker.
     * 
     * @param trailer dictionary to be used as trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchForTrailerItems,org.apache.pdfbox.pdfparser.BruteForceParser:searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary),460,497,"/**
 * Searches for root and info dictionaries within the PDF document.
 * Updates the trailer dictionary with found objects. Returns true if root found.
 */","* Search for the different parts of the trailer dictionary.
     *
     * @param trailer dictionary to be used as trailer dictionary
     * @return true if the root was found, false if not.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,initialParse,org.apache.pdfbox.pdfparser.PDFParser:initialParse(),105,123,"/**
 * Parses the PDF trailer and root object, checks pages.
 * Sets document as decrypted and marks initial parsing done.
 */","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parseNextToken,org.apache.pdfbox.pdfparser.PDFStreamParser:parseNextToken(),97,321,"/**
 * Parses the next token from the input source.
 * Returns COS object or null if end of stream.
 */","* This will parse the next token in the stream.
     *
     * @return The next token in the stream or null if there are no more tokens in the stream.
     *
     * @throws IOException If an io error occurs while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,"org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",1480,1593,"/**
 * Writes the document, handling encryption and ID generation.
 * @param doc The PDDocument to write.
 * @param signInterface Signature interface.
 */","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     * @param signInterface class to be used for signing; {@code null} if external signing would be performed
     *                      or there will be no signing at all
     *
     * @throws IOException If an error occurs while generating the data.
     * @throws IllegalStateException If the document has an encryption dictionary but no protection
     * policy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),172,195,"/**
 * Creates a PDF document using a provided stream cache function.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAcroFormDefaultResource,"org.apache.pdfbox.pdmodel.PDDocument:assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",622,647,"/**
 * Assigns/updates AcroForm default resource dictionary (/DR).
 * Updates /DR if available, merging XObjects if needed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:getDocumentInformation(),753,767,"/**
 * Returns the document information. Lazily initializes if null.
 */","* This will get the document info dictionary. If it doesn't exist, an empty document info
     * dictionary is created in the document trailer.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#getMetadata()}.
     *
     * @return The documents /Info dictionary, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation),778,782,"/**
 * Sets the document information and updates the PDF trailer.
 * @param info The document information object to set.
 */
","* This will set the document information for this document.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata) PDDocumentCatalog#setMetadata(PDMetadata)}.
     *
     * @param info The updated document information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument),74,80,"/**
 * Initializes a PDDocumentCatalog with the given document.
 * @param doc The document to associate with this catalog.
 */
","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getThreads(),217,232,"/**
 * Retrieves a list of PDThread objects from the document's threads array.
 */","* Returns the document's article threads.
     * 
     * @return a list of all threads of the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setThreads(java.util.List),240,244,"/**
* Adds threads array to the root COS object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getActions(),303,312,"/**
 * Returns the additional actions catalog.
 * Creates a new catalog if one doesn't exist.
 */
",* @return The Additional Actions for this Document,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,addOutputIntent,org.apache.pdfbox.pdmodel.PDDocumentCatalog:addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent),436,445,"/**
 * Adds an output intent to the PDF root array.
 * @param outputIntent The output intent to add.
 */
","* Add an OutputIntent to the list.  If there is not OutputIntent, the list is created and the
     * first  element added.
     *
     * @param outputIntent the OutputIntent to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOutputIntents(java.util.List),454,461,"/**
 * Adds output intents to the root COS object as a COS array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog),38,48,"/**
 * Initializes the dictionary with names from the catalog.
 * Creates if catalog's names dictionary is null.
 */
","* Constructor.
     *
     * @param cat The document catalog that this dictionary is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setCropBox,org.apache.pdfbox.pdmodel.PDPage:setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle),460,470,"/**
 * Sets the crop box for the page. Null value removes it.
 * @param cropBox The PDRectangle representing the crop box.
 */
","* This will set the CropBox for this page.
     * 
     * @param cropBox The new CropBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(java.util.List),623,625,"/**
 * Sets the contents of a PDF page item.
 * @param contents COSArray representing the page content.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setThreadBeads,org.apache.pdfbox.pdmodel.PDPage:setThreadBeads(java.util.List),662,664,"/**
* Sets the ""B"" item in the page to a COSArray containing beads.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getActions,org.apache.pdfbox.pdmodel.PDPage:getActions(),693,702,"/**
 * Returns the additional actions for the page.
 * Creates a new COSDictionary if one doesn't exist.
 */
","* Get the page actions.
     * 
     * @return The Actions for this Page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setAnnotations,org.apache.pdfbox.pdmodel.PDPage:setAnnotations(java.util.List),801,803,"/**
 * Sets the annotations for the page.
 * @param page The PDF page object.
 * @param annotations Array of PDF annotation objects.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setViewports,org.apache.pdfbox.pdmodel.PDPage:setViewports(java.util.List),861,868,"/**
 * Sets the viewports on the page, or removes them if null.
 * @param viewports Array of viewports to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(),54,61,"/**
 * Constructs a new, empty PDPageTree. Initializes internal structures.
 */
",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getKids,org.apache.pdfbox.pdmodel.PDPageTree:getKids(org.apache.pdfbox.cos.COSDictionary),138,174,"/**
 * Retrieves child COSDictionaries from a given node.
 * Returns a list of COSDictionaries or an empty list.
 */","* Helper to get kids from malformed PDFs.
     * @param node page tree node
     * @return list of kids",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,sanitizeType,org.apache.pdfbox.pdmodel.PDPageTree:sanitizeType(org.apache.pdfbox.cos.COSDictionary),271,283,"/**
 * Ensures the COSDictionary has the 'Page' type.
 * Sets to 'Page' if null, throws exception if not 'Page'.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,org.apache.pdfbox.pdmodel.common.COSArrayList:add(java.lang.Object),191,211,"/**
* Adds an object to the dictionary, handling strings specially.
* @param o object to add; string objects are wrapped as COSString.
* @return The updated actual object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,clear,org.apache.pdfbox.pdmodel.common.COSArrayList:clear(),416,427,"/**
 * Clears the dictionary, removing all items and notifying parent.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,set,"org.apache.pdfbox.pdmodel.common.COSArrayList:set(int,java.lang.Object)",462,484,"/**
* Sets the element at the specified index in the array.
* Throws exception if the list is filtered.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,"org.apache.pdfbox.pdmodel.common.COSArrayList:add(int,java.lang.Object)",492,515,"/**
* Adds an element at the specified index, handling parent dictionaries and COS objects.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,put,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:put(java.lang.Object,java.lang.Object)",107,111,"/**
* Adds a key-value pair to the map and returns the number of changes.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getCOSObject,org.apache.pdfbox.pdmodel.common.PDPageLabels:getCOSObject(),180,192,"/**
 * Creates a COSDictionary containing an array of labels and values.
 * @return COSDictionary with the created array.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(),38,42,"/**
 * Creates a new complex file specification with type FILESPEC.
 */",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(org.apache.pdfbox.cos.COSDictionary),49,60,"/**
 * Creates a ComplexFileSpecification.
 * @param dict COSDictionary to use, or creates a new one.
 */
","* Constructor. Creates empty COSDictionary if dict is null.
     *
     * @param dict The dictionary that fulfils this file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setRangeValues(org.apache.pdfbox.cos.COSArray),196,200,"/**
 * Sets the range values for the COS object.
 * @param rangeValues The COSArray representing the range values.
 */
","* This will set the range values.
     *
     * @param rangeValues The new range values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setDomainValues(org.apache.pdfbox.cos.COSArray),239,243,"/**
 * Sets the domain values for the COS object.
 * @param domainValues The COSArray representing the domain values.
 */
","* This will set the domain values.
     *
     * @param domainValues The new domain values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setEncodeValues(org.apache.pdfbox.cos.COSArray),207,211,"/**
* Sets the encode values and updates the COS object.
* @param encodeValues The COSArray containing encode values.
*/
","* This will set the encode values.
     *
     * @param encodeValues The new encode values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setDecodeValues(org.apache.pdfbox.cos.COSArray),236,240,"/**
 * Sets the decode values and updates the COS object.
 * @param decodeValues COSArray containing decode parameters.
 */
","* This will set the decode values.
     *
     * @param decodeValues The new decode values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,setAttribute,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",102,107,"/**
 * Sets the value of a PDF attribute.
 * @param attrName Attribute name.
 * @param attrValue The new attribute value.
 */
","* Sets an attribute.
     * 
     * @param attrName the attribute name
     * @param attrValue the attribute value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),263,289,"/**
 * Removes an attribute object from the COS structure.
 * Sets structure element to null after removal.
 */","* Removes an attribute object.
     * 
     * @param attributeObject the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,attributeChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),296,321,"/**
 * Updates the COS array with a new revision number.
 * @param attributeObject The attribute object to check.
 */","* Updates the revision number for the given attribute object.
     * 
     * @param attributeObject the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addClassName(java.lang.String),401,426,"/**
* Adds a class name to the COS array associated with key 'C'.
* Updates revision number.
*/
","* Adds a class name.
     * 
     * @param className the class name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeClassName(java.lang.String),433,463,"/**
 * Removes a class name from the COS object.
 * @param className The name of the class to remove.
 */","* Removes a class name.
     * 
     * @param className the class name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.cos.COSBase),176,200,"/**
* Appends a COSBase object as a child to the COS object's ""K"" entry.
*/","* Appends a COS base kid.
     * 
     * @param object the COS base",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",234,270,"/**
 * Inserts a COSBase object before a reference object in a COS array.
 */","* Inserts an COS base kid before a reference kid.
     * 
     * @param newKid the COS base
     * @param refKid the reference kid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.cos.COSBase),309,349,"/**
 * Removes a kid object from the COS object's kids list.
 * @param object The COSBase object to remove.
 * @return True if the object was removed, false otherwise.
 */","* Removes a COS base kid.
     * 
     * @param object the COS base
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setK(org.apache.pdfbox.cos.COSBase),88,91,"/**
* Sets the 'k' item in the COS object.
* @param k The COSBase value to set for 'k'.
*/
","* Sets the K entry.
     * 
     * @param k the K value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setClassMap(java.util.Map),254,273,"/**
* Updates the class map in the COS object with processed attribute objects.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:setUserProperties(java.util.List),82,85,"/**
* Sets the 'P' item in the COS object to a new COSArray.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setValue(org.apache.pdfbox.cos.COSBase),94,98,"/**
* Sets the value of the COS object and notifies listeners.
* @param value The new value to set.
*/
","* Sets the property value.
     * 
     * @param value the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineColor(),85,98,"/**
 * Returns the guideline color as a PDColor object.
 * Uses default black if color is not already defined.
 */","* Get the RGB color to be used for the guidelines.  This is guaranteed to
     * not return null. The default color is [0,0,0].
     *
     *@return The guideline color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getLineDashPattern(),167,178,"/**
 * Retrieves the line dash pattern. Creates a default if missing.
 * @return PDLineDashPattern object representing the line dash pattern.
 */
","* Get the line dash pattern for this box style.  This is guaranteed to not
     * return null.  The default is [3],0.
     *
     * @return The line dash pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setLineDashPattern(org.apache.pdfbox.cos.COSArray),185,193,"/**
 * Sets the line dash pattern from a COSArray.
 * @param dashArray COSArray representing the dash pattern.
 */
","* Set the line dash pattern associated with this box style.
     *
     * @param dashArray The patter for this box style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setCryptFilterMethod(org.apache.pdfbox.cos.COSName),96,99,"/**
* Sets the cryptographic filter method.
* @param cfm The COSName representing the filter method.
*/
","* This will set the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @param cfm name of the crypt filter method.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setFilter(java.lang.String),149,152,"/**
* Sets the filter for a PDF dictionary item.
* @param filter The filter string to set.
*/
","* Sets the filter entry of the encryption dictionary.
     *
     * @param filter The filter name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerKey(byte[]),261,264,"/**
* Sets the owner key for the dictionary.
* @param o The owner key as a byte array.
* @throws IOException if an I/O error occurs.
*/
","* This will set the O entry in the standard encryption dictionary.
     *
     * @param o A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserKey(byte[]),300,303,"/**
* Sets the user key in the dictionary as a COSString.
* @param u The user key as a byte array.
* @throws IOException if an I/O error occurs.
*/
","* This will set the U entry in the standard encryption dictionary.
     *
     * @param u A 32 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerEncryptionKey(byte[]),339,342,"/**
 * Sets the owner encryption key in the dictionary.
 * @param oe The owner encryption key as a byte array.
 * @throws IOException if an I/O error occurs.
 */
","* This will set the OE entry in the standard encryption dictionary.
     *
     * @param oe A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserEncryptionKey(byte[]),369,372,"/**
* Sets the user encryption key in the dictionary.
* @param ue The user encryption key as a byte array.
* @throws IOException if an I/O error occurs.
*/
","* This will set the UE entry in the standard encryption dictionary.
     *
     * @param ue A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRecipients,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRecipients(byte[][]),429,439,"/**
 * Sets the recipients for the PDF dictionary.
 * @param recipients Byte array of recipients.
 * @throws IOException if an I/O error occurs.
 */
","* This will set the Recipients field of the dictionary. This field contains an array
     * of string.
     * @param recipients the array of bytes arrays to put in the Recipients field.
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setCryptFilterDictionary,"org.apache.pdfbox.pdmodel.encryption.PDEncryption:setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",513,523,"/**
 * Sets the crypt filter dictionary for the document.
 * @param cryptFilterName Filter name.
 * @param cryptFilterDictionary Filter dictionary object.
 */
","* Sets the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * @param cryptFilterDictionary the crypt filter to set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStreamFilterName(org.apache.pdfbox.cos.COSName),564,567,"/**
* Sets the stream filter name in the dictionary.
* @param streamFilterName The COSName representing the filter.
*/
","* Sets the name of the filter which is used for de/encrypting streams.
     * 
     * @param streamFilterName the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStringFilterName(org.apache.pdfbox.cos.COSName),586,589,"/**
* Sets the name of the string filter in the dictionary.
* @param stringFilterName The COSName representing the filter.
*/
","* Sets the name of the filter which is used for de/encrypting strings.
     * 
     * @param stringFilterName the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPerms(byte[]),598,601,"/**
* Sets the permissions for the item using the provided byte array.
*/
","* Set the Perms entry in the encryption dictionary.
     *
     * @param perms A 16 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,removeV45filters,org.apache.pdfbox.pdmodel.encryption.PDEncryption:removeV45filters(),624,629,"/**
 * Removes V45 filters from the dictionary.
 */","* remove CF, StmF, and StrF entries. This is to be called if V is not 4 or 5.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(),107,111,"/**
 * Creates a new FDF annotation with type ANNOT.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setColor(java.awt.Color),467,475,"/**
 * Sets the color of the annotation using the provided Color object.
 */","* Set the annotation color.
     *
     * @param c The annotation color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRichContents(java.lang.String),876,879,"/**
* Sets the rich contents for the annotation.
* @param rc The rich content string to set.
*/
","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setInteriorColor(java.awt.Color),105,113,"/**
 * Sets the interior color of the annotation.
 * @param color The color to set; null for no color.
 */
","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setCallout(float[]),144,147,"/**
 * Sets the callout data for the annotation.
 * @param callout float array representing the callout data
 */
","* This will set the coordinates of the callout line.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:setInkList(java.util.List),124,131,"/**
 * Updates annotation's inklist with a new COSArray of ink arrays.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLine(float[]),162,165,"/**
* Sets the line data for annotation.
* @param line Array of floats representing the line coordinates.
*/
","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param line array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setInteriorColor(java.awt.Color),251,259,"/**
 * Sets the interior color of the annotation.
 * @param color The color to set; null for no color.
 */
","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionHorizontalOffset(float),386,398,"/**
 * Sets the horizontal offset for the annotation's caption.
 * @param offset The horizontal offset value.
 */
","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionVerticalOffset(float),416,427,"/**
 * Sets the vertical offset for the annotation's caption.
 * @param offset The vertical offset value.
 */
","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setVertices(float[]),116,119,"/**
* Sets the vertices for the annotation.
* @param vertices An array of vertex coordinates.
*/
","* This will set the coordinates of the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setInteriorColor(java.awt.Color),137,145,"/**
* Sets the interior color of the annotation.
* @param color The Color object representing the new color.
*/
","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the drawn area.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setVertices(float[]),133,136,"/**
 * Sets the vertices data for the annotation.
 * @param vertices Array of float values representing vertices.
 */
","* This will set the coordinates of the the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setInteriorColor(java.awt.Color),220,228,"/**
 * Sets the interior color of the annotation.
 * @param color The color to set; null for no color.
 */
","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setInteriorColor(java.awt.Color),106,114,"/**
 * Sets the interior color of the annotation.
 * @param color The color to set; null for no color.
 */
","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,setCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:setCoords(float[]),87,90,"/**
* Sets the coordinates for the annotation.
* @param coords Array of float coordinates.
*/
","* Set the coordinates of individual words or group of words.
     * 
     * The quadliterals shall encompasses a word or group of contiguous words in the text underlying the annotation. The
     * coordinates for each quadrilateral shall be given in the order x1 y1 x2 y2 x3 y3 x4 y4.
     *
     * @param coords an array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setID(org.apache.pdfbox.cos.COSArray),315,318,"/**
* Sets the ID of the FDF object.
* @param id The COSArray representing the ID.
*/
","* This will set the FDF id.
     *
     * @param id The new id for the FDF.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFields(java.util.List),347,349,"/**
* Sets the fields array for the FDF object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setPages(java.util.List),399,401,"/**
* Sets the pages array in the FDF object.
* @param pages COSArray representing the PDF pages
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setAnnotations(java.util.List),460,462,"/**
* Sets the annotations for a PDF dictionary item.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setDifferences(org.apache.pdfbox.cos.COSStream),479,482,"/**
* Sets the differences COSStream within the FDF object.
*/
","* This will set the differences stream.
     *
     * @param diff The new differences stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEmbeddedFDFs(java.util.List),535,537,"/**
* Sets the embedded FDFS array within the PDF dictionary.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setKids,org.apache.pdfbox.pdmodel.fdf.FDFField:setKids(java.util.List),198,200,"/**
* Sets the ""KIDS"" field of the COS object to a new COSArray.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(java.lang.Object),293,313,"/**
* Sets the value of the field, handling List, String, and COSObjectable types.
* @param value The value to set; throws IOException for unknown types.
*/
","* You should pass a String, or a List&lt;String&gt; to set the value.
     *
     * @param value The value that should populate when imported.
     *
     * @throws IOException If there is an error setting the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(org.apache.pdfbox.cos.COSBase),320,323,"/**
* Sets the value of the field to the provided COSBase object.
*/
","* Sets the COS value of this field.
     *
     * @param value COS value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(java.lang.Integer),348,356,"/**
 * Sets the field flags.
 * @param ff Integer representing field flags; null to clear.
 */
","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(java.lang.Integer),392,400,"/**
 * Sets the 'Set FF' item in the field with the provided Integer.
 * @param ff Integer value to set; null to clear.
 */
","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(java.lang.Integer),436,444,"/**
 * Sets the clear field flags on the field object.
 * @param ff Integer representing the clear field flags.
 */
","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(java.lang.Integer),480,488,"/**
* Sets the widget field flags.
* @param f Integer representing the flags to set.
*/
","* This will set the widget field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(java.lang.Integer),524,532,"/**
* Sets the 'SET_F' item in the field with the given flag value.
*/
","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(java.lang.Integer),568,576,"/**
* Sets the clear widget field flags.
* @param ff Integer representing the flags to set.
*/
","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear widget field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSString),765,768,"/**
* Sets the rich text value for the field.
* @param rv The rich text COSString to set.
*/
","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSStream),775,778,"/**
* Sets the rich text content of the field.
* @param rv COSStream representing the rich text data.
*/
","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setBefore(java.lang.String),97,100,"/**
* Sets the ""Before"" item in the dictionary.
* @param before The value to set for the ""Before"" item.
*/
","* This will set the javascript code the will get execute before the import.
     *
     * @param before A reference to some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setAfter(java.lang.String),129,132,"/**
* Sets the ""After"" item in the dictionary with the given string.
*/","* This will set the javascript code the will get execute after the import.
     *
     * @param after A reference to some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setDoc(java.util.Map),173,181,"/**
* Adds document keys/values to a COS array within a dictionary.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:setTemplates(java.util.List),92,94,"/**
* Sets the templates array for the PDF page.
* @param templates COSArray containing template objects.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setFields(java.util.List),113,115,"/**
 * Sets the fields of the template using the provided fields array.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(java.util.TreeMap),280,309,"/**
 * Generates and sets the item widths array for the CID font.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalHeader,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary),311,332,"/**
 * Builds the vertical header table, setting DW2 if necessary.
 * @param cidFont The COSDictionary for the font.
 * @return True if successful, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(),72,80,"/**
 * Initializes a PDF font object with default properties.
 */",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(),54,58,"/**
 * Initializes a PDFontDescriptor with a font description dictionary.
 */","* Package-private constructor, for embedding.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontName(java.lang.String),295,303,"/**
 * Sets the font name in the dictionary.
 * @param fontName The name of the font.
 */
","* This will set the font name.
     *
     * @param fontName The new name for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFamily(java.lang.String),320,328,"/**
 * Sets the font family for the dictionary.
 * @param fontFamily The font family string to set.
 */
","* This will set the font family.
     *
     * @param fontFamily The font family.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontStretch(java.lang.String),371,379,"/**
* Sets the font stretch value in the dictionary.
* @param fontStretch String representing the font stretch.
*/
","* This will set the font stretch.
     *
     * @param fontStretch The new stretch for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),427,435,"/**
 * Sets the font bounding box in the dictionary.
 * @param rect The PDRectangle object representing the bbox.
 */
","* Set the fonts bounding box.
     *
     * @param rect The new bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCharacterSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCharacterSet(java.lang.String),711,719,"/**
 * Sets the character set for the dictionary.
 * @param charSet The character set string to set.
 */
","* This will set the character set for the font.
     *
     * @param charSet The new character set for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,fixType0Subtype,"org.apache.pdfbox.pdmodel.font.PDFontFactory:fixType0Subtype(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",192,212,"/**
* Adjusts font descriptors and subtypes for compatibility.
* @param descendantFont Descendant font dictionary.
* @param fontDescriptor Font descriptor dictionary.
* @param newSubType New subtype for the font.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",48,71,"/**
 * Initializes a DictionaryEncoding with base encoding and differences.
 * @param baseEncoding The base encoding COS name.
 * @param differences COSArray representing differences to apply.
 */
","* Creates a new DictionaryEncoding for embedding.
     *
     * @param baseEncoding the base encoding of this encoding
     * @param differences the differences of this encoding with regard to the base encoding",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:setGamma(float),123,126,"/**
* Sets the gamma value in the dictionary.
* @param value the gamma value to set
*/
","* Set the gamma value.
     *
     * @param value The new gamma value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getGamma(),121,133,"/**
 * Retrieves the gamma array. Creates a default if missing.
 * @return PDGamma object representing the gamma array.
 */
","* Returns the gamma value.
     * If none is present then the default of 1,1,1 will be returned.
     * @return the gamma value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),157,165,"/**
* Sets the gamma value in the dictionary.
* @param gamma The PDGamma object to set.
*/
","* Sets the gamma value.
     * @param gamma the new gamma value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setMatrix(org.apache.pdfbox.util.Matrix),172,191,"/**
 * Sets the matrix value in the dictionary from a Matrix object.
 */","* Sets the linear interpretation matrix.
     * Passing in null will clear the matrix.
     * @param matrix the new linear interpretation matrix, or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getColorants(org.apache.pdfbox.pdmodel.PDResources),80,98,"/**
 * Retrieves colorants from resources, creating them if needed.
 * @param resources PDResources object for resource access
 * @return Map of colorant names to PDSeparation objects.
 */
","* Returns a map of colorants and their associated Separation color space.
     * @param resources resources, can be null.
     * @return map of colorants to color spaces, never null.
     * @throws IOException If there is an error reading a color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,setColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:setColorants(java.util.Map),128,135,"/**
 * Adds colorants to the dictionary, converting them to a COSDictionary.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(),40,44,"/**
 * Initializes a PDTransparencyGroupAttributes object.
 * Creates a COSDictionary and sets the 'S' item to 'TRANSPARENCY'.
 */
",* Creates a group object with /Transparency subtype entry.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),194,203,"/**
 * Sets the color space for the PDF object.
 * @param colorSpace The color space object to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setFilters(java.util.List),267,270,"/**
* Sets the filters parameter in the COS object.
* @param filters COSNames representing the filters.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setDecode(org.apache.pdfbox.cos.COSArray),272,276,"/**
* Sets the decode parameter to the provided COSArray.
* @param decode The COSArray to set as the decode parameter.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildDecodeParams,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",464,470,"/**
 * Creates a COSDictionary with decoding parameters from the state.
 * @return COSDictionary containing decoding parameters.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(),38,41,"/**
 * Initializes the dictionary with the OCMD type.
 */",* Creates a new optional content membership dictionary (OCMD).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setVisibilityPolicy(org.apache.pdfbox.cos.COSName),118,121,"/**
* Sets the visibility policy for the dictionary.
* @param visibilityPolicy COSName representing the visibility policy.
*/
","* Sets the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     * 
     * @param visibilityPolicy the visibility policy name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOCGs(),115,124,"/**
 * Retrieves or creates the OCGs array from the dictionary.
 * Returns the COSArray representing the OCGs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setMatrix(java.awt.geom.AffineTransform),143,153,"/**
 * Sets the transformation matrix for the COS object.
 * @param transform AffineTransform object containing matrix values.
 */
","* Sets the optional Matrix entry for the Pattern.
     * @param transform the transformation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),232,242,"/**
* Sets the bounding box of the PDF object.
* @param bbox The PDRectangle representing the bounding box.
*/
","* This will set the BBox (bounding box) for this Pattern.
     * @param bbox The new BBox for this Pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBackground(org.apache.pdfbox.cos.COSArray),142,146,"/**
 * Sets the background COS array and updates the dictionary.
 * @param newBackground The new background COS array.
 */
","* This will set the background.
     *
     * @param newBackground the new background",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),187,198,"/**
 * Sets the bounding box (bBox) of the object.
 * If null, removes it from the dictionary; otherwise, sets it.
 */
","* This will set the BBox (bounding box) for this Shading.
     *
     * @param newBBox the new BBox",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),254,265,"/**
 * Sets the color space for this object.
 * @param colorSpace The color space to set.
 */
","* This will set the color space for the shading.
     *
     * @param colorSpace the color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.cos.COSArray),324,329,"/**
 * Sets the function array for the COS object.
 * @param newFunctions The new function array to set.
 */
","* This will set the functions COSArray for the color conversion.
     *
     * @param newFunctions the new COSArray containing all functions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setMatrix(java.awt.geom.AffineTransform),66,76,"/**
 * Sets the transformation matrix for the COS object.
 * @param transform AffineTransform object containing the matrix.
 */
","* Sets the optional Matrix entry for the function based shading.
     *
     * @param transform the transformation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setDomain(org.apache.pdfbox.cos.COSArray),97,101,"/**
 * Sets the domain of the COS object.
 * @param newDomain The new domain to set.
 */
","* Sets the optional Domain entry for the function based shading.
     *
     * @param newDomain the domain array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setExtend(org.apache.pdfbox.cos.COSArray),70,74,"/**
 * Sets the extend array and updates the COS object.
 * @param newExtend The new extend array to set.
 */
","* Sets the optional Extend entry for this shading.
     *
     * @param newExtend the extend array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setDomain(org.apache.pdfbox.cos.COSArray),95,99,"/**
 * Sets the domain of the COS object.
 * @param newDomain The new domain to set.
 */
","* Sets the optional Domain entry for this shading.
     *
     * @param newDomain the domain array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setCoords(org.apache.pdfbox.cos.COSArray),120,124,"/**
 * Sets the coordinates and updates the COS object.
 * @param newCoords The new coordinates to set.
 */
","* Sets the Coords entry for this shading.
     *
     * @param newCoords the coordinates array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
 * Sets the decode values and updates the COS object.
 * @param decodeValues The COSArray containing decode values.
 */
","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(),46,51,"/**
 * Initializes a new PDExtendedGraphicsState with a COSDictionary.
 */","* Default constructor, creates blank graphics state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),592,595,"/**
* Sets the blend mode for the PDF object.
* @param bm The BlendMode to set.
*/
","* Set the blending mode.
     * 
     * @param bm blend mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFloatItem,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)",656,666,"/**
 * Sets a float value for a given key in the dictionary.
 * Removes if value is null, otherwise sets a COSFloat.
 */
","* This will set a float object.
     *
     * @param key The key to the data that we are setting.
     * @param value The value that we are setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer(org.apache.pdfbox.cos.COSBase),694,697,"/**
* Sets the transfer object within the dictionary.
* @param transfer The COSBase object representing the transfer.
*/
","* This will set the transfer function of the /TR dictionary.
     *
     * @param transfer The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer2(org.apache.pdfbox.cos.COSBase),727,730,"/**
* Sets the TR2 item in the dictionary with the given COSBase.
*/","* This will set the transfer function of the /TR2 dictionary.
     *
     * @param transfer2 The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setNext(java.util.List),157,159,"/**
* Sets the ""Next"" item in the action dictionary to a COS array.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setT(org.apache.pdfbox.cos.COSBase),69,72,"/**
* Sets the 'T' action item to the provided COSBase object.
*/",* @param t annotation or annotations,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setH(boolean),87,90,"/**
 * Sets the 'H' property of the action item to the given boolean value.
 */",* @param h hide flag,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setD(org.apache.pdfbox.cos.COSBase),108,111,"/**
* Sets the 'D' item in the action object with the provided COSBase.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFields(org.apache.pdfbox.cos.COSArray),67,70,"/**
* Sets the form's fields to the provided COS array.
* @param array COSArray containing the form field data.
*/
",* @param array the array of fields,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSound(org.apache.pdfbox.cos.COSStream),61,64,"/**
* Sets the sound stream for the action.
* @param sound The COSStream representing the sound.
*/
","* Sets the sound object.
     * 
     * @param sound the sound object defining the sound that shall be played.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFields(org.apache.pdfbox.cos.COSArray),93,96,"/**
* Sets the form's fields to the provided COS array.
* @param array COSArray containing field data.
*/
",* @param array the array of fields,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setD(org.apache.pdfbox.cos.COSBase),71,74,"/**
* Sets the 'D' item in the action with the provided COSBase.
* @param d The COSBase object to set as the 'D' item.
*/
",* @param d The destination.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setB(org.apache.pdfbox.cos.COSBase),109,112,"/**
* Sets the 'B' item in the action object with the provided COSBase.
*/
",* @param b The destination.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setRelationship(org.apache.pdfbox.cos.COSName),88,95,"/**
 * Sets the relationship type. Valid values are ""P"" or ""C"".
 * @param relationship COSName representing the relationship type.
 */
","* Set the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @param relationship Valid values are P (the target is the parent of the current document) and
     * C (the target is a child of the current document).
     *
     * throws IllegalArgumentException if the parameter is not P or C.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(),173,177,"/**
* Constructs a new PDAnnotation object.
* Initializes the annotation's dictionary with type 'ANNOT'.
*/
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),184,196,"/**
 * Constructs a PDAnnotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     * 
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),282,285,"/**
* Sets the rectangle object in the dictionary.
* @param rectangle The PDRectangle object to set.
*/
","* This will set the rectangle for this annotation.
     * 
     * @param rectangle The new rectangle values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setBorder(org.apache.pdfbox.cos.COSArray),764,767,"/**
* Sets the border of the COS object using the provided array.
* @param borderArray COSArray representing the border style.
*/
","* This will set the border array.
     * 
     * @param borderArray the border array to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float,float,float,float)",76,84,"/**
 * Sets the rectangular differences (margins) in the COS object.
 * @param differenceLeft Left margin value.
 * @param differenceTop Top margin value.
 * @param differenceRight Right margin value.
 * @param differenceBottom Bottom margin value.
 */
","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float,float,float,float)",163,171,"/**
 * Sets the rectangular differences (margins) in the COS object.
 * @param differenceLeft Left margin value.
 * @param differenceTop Top margin value.
 * @param differenceRight Right margin value.
 * @param differenceBottom Bottom margin value.
 */
","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setCallout(float[]),194,197,"/**
 * Sets the callout data for the COS object.
 * @param callout Array of floats representing callout data.
 */
","* This will set the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:setInkList(float[][]),65,78,"/**
 * Sets the ink list to the COS object. Null list removes it.
 * @param inkList 2D float array representing the ink list.
 */
","* Sets the paths that make this annotation.
     *
     * @param inkList An array of arrays, each representing a stroked path. Each array shall be a
     * series of alternating horizontal and vertical coordinates. If the parameter is null the entry
     * will be removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLine(float[]),135,138,"/**
* Sets the line data for the PDF object.
* @param l An array of floats representing the line coordinates.
*/
","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param l array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionHorizontalOffset(float),352,363,"/**
 * Sets the horizontal offset for the caption.
 * @param offset The offset value to set.
 */
","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionVerticalOffset(float),381,392,"/**
 * Sets the vertical offset for the caption.
 * @param offset The vertical offset value.
 */
","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setQuadPoints(float[]),201,204,"/**
* Sets the quad points for the COS object.
* @param quadPoints Array of float values representing quad points.
*/
","* This will set the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @param quadPoints an array representing the set of area covered.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setRichContents(java.lang.String),156,159,"/**
* Sets the rich contents for the PDF object.
* @param rc The rich content string to set.
*/
","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setVertices(float[]),124,127,"/**
 * Sets the vertices of the object using the provided float array.
 */","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setVertices(float[]),170,173,"/**
* Sets the vertices of the COS object with the given points.
* @param points Array of float values representing vertices.
*/
","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setParent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup),84,87,"/**
* Sets the parent annotation markup for this object.
* @param annot The parent annotation markup object.
*/","* This will set the markup annotation which this popup relates to.
     *
     * @param annot the markup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float,float,float,float)",152,160,"/**
 * Sets the rectangular differences (margins) in the COS object.
 * @param differenceLeft Left margin value.
 * @param differenceTop Top margin value.
 * @param differenceRight Right margin value.
 * @param differenceBottom Bottom margin value.
 */
","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:setQuadPoints(float[]),59,62,"/**
* Sets the quad points array within the COS object.
* @param quadPoints Array of floats representing quad points.
*/
","* This will set the set of quadpoints which encompass the areas of this annotation.
     *
     * @param quadPoints an array representing the set of area covered",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(),36,41,"/**
 * Initializes a new PDAppearanceDictionary with a base dictionary.
 */",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setDashStyle(org.apache.pdfbox.cos.COSArray),160,163,"/**
* Sets the dash style for the COS object.
* @param dashArray The dash style array to set.
*/
","* This will set the dash style used for drawing the border.
     *
     * @param dashArray the dash style to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getDashStyle(),170,180,"/**
 * Retrieves the line dash pattern. Creates a default if none exists.
 */","* This will retrieve the dash style used for drawing the border.
     *
     * @return the dash style of the border",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setOS(java.lang.String),233,250,"/**
 * Sets the OS value in the dictionary. Null value removes it.
 * @param os The OS string to set, or null to remove.
 */
","* Indicates the operating system. The string format isn't specified yet. Value will be stored
     * as first item of the array, as specified in PDF Signature Build Dictionary Specification for
     * PDF v1.7.
     *
     * @param os is a string with the system id or name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(),83,88,"/**
 * Initializes a PDSeedValue object with a COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilter(org.apache.pdfbox.cos.COSName),264,267,"/**
* Sets the filter for the dictionary.
* @param filter The filter to set.
*/
","* (Optional) The signature handler that shall be used to sign the signature field.
     *
     * @param filter is the filter that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilter(java.util.List),293,296,"/**
* Sets the subfilter COS name within the dictionary.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethod(java.util.List),325,336,"/**
 * Validates digest methods and adds them to the dictionary.
 * @param digestMethod List of digest method names.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasons(java.util.List),391,393,"/**
* Sets the reasons array in the dictionary.
* @param dictionary The dictionary to modify.
* @param reasons Array of reasons as COS strings.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setMPD,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP),427,433,"/**
 * Sets the MPD (Metadata Protection Dictionary) to the dictionary.
 * @param mdp The PDSeedValueMDP object to set.
 */
","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @param mdp dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp),478,484,"/**
 * Sets the timestamp value in the dictionary.
 * @param timestamp The timestamp value to set.
 */
","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @param timestamp dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestation(java.util.List),506,509,"/**
* Sets the legal attestation to the dictionary as a COS array.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(),71,76,"/**
 * Constructs a PDSeedValueCertificate with default settings.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubject(java.util.List),235,237,"/**
* Sets the document subject using a list of byte arrays.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addSubject(byte[]),245,254,"/**
* Adds a subject to the dictionary's subject array.
* @param subject byte array representing the subject.
*/
","* (Optional) byte array containing DER-encoded X.509v3 certificate that is acceptable for
     * signing. works like {@link #setSubject(List)} but one byte array
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDN(java.util.List),310,319,"/**
 * Converts subject DN items to COSDictionaries and adds to dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsage(java.util.List),378,381,"/**
* Sets the key usage extensions in the dictionary.
* @param keyUsageExtensions COS strings representing key usages
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(java.lang.String),389,406,"/**
* Adds a key usage extension to the COS array, validating characters.
* @param keyUsageExtension The key usage extension string (0, 1, X).
*/
","* (Optional; PDF 1.7) specifies an acceptable key-usage extension that must be presennt in the
     * signing certificate for works like {@link #setKeyUsage(List)} but takes only one string
     *
     * @param keyUsageExtension String that consist only of {0, 1, X}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuer(java.util.List),472,474,"/**
* Sets the ""Issuer"" field in the dictionary to a COS array.
* @param issuers List of byte arrays representing issuers.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addIssuer(byte[]),483,492,"/**
 * Adds an issuer to the dictionary's issuer array.
 * @param issuer byte array representing the issuer.
 */
","* array of bytes containing DER-encoded X.509v3 certificates of acceptable issuers. If the
     * signer’s certificate chains up to any of the specified issuers (either directly or
     * indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOID(java.util.List),528,530,"/**
* Sets the OID item in the dictionary using a COS array.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addOID(byte[]),537,546,"/**
* Adds an OID (object identifier) to the dictionary's OID array.
* @param oid byte array representing the OID.
*/
","* works like {@link #setOID(List)} but for one object
     *
     * @param oid Object Identifier of a certificate policy to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(),90,94,"/**
 * Initializes a PDSignature object with a dictionary and type.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setType(org.apache.pdfbox.cos.COSName),122,125,"/**
* Sets the type of the COS object.
* @param type The COSName representing the type.
*/
","* Set the dictionary type.
     *
     * @param type is the dictionary type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setFilter(org.apache.pdfbox.cos.COSName),132,135,"/**
* Sets the filter for the dictionary.
* @param filter The filter to set.
*/
","* Set the filter.
     *
     * @param filter the filter to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSubFilter(org.apache.pdfbox.cos.COSName),142,145,"/**
* Sets the subfilter for the dictionary.
* @param subfilter The COSName representing the subfilter.
*/
","* Set a subfilter that specify the signature that should be used.
     *
     * @param subfilter the subfilter that shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setByteRange(int[]),277,291,"/**
 * Sets the byte range for the dictionary.
 * @param range An array of 4 integers representing the byte range.
 */
","* Sets the byte range.
     *
     * @param range the byte range to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContents(byte[]),395,399,"/**
 * Sets the contents of the dictionary with a COSString.
 * @param bytes The byte array representing the string contents.
 */
","* Sets the contents.
     *
     * @param bytes contents to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectProcSetArray,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",341,352,"/**
* Sets the ProcSet for multiple PDF resources.
* @param procSet COSArray representing the procedure set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createWidgetDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",389,399,"/**
 * Creates a widget dictionary for a signature field.
 * @param signatureField Signature field object.
 * @param holderFormResources Resources holder object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(java.awt.Color),340,343,"/**
* Sets the text color of the PDF object.
* @param textColor The PDColor object representing the color.
*/
","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument),85,90,"/**
 * Constructs a PDAcroForm, initializing its document and fields.
 */","* Constructor.
     *
     * @param doc The document that this form is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setFields(java.util.List),410,412,"/**
* Sets the fields array in the dictionary.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCalcOrder(java.util.List),729,731,"/**
 * Sets the ""CO"" item in the dictionary to a COSArray of fields.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),64,68,"/**
 * Constructs a PDButton from a PDAcroForm.
 * Sets the field type to ""BTN"" in the COS object.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setExportValues(java.util.List),272,282,"/**
 * Sets/removes the COS array of values based on the input.
 * @param values COS array of strings, or null/empty to remove.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),52,56,"/**
* Constructs a PDChoice object from a PDAcroForm.
* Sets the field type to choice.
*/
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List),109,123,"/**
 * Updates COS object with sorted display values or removes it.
 * @param displayValues List of strings to display, or empty.
 * @param isSort Whether to sort the display values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List,java.util.List)",144,177,"/**
 * Populates the COS object's OPT item with key-value pairs, or removes it if inputs are invalid.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSelectedOptionsIndex(java.util.List),245,259,"/**
* Sets or removes the 'I' item array in the COS object.
* Values are set if provided, otherwise the item is removed.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setChildren(java.util.List),161,164,"/**
* Sets the ""KIDS"" array in the COS object with the provided children.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(org.apache.pdfbox.cos.COSBase),214,219,"/**
* Sets the value of the COS object.
* @param object The COSBase object to set as the value.
*/
","* Sets the value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param object the new value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setDefaultValue(org.apache.pdfbox.cos.COSBase),258,261,"/**
* Sets the default value of the COS object.
* @param value The COSBase value to set as default.
*/
","* Sets the default of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param value the default value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,54,"/**
 * Constructs a PDSignatureField from a PDAcroForm.
 * Initializes signature properties and locks the first widget.
 */
","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroForm for this field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,48,"/**
* Constructs a PDTextField associated with a PDAcroForm.
* Sets the field type to text.
*/
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultStyleString(java.lang.String),166,176,"/**
 * Sets the default style string or removes it if null.
 * @param defaultStyleString The default style string to set.
 */
","* Set the default style string.
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param defaultStyleString a string describing the default style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setRichTextValue(java.lang.String),238,248,"/**
* Sets the rich text value in the COS object.
* Null value removes the RV item.
*/
","* Set the fields rich text value.
     * 
     * <p>
     * Setting the rich text value will not generate the appearance
     * for the field.
     * <br>
     * You can set {@link PDAcroForm#setNeedAppearances(Boolean)} to
     * signal a conforming reader to generate the appearance stream.
     * </p>
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param richTextValue a rich text string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCoordSystemOrigin(float[]),311,314,"/**
* Sets the origin of the coordinate system.
* @param coordSystemOrigin Array representing the origin coordinates.
*/
","* This will set the origin of the coordinate system.
     * 
     * @param coordSystemOrigin the origin",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(),49,53,"/**
 * Initializes a PDThread object with a COSDictionary and type.
 */","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection),139,142,"/**
* Sets the transition direction.
* @param direction The transition direction to set.
*/","* Sets the direction in which the specified transition effect shall move. Only for {@link PDTransitionStyle#Wipe},
     * {@link PDTransitionStyle#Glitter}, {@link PDTransitionStyle#Fly}, {@link PDTransitionStyle#Cover},
     * {@link PDTransitionStyle#Uncover} and {@link PDTransitionStyle#Push}.
     * 
     * @param direction the direction in which the specified transition effect shall move",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDuration(float),155,158,"/**
* Sets the duration of the COS object to the given duration.
* @param duration The duration value to set.
*/
","* @param duration The duration of the transition effect, in seconds.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyScale(float),173,176,"/**
* Sets the fly scale value within the COS object.
* @param scale The scale value to set.
*/
","* @param scale The starting or ending scale at which the changes shall be drawn. Only for
     * {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyAreaOpaque(boolean),191,194,"/**
* Sets the opacity of the fly area to the specified boolean value.
*/
","* @param opaque If true, the area that shall be flown in is rectangular and opaque. Only for
     * {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(java.util.Collection),253,268,"/**
* Adds a collection to the list, handles parent dict, and returns the size.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFontColor,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFontColor(java.util.List),189,207,"/**
 * Sets font color based on operands, throws exception if invalid.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,"org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(int,java.util.Collection)",276,292,"/**
* Adds COS objects to the array and updates parent dictionary if present.
* @param index insertion index
* @param c COS object list to add
* @return Number of added elements
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(org.apache.pdfbox.cos.COSArray),188,197,"/**
 * Adds all objects from the given COSArray to the internal list.
 * @param objectList COSArray containing objects to add.
 */
","* This will add all objects to this array.
     *
     * @param objectList The list of objects to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStandardStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStandardStructureType(),603,612,"/**
 * Returns the standard structure type, mapping if necessary.
 */
","* Returns the standard structure type, the actual structure type is mapped
     * to in the role map.
     * 
     * @return the standard structure type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addStructure,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addStructure(org.apache.pdfbox.cos.COSBase),165,191,"/**
 * Recursively adds COS objects to the object pool.
 * Handles streams, dictionaries, arrays, and nested objects.
 */","* Attempts to find yet unregistered streams and dictionaries in the given structure.
     *
     * @param current The object to be added for compressing.
     * @throws IOException Shall be thrown, if compressing the object failed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getPath(int),316,338,"/**
* Retrieves a GeneralPath based on the provided code.
* Returns null if no path is found.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:hasGlyph(int),346,363,"/**
 * Checks if a glyph exists for the given code point.
 * @param code The code point to check.
 * @return True if glyph exists, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getWidthFromFont(int),408,429,"/**
 * Gets the width of a glyph from the font, transforming as needed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getWidthFromFont(int),343,354,"/**
 * Gets the width of a glyph from the font.
 * @param code glyph code
 * @return Width of the glyph in font units.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPathFromOutlines(int),491,497,"/**
 * Retrieves a GeneralPath from outlines for a given code.
 * @param code character code
 * @return GeneralPath or null if not found
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:hasGlyph(int),499,503,"/**
* Checks if a glyph exists.
* @param code Glyph code to check.
* @return True if glyph exists, false otherwise.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,readFromDecoderStream,"org.apache.pdfbox.filter.CCITTFaxFilter:readFromDecoderStream(org.apache.pdfbox.filter.CCITTFaxDecoderStream,byte[])",126,139,"/**
 * Reads data from the decoder stream into the result byte array.
 * @param decoderStream The CCITTFaxDecoderStream to read from.
 * @param result The byte array to store the decoded data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String,java.util.Calendar)",822,825,"/**
* Gets a date value by key, using default if not found.
* @param key The key to look up the date by.
* @param defaultValue Default Calendar value if key is missing.
* @return A Calendar object representing the date.
*/
","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",866,870,"/**
 * Gets the embedded date from a COSDictionary, or default if null.
 * @param embedded The COSName of the embedded object.
 * @param key The key for the date.
 * @param defaultValue Default Calendar value if not found.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was
     * invalid.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeTokens,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeTokens(java.lang.Object[]),93,99,"/**
 * Writes each token to the output stream, followed by a newline.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeTokens,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeTokens(java.util.List),108,113,"/**
 * Writes each token to the output stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,processLines,"org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:processLines(java.util.List,boolean)",204,259,"/**
 * Renders lines of text with specified alignment and offsets.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedCombAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",717,770,"/**
 * Inserts a generated combined appearance into the content stream.
 * @param contents Stream to add appearance to.
 */
","* Generate the appearance for comb fields.
     * 
     * @param contents the content stream to write to
     * @param appearanceStream the appearance stream used
     * @param font the font to be used
     * @param fontSize the font size to be used
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",814,868,"/**
* Inserts listbox appearance content, adjusting for justification.
* @param contents Content stream to add appearance data.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,prepareNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),315,337,"/**
 * Creates and configures a PDAppearanceStream for a widget.
 * @param widget The annotation widget to prepare for.
 * @return A configured PDAppearanceStream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float)",251,255,"/**
 * Creates a PDImageXObject from a BufferedImage with specified quality.
 * @param document The document to add the image to.
 * @param image The BufferedImage to use.
 * @param quality Image quality (0.0-1.0).
 * @return The created PDImageXObject.
 */
","* Creates a new JPEG PDImageXObject from a BufferedImage and a given quality.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     * 
     * The image will be created with a dpi value of 72 to be stored in metadata.
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @param quality The desired JPEG compression quality; between 0 (best
     * compression) and 1 (best image quality). See
     * {@link ImageWriteParam#setCompressionQuality(float)} for more details.
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.lang.String),59,62,"/**
 * Loads an FDF document from the specified file.
 * @param filename Path to the FDF file.
 * @return FDFDocument object.
 */
","* This will load a document from a file.
     *
     * @param filename The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used
     * to read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addFirstIntermediateCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addFirstIntermediateCurl(double,double,double,double,double)",444,453,"/**
 * Adds a first intermediate curl segment using arc segments.
 * @param angleCur Current angle, r radius, alpha angle, center coords.
 */",* Generates the first intermediate curl for a cloudy polygon.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getIntermediateCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getIntermediateCurlTemplate(double,double)",458,470,"/**
 * Generates an array of points forming an intermediate curl template.
 * @param angleCur The angle for the curl.
 * @param r The radius of the curl.
 * @return Array of Point2D.Double objects.
 */
",* Returns a template for intermediate curls in a cloudy polygon.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArc,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)",594,631,"/**
 * Draws an elliptical arc segment.
 * @param startAng starting angle
 * @param endAng ending angle
 * @param out output list of points or null
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,showGlyph,"org.apache.pdfbox.text.LegacyPDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",160,314,"/**
 * Displays a glyph based on provided parameters.
 * @param textMatrix Text rendering matrix.
 * @param font PDF font object.
 * @param code Character code.
 * @param displacement Displacement vector.
 */
","* Called when a glyph is to be processed. The heuristic calculations here were originally
     * written by Ben Litchfield for PDFStreamEngine.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getLines,"org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",159,237,"/**
 * Extracts lines of text from content, respecting font, size, and width.
 * @param font PDFont object
 * @param fontSize font size
 * @param width maximum line width
 * @return List of Line objects representing extracted lines
 */
","* Break the paragraph into individual lines.
         *
         * @param font the font used for rendering the text.
         * @param fontSize the fontSize used for rendering the text.
         * @param width the width of the box holding the content.
         * @return the individual lines.
         * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getSymbolicFlag,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getSymbolicFlag(),260,268,"/**
 * Returns the symbolic flag from the font descriptor, or null.
 */
","* Returns the value of the symbolic flag, allowing for the fact that the result may be indeterminate.
     * 
     * @return the value of the isSymbolic flag form the font descriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFallbackFontName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),231,307,"/**
 * Determines the fallback font name based on descriptor flags.
 * @param fontDescriptor Font descriptor object to analyze.
 * @return String representing the fallback font name.
 */",* Attempts to find a good fallback based on the font descriptor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getPaint,org.apache.pdfbox.rendering.PageDrawer:getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor),349,402,"/**
 * Creates a Paint object from a PDColor, handling various color spaces.
 * @param color The PDColor to create a Paint from.
 * @return A Paint object or a transparent color if an error occurs.
 */
","* Returns an AWT paint for the given PDColor.
     * 
     * @param color The color to get a paint for. This can be an actual color or a pattern.
     * @return an AWT paint for the given PDColor
     * 
     * @throws IOException if the AWT paint could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,intersectShadingBBox,"org.apache.pdfbox.rendering.PageDrawer:intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)",865,883,"/**
* Intersects shading pattern bounding box with the given area.
* Uses color's pattern to find shading and update the area.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,handleAnnotations,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:handleAnnotations(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.PDResources,java.util.List,java.util.List,java.util.Map)",118,144,"/**
 * Processes annotations, extracting and adding fields.
 * Resolves non-root fields and creates fields if needed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFields(),381,402,"/**
 * Retrieves a list of PDF form fields.
 * Returns an empty list if no fields are present.
 */","* This will return all of the documents root fields.
     * 
     * A field might have children that are fields (non-terminal field) or does not
     * have children which are fields (terminal fields).
     * 
     * The fields within an AcroForm are organized in a tree structure. The documents root fields 
     * might either be terminal fields, non-terminal fields or a mixture of both. Non-terminal fields
     * mark branches which contents can be retrieved using {@link PDNonTerminalField#getChildren()}.
     * 
     * @return A list of the documents root fields, never null. If there are no fields then this
     * method returns an empty list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,findKid,"org.apache.pdfbox.pdmodel.interactive.form.PDField:findKid(java.lang.String[],int)",331,352,"/**
* Recursively finds a child field matching the given name.
* @param name Field names to match, @param nameIndex current index
* @return PDField object or null if not found.
*/
","* This will find one of the child elements. The name array are the components of the name to search down the tree
     * of names. The nameIndex is where to start in that array. This method is called recursively until it finds the end
     * point based on the name array.
     * 
     * @param name An array that picks the path to the field.
     * @param nameIndex The index into the array.
     * @return The field at the endpoint or null if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getChildren(),125,153,"/**
 * Retrieves child fields. Returns an empty list if none exist.
 */","* Returns this field's children. These may be either terminal or non-terminal fields.
     *
     * @return the list of child fields. Be aware that this list is <i>not</i> backed by the
     * children of the field, so adding or deleting has no effect on the PDF document until you call
     * {@link #setChildren(java.util.List) setChildren()} with the modified list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getStringOrStream,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getStringOrStream(org.apache.pdfbox.cos.COSBase),936,954,"/**
 * Gets string value from COSBase, returns """" if null/unsupported.
 */","* Get a text or text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getValue(),234,261,"/**
 * Retrieves the value of a field. Returns String, List, or null.
 * Throws IOException if value type is unknown.
 */
","* This will get the value for the field. The return type will either be: <ul>
     * <li>String: for Checkboxes, Radio Button, Textfields</li>
     * <li>List&lt;String&gt;: for a Choice Field</li>
     * </ul>
     * @return The value of the field.
     * @throws IOException If there is an error getting the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:getRichText(),743,758,"/**
 * Retrieves rich text content from a PDF field.
 * Returns null if no rich text is found.
 */
","* This will set the rich text that is associated with this field.
     *
     * @return The rich text XHTML stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getBefore(),75,90,"/**
 * Gets the ""Before"" value from the dictionary.
 * Returns string representation or null if not found.
 */
","* This will get the javascript that is executed before the import.
     *
     * @return Some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getAfter(),107,122,"/**
 * Gets the value of the ""After"" entry, as a String or null.
 */","* This will get the javascript that is executed after the import.
     *
     * @return Some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,getAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:getAction(),77,92,"/**
 * Retrieves the action string from the action dictionary.
 * Returns null if no action is found or not a string/stream.
 */
",* @return The Javascript Code.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getRichContents(),134,149,"/**
 * Retrieves rich content from COS object. Returns string or null.
 */","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getStringOrStream,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getStringOrStream(org.apache.pdfbox.cos.COSBase),258,269,"/**
 * Returns string from COSBase, or empty string if neither string nor stream.
 */","* Get a text as text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",141,146,"/**
 * Decodes data from an input stream to an output stream.
 * Uses default DecodeOptions.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createLayoutPage,org.apache.pdfbox.multipdf.Overlay:createLayoutPage(org.apache.pdfbox.pdmodel.PDPage),316,326,"/**
 * Creates a LayoutPage object from a PDPage.
 * @param page The PDPage to create the LayoutPage from.
 * @return A LayoutPage object.
 */
","* Create a LayoutPage object from given PDPage object.
     *
     * @return
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,toByteArray,org.apache.pdfbox.pdmodel.common.PDStream:toByteArray(),400,406,"/**
 * Converts the object to a byte array using an input stream.
 * @throws IOException if an I/O error occurs during the process.
 */
","* This will copy the stream into a byte array.
     * 
     * @return The byte array of the filteredStream.
     * @throws IOException if an I/O error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSamples,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:getSamples(),379,418,"/**
 * Retrieves the samples array. Creates it if it's null.
 * @return int[][] samples array containing the sample values.
 */
","* Get all sample values of this function.
         *
         * @return an array with all samples.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,initJPXValues,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:initJPXValues(),730,757,"/**
 * Initializes JPX values from the stream, updating dictionary values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(),913,917,"/**
 * Delegates InputStream creation to the underlying stream.
 * @return InputStream object, or null if stream doesn't support it.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",247,266,"/**
* Calculates bounds of triangles after transform.
* @param xform AffineTransform, matrix Matrix, controlPoints int
* @return Rectangle2D representing the calculated bounds
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)",51,58,"/**
 * Creates a PatchMeshesShadingContext.
 * @param shading Shading type, color model, transform, matrix.
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,58,"/**
 * Creates a Type 4 shading context with given parameters.
 * @param shading The Type4 shading object.
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,56,"/**
 * Creates a Type 5 shading context with given parameters.
 * @param shading Shading object, color model, transform, matrix, bounds
 */
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromPacket,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromPacket(org.apache.pdfbox.cos.COSArray),91,105,"/**
 * Extracts byte data from COS array elements that are COSStreams.
 * @param cosArray COS array containing stream objects.
 * @return Byte array of extracted stream data.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),234,256,"/**
* Adds an attribute object to the COS array associated with key 'A'.
*/","* Adds an attribute object.
     * 
     * @param attributeObject the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,addUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),92,97,"/**
* Adds a user property to the COS array.
* @param userProperty The property to add.
*/
","* Adds a user property.
     * 
     * @param userProperty the user property",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.pdmodel.PDDocument),75,81,"/**
 * Constructs a PDICCBased object from a PDDocument.
 * Initializes the ICC-based color array and stream.
 */
","* Creates a new ICC color space with an empty stream.
     * @param doc the document to store the ICC data",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",59,66,"/**
 * Constructs a PDPattern with given resources and color space.
 */","* Creates a new uncolored tiling pattern color space.
     * 
     * @param resources The current resources.
     * @param colorSpace The underlying color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setOCGs(java.util.List),94,101,"/**
 * Adds OCGs (optional content groups) to the dictionary.
 * @param ocgs List of PDPropertyList objects to add.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),100,108,"/**
* Sets the X formatting dictionaries to the COS object.
* @param changeXs array of PDNumberFormatDictionary objects
*/
","* This will set the changes along the x-axis.
     * 
     * @param changeXs changes along the x-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),137,145,"/**
 * Sets the Y number format dictionary array to the COS object.
 * @param changeYs Array of PDNumberFormatDictionary objects.
 */
","* This will set the changes along the y-axis.
     * 
     * @param changeYs changes along the y-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),174,182,"/**
 * Sets the distances array in the COS object.
 * @param distances Array of PDNumberFormatDictionary objects.
 */
","* This will set the distances.
     * 
     * @param distances distances",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),211,219,"/**
* Sets the areas to be stored in the COS object.
* @param areas array of PDNumberFormatDictionary objects
*/
","* This will set the areas.
     * 
     * @param areas areas",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),248,256,"/**
* Sets the angles for the number format dictionary.
* @param angles Array of PDNumberFormatDictionary objects.
*/
","* This will set the angles.
     * 
     * @param angles angles",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),285,293,"/**
 * Sets the line slopes for the PDF number format dictionary.
 * @param lineSloaps Array of PDNumberFormatDictionary objects.
 */
","* This will set the sloaps of a line.
     * 
     * @param lineSloaps the sloaps of a line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,org.apache.pdfbox.cos.COSArray:growToSize(int),598,601,"/**
* Grows the array to the specified size.
* @param size The new size of the array.
*/","* This will add null values until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTextColor(),323,333,"/**
 * Retrieves the text color as a PDColor object.
 * Creates a default color if none is present.
 */
","* Get the RGB text color of this node.  Default is black and this method
     * will never return null.
     *
     * @return The structure element of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",374,388,"/**
 * Creates a clone of a COSBase object.
 * @param src Source COSBase to clone.
 * @return Cloned COSBase object.
 */
","* Creates a clone of the source.
         *
         * @param src source dictionary or array.
         * @param dstParent for the /P entry; parameter needed because arrays don't keep a parent.
         * @param currentPageDict used to remember whether we have a page parent somewhere or not.
         * Starts with null.
         * @return a clone, or null if source is null or if there is no clone because it belongs to a
         * different page or to no page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processResources,"org.apache.pdfbox.multipdf.Splitter:processResources(org.apache.pdfbox.pdmodel.PDResources,java.util.Map,java.util.Map,java.util.Set)",590,620,"/**
 * Processes XObjects within a COS object, avoiding recursion.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseDirObject,org.apache.pdfbox.pdfparser.BaseParser:parseDirObject(),948,1016,"/**
 * Parses a base COS object from the input stream.
 * Returns a COSBase object or null if end of stream.
 */","* This will parse a directory object from the stream.
     *
     * @return The parsed object.
     *
     * @throws IOException If there is an error during parsing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:<init>(org.apache.pdfbox.cos.COSStream),52,64,"/**
 * Initializes the parser with a COSStream.
 * @param stream The COSStream to parse.
 * @throws IOException if an I/O error occurs.
 */
","* Constructor.
     *
     * @param stream The stream to parse.
     *
     * @throws IOException If there is an error initializing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,internalGetDecodeParams,"org.apache.pdfbox.pdmodel.common.PDStream:internalGetDecodeParams(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",287,317,"/**
 * Retrieves decode parameters from a COS object (dict or array).
 * @param name1, name2 COS names identifying the parameter
 * @return List of decode parameters or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getNext(),126,147,"/**
 * Retrieves the next action(s) in a sequence.
 * @return List of PDAction objects or null if none.
 */
","* This will get the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @return The Next action or sequence of actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:setDecodeParms(java.util.List),325,328,"/**
 * Sets the decode parameters for the stream.
 * @param decodeParams Decode parameters to be set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:setFileDecodeParams(java.util.List),390,392,"/**
* Sets decode parameters for the stream using a COS array.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,setKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:setKids(java.util.List),141,144,"/**
* Sets the 'kids' array as the value for key 'K' in COS object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:setOptions(java.util.List),692,695,"/**
* Sets the 'OPT' item of the field to a COS array representation.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getRangeForComponent,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getRangeForComponent(int),441,449,"/**
 * Returns a PDRange object for the given component index.
 * @param n component index; returns default range if invalid.
 */
","* Returns the range for a certain component number.
     * This will never return null.
     * If it is not present then the range 0..1 will be returned.
     * @param n the component number to get the range for
     * @return the range for this component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeForParameter(int),191,200,"/**
 * Gets the PDRange for a parameter from encode values.
 * @param paramNum Parameter number to retrieve.
 * @return PDRange object or null if not found.
 */
","* Get the encode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColorOrFourColors,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColorOrFourColors(java.lang.String),399,417,"/**
 * Parses color or four-color COS array.
 * @param name COS dictionary key. Returns PDGamma/PDFourColours or null.
 */
","* Gets a single colour or four colours.
     * 
     * @param name the attribute name
     * @return the single ({@link PDGamma}) or a ({@link PDFourColours})",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(org.apache.pdfbox.cos.COSDictionary),398,410,"/**
 * Builds and sets glyph widths in the CID font dictionary.
 * Populates widths based on glyph advances from the table.
 */
",* Build widths with Identity CIDToGIDMap (for embedding full font).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),324,327,"/**
 * Sets the line dash pattern.
 * @param dashPattern The PDLineDashPattern object to set.
 */","* This will set the dash pattern for the graphics state.
     *
     * @param dashPattern The dash pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSName),43,51,"/**
 * Creates a PDCIEDictionaryBasedColorSpace with the given name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSArray),58,64,"/**
 * Creates a color space from a COS array.
 * @param rgb COS array representing the color space.
 */
","* Creates a new CalRGB color space using the given COS array.
     *
     * @param rgb the cos array which represents this color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuideLineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),106,114,"/**
 * Sets the color for the guideline.
 * @param color The PDColor object representing the color.
 */
","* Set the color space instance for this box style.  This must be a
     * PDDeviceRGB!
     *
     * @param color The new colorspace value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),778,781,"/**
* Sets the color of the object using the provided PDColor.
*/","* This will set the color used in drawing various elements. As of PDF 1.6 these are : Background of icon when
     * closed Title bar of popup window Border of a link annotation
     * 
     * Colour is in DeviceRGB colourspace
     * 
     * @param c colour in the DeviceRGB colourspace
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),230,233,"/**
* Sets the interior color of the PDF object.
* @param ic The PDColor object representing the color.
*/
","* This will set interior color of the line endings defined in the LE entry. color is in DeviceRGB color space.
     *
     * @param ic color in the DeviceRGB color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),66,69,"/**
* Sets the interior color of the PDF object.
* @param ic The PDColor object representing the color.
*/
","* This will set interior color.
     *
     * @param ic color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),136,139,"/**
* Sets the interior color of the PDF object.
* @param ic The PDColor object representing the color.
*/
","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param ic color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),63,66,"/**
* Sets the interior color of the PDF object.
* @param ic The PDColor object representing the color.
*/
","* This will set interior color of the drawn area color is in DeviceRGB colorspace.
     *
     * @param ic color in the DeviceRGB color space.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor),96,99,"/**
* Sets the border color of the PDF object.
* @param c The PDColor object representing the color.
*/
","* This will set the border color.
     * 
     * @param c the border color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor),116,119,"/**
 * Sets the background color of the PDF page.
 * @param c The PDColor object representing the background color.
 */
","* This will set the background color.
     * 
     * @param c the background color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),340,343,"/**
* Sets the text color of the PDF object.
* @param textColor The PDColor object representing the color.
*/
","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,fallbackToAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:fallbackToAlternateColorSpace(java.lang.Exception),226,240,"/**
 * Uses alternate color space if embedded ICC profile fails.
 * @param e Exception during ICC profile read; may be null.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage(java.awt.image.WritableRaster),146,197,"/**
 * Converts a raster to an RGB image using the alternate color space.
 * @param raster WritableRaster to convert
 * @return BufferedImage in RGB format
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isGray,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1964,1983,"/**
 * Checks if a color space is gray, directly or via alternate space.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getARange(),199,207,"/**
 * Gets the range for the PDF object.
 * Returns a PDRange object based on the dictionary's RANGE array.
 */
","* This will get the valid range for the ""a"" component.
     * If none is found then the default will be returned, which is -100..100.
     * @return the ""a"" range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getBRange(),214,222,"/**
 * Retrieves the bounding range of the PDF object.
 * Returns a PDRange object representing the range.
 */
","* This will get the valid range for the ""b"" component.
     * If none is found  then the default will be returned, which is -100..100.
     * @return the ""b"" range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setComponentRangeArray,"org.apache.pdfbox.pdmodel.graphics.color.PDLab:setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",244,264,"/**
* Sets the range array in the dictionary with min/max values.
* @param range The PDRange object containing min/max.
* @param index The index in the array to update.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",80,84,"/**
 * Creates a PDImageXObject from an input stream.
 * @param document The document to associate with the image.
 * @param stream Input stream containing image data.
 * @return PDImageXObject created from the stream.
 */
","* Creates a new JPEG Image XObject from an input stream containing JPEG data.
     * 
     * The input stream data will be preserved and embedded in the PDF file without modification.
     * @param document the document where the image will be created
     * @param stream a stream of JPEG data
     * @return a new Image XObject
     * 
     * @throws IOException if the input stream cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFont(org.apache.pdfbox.pdmodel.font.PDFont),94,97,"/**
* Sets the font for the PDF document.
* @param font The PDFont object to set.
*/
","* This will set the font for this font setting.
     *
     * @param font The new font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),577,581,"/**
* Sets the tint transform function and updates the array.
* @param tint The PDFunction to set as the tint transform.
*/
","* This will set the tint transform function.
     *
     * @param tint The tint transform function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),298,302,"/**
* Sets the tint transform function and updates the array.
* @param tint The PDFunction to set as the tint transform.
*/
","* Sets the tint transform function.
     * @param tint the tint transform function",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPage(org.apache.pdfbox.pdmodel.PDPage),85,88,"/**
 * Sets the first page in the array to the given page.
 * @param page The page to set.
 */
","* Set the page for a local destination. For an external destination, call {@link #setPageNumber(int) setPageNumber(int pageNumber)}.
     *
     * @param page The page for a local destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setUpperLimit(java.lang.Integer),297,315,"/**
 * Sets the upper limit within the COS array.
 * @param upper The upper limit value to set, or null to clear.
 */
","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setLowerLimit(java.lang.Integer),338,356,"/**
 * Sets the lower limit in the COS array.
 * @param lower The lower limit value to set.
 */
","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setStartPointEndingStyle(java.lang.String),183,199,"/**
 * Sets the line ending style for the annotation.
 * @param style The style to set, or null for default.
 */
","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setEndPointEndingStyle(java.lang.String),217,233,"/**
 * Sets the endpoint style for the annotation line.
 * @param style The style string (e.g., ""round"", ""square"").
 */
","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setStartPointEndingStyle(java.lang.String),154,169,"/**
 * Sets the line ending style for the annotation.
 * @param style The style string, or null for default.
 */
","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setEndPointEndingStyle(java.lang.String),187,202,"/**
 * Sets the endpoint style for the annotation line.
 * @param style The style string, or null for default.
 */
","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setStartPointEndingStyle(java.lang.String),156,171,"/**
* Sets the line ending style.
* @param style The style string, or null for default.
*/
","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setEndPointEndingStyle(java.lang.String),193,208,"/**
 * Sets the endpoint style for the annotation line.
 * @param style The style string, or null for default.
 */
","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setStartPointEndingStyle(java.lang.String),62,77,"/**
 * Sets the line ending style.
 * @param style The line ending style, or null for default.
 */
","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setEndPointEndingStyle(java.lang.String),99,114,"/**
 * Sets the endpoint style for the line annotation.
 * @param style The style string (e.g., LE_NONE, LE_ROUND).
 */
","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setUpperLimit(java.lang.String),350,361,"/**
 * Sets the upper limit string in the COS array.
 * @param upper The upper limit string to set.
 */
","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setLowerLimit(java.lang.String),384,395,"/**
 * Sets the lower limit string in the COS array.
 * Creates array if it doesn't exist.
 */
","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:generateNormalAppearance(),48,90,"/**
 * Generates the normal appearance of the annotation.
 * Draws specific icons based on the attachment name.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,adjustRectAndBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,float,float)",166,192,"/**
 * Adjusts annotation rectangle and bounding box based on flags.
 * Returns the bounding box.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayStream,"org.apache.pdfbox.multipdf.Overlay:createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",535,563,"/**
* Creates a content stream for overlaying an XObject onto a page.
* Returns a PDF stream object containing the overlay content.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,clipToMediaBox,org.apache.pdfbox.pdmodel.PDPage:clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),564,573,"/**
 * Clips a rectangle to the media box, ensuring it stays within bounds.
 * @param box The rectangle to clip.
 * @return Clipped PDRectangle.
 */
",* Clips the given box to the bounds of the media box.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,createRetranslatedRectangle,org.apache.pdfbox.pdmodel.common.PDRectangle:createRetranslatedRectangle(),192,198,"/**
 * Creates a new PDRectangle with dimensions matching the component.
 * @return A new PDRectangle object.
 */
","* This will create a translated rectangle based off of this rectangle, such
     * that the new rectangle retains the same dimensions(height/width), but the
     * lower left x,y values are zero. <br>
     * 100, 100, 400, 400 (llx, lly, urx, ury ) <br>
     * will be translated to 0,0,300,300
     *
     * @return A new rectangle that has been translated back to the origin.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureRectangle,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",149,163,"/**
 * Creates a signature rectangle and sets it on signature field/structure.
 * @param signatureField Signature field to update.
 * @param properties Rectangle properties.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createFormatterRectangle,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createFormatterRectangle(int[]),192,203,"/**
 * Creates a formatter rectangle using provided parameters.
 * @param params An array containing rectangle coordinates.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setBeforeColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),76,79,"/**
* Sets the before colour using the provided PDGamma object.
*/","* Sets the colour for the before edge.
     * 
     * @param colour the colour for the before edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setAfterColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),96,99,"/**
 * Sets the after colour using the setColourByIndex method.
 */","* Sets the colour for the after edge.
     * 
     * @param colour the colour for the after edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setStartColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),116,119,"/**
 * Sets the start color using the provided PDGamma color object.
 */","* Sets the colour for the start edge.
     * 
     * @param colour the colour for the start edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setEndColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),136,139,"/**
 * Sets the end color using the provided PDGamma color object.
 */","* Sets the colour for the end edge.
     * 
     * @param colour the colour for the end edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decrypt,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decrypt(org.apache.pdfbox.cos.COSBase,long,long)",455,487,"/**
 * Decrypts a COSBase object (string, stream, dictionary, array).
 * @param obj The object to decrypt.
 * @return The decrypted COSBase object.
 */
","* This will dispatch to the correct method.
     *
     * @param obj The object to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation Number.
     * 
     * @return the encrypted/decrypted COS object
     *
     * @throws IOException If there is an error getting the stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",243,246,"/**
 * Sets an item with the given key. Uses PDF name conversion.
 * @param key The key of the item to set.
 * @param value The value to associate with the key.
 */
","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),153,157,"/**
* Sets the AcroForm for the root object and clears the cache.
*/
","* Sets the AcroForm for this catalog.
     *
     * @param acroForm The new AcroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences),186,189,"/**
* Sets viewer preferences in the document.
* @param prefs The PDViewerPreferences object to set.
*/
","* Sets the viewer preferences.
     *
     * @param prefs The new viewer preferences.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline),207,210,"/**
* Sets the document outline to the root COS object.
* @param outlines The document outline to set.
*/
","* Sets the document outlines.
     *
     * @param outlines The new document outlines.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),263,266,"/**
* Sets the metadata for the PDF document.
* @param meta The metadata object to set.
*/
","* Sets the metadata for this object. This can be null.
     *
     * @param meta The meta data for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction),273,276,"/**
* Sets the open action for the PDF root object.
* @param action The destination or action to set.
*/
","* Sets the Document Open Action for this object.
     *
     * @param action The action you want to perform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions),319,322,"/**
* Sets the additional actions for the document catalog.
* @param actions The PDDocumentCatalogAdditionalActions object.
*/
","* Sets the additional actions for the document.
     *
     * @param actions The actions that are associated with this document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary),379,382,"/**
* Sets the names dictionary for the root object.
* @param names The names dictionary to set.
*/
","* Sets the names dictionary for the document.
     *
     * @param names The names dictionary that is associated with this document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo),401,404,"/**
* Sets the mark information for the PDF document.
* @param markInfo The PDMarkInfo object to set.
*/
","* Set information about the doc's usage of tagged features.
     *
     * @param markInfo The new MarkInfo data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary),548,551,"/**
* Sets the URI for the root element.
* @param uri The URI dictionary to set.
*/
","* Sets the document level URI.
     *
     * @param uri The new document level URI.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot),569,572,"/**
 * Sets the root of the structure tree.
 * @param treeRoot The structure tree root to set.
 */
","* Sets the document's structure tree root.
     *
     * @param treeRoot The new structure tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels),631,634,"/**
* Sets the page labels for the PDF document.
* @param labels The PDPageLabels object to set.
*/
","* Sets the page label descriptor for the document.
     *
     * @param labels the new page label descriptor to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode),96,105,"/**
* Sets the destination names and clears the catalog's Dests.
* @param dests The PDDestinationNameTreeNode to set.
*/
","* Set the named destinations that are associated with this document.
     *
     * @param dests The destination names.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode),124,127,"/**
 * Sets the embedded files name tree node in the dictionary.
 * @param ef The PDEmbeddedFilesNameTreeNode to set.
 */
","* Set the named embedded files that are associated with this document.
     *
     * @param ef The new embedded files",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setJavascript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode),147,150,"/**
 * Sets the JavaScript object associated with the name dictionary.
 * @param js The JavaScript object to set.
 */
","* Set the named javascript entries that are associated with this document.
     *
     * @param js The new Javascript entries.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),92,97,"/**
 * Creates a new PDF page with the specified media box.
 * @param mediaBox The rectangle defining the page's dimensions.
 */
","* Creates a new instance of PDPage for embedding.
     * 
     * @param mediaBox The MediaBox of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setResources,org.apache.pdfbox.pdmodel.PDPage:setResources(org.apache.pdfbox.pdmodel.PDResources),347,358,"/**
* Sets page resources. Null value removes the resources.
*/
","* This will set the resources for this page.
     * 
     * @param resources The new resources for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMediaBox,org.apache.pdfbox.pdmodel.PDPage:setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),423,434,"/**
 * Sets the media box for the page.
 * @param mediaBox The PDRectangle representing the media box.
 */
","* This will set the mediaBox for this page.
     * 
     * @param mediaBox The new mediaBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setBleedBox,org.apache.pdfbox.pdmodel.PDPage:setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle),490,500,"/**
 * Sets the bleed box for the page. Null value removes it.
 * @param bleedBox The PDRectangle representing the bleed box.
 */
","* This will set the BleedBox for this page.
     * 
     * @param bleedBox The new BleedBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTrimBox,org.apache.pdfbox.pdmodel.PDPage:setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle),519,529,"/**
 * Sets the trim box for the page. Null value removes the trim box.
 * @param trimBox The rectangle representing the trim box.
 */
","* This will set the TrimBox for this page.
     * 
     * @param trimBox The new TrimBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setArtBox,org.apache.pdfbox.pdmodel.PDPage:setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle),549,559,"/**
 * Sets the art box for the page. Null value removes it.
 * @param artBox The PDRectangle representing the art box.
 */
","* This will set the ArtBox for this page.
     * 
     * @param artBox The new ArtBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(org.apache.pdfbox.pdmodel.common.PDStream),612,615,"/**
* Sets the contents of the page to the provided stream.
* @param contents The PDStream object to set as contents.
*/
","* This will set the contents of this page.
     * 
     * @param contents The new contents of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMetadata,org.apache.pdfbox.pdmodel.PDPage:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),683,686,"/**
* Sets the metadata for the page.
* @param meta The metadata object to set.
*/
","* Set the metadata for this object. This can be null.
     * 
     * @param meta The meta data for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setActions,org.apache.pdfbox.pdmodel.PDPage:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions),709,712,"/**
* Sets the page's additional actions.
* @param actions The PDPageAdditionalActions to set.
*/
","* Set the page actions.
     * 
     * @param actions The actions for the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition),726,729,"/**
* Sets the transition object for the page.
* @param transition The transition to set.
*/
",* @param transition The new transition to set on this page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,"org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",738,742,"/**
 * Sets the transition and duration for the page.
 * @param transition The transition object.
 * @param duration Transition duration in seconds.
 */
","* Convenient method to set a transition and the display duration
     * 
     * @param transition The new transition to set on this page.
     * @param duration The maximum length of time, in seconds, that the page shall be displayed during presentations
     * before the viewer application shall automatically advance to the next page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",763,772,"/**
 * Adds a COS object to the specified resource dictionary.
 * @param kind resource kind (e.g., Images, Fonts)
 * @param name object name within the resource
 * @param object COSObjectable object to add
 */
",* Sets the value of a given named resource.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),242,254,"/**
 * Sets the embedded file. Creates EF dictionary if it's null.
 */","* Set the embedded file for this spec. You should also call
     * {@link #setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFileUnicode(PDEmbeddedFile)}
     * for cross-platform and cross-language compatibility.
     *
     * @param file The file to be embedded.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),324,336,"/**
 * Sets the embedded file for Unicode encoding.
 * @param file The PDEmbeddedFile object to set.
 */
","* Set the embedded Unicode file for this spec. If you call this, then do not forget to also
     * call
     * {@link #setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFile(PDEmbeddedFile)}
     * or the attachment will not be visible on some viewers.
     *
     * @param file The Unicode file to be embedded.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setPage(org.apache.pdfbox.pdmodel.PDPage),79,82,"/**
* Sets the page for the PDF document.
* @param page The PDPage object to set.
*/","* Sets the page.
     * 
     * @param page the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),135,138,"/**
* Sets the referenced object for the annotation.
* @param annotation The annotation object to reference.
*/
","* Sets the referenced annotation.
     * 
     * @param annotation the referenced annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),145,148,"/**
 * Sets the referenced object within the current COS object.
 * @param xobject The object to be referenced.
 */
","* Sets the referenced XObject.
     * 
     * @param xobject the referenced XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setPage(org.apache.pdfbox.pdmodel.PDPage),172,175,"/**
* Sets the page for the PDF document.
* @param page The PDPage object to set.
*/","* Sets the page on which the object shall be rendered. This is optional and overrides the /PG
     * entry in the structure element containing the object reference; shall be used if the
     * structure element contained no such entry.
     *
     * @param page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode),107,110,"/**
* Sets the parent node for this structure node.
* @param structureNode The parent PDStructureNode.
*/
","* Sets the parent in the structure hierarchy (P).
     * 
     * @param structureNode the parent in the structure hierarchy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setPage(org.apache.pdfbox.pdmodel.PDPage),151,154,"/**
* Sets the page for the PDF document.
* @param page The PDPage object to set.
*/
","* Sets the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * @param page the page on which some or all of the content items designated
     *  by the K entry shall be rendered.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),204,227,"/**
 * Adds attributes to the COS object, handling single or multiple entries.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),110,112,"/**
* Sets the ID tree object within the COS object.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),144,147,"/**
* Sets the parent tree of the current PDF number tree node.
* @param parentTree The parent tree node to set.
*/
","* Sets the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     * <p>
     * To create an empty parent tree, call {@code new PDNumberTreeNode(PDParentTreeValue.class)}.
     *
     * @param parentTree the parent tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),722,725,"/**
* Sets the rectangle object for annotation.
* @param rectangle The PDRectangle object to set.
*/","* Set the rectangle associated with this annotation.
     *
     * @param rectangle The annotation rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),887,890,"/**
* Sets the border style of the annotation.
* @param bs The PDBorderStyleDictionary object to set.
*/
","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the annotation.
     *
     * @param bs the border style dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),911,914,"/**
* Sets the border effect dictionary for the annotation.
* @param be The PDBorderEffectDictionary to set.
*/
","* This will set the border effect dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @param be the border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),104,107,"/**
* Sets the fringe rectangle for the annotation.
* @param fringe The PDRectangle representing the fringe.
*/
","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),141,144,"/**
* Sets the fringe rectangle for the annotation.
* @param fringe The PDRectangle representing the fringe.
*/
","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),260,263,"/**
* Sets the fringe rectangle for the annotation.
* @param fringe The PDRectangle representing the fringe.
*/
","* This will set the fringe rectangle. Giving the difference between the annotations rectangle
     * and where the drawing occurs. (To take account of any effects applied through the BE entry
     * for example)
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),142,145,"/**
* Sets the fringe rectangle for the annotation.
* @param fringe The PDRectangle representing the fringe.
*/
","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary),137,140,"/**
* Sets the FDF dictionary for the catalog.
* @param fdf The FDF dictionary to set.
*/
","* This will set the FDF document.
     *
     * @param fdf The new FDF dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),158,161,"/**
* Sets the signature for the catalog.
* @param sig The PDSignature object to set.
*/
","* This will set the signature that is associated with this catalog.
     *
     * @param sig The new signature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),295,298,"/**
* Sets the file specification for the FDF object.
* @param fs The file specification to set.
*/
","* This will set the file specification.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript),555,558,"/**
* Sets the JavaScript object for the FDF document.
* @param js The FDFJavaScript object to set.
*/
","* This will set the JavaScript entry.
     *
     * @param js The javascript entries.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,setCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog),161,165,"/**
 * Sets the catalog for the PDF document.
 * @param cat The FDFCatalog to set as the document catalog.
 */
","* This will set the FDF catalog for this FDF document.
     *
     * @param cat The FDF catalog.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),605,608,"/**
* Sets the appearance dictionary for the field.
* @param ap The appearance dictionary to set.
*/
","* This will set the appearance dictionary.
     *
     * @param ap The appearance dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),626,629,"/**
 * Sets the appearance stream reference for the field.
 * @param ref The FDFNamedPageReference to set.
 */
","* This will set the named page references.
     *
     * @param ref The named page references.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit),647,650,"/**
* Sets the icon fit property of the field.
* @param fit The FDFIconFit object to set.
*/
","* This will set the icon fit 'IF' entry.
     *
     * @param fit The icon fit object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAction,org.apache.pdfbox.pdmodel.fdf.FDFField:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),712,715,"/**
* Sets the action to be performed on the PDF field.
* @param a The action to set.
*/
","* This will set the action that is associated with this field.
     *
     * @param a The new action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions),733,736,"/**
* Sets the additional actions (AA) field in the PDF object.
* @param aa The PDAdditionalActions object to set.
*/
","* This will set the additional actions that are associated with this field.
     *
     * @param aa The additional actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange),174,177,"/**
* Sets the fractional space to allocate for an item.
* @param space The PDRange object representing the space.
*/
","* This will set frational space to allocate.
     *
     * @param space The space to allocate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),101,104,"/**
* Sets the file specification for the PDF document.
* @param fs The file specification object to set.
*/
","* This will set the file specification for this named page reference.
     *
     * @param fs The file specification to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo),117,120,"/**
* Sets the page info within the PDF page object.
* @param info The FDFPageInfo object to set.
*/
","* This will set the page info.
     *
     * @param info The new page info dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),82,85,"/**
* Sets the template reference.
* @param tRef The FDFNamedPageReference to set.
*/
","* This will set the template reference.
     *
     * @param tRef The template reference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDToGIDMap(java.util.TreeMap),234,254,"/**
* Creates a CID-to-GID map stream for the CID font.
* Writes GID values to a byte array and sets it as the map.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile(org.apache.pdfbox.pdmodel.common.PDStream),737,740,"/**
* Sets the font file for the PDF object.
* @param type1Stream The font file stream to set.
*/
","* Set the type 1 font program.
     *
     * @param type1Stream The type 1 stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream),758,761,"/**
* Sets the font file 2 to the dictionary.
* @param ttfStream The font file stream to set.
*/
","* Set the true type font program.
     *
     * @param ttfStream The true type stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream),779,782,"/**
* Sets the font file 3 stream in the dictionary.
* @param stream The PDStream object to set.
*/
","* Set a stream containing a font program that is not true type or type 1.
     *
     * @param stream The font program stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream),800,803,"/**
 * Sets the CID set data within the dictionary.
 * @param stream The PDStream object containing CID set data.
 */
","* Set a stream containing a CIDSet.
     *
     * @param stream The font program stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),155,163,"/**
 * Sets the white point for the document.
 * @param whitepoint The white point value to set.
 * @throws IllegalArgumentException if whitepoint is null.
 */
","* This will set the whitepoint tristimulus. As this is a required field, null should not be
     * passed into this function.
     *
     * @param whitepoint the whitepoint tristimulus.
     * @throws IllegalArgumentException if null is passed as argument.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),170,173,"/**
* Sets the black point in the dictionary.
* @param blackpoint The black point tristimulus value.
*/
","* This will set the BlackPoint tristimulus.
     *
     * @param blackpoint the BlackPoint tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",43,50,"/**
 * Creates a PDOutputIntent object for PDF/A compliance.
 * @param doc The PDF document.
 * @param colorProfile Color profile input stream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),79,83,"/**
* Sets the extended graphics state.
* @param extendedGraphicsState The state to set.
*/
","* This will set the external graphics state for this pattern.
     * @param extendedGraphicsState The new extended graphics state for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),107,111,"/**
 * Sets the shading object for the PDF page.
 * @param shadingResources The shading object to set.
 */
","* This will set the shading resources for this pattern.
     * @param shadingResources The new shading resources for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setResources(org.apache.pdfbox.pdmodel.PDResources),209,212,"/**
* Sets the resources for the PDF object.
* @param resources The PDResources object to set.
*/","* This will set the resources for this pattern.
     * @param resources The new resources for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction),312,317,"/**
 * Sets the function to be used and updates the COS object.
 * @param newFunction The new PDFunction to set.
 */
","* This will set the function for the color conversion.
     *
     * @param newFunction the new function",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting),448,451,"/**
* Sets the font setting for the PDF document.
* @param fs The PDFontSetting object to set.
*/
","* This will set the font setting for this graphics state.
     *
     * @param fs The new font setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),82,99,"/**
* Sets the destination for the action.
* @param d The destination object to set.
*/
","* This will set the destination to jump to.
     *
     * @param d The destination.
     *
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),118,121,"/**
* Sets the file specification for the PDF object.
* @param fs The file specification to set.
*/
","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),184,187,"/**
* Sets the target directory for the PDF document.
* @param targetDirectory The target directory object to set.
*/
","* Sets the target directory.
     * 
     * @param targetDirectory the target directory",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),78,95,"/**
 * Sets the destination for this action.
 * @param d The destination object to set.
 */","* This will set the destination to jump to.
     *
     * @param d The destination.
     * 
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),71,74,"/**
* Sets the file specification for the action.
* @param fs The file specification to set.
*/
","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),84,87,"/**
* Sets the file specification for the PDF object.
* @param fs The PDFileSpecification to set.
*/","* This will set the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setWinLaunchParams(org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams),105,108,"/**
 * Sets the Windows launch parameters for the action.
 * @param win The PDWindowsLaunchParams object to set.
 */
","* This will set a dictionary containing Windows-specific launch parameters.
     *
     * @param win The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),76,79,"/**
* Sets the file specification for the action.
* @param fs The PDFileSpecification to set.
*/
","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),74,77,"/**
* Sets the file specification for the action.
* @param fs The file specification to set.
*/
","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),92,95,"/**
* Sets the file specification for the action.
* @param fs The file specification to set.
*/","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),76,79,"/**
* Sets the 'F' action in the actions map.
* @param action The PDAction object to set.
*/
","* Set the F action.
     *
     * @param action Get the F action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setE(org.apache.pdfbox.pdmodel.interactive.action.PDAction),81,84,"/**
* Sets the 'E' action in the actions map.
* @param e The PDAction to set.
*/
","* This will set an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @param e The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setX(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
 * Sets the X action for the PDF action list.
 * @param x The PDAction to set as the X action.
 */
","* This will set an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @param x The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction),129,132,"/**
 * Sets the 'D' action in the actions map.
 * @param d The PDAction to set.
 */
","* This will set an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @param d The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setU(org.apache.pdfbox.pdmodel.interactive.action.PDAction),154,157,"/**
* Sets the 'U' action in the actions map.
* @param u The action to set.
*/
","* This will set an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @param u The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setFo(org.apache.pdfbox.pdmodel.interactive.action.PDAction),177,180,"/**
* Sets the FO action for the PDF document.
* @param fo The PDAction object to set.
*/
","* This will set an action to be performed when the annotation
     * receives the input focus.
     *
     * @param fo The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setBl(org.apache.pdfbox.pdmodel.interactive.action.PDAction),202,205,"/**
 * Sets the BL action to the specified PDAction.
 * @param bl The PDAction to set.
 */
","* This will set an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @param bl The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),229,232,"/**
* Sets the PO (PDAction) associated with the actions object.
*/","* This will set an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @param po The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),254,257,"/**
* Sets the PC (PDAction) associated with the actions object.
*/","* This will set an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @param pc The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),277,280,"/**
* Sets the PV action.
* @param pv The action to set for the PV.
*/
","* This will set an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @param pv The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPI(org.apache.pdfbox.pdmodel.interactive.action.PDAction),300,303,"/**
* Sets the PI action.
* @param pi The PI action to set.
*/","* This will set an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @param pi The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),83,86,"/**
 * Sets the WC (word count) action in the actions map.
 * @param wc The PDAction representing the word count.
 */
","* This will set a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @param wc The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),108,111,"/**
* Sets the WS (Worksheet) action for the PDF action list.
* @param ws The PDAction object representing the WS action.
*/
","* This will set a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @param ws The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),133,136,"/**
* Sets the DS (PDAction) item in the actions map.
*/","* This will set a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @param ds The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),158,161,"/**
* Sets the WP action.
* @param wp The WP action to set.
*/","* This will set a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @param wp The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),183,186,"/**
 * Sets the DP action for the current item.
 * @param dp The PDAction object to set.
 */","* This will set a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @param dp The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Sets the 'k' action in the actions map.
* @param k The PDAction to set for the 'k' key.
*/
","* This will set a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @param k The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
* Sets the 'F' action in the actions map.
* @param f The action to set.
*/
","* This will set a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @param f The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),137,140,"/**
* Sets the 'V' action in the actions list.
* @param v The PDAction to set.
*/
","* This will set a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @param v The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),166,169,"/**
* Sets the 'C' action in the actions map.
* @param c The PDAction to set.
*/
","* This will set a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @param c The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
* Sets the 'O' action in the actions map.
* @param o The action to set.
*/
","* This will set an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @param o The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
* Sets the 'C' action in the actions map.
* @param c The PDAction to set.
*/
","* This will set an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @param c The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),138,141,"/**
* Sets the target directory to be associated with the PDF object.
* @param targetDirectory The target directory object to set.
*/
","* Sets the target directory.
     *
     * @param targetDirectory the target directory or null if the current document is the target
     * file containing the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),194,204,"/**
 * Sets the named destination. Null value removes the destination.
 */","* This will set a named destination in the current document that provides the page number of
     * the file attachment annotation.
     *
     * @param dest a named destination or null if the entry is to be removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),355,358,"/**
* Sets the appearance dictionary for the PDF form.
* @param appearance The appearance dictionary to set.
*/","* This will set the appearance associated with this annotation.
     * 
     * @param appearance The appearance dictionary for this annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),716,719,"/**
* Sets the optional content property list.
* @param oc The PDPropertyList object to set.
*/","* Sets the optional content group or optional content membership dictionary for the annotation.
     *
     * @param oc The optional content group or optional content membership dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPage(org.apache.pdfbox.pdmodel.PDPage),831,834,"/**
* Sets the page for the PDF document.
* @param page The PDPage object to set.
*/","* This will set the corresponding page for this annotation. This is optional but recommended.
     * Not doing it <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when
     * PDFs get signed</a>.
     *
     * @param page is the corresponding page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),94,97,"/**
* Sets the file specification for the PDF object.
* @param file The PDFileSpecification to set.
*/","* Set the attached file.
     *
     * @param file The file that is attached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),242,245,"/**
* Sets the border effect dictionary for the COS object.
* @param be The PDBorderEffectDictionary to set.
*/
","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.6 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),267,270,"/**
* Sets the rectangle difference (RD) item in the COS object.
* @param rd The PDRectangle representing the rectangle difference.
*/
","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
* Sets the action to be performed on the document.
* @param action The PDAction object to set.
*/
","* Set the annotation action. Either this or the destination entry should be set, but not both.
     *
     * @param action The annotation action.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),115,118,"/**
* Sets the border style of the PDF element.
* @param bs The border style dictionary to set.
*/
","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set. 
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),150,153,"/**
* Sets the destination for the PDF object.
* @param dest The destination object to set.
*/
","* The new destination value. Either this or the action entry should be set, but not both.
     *
     * @param dest The updated destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setPreviousURI(org.apache.pdfbox.pdmodel.interactive.action.PDActionURI),180,183,"/**
* Sets the previous URI for the action.
* @param pa The PDActionURI object to set.
*/
","* This will set the previous URI action, in case it needs to be retrieved at later date.
     *
     * @param pa The previous URI.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setPopup(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup),104,107,"/**
* Sets the popup annotation.
* @param popup The popup annotation to set.
*/
","* This will set the popup annotation used for entering/editing the text for this annotation.
     *
     * @param popup the popup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setInReplyTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),200,203,"/**
* Sets the ""In-Reply-To"" annotation.
* @param irt The annotation to set.
*/
","* This will set the annotation to which this one is ""In Reply To"" the actual relationship is specified by the RT
     * entry.
     *
     * @param irt the annotation this one is ""In Reply To"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setExternalData(org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary),285,288,"/**
* Sets the external data dictionary to the COS object.
* @param externalData The external data dictionary to set.
*/
","* This will set the external data dictionary.
     * 
     * @param externalData the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),296,299,"/**
 * Sets the border style of the PDF object.
 * @param bs The PDBorderStyleDictionary to set.
 */
","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),88,91,"/**
* Sets the border effect dictionary for the COS object.
* @param be The PDBorderEffectDictionary to set.
*/
","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),85,88,"/**
* Sets the border effect dictionary for the COS object.
* @param be The PDBorderEffectDictionary to set.
*/
","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),110,113,"/**
* Sets the rectangle difference (RD) item in the COS object.
* @param rd The PDRectangle representing the rectangle difference.
*/
","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary),131,135,"/**
* Sets the appearance characteristics dictionary in the COS object.
*/","* Sets the appearance characteristics dictionary.
     * 
     * @param appearanceCharacteristics the appearance characteristics dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),153,156,"/**
* Sets the action to be performed on the PDF object.
* @param action The PDAction object to set.
*/
","* Set the annotation action. As of PDF 1.6 this is only used for Widget Annotations
     * 
     * @param action The annotation action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions),175,178,"/**
* Sets the additional actions for the annotation.
* @param actions The PDAnnotationAdditionalActions object to set.
*/
","* Set the actions of the field.
     *
     * @param actions The field actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),186,189,"/**
* Sets the border style of the PDF object.
* @param bs BorderStyleDictionary object to set.
*/
","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField),224,231,"/**
* Sets the parent of a field. Throws exception if sharing dictionary.
*/","* Set the parent field of a widget annotation. This is only required if this widget annotation
     * is one of multiple children in a field, and not to be set otherwise. You will usually not
     * need this, because in most cases, fields have only one widget and share a common dictionary.
     * A usage can be found in the CreateMultiWidgetsForm example.
     *
     * @param field the parent field.
     * @throws IllegalArgumentException if setParent() was called for a field that shares a
     * dictionary with its only widget.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),77,80,"/**
* Sets the normal appearance for a PDF appearance entry.
* @param entry The appearance entry to set as normal.
*/
","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),87,90,"/**
* Sets the normal appearance stream in the appearance dictionary.
* @param ap The PDAppearanceStream representing the normal appearance.
*/
","* This will set the normal appearance when there is only one appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),111,114,"/**
* Sets the rollover appearance for a PDF appearance entry.
* @param entry The PDAppearanceEntry to set as rollover.
*/
","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),121,124,"/**
* Sets the rollover appearance stream in the dictionary.
* @param ap The PDAppearanceStream object to set.
*/
","* This will set the rollover appearance when there is rollover appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),145,148,"/**
* Sets the down appearance entry in the dictionary.
* @param entry The PDAppearanceEntry to set.
*/","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),155,158,"/**
* Sets the down appearance stream in the dictionary.
* @param ap The appearance stream to set.
*/","* This will set the down appearance when there is down appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),92,95,"/**
* Sets the filter for the PDPropBuildDataDict.
* @param filter The filter to set.
*/
","* Set the build data dictionary for the signature handler.
     * This entry is optional but is highly recommended for the signatures.
     *
     * @param filter is the PDPropBuildFilter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),119,122,"/**
* Sets the public security build data in the dictionary.
* @param pubSec The PDPropBuildDataDict to set.
*/
","* Set the build data dictionary for the PubSec Software module.
     *
     * @param pubSec is the PDPropBuildPubSec",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),147,150,"/**
* Sets the application PDPropBuildDataDict in the dictionary.
* @param app The PDPropBuildDataDict representing the application.
*/
","* Set the build data dictionary for the viewing application
     * software module.
     *
     * @param app is the PDPropBuildApp",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate),453,456,"/**
* Sets the seed value certificate in the dictionary.
* @param certificate The certificate to set.
*/
","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @param certificate dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild),460,463,"/**
 * Sets the property build item in the dictionary.
 * @param propBuild The property build object to set.
 */
","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @param propBuild the prop build",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setPreviousSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),137,140,"/**
* Sets the previous sibling of the current outline node.
* @param outlineNode The previous sibling outline node.
*/
","* Set the previous sibling, this will be maintained by this class.
     *
     * @param outlineNode The new previous sibling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setNextSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),155,158,"/**
* Sets the next sibling outline node.
* @param outlineNode The next sibling outline node.
*/
","* Set the next sibling, this will be maintained by this class.
     *
     * @param outlineNode The new next sibling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),196,199,"/**
* Sets the destination for the PDF object.
* @param dest The destination object to set.
*/
","* Set the page destination for this node.
     *
     * @param dest The new page destination for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),291,294,"/**
* Sets the action to be performed on the PDF object.
* @param action The PDAction object to set.
*/
","* Set the action for this node.
     *
     * @param action The new action for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),312,315,"/**
* Sets the structure element within the COS object.
* @param structureElement The structure element to set.
*/
","* Set the structure element for this node.
     *
     * @param structureElement The new structure element for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),67,70,"/**
* Sets the parent outline node for this node.
* @param parent The parent PDOutlineNode.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),194,197,"/**
* Sets the first child of the outline node.
* @param outlineNode The child outline node to set.
*/
","* Set the first child, this will be maintained by this class.
     *
     * @param outlineNode The new first child.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),212,215,"/**
* Sets the last child outline node.
* @param outlineNode The outline node to set as the last child.
*/
","* Set the last child, this will be maintained by this class.
     *
     * @param outlineNode The new last child.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultResources(org.apache.pdfbox.pdmodel.PDResources),554,557,"/**
* Sets the default resources in the dictionary.
* @param dr The PDResources object to set as default.
*/
","* This will set the default resources for the acroform.
     *
     * @param dr The new default resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource),595,598,"/**
* Sets the XFA resource for the document dictionary.
* @param xfa The XFA resource to set.
*/
","* Set the XFA resource, this is only used for PDF 1.5+ forms.
     *
     * @param xfa The xfa resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),104,108,"/**
 * Sets the value of the PDSignature.
 * @param value The PDSignature to set.
 * @throws IOException if an I/O error occurs.
 */
","* Sets the value of this field to be the given signature.
     * 
     * @param value is the PDSignatureField
     * 
     * @throws IOException if the new value could not be applied",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),131,134,"/**
* Sets the default value for the signature.
* @param value The default value to set.
*/
","* Sets the default value of this field to be the given signature.
     *
     * @param value is the PDSignatureField",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue),185,191,"/**
 * Sets the seed value for the PDF object.
 * @param sv The PDSeedValue object to set.
 */
","* <p>(Optional; PDF 1.) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @param sv is the seed value dictionary as PDSeedValue",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setActions,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions),66,69,"/**
 * Sets the form field's additional actions.
 * @param actions The additional actions to set.
 */
","* Set the actions of the field.
     * 
     * @param actions The field actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setWidgets(java.util.List),193,200,"/**
 * Sets the KIDS array and parent for child widgets.
 * @param children List of child annotation widgets.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),95,98,"/**
* Sets the bounding box of the COS object.
* @param rectangle The PDRectangle representing the bounding box.
*/
","* This will set the rectangle specifying the location of the viewport.
     * 
     * @param rectangle the rectangle specifying the location.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary),136,139,"/**
* Sets the measure dictionary for the PDF object.
* @param measure The PDMeasureDictionary to set.
*/
","* This will set the measure dictionary.
     * 
     * @param measure the measure dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setThreadInfo(org.apache.pdfbox.pdmodel.PDDocumentInformation),82,85,"/**
 * Sets the thread information within the document.
 * @param info The PDDocumentInformation object to set.
 */","* Set the thread info, can be null.
     *
     * @param info The info dictionary about this thread.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setThread(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread),89,92,"/**
* Sets the thread object associated with the bead.
* @param thread The PDThread object to set.
*/
","* Set the thread that this bead is part of.  This is only required for the
     * first bead in a thread.  Note: This property is set for you by the PDThread.setFirstBead() method.
     *
     * @param thread The thread that this bead is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setNextBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),110,113,"/**
* Sets the next bead in the thread sequence.
* @param next The next PDThreadBead object.
*/
","* Set the next bead in the thread.
     *
     * @param next The next bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPreviousBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),131,134,"/**
* Sets the previous bead for the current bead.
* @param previous The previous PDThreadBead object.
*/","* Set the previous bead in the thread.
     *
     * @param previous The previous bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPage(org.apache.pdfbox.pdmodel.PDPage),169,172,"/**
 * Sets the page for the current bead.
 * @param page The PDF page to set.
 */
","* Set the page that this bead is part of.  This is a required property and must be
     * set when creating a new bead.  The PDPage object also has a list of beads in the natural
     * reading order.  It is recommended that you add this object to that list as well.
     *
     * @param page The page that this bead is on.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),190,193,"/**
* Sets the rectangle associated with the bead.
* @param rect The PDRectangle object to set.
*/
","* Set the rectangle on the page that this bead covers.
     *
     * @param rect The portion of the page that this bead covers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setMarked(boolean),77,80,"/**
 * Sets the ""Marked"" boolean value in the dictionary.
 * @param value The boolean value to set.
 */
","* Set if this is a tagged PDF.
     *
     * @param value The new marked value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setUserProperties(boolean),97,100,"/**
* Sets the ""UserProperties"" boolean value in the dictionary.
*/","* Set if the structure elements contain user properties.
     *
     * @param userProps The new value for this property.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setSuspect(boolean),120,123,"/**
* Sets the ""Suspects"" boolean value in the dictionary to false.
*/
","* Set the value of the suspects property.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this
     * property.
     *
     * @param suspect The new ""Suspects"" value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setTrackMousePosition(boolean),117,120,"/**
* Sets whether to track mouse position on the map.
* @param value boolean indicating tracking status
*/
","* This will specify whether to track the mouse position when the URI is
     * resolved.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setOpen(boolean),64,67,"/**
* Sets the ""Open"" boolean value in the COS object.
* @param open The boolean value to set.
*/
","* This will set the initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFD(boolean),211,214,"/**
* Sets the ""FD"" boolean value within the COS object.
* @param fd The boolean value to set.
*/
","* This will set the value indication if the denominator of the fractional value is reduced/truncated .
     * The denominator may not be reduced/truncated if true
     * @param fd fd",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setVolatile(boolean),205,208,"/**
* Sets the volatility flag for the file system object.
* @param fileIsVolatile boolean indicating file volatility
*/
","* Tell if the underlying file is volatile and should not be cached by the
     * reader application.  Default: false
     *
     * @param fileIsVolatile The new value for the volatility of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setHidden(boolean),138,142,"/**
 * Sets the hidden state.
 * @param hidden The new hidden state (true/false).
 */
","* Specifies whether the property shall be hidden.
     * 
     * @param hidden <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setEncryptMetaData(boolean),134,137,"/**
 * Sets whether to encrypt metadata in the COS object.
 * @param encryptMetaData Flag to enable/disable metadata encryption
 */
","* Set the EncryptMetaData dictionary info.
     *
     * @param encryptMetaData true if EncryptMetaData shall be set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaption(boolean),286,289,"/**
* Sets the 'cap' (capitalization) attribute of the annotation.
* @param cap The boolean value for capitalization.
*/
","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleToFitAnnotation(boolean),194,197,"/**
* Sets the scale-to-fit boolean value in the PDF annotation.
* @param value The boolean value to set for scale-to-fit.
*/
","* This will tell the icon to scale.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setRename(boolean),132,135,"/**
* Sets the rename flag in the template.
* @param value The boolean value for the rename flag.
*/
","* This will set if the fields can be renamed.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setInterpolate(boolean),235,239,"/**
* Sets the interpolation flag.
* @param value boolean value to set for interpolation
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setStencil(boolean),290,294,"/**
* Sets the stencil flag in the parameters.
* @param isStencil The boolean value for the stencil flag.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setAntiAlias(boolean),218,221,"/**
* Sets the anti-aliasing flag in the dictionary.
* @param antiAlias boolean value for anti-aliasing.
*/
","* This will set the AntiAlias value.
     *
     * @param antiAlias the new AntiAlias value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingOverprintControl(boolean),372,375,"/**
* Sets the overprint control flag in the dictionary.
* @param op The overprint control flag (true/false).
*/
","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingOverprintControl(boolean),393,396,"/**
 * Sets the non-stroking overprint control flag.
 * @param op The boolean value for the overprint control.
 */
","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAutomaticStrokeAdjustment(boolean),508,511,"/**
* Sets the automatic stroke adjustment flag in the dictionary.
* @param sa The boolean value for automatic stroke adjustment.
*/
","* This will set the automatic stroke adjustment flag.
     *
     * @param sa The new automatic stroke adjustment flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAlphaSourceFlag(boolean),572,575,"/**
* Sets the alpha source flag in the dictionary.
* @param alpha boolean value indicating alpha source.
*/
","* This will set the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @param alpha The alpha source flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTextKnockoutFlag(boolean),625,628,"/**
* Sets the text knockout flag in the dictionary.
* @param tk boolean value representing the knockout flag
*/","* This will set the text knockout flag.
     *
     * @param tk The text knockout flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),144,166,"/**
* Sets the open mode for a COS object. Null removes the setting.
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),227,249,"/**
 * Sets the open mode for a COS object. Null removes the setting.
 * @param value The OpenMode enum value to set.
 */
","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),134,156,"/**
 * Sets the open mode for a COS object. Null removes the setting.
 * @param value The OpenMode enum value to set.
 */","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSynchronous(boolean),110,113,"/**
* Sets the synchronous flag for the action.
* @param synchronous The boolean value for synchronous mode.
*/
","* A flag specifying whether to play the sound synchronously or asynchronously. When true, the
     * reader allows no further user interaction other than canceling the sound until the sound has
     * been completely played.
     *
     * @param synchronous Whether to play the sound synchronously (true) or asynchronously (false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setRepeat(boolean),133,136,"/**
* Sets the repeat flag for the action.
* @param repeat The boolean value for the repeat flag.
*/
","* A flag specifying whether to repeat the sound indefinitely.
     *
     * @param repeat Whether to repeat the sound indefinitely.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setMix(boolean),156,159,"/**
* Sets the mix flag in the action.
* @param mix The boolean value for the mix flag.
*/
","* The flag specifying whether to mix this sound with any other sound already playing. If this
     * flag is false, any previously playing sound shall be stopped before starting this sound; this
     * can be used to stop a repeating sound (see Repeat). Default value: false.
     *
     * @param mix whether to mix this sound with any other sound already playing.
     * (false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaption(boolean),251,254,"/**
 * Sets the caption flag in the COS object.
 * @param cap The boolean value for the caption.
 */
","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setOpen(boolean),146,149,"/**
 * Sets the ""Open"" flag on the COS object to the specified value.
 */","* This will set initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setPreRelease(boolean),202,205,"/**
* Sets the pre-release flag in the dictionary.
* @param preRelease The boolean value for the pre-release flag.
*/
","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @param preRelease is true if the signature was created with a unrelease
     *                   software, otherwise false.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setNonEFontNoWarn(boolean),284,287,"/**
 * Sets whether to suppress warnings about embedding fonts.
 * @param noEmbedFontWarning Flag to suppress font embedding warnings.
 */
","* If true, the reader should not display a warning about fonts not being embedded.
     *
     * @param noEmbedFontWarning true if there is a Legal dictionary in the catalog and the
     * NonEmbeddedFonts attribute has a non-zero value
     *
     * Documentation says: (Optional; PDF 1.5) If there is a LegalPDF dictionary in the catalog of
     * the PDF file and the NonEmbeddedFonts attribute in this dictionary has a non zero value, and
     * the viewing application has a preference set to suppress the display of this warning then the
     * value of this attribute will be set to true.
     *
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/Acrobat_Signature_BuildDict.pdf#page=6"">Digital
     * Signature Build Dictionary Specification</a>
     * @see #getNonEFontNoWarn()
     * @see COSName#NON_EFONT_NO_WARN",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setTrustedMode(boolean),305,308,"/**
 * Sets the trusted mode for the dictionary.
 * @param trustedMode The boolean value for trusted mode.
 */","* If true, the application was in trusted mode when signing took place.
     *
     * @param trustedMode true if the application is in trusted mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setNeedAppearances(java.lang.Boolean),532,535,"/**
* Sets the needAppearances flag in the dictionary.
* @param value Boolean value to set for needAppearances.
*/
","* Set the NeedAppearances value. If this is false, PDFBox will create appearances for all field
     * widget.
     * 
     * @param value the value for NeedAppearances",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideToolbar(boolean),177,180,"/**
 * Sets whether to hide the toolbar.
 * @param value True to hide, false to show.
 */
","* Set the toolbar preference.
     *
     * @param value Set the toolbar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideMenubar(boolean),197,200,"/**
* Sets whether to hide the menubar.
* @param value boolean indicating whether to hide the menubar
*/
","* Set the menubar preference.
     *
     * @param value Set the menubar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideWindowUI(boolean),217,220,"/**
* Sets whether to hide the window UI.
* @param value boolean indicating whether to hide UI
*/
","* Set the window UI preference.
     *
     * @param value Set the window UI preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setFitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setFitWindow(boolean),237,240,"/**
* Sets the fit window preference to the given boolean value.
*/
","* Set the fit window preference.
     *
     * @param value Set the fit window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setCenterWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setCenterWindow(boolean),257,260,"/**
 * Sets whether the center window is visible.
 * @param value boolean indicating visibility
 */
","* Set the center window preference.
     *
     * @param value Set the center window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDisplayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDisplayDocTitle(boolean),277,280,"/**
 * Sets whether to display the document title.
 * @param value boolean indicating display preference
 */","* Set the display doc title preference.
     *
     * @param value Set the display doc title preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfString(java.lang.String,java.lang.String[])",125,136,"/**
 * Sets an array of strings to the COS object with the given name.
 * @param name The name of the item to set.
 * @param values The array of string values.
 */
","* Sets an array of strings.
     * 
     * @param name the attribute name
     * @param values the array of strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfName(java.lang.String,java.lang.String[])",212,223,"/**
 * Sets a COS array with given names to the COS object.
 * @param name name of the array
 * @param values array of strings to be added to the COS array
 */
","* Sets an array of name values.
     * 
     * @param name the attribute name
     * @param values the array of name values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfNumber(java.lang.String,float[])",364,375,"/**
 * Sets an array of floats to the COS object under the given name.
 * @param name name of the item to set
 * @param values array of float values
 */
","* Sets an array of float numbers.
     * 
     * @param name the attribute name
     * @param values the float numbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStampAnnotationAppearanceXML,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStampAnnotationAppearanceXML(org.w3c.dom.Element),142,183,"/**
 * Parses an appearance XML element and builds a COSDictionary.
 * @param appearanceXML XML element representing the appearance.
 * @return COSDictionary representing the parsed appearance.
 */
","* This will create an Appearance dictionary from an appearance XML element.
     *
     * @param appearanceXML The XML element that contains the appearance data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(java.lang.String,java.lang.String)",288,291,"/**
* Sets the name with the given key to the specified value.
* Delegates to the PDFName version for processing.
*/
","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageMode(org.apache.pdfbox.pdmodel.PageMode),494,497,"/**
* Sets the page mode of the root object.
* @param mode The PageMode to set.
*/","* Sets the page mode.
     *
     * @param mode The new page mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLayout(org.apache.pdfbox.pdmodel.PageLayout),527,530,"/**
 * Sets the page layout for the root object.
 * @param layout The PageLayout object to set.
 */
","* Sets the page layout.
     *
     * @param layout The new page layout.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setVersion(java.lang.String),609,612,"/**
* Sets the version of the root COS object.
* @param version The version string to set.
*/
","* Sets the PDF specification version this document conforms to.
     *
     * @param version the PDF version (e.g. ""1.4"")",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTrapped(java.lang.String),304,316,"/**
 * Sets the 'trapped' value. Throws IllegalArgumentException for invalid input.
 */","* This will set the trapped of the document.  This will be
     * 'True', 'False', or 'Unknown'.
     *
     * @param value The new trapped value for the document.
     * 
     * @throws IllegalArgumentException if the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStyle(java.lang.String),116,126,"/**
 * Sets the style. If null, removes the style attribute.
 */","* Sets the numbering style for this page range.
     * 
     * @param style
     *            one of the STYLE_* constants or {@code null} if no page
     *            numbering is desired.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(java.lang.String),36,40,"/**
 * Constructs a PDTypedDictionaryWrapper with the given type.
 * @param type The type of the dictionary.
 */
","* Creates a new instance with a given type.
     * 
     * @param type the type (Type)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,setOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:setOwner(java.lang.String),132,135,"/**
* Sets the owner of the COS object.
* @param owner The new owner's name.
*/
","* Sets the owner of the attributes.
     * 
     * @param owner the owner of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(),38,42,"/**
 * Constructs a PDMarkedContentReference with a new COSDictionary.
 */",* Default constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(),58,62,"/**
 * Constructs a new PDObjectReference with a COSDictionary.
 */","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setStructureType(java.lang.String),86,89,"/**
 * Sets the structure type of the COS object.
 * @param structureType The structure type to set.
 */
","* Sets the structure type (S).
     * 
     * @param structureType the structure type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),369,394,"/**
 * Sets class names and revision numbers in the COS object.
 * @param classNames COSArray of class names and revision numbers.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(java.lang.String),45,49,"/**
 * Constructs a PDStructureNode with the given type.
 * @param type The type of the structure node.
 */
","* Constructor.
     *
     * @param type the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setName(java.lang.String),73,77,"/**
* Sets the name of the COS object, notifying listeners.
* @param name The new name to set.
*/
","* Sets the property name.
     * 
     * @param name the property name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineStyle(java.lang.String),156,159,"/**
* Sets the guideline style for the dictionary.
* @param style The style string to set.
*/
","* Set the style for the box.
     *
     * @param style The style for the box line.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setSubFilter(java.lang.String),179,182,"/**
* Sets the subfilter name in the dictionary.
* @param subfilter The subfilter string to set.
*/
","* Set the subfilter entry of the encryption dictionary.
     *
     * @param subfilter The value of the subfilter field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setIntent(java.lang.String),846,849,"/**
* Sets the intent name for the annotation.
* @param intent The intent name to set.
*/
","* The intent of the annotation.
     * 
     * @param intent The annotation's intent.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setLineEndingStyle(java.lang.String),282,285,"/**
 * Sets the line ending style for the annotation.
 * @param style The line ending style to set (e.g., ""LF"", ""CRLF"")
 */
","* This will set the line ending style.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setIcon(java.lang.String),92,95,"/**
* Sets the icon name for the annotation.
* @param icon The name of the icon to set.
*/
","* This will set the icon (and hence appearance, AP taking precedence) For this annotation. See the
     * PDAnnotationText.NAME_XXX constants for valid values.
     *
     * @param icon The name of the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setVersion(java.lang.String),106,109,"/**
 * Sets the version of the catalog.
 * @param version The version string to set.
 */
","* This will set the version of the FDF document.
     *
     * @param version The new version for the FDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEncoding(java.lang.String),424,427,"/**
* Sets the encoding name for the FDF object.
* @param encoding The encoding string to set.
*/
","* This will set the encoding.
     *
     * @param encoding The new encoding.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleOption(java.lang.String),110,113,"/**
* Sets the scaling option for the fit object.
* @param option The scaling option to set.
*/
","* This will set the scale option for the icon. Set the SCALE_OPTION_XXX constants.
     *
     * @param option The scale option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleType(java.lang.String),136,139,"/**
* Sets the scale type for the fit object.
* @param scale The scale type to set.
*/
","* This will set the scale type. See the SCALE_TYPE_XXX constants.
     *
     * @param scale The scale type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(),71,75,"/**
 * Initializes a new PDAbstractPattern with a dictionary.
 */",* Creates a new Pattern dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setType(java.lang.String),94,97,"/**
* Sets the type of the action.
* @param type The type string to set.
*/
","* This will set the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @param type The new Type for the PDF object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setSubType(java.lang.String),114,117,"/**
* Sets the sub-type name of the action.
* @param s The sub-type string to set.
*/
","* This will set the type of action that the actions dictionary describes.
     *
     * @param s The new type of action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setSubtype(java.lang.String),234,237,"/**
* Sets the subtype of the COS object.
* @param subType The subtype string to set.
*/
","* This will set the sub type (and hence appearance, AP taking precedence) For this annotation. See the SUB_TYPE_XXX
     * constants for valid values.
     *
     * @param subType The subtype of the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearanceState(java.lang.String),334,337,"/**
* Sets the appearance state of the COS object.
* @param as The appearance state string to set.
*/
","* This will set the annotations appearance state name.
     * 
     * @param as The name of the appearance stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setAttachmentName(java.lang.String),114,117,"/**
* Sets the attachment name using the provided name.
* @param name The new name for the attachment.
*/
","* Set the name used to draw the attachment icon. See the ATTACHMENT_NAME_XXX constants.
     *
     * @param name The name of the visual icon to draw.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setLineEndingStyle(java.lang.String),219,222,"/**
* Sets the line ending style for the PDF document.
* @param style The line ending style to set (e.g., ""LF"", ""CR"", ""CRLF"").
*/
","* This will set the line ending style.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionPositioning(java.lang.String),342,345,"/**
 * Sets the caption positioning.
 * @param captionPositioning The positioning string to set.
 */","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionPositioning caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setHighlightMode(java.lang.String),170,173,"/**
* Sets the highlight mode for the COS object.
* @param mode The highlight mode string to set.
*/
","* Set the highlight mode. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @param mode The new highlight mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setReplyType(java.lang.String),242,245,"/**
* Sets the reply type for the COS object.
* @param rt The reply type string to set.
*/
","* This will set the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for the
     * available values.
     *
     * @param rt the reply type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setIntent(java.lang.String),264,267,"/**
* Sets the IT name on the COS object.
* @param it The IT name to set.
*/
","* This will set the intent of the annotation The values and meanings are specific to the actual annotation See the
     * IT_* constants for the annotation classes.
     *
     * @param it the intent",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:setName(java.lang.String),120,123,"/**
* Sets the name of the COS object.
* @param name The new name to set.
*/
","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the rubber stamp.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setName(java.lang.String),167,170,"/**
* Sets the name of the COS object.
* @param name The new name to set.
*/
","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setHighlightingMode(java.lang.String),100,113,"/**
 * Sets the highlighting mode. Valid values are 'N', 'I', 'O', 'P', 'T'.
 * @param highlightingMode The highlighting mode string.
 */
","* Sets the highlighting mode.
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @param highlightingMode the highlighting mode the defined values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setStyle(java.lang.String),140,143,"/**
* Sets the style of the COS object.
* @param s The style string to set.
*/
","* This will set the border style, see the STYLE_* constants for valid values.
     *
     * @param s the border style to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(),35,39,"/**
 * Initializes an ExternalDataDictionary with type ""ExData"".
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:setSubtype(java.lang.String),87,90,"/**
* Sets the subtype of the COS object.
* @param subtype The subtype string to set.
*/","* This will set the subtype of the external data dictionary.
     * 
     * @param subtype the subtype of the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setName(java.lang.String),81,84,"/**
* Sets the name of the dictionary.
* @param name The new name to set.
*/
","* The name of the software module that was used to create the signature.
     *
     * @param name is the name of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLType(java.lang.String),622,625,"/**
* Sets the URL type for the dictionary.
* @param urlType The URL type to set.
*/
","* (Optional; PDF 1.7) A name indicating the usage of the URL entry. There are standard uses and
     * there can be implementation-specific uses for this URL. The following value specifies a valid
     * standard usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     * Third parties can extend the use of this attribute with their own attribute values, which
     * must conform to the guidelines specified in
     * <a href=""http://www.adobe.com/content/dam/acom/en/devnet/pdf/PDF32000_2008.pdf#page=681"">PDF
     * Spec 1.7 Appendix E (PDF Name Registry)</a>
     * if urlType is not set the default is Browser for URL
     *
     * @param urlType String of the urlType",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(),33,36,"/**
 * Initializes the document outline object.
 * Sets the object type to ""Outlines"".
 */",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(org.apache.pdfbox.cos.COSDictionary),43,47,"/**
 * Creates a document outline from a COSDictionary.
 * @param dic The COSDictionary containing outline information.
 */
","* Constructor for an existing document outline.
     *
     * @param dic The storage dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setDefaultValue(java.lang.String),217,221,"/**
 * Sets the default value of the COS object.
 * @param value The default value to set.
 */
","* Sets the default value.
     *
     * @param value Name of option to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByValue(java.lang.String),389,410,"/**
* Updates widget appearance state based on the provided value.
* @param value The value used to update the appearance state.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(),39,43,"/**
 * Initializes a new PDMeasureDictionary with a COSDictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:setSubtype(java.lang.String),92,95,"/**
* Sets the subtype of the COS object.
* @param subtype The subtype string to set.
*/","* This will set the subtype of the measure dictionary.
     * @param subtype the subtype of the measure dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(),66,70,"/**
 * Initializes a new PDNumberFormatDictionary.
 * Sets the dictionary type to TYPE.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setName(java.lang.String),115,118,"/**
* Sets the name of the COS object.
* @param name The new name to set.
*/
","* This will set the name of the viewport.
    *  
    * @param name the name of the viewport",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle),49,54,"/**
 * Creates a transition object with the given style.
 * @param style The transition style to apply.
 */
","* creates a new transition with the given style.
     * 
     * @param style the style to be used to create the new transition",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension),91,94,"/**
* Sets the dimension name for the transition.
* @param dimension The PDTransitionDimension object.
*/
","* Sets the dimension in which the specified transition effect shall occur. Only for {@link PDTransitionStyle#Split}
     * and {@link PDTransitionStyle#Blinds}.
     * 
     * @param dimension the dimension in which the specified transition effect shall occur",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion),112,115,"/**
 * Sets the motion for the transition using the provided motion object.
 */","* Sets the direction of motion for the specified transition effect. Only for {@link PDTransitionStyle#Split},
     * {@link PDTransitionStyle#Blinds} and {@link PDTransitionStyle#Fly}.
     * 
     * @param motion the direction of motion for the specified transition effect",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE),299,301,"/**
* Sets the preference value for non-full screen page mode.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION),319,321,"/**
 * Sets the direction preference using the provided value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),339,341,"/**
* Sets the view area preference using the provided value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),359,361,"/**
* Sets the ""VIEW_CLIP"" preference value.
* @param value The value to set as a String.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),379,381,"/**
* Sets the print area preference value.
* @param value The print area value to set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),399,401,"/**
 * Sets the print clip preference value.
 * @param value The value to set for the print clip preference.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX),419,421,"/**
 * Sets the duplex preference value.
 * @param value The duplex value to set.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING),439,441,"/**
* Sets the print scaling preference value.
* @param value The scaling value to set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",327,330,"/**
* Sets a date value for a given key.
* @param key COS name representing the key.
* @param date Calendar object representing the date.
*/
","* Set the date object.
     *
     * @param key The key to the date.
     * @param date The date to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(java.lang.String,java.lang.String)",360,363,"/**
* Sets a string value for a given key.
* Delegates to the PDF name version of the method.
*/
","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",390,402,"/**
 * Sets a string value for a key within an embedded dictionary.
 * @param embedded The embedded object.
 * @param key The key for the string value.
 * @param value The string value to set.
 */
","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param embedded The embedded dictionary to set the item in.
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setLanguage(java.lang.String),589,592,"/**
* Sets the language string for the root COS object.
* @param language The language string to set.
*/
","* Sets the Language for the document.
     *
     * @param language The new document language.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTitle(java.lang.String),100,103,"/**
* Sets the title of the info object.
* @param title The title to set.
*/
","* This will set the title of the document.
     *
     * @param title The new title for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:setAuthor(java.lang.String),120,123,"/**
 * Sets the author of the document.
 * @param author The author's name as a string.
 */
","* This will set the author of the document.
     *
     * @param author The new author for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:setSubject(java.lang.String),140,143,"/**
* Sets the subject of the info object.
* @param subject The subject string to set.
*/
","* This will set the subject of the document.
     *
     * @param subject The new subject for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:setKeywords(java.lang.String),160,163,"/**
 * Sets the keywords for the info object.
 * @param keywords The keywords to set.
 */","* This will set the keywords of the document.
     *
     * @param keywords The new keywords for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreator(java.lang.String),180,183,"/**
* Sets the creator of the object.
* @param creator The creator's name to set.
*/
","* This will set the creator of the document.
     *
     * @param creator The new creator for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:setProducer(java.lang.String),200,203,"/**
* Sets the producer value in the info object.
* @param producer The producer string to set.
*/
","* This will set the producer of the document.
     *
     * @param producer The new producer for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setPrefix(java.lang.String),174,184,"/**
 * Sets the prefix value. Null value removes the prefix.
 */","* Sets the page label prefix for this page range.
     * 
     * @param prefix
     *            the page label prefix for this page range, or {@code null} to
     *            unset the prefix.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileUnicode(java.lang.String),140,143,"/**
 * Sets the Unicode file name for the PDF document.
 * @param file The Unicode file name string.
 */
","* This will set the unicode file name. If you call this, then do not forget to also call
     * {@link #setFile(java.lang.String) setFile(String)} or the attachment will not be visible on
     * some viewers.
     *
     * @param file The name of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFile(java.lang.String),163,167,"/**
* Sets the file associated with this object.
* @param file The file path to set.
*/
","* This will set the file name. You should also call
     * {@link #setFileUnicode(java.lang.String) setFileUnicode(String)} for cross-platform and
     * cross-language compatibility.
     *
     * @param file The name of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileDescription(java.lang.String),343,346,"/**
* Sets the file description.
* @param description The description to set.
*/
","* Set the file description.
     * 
     * @param description The file description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setElementIdentifier(java.lang.String),127,130,"/**
* Sets the ID of the COS object.
* @param id The ID string to set.
*/
","* Sets the element identifier (ID).
     * 
     * @param id the element identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setTitle(java.lang.String),512,515,"/**
* Sets the title of the PDF object.
* @param title The title string to set.
*/
","* Sets the title (T).
     * 
     * @param title the title",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setLanguage(java.lang.String),532,535,"/**
* Sets the language for the COS object.
* @param language The language string to set.
*/
","* Sets the language (Lang).
     * 
     * @param language the language",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAlternateDescription(java.lang.String),552,555,"/**
* Sets the alternate description for the COS object.
* @param alternateDescription The alternate description string.
*/
","* Sets the alternate description (Alt).
     * 
     * @param alternateDescription the alternate description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setExpandedForm(java.lang.String),572,575,"/**
* Sets the expanded form string for the COS object.
* @param expandedForm The string to set as the expanded form.
*/
","* Sets the expanded form (E).
     * 
     * @param expandedForm the expanded form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setActualText(java.lang.String),592,595,"/**
* Sets the actual text value for the COS object.
* @param actualText The text string to set.
*/
","* Sets the actual text (ActualText).
     * 
     * @param actualText the actual text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setFormattedValue(java.lang.String),115,119,"/**
* Sets the formatted value and notifies listeners.
* @param formattedValue The new formatted value to set.
*/
","* Sets the string for the property value.
     * 
     * @param formattedValue the string for the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setDate(java.lang.String),492,495,"/**
* Sets the 'M' (modification date) string in the annotation.
* @param date The date string to set.
*/
","* The annotation modification date.
     *
     * @param date The date to store in the FDF annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setName(java.lang.String),702,705,"/**
* Sets the name of the annotation.
* @param name The name to set for the annotation.
*/
","* Set a unique name for an annotation.
     *
     * @param name The unique annotation name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setContents(java.lang.String),743,746,"/**
* Sets the contents of the annotation.
* @param contents The string content to set.
*/
","* Set the contents, or a description, for an annotation.
     *
     * @param contents The annotation contents, or a description.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setTitle(java.lang.String),763,766,"/**
* Sets the title of the annotation.
* @param title The title string to set.
*/
","* Set a unique title for an annotation.
     *
     * @param title The annotation title.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setSubject(java.lang.String),826,829,"/**
* Sets the subject of the annotation.
* @param subject The subject string to set.
*/
","* A short description of the annotation.
     *
     * @param subject The annotation subject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setSymbol(java.lang.String),126,134,"/**
 * Sets the symbol for the annotation. ""P"" for paragraph, else ""None"".
 */
","* This will set the symbol that shall be associated with the caret.
     * 
     * @param symbol the symbol",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultAppearance(java.lang.String),217,220,"/**
* Sets the default appearance string for the annotation.
* @param appearance The default appearance string to set.
*/
","* Set the default appearance string.
     *
     * @param appearance The new default appearance string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultStyle(java.lang.String),238,241,"/**
* Sets the default style for the annotation.
* @param style The default style string to set.
*/
","* Set the default style string.
     *
     * @param style The new default style string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionStyle(java.lang.String),376,379,"/**
* Sets the caption style for the annotation.
* @param captionStyle The caption style string to set.
*/
","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionStyle caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setState(java.lang.String),123,126,"/**
* Sets the state of the annotation.
* @param state The state string to set.
*/
","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setStateModel(java.lang.String),143,146,"/**
* Sets the state model string in the annotation.
* @param stateModel The state model string to set.
*/
","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setStatus(java.lang.String),366,369,"/**
* Sets the status of the PDF document.
* @param status The new status string to set.
*/
","* This will set the status string.
     *
     * @param status The new status string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setTarget(java.lang.String),499,502,"/**
* Sets the target string value within the FDF object.
* @param target The target string to be set.
*/
","* This will set the target frame in the browser to open this document.
     *
     * @param target The new target frame.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:setPartialFieldName(java.lang.String),221,224,"/**
* Sets the partial field name using the provided string value.
*/","* This will set the partial field name.
     *
     * @param partial The partial field name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setName(java.lang.String),79,82,"/**
* Sets the name of the COS object.
* @param name The new name to set.
*/
","* This will set the name of the referenced page.
     *
     * @param name The referenced page name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setInfo(java.lang.String),73,76,"/**
* Sets the value of the ""INFO"" key in the dictionary.
* @param value The string value to set for the INFO key.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputCondition(java.lang.String),83,86,"/**
* Sets the output condition value in the dictionary.
* @param value The string value for the output condition.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputConditionIdentifier(java.lang.String),93,96,"/**
* Sets the output condition identifier in the dictionary.
* @param value The identifier string to set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setRegistryName(java.lang.String),103,106,"/**
* Sets the registry name in the dictionary.
* @param value The new registry name to set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,setName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:setName(java.lang.String),110,113,"/**
* Sets the name of the dictionary.
* @param name The name to set for the dictionary.
*/
","* Sets the name of the optional content group.
     * @param name the name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(),87,97,"/**
 * Initializes a PDOptionalContentProperties object.
 * Creates a COSDictionary and sets initial properties.
 */
",* Creates a new optional content properties dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getD,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getD(),126,138,"/**
 * Gets the COSDictionary associated with the ""D"" key.
 * Creates a new one if it doesn't exist.
 * @return COSDictionary object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,setAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:setAction(java.lang.String),69,72,"/**
* Sets the action string for the COSName.JS property.
* @param sAction The action string to set.
*/
",* @param sAction The JavaScript.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setF(java.lang.String),131,134,"/**
* Sets the 'F' string value in the action object.
* @param f The string value to set.
*/
","* This will set the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @param f The file name to be launched.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setD(java.lang.String),151,154,"/**
* Sets the value of the 'D' entry in the action dictionary.
* @param d The string value to set for the 'D' entry.
*/
","* This will set the string specifying the default directory in standard DOS syntax.
     *
     * @param d The default directory.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setO(java.lang.String),179,182,"/**
 * Sets the 'O' string value in the action object.
 * @param o The string value to set.
 */
","* This will set the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @param o The operation to perform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setP(java.lang.String),201,204,"/**
* Sets the 'P' string value in the action object.
* @param p The string value to set.
*/
","* This will set a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @param p The parameter string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setURI(java.lang.String),92,95,"/**
* Sets the URI value for the action.
* @param uri The URI string to set.
*/
","* This will set the uniform resource identifier to resolve, encoded in
     * 7-bit ASCII.
     *
     * @param uri The uniform resource identifier.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setFilename(java.lang.String),114,117,"/**
* Sets the filename for the dictionary.
* @param filename The name of the file.
*/
","* Sets the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @param filename a filename or null if the entry is to be deleted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationName(java.lang.String),252,255,"/**
* Sets the annotation name in the dictionary.
* @param name The name of the annotation.
*/
","* This will get the value of the /NM entry in the annotation dictionary.
     *
     * @param name the /NM value of an annotation dictionary or null if the entry is to be removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setFilename(java.lang.String),89,92,"/**
* Sets the filename.
* @param file The filename to set.
*/
","* Set the file to launch.
     *
     * @param file The executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setDirectory(java.lang.String),109,112,"/**
* Sets the directory path.
* @param dir The directory string to set.
*/
","* Set the dir to launch from.
     *
     * @param dir The dir of the executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setOperation(java.lang.String),132,135,"/**
* Sets the operation parameter in the COS object.
* @param op The operation string to set.
*/
","* Set the operation to perform..
     *
     * @param op The operation to perform on the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setExecuteParam(java.lang.String),152,155,"/**
* Sets the 'P' parameter in the 'params' object.
* @param param The string value to set as the parameter.
*/
","* Set the parameter to pass the executable.
     *
     * @param param The parameter for the executable.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setContents(java.lang.String),616,619,"/**
* Sets the contents of the dictionary.
* @param value The string value to set as contents.
*/
","* Set the ""contents"" of the field.
     * 
     * @param value the value of the contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.lang.String),640,643,"/**
* Sets the modified date of the COS object.
* @param m The modified date string to set.
*/
","* This will set the date and time the annotation was modified.
     *
     * @param m the date and time the annotation was created. Date values used in a PDF shall
     * conform to a standard date format, which closely follows that of the international standard
     * ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824. A date shall be a text string
     * of the form (D:YYYYMMDDHHmmSSOHH'mm). Alternatively, use
     * {@link #setModifiedDate(java.util.Calendar)}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationName(java.lang.String),672,675,"/**
* Sets the annotation name.
* @param nm The name to set for the annotation.
*/
","* This will set the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @param nm The identifying name for the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultAppearance(java.lang.String),86,89,"/**
* Sets the default appearance string for the COS object.
* @param daValue The default appearance string to set.
*/
","* Set the default appearance.
     *
     * @param daValue a string describing the default appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultStyleString(java.lang.String),110,113,"/**
* Sets the default style string for the COS object.
* @param defaultStyleString The default style string to set.
*/
","* Set the default style string.
     *
     * Providing null as the value will remove the default style string.
     *
     * @param defaultStyleString a string describing the default style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setTitlePopup(java.lang.String),83,86,"/**
 * Sets the title of the COS object.
 * @param t The title string to set.
 */
","* Set the string used as the title of the popup window shown when open and active (by convention this identifies
     * who added the annotation).
     *
     * @param t The title of the popup.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setSubject(java.lang.String),220,223,"/**
* Sets the subject of the PDF document.
* @param subj The subject string to set.
*/
","* This will set the short description of the subject of the annotation.
     *
     * @param subj short description of the subject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setState(java.lang.String),198,201,"/**
* Sets the state of the COS object.
* @param state The new state value to set.
*/
","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setStateModel(java.lang.String),218,221,"/**
* Sets the state model string on the COS object.
* @param stateModel The state model string to set.
*/
","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setNormalCaption(java.lang.String),136,139,"/**
* Sets the normal caption of the COS object.
* @param caption The caption string to set.
*/
","* This will set the normal caption.
     * 
     * @param caption the normal caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRolloverCaption(java.lang.String),156,159,"/**
* Sets the rollover caption for the COS object.
* @param caption The caption string to set.
*/","* This will set the rollover caption.
     * 
     * @param caption the rollover caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setAlternateCaption(java.lang.String),176,179,"/**
* Sets the alternate caption for the COS object.
* @param caption The alternate caption string to set.
*/
","* This will set the alternate caption.
     * 
     * @param caption the alternate caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setDate(java.lang.String),103,106,"/**
* Sets the date value in the dictionary.
* @param date The date string to set.
*/
","* The build date of the software module. This string is normally produced by the compiler.
     *
     * @param date is the build date of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURL(java.lang.String),577,580,"/**
 * Sets the URL value in the dictionary.
 * @param url The URL string to set.
 */
","* (Optional) A URL, the use for which is defined by the URLType entry.
     *
     * @param url String of the URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setURL(java.lang.String),76,79,"/**
* Sets the URL value in the dictionary.
* @param url The URL string to set.
*/
","* Sets the URL.
     * @param url the URL to be set as URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setName(java.lang.String),154,157,"/**
* Sets the name of the dictionary.
* @param name The name to set.
*/
","* Sets the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @param name the name to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setLocation(java.lang.String),164,167,"/**
* Sets the location value in the dictionary.
* @param location The location string to set.
*/
","* Sets the CPU host name or physical location of the signing.
     *
     * @param location the location to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setReason(java.lang.String),174,177,"/**
* Sets the reason string in the dictionary.
* @param reason The reason string to set.
*/
","* Sets the reason for the signing, such as (I agree...).
     *
     * @param reason the reason to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContactInfo(java.lang.String),185,188,"/**
* Sets the contact information in the dictionary.
* @param contactInfo The contact information to set.
*/","* Sets the contact info provided by the signer to enable a recipient to contact the signer to
     * verify the signature, e.g. a phone number.
     *
     * @param contactInfo the contact info to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTitle(java.lang.String),175,178,"/**
 * Sets the title of the PDF document.
 * @param title The title to set.
 */","* Set the title for this node.
     *
     * @param title The new title for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultAppearance(java.lang.String),510,513,"/**
* Sets the default appearance value in the dictionary.
* @param daValue The default appearance string value.
*/
","* Set the default appearance.
     * 
     * @param daValue a string describing the default appearance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDefaultValue(java.lang.String),390,393,"/**
* Sets the default string value for the COS object.
* @param value The string value to set as the default.
*/
","* Sets the default value of this field.
     *
     * @param value The name of the selected item.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setPartialName(java.lang.String),391,399,"/**
* Sets the partial name. Throws exception if name contains a period.
*/
","* This will set the partial name of the field.
     * 
     * @param name The new name for the field.
     * @throws IllegalArgumentException If the name contains a period character.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setAlternateFieldName(java.lang.String),444,447,"/**
* Sets the alternate field name in the dictionary.
* @param alternateFieldName The alternate field name to set.
*/
","* This will set the alternate name of the field (""shall be used in place of the actual field
     * name wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)""). The text appears as a tool tip in Adobe Reader. Because
     * of the usage for error or status messages, it should be different for each field.
     *
     * @param alternateFieldName the alternate name of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setMappingName(java.lang.String),467,470,"/**
* Sets the mapping name in the dictionary.
* @param mappingName The name of the mapping.
*/
","* This will set the mapping name of the field.
     * 
     * @param mappingName the mapping name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(java.lang.String),227,233,"/**
* Sets the value of the COS object to the given string.
* @param value The string value to set.
* @throws IOException if an I/O error occurs.
*/
","* Sets the plain text value of this field.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setValue(java.lang.String),214,219,"/**
* Sets the value of the COS object to the given string.
* @param value The string value to set.
* @throws IOException if an I/O error occurs.
*/
","* Set the plain text value of this field, and try to update the visual appearance.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDefaultValue(java.lang.String),226,229,"/**
* Sets the default value for the COS object.
* @param value The string value to set as default.
*/
","* Sets the default value of this field.
     *
     * @param value Plain text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultAppearance(java.lang.String),128,144,"/**
* Sets the default appearance string for the annotation.
* @param daValue The default appearance string to set.
*/
","* Set the default appearance.
     * 
     * This will set the local default appearance for the variable text field only, not 
     * affecting a default appearance in the parent hierarchy.
     * 
     * Providing null as the value will remove the local default appearance.
     * <p>
     * This method can also be used to change the font of a field, by replacing the font name from
     * this string with another font name found in the AcroForm default resources <u>before</u>
     * calling {@link #setValue(java.lang.String) setValue(String)}, see also
     * <a href=""https://stackoverflow.com/questions/47995062/pdfbox-api-how-to-handle-cyrillic-values"">this
     * stackoverflow answer</a>. For example, ""/Helv 10 Tf 0 g"" can be replaced with ""/F1 10 Tf 0
     * g"". Performance may go down (see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4508"">PDFBOX-4508)</a> if this is done
     * for many fields and with a very large font (e.g. ArialUni); to avoid this, save and reload
     * the file after changing all fields.
     *
     * @param daValue a string describing the default appearance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setScaleRatio(java.lang.String),68,71,"/**
* Sets the scale ratio of the COS object.
* @param scaleRatio The scale ratio string to set.
*/
","* This will set the scale ration.
     * 
     * @param scaleRatio the scale ratio.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(java.lang.String,int)",410,413,"/**
* Sets an integer value for a given key in the COS.
* @param key The key for the integer value.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",456,465,"/**
* Sets an integer value in an embedded dictionary.
* @param embeddedDictionary Dictionary to embed in.
* @param key Key for the integer value.
* @param value Integer value to set.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param embeddedDictionary The embedded dictionary.
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFlag,"org.apache.pdfbox.cos.COSDictionary:setFlag(org.apache.pdfbox.cos.COSName,int,boolean)",497,509,"/**
* Sets a bit flag in a COS field's integer value.
* @param field COS field to modify
* @param bitFlag Bit flag to set/unset
* @param value If true, sets the flag; otherwise, unsets it.
*/
","* Sets the given boolean value at bitPos in the flags.
     *
     * @param field The COSName of the field to set the value into.
     * @param bitFlag the bit position to set the value in.
     * @param value the value the bit position should have.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,readJPX,"org.apache.pdfbox.filter.JPXFilter:readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",116,203,"/**
* Reads a JPX image from an input stream.
* @param input Input stream containing the JPX image.
* @param options Decode options for the image.
* @param result Decode result object to store parameters.
* @return BufferedImage object representing the decoded image.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPagesDictionary,"org.apache.pdfbox.pdfparser.COSParser:checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",957,998,"/**
 * Recursively counts pages within a pages dictionary.
 * Updates page count and removes invalid objects.
 * @return Total number of pages found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setStructParents,org.apache.pdfbox.pdmodel.PDPage:setStructParents(int),376,379,"/**
* Sets the number of structural parents for the page.
* @param structParents The number of structural parents.
*/
","* This will set the key for this page in the structural parent tree.
     * 
     * @param structParents The new key for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setRotation,org.apache.pdfbox.pdmodel.PDPage:setRotation(int),602,605,"/**
* Sets the rotation value for the page.
* @param rotation The rotation angle in degrees.
*/
","* This will set the rotation for this page.
     * 
     * @param rotation The new rotation for this page in degrees.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,"org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",79,99,"/**
 * Constructs a PDPageTree from a COSDictionary, handling invalid PDF structures.
 * @param root The COSDictionary representing the page tree root.
 * @param document The parent PDDocument.
 */
","* Constructor for reading.
     *
     * @param root A page tree root.
     * @param document The document which contains ""root"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.cos.COSDictionary),473,491,"/**
* Removes a COSDictionary node from its parent's kids array.
* Updates ancestor counts after removal.
*/
",* Removes the given COS page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,add,org.apache.pdfbox.pdmodel.PDPageTree:add(org.apache.pdfbox.pdmodel.PDPage),498,520,"/**
* Adds a page to the document's root, updating parent counts.
* @param page The PDPage object to add.
*/","* Adds the given page to this page tree.
     * 
     * @param page The page to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,increaseParents,org.apache.pdfbox.pdmodel.PDPageTree:increaseParents(org.apache.pdfbox.cos.COSDictionary),586,595,"/**
* Increments the COUNT of each parent dictionary up the hierarchy.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStart(int),146,154,"/**
 * Sets the start value. Throws exception if start is not positive.
 */","* Sets the start value for page numbering in this page range.
     * 
     * @param start
     *            a positive integer representing the start value.
     * @throws IllegalArgumentException
     *             if {@code start} is not a positive integer",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setBitsPerSample(int),134,137,"/**
* Sets the bits per sample in the COS object.
* @param bps The number of bits per sample.
*/
","* Set the number of bits that the output value will take up. Valid values
     * are 1,2,4,8,12,16,24,32.
     *
     * @param bps The number of bits for each output value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setMCID(int),99,102,"/**
* Sets the MCID value in the COS object.
* @param mcid The MCID value to set.
*/
","* Sets the marked content identifier.
     * 
     * @param mcid the marked content identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setRevisionNumber(int),480,487,"/**
 * Sets the revision number.
 * @param revisionNumber The revision number to set (must be > -1).
 */
","* Sets the revision number (R).
     * 
     * @param revisionNumber the revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTreeNextKey(int),166,169,"/**
* Sets the next key for the parent tree.
* @param parentTreeNextkey The next key value to set.
*/
","* Sets the next key in the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     * 
     * @param parentTreeNextkey The next key in the parent tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setLength(int),73,76,"/**
* Sets the length value in the crypt filter dictionary.
* @param length The length value to set.
*/
","* This will set the number of bits to use for the crypt filter algorithm.
     *
     * @param length The new key length.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setVersion(int),192,195,"/**
* Sets the version number in the dictionary.
* @param version The version number to set.
*/
","* This will set the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.  <br><br>
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param version The new encryption version.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setLength(int),213,216,"/**
* Sets the length value in the dictionary.
* @param length The length value to set.
*/
","* This will set the number of bits to use for the encryption algorithm.
     *
     * @param length The new key length.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRevision(int),238,241,"/**
* Sets the revision number for the dictionary.
* @param revision The revision number to set.
*/
","* This will set the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.  <br><br>
     *
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param revision The new encryption version.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPermissions(int),397,400,"/**
 * Sets the permissions for the PDF dictionary.
 * @param permissions Integer value representing the permissions.
 */","* This will set the permissions bit mask.
     *
     * @param permissions The new permissions bit mask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPage(int),437,440,"/**
* Sets the page number in the annotation.
* @param page The page number to set.
*/
","* This will set the page.
     *
     * @param page The page number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setJustification(java.lang.String),168,180,"/**
 * Sets the justification type.
 * @param justification Justification string (""centered"", ""right"").
 */
","* This will set the form of quadding (justification) of the annotation text.
     * 
     * @param justification The quadding of the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setRotation(int),197,200,"/**
* Sets the rotation value for the annotation.
* @param rotation The rotation angle in degrees.
*/
","* This will set the clockwise rotation in degrees.
     * 
     * @param rotation The number of degrees of clockwise rotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(int),364,367,"/**
* Sets the field flags for the COS object.
* @param ff The field flags to set.
*/
","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(int),408,411,"/**
* Sets the field flags for the COS object.
* @param ff The flags to set.
*/
","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(int),452,455,"/**
* Sets the clear field flags on the COS object.
* @param ff The clear field flags to set.
*/
","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(int),496,499,"/**
* Sets the flags for the widget field.
* @param f The flag value to set.
*/
","* This will set the field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(int),540,543,"/**
* Sets the field flags for a widget.
* @param ff The flag value to set.
*/
","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(int),584,587,"/**
* Sets the clear widget field flags.
* @param ff The flag value to set.
*/
","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,toCIDSystemInfo,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:toCIDSystemInfo(java.lang.String,java.lang.String,int)",181,188,"/**
 * Creates a COSDictionary containing registry, ordering, and supplement.
 * @param registry Registry string.
 * @param ordering Ordering string.
 * @param supplement Supplement integer.
 * @return COSDictionary with provided information.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",34,40,"/**
 * Initializes PDCID system info with registry, ordering, and supplement.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlags(int),400,404,"/**
* Sets the flags value and stores it in the dictionary.
* @param flags The flags value to set.
*/
","* This will set the font flags.
     *
     * @param flags The new font flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,setWidths,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",76,116,"/**
 * Sets the widths for glyphs in the font dictionary.
 * Uses glyph list and font encoding to determine widths.
 */",* Sets the glyph widths in the font dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",137,155,"/**
 * Creates a PDImageXObject from byte array, width, height, & color space.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,extractFromTiff,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:extractFromTiff(org.apache.pdfbox.io.RandomAccessRead,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",235,455,"/**
 * Extracts TIFF data from a reader, processing tags and writing to output.
 * @param reader RandomAccessRead object for TIFF file access.
 * @param os OutputStream for writing extracted data.
 * @param params COSDictionary for storing TIFF parameters.
 * @param number int representing page number
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setBitsPerComponent(int),124,128,"/**
* Sets the bits per component in the PDF parameters.
* @param bitsPerComponent The number of bits per component.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setHeight(int),211,215,"/**
* Sets the height of the object.
* @param height The height value to set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setWidth(int),223,227,"/**
* Sets the width of the object.
* @param width The desired width value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPaintType(int),100,103,"/**
* Sets the paint type for the pattern.
* @param paintType The integer representing the paint type.
*/
","* This will set the paint type.
     * @param paintType The new paint type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPatternType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPatternType(int),118,121,"/**
* Sets the pattern type in the dictionary.
* @param patternType The integer representing the pattern type.
*/","* This will set the pattern type.
     * @param patternType The new pattern type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setPaintType(int),100,104,"/**
* Sets the paint type for the COS object.
* @param paintType The integer representing the paint type.
*/
","* This will set the paint type.
     * @param paintType The new paint type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setTilingType(int),119,122,"/**
* Sets the tiling type for the COS object.
* @param tilingType The tiling type to set.
*/
","* This will set the tiling type.
     * @param tilingType The new tiling type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setShadingType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setShadingType(int),125,128,"/**
* Sets the shading type in the dictionary.
* @param shadingType The integer value of the shading type.
*/
","* This will set the shading type.
     *
     * @param shadingType the new shading type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerFlag(int),79,82,"/**
* Sets the number of bits used per flag.
* @param bitsPerFlag The number of bits per flag.
*/
","* Set the number of bits per flag.
     *
     * @param bitsPerFlag the number of bits per flag",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setVerticesPerRow(int),75,78,"/**
* Sets the number of vertices per row in the COS object.
* @param verticesPerRow The number of vertices per row.
*/
","* Set the number of vertices per row.
     *
     * @param verticesPerRow the number of vertices per row",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerComponent(int),75,79,"/**
* Sets the bits per color component.
* @param bitsPerComponent The number of bits per component.
*/
","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerCoordinate(int),102,106,"/**
* Sets the number of bits per coordinate.
* @param bitsPerCoordinate The number of bits per coordinate.
*/
","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineCapStyle(int),252,255,"/**
* Sets the line cap style.
* @param style The line cap style to set.
*/
","* This will set the line cap style for the graphics state.
     *
     * @param style The new line cap style to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineJoinStyle(int),272,275,"/**
* Sets the line join style.
* @param style The line join style to set.
*/
","* This will set the line join style.
     *
     * @param style The new line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setOverprintMode(java.lang.Integer),420,430,"/**
 * Sets the overprint mode. Null value removes the entry.
 * @param overprintMode The overprint mode to set.
 */
","* This will set the overprint mode(OPM).
     *
     * @param overprintMode The overprint mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFlags(int),85,88,"/**
* Sets the flags value for the action.
* @param flags The flags value to set.
*/
",* @param flags the flags,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFlags(int),111,114,"/**
* Sets the flags value for the action.
* @param flags The integer value to set as flags.
*/
",* @param flags the flags,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setPageNumber(int),160,170,"/**
* Sets the page number in the dictionary.
* If negative, removes the page number entry.
*/
","* Set the page number (zero-based) in the current document containing the file attachment
     * annotation.
     *
     * @param pageNumber the zero based page number. If this is &lt; 0 then the entry is removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationIndex(int),223,233,"/**
* Sets the annotation index in the dictionary.
* If negative, removes the annotation. Otherwise, sets the index.
*/
","* This will set the index (zero-based) of the annotation in the /Annots array of the page
     * specified by the /P entry.
     *
     * @param index the zero based index. If this is &lt; 0 then the entry is removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationFlags(int),302,305,"/**
* Sets the annotation flags for the COS object.
* @param flags Integer representing the flags to set.
*/
","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setStructParent(int),693,696,"/**
* Sets the parent structure ID.
* @param structParent The ID of the parent structure.
*/
","* This will set the key for this annotation in the structural parent tree.
     * 
     * @param structParent The new key for this annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setQ(int),136,139,"/**
* Sets the 'Q' integer value in the COS object.
* @param q The integer value to set.
*/
","* This will set the quadding/justification of the text. Please see the QUADDING_CONSTANTS
     * in {@link PDVariableText }.
     *
     * @param q The new text justification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRotation(int),76,79,"/**
* Sets the rotation value for the COS object.
* @param rotation The rotation value to set.
*/","* This will set the rotation.
     * 
     * @param rotation the rotation as a multiple of 90",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,setP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:setP(int),77,84,"/**
 * Sets the 'P' integer value in the dictionary.
 * @param p The integer value to set (must be between 0 and 3).
 */
","* Set the P value.
     * 
     * @param p the value to be set as P",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setTimestampRequired(boolean),96,99,"/**
* Sets the 'FT' (timestamp required) flag in the dictionary.
* @param flag True if timestamp is required, false otherwise.
*/
","* Sets if a timestamp is reuqired or not.
     * 
     * @param flag true if a timestamp is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setOpenCount(int),234,237,"/**
* Sets the open count in the COS object.
* @param openCount The new open count value.
*/
","* Set the open count. This number is automatically managed for you when you add items to the outline.
     *
     * @param openCount The new open count.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setQ(int),622,625,"/**
* Sets the Q value in the dictionary.
* @param q The Q value to set.
*/
","* This will set the document-wide default value for the quadding/justification of variable text
     * fields. See the QUADDING constants of {@link PDVariableText}.
     *
     * @param q The justification of the variable text fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDField:setFieldFlags(int),213,216,"/**
* Sets the field flags in the dictionary.
* @param flags The flags to set.
*/
","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,setTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:setTopIndex(java.lang.Integer),69,79,"/**
* Sets the top index in the COS object.
* @param topIndex The top index to set, or null to remove.
*/
","* This will set top index ""TI"" value.
     *
     * @param topIndex the value for the top index, null will remove the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMaxLen(int),203,206,"/**
* Sets the maximum length value in the COS object.
* @param maxLen The maximum length to set.
*/
","* Sets the maximum number of characters of the text field.
     * 
     * @param maxLen the maximum number of characters",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setQ(int),208,211,"/**
* Sets the 'Q' integer value within the COS object.
* @param q The integer value to set.
*/
","* This will set the quadding/justification of the text.  See QUADDING constants.
     *
     * @param q The new text justification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(java.lang.String,long)",432,435,"/**
* Sets a long value for the given key, using PDF name conversion.
* @param key The key for the long value.
* @param value The long value to set.
*/
","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteTrailer,org.apache.pdfbox.pdfwriter.COSWriter:doWriteTrailer(org.apache.pdfbox.cos.COSDocument),678,708,"/**
 * Writes the document trailer to the output, updates trailer data.
 */","* This will write the trailer to the PDF document.
     *
     * @param doc The document to create the trailer for.
     *
     * @throws IOException If there is an IOError while writing the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setRevision(long),151,154,"/**
* Sets the revision number for the dictionary.
* @param revision The revision number to set.
*/
","* The software module revision number, corresponding to the Date attribute.
     *
     * @param revision is the software module revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setMinimumRevision(long),179,182,"/**
* Sets the minimum revision number in the dictionary.
* @param revision The minimum revision value to set.
*/
","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @param revision is the software module revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(java.lang.String,float)",473,476,"/**
* Sets a float value for a given key.
* Delegates to the named version using COSName.
*/
","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setUserUnit,org.apache.pdfbox.pdmodel.PDPage:setUserUnit(float),890,897,"/**
* Sets the user unit value. Throws exception if value is not positive.
*/
","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch. This is supported by PDF 1.6 and higher.
     *
     * @param userUnit
     * throws IllegalArgumentException if the parameter is not positive.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineWidth(float),132,135,"/**
* Sets the width of the guideline.
* @param width The width to set for the guideline.
*/
","* Set the guideline width.
     *
     * @param width The width in default user space units.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setOpacity(float),805,808,"/**
* Sets the opacity value for the annotation.
* @param opacity Opacity value (0.0 - 1.0)
*/
","* Set the annotation opacity.
     *
     * @param opacity The new opacity value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderLength(float),316,319,"/**
* Sets the leader line length in the annotation.
* @param leaderLength The length of the leader line.
*/
","* This will set the length of the leader line.
     * 
     * @param leaderLength length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderExtend(float),336,339,"/**
* Sets the leader extend value in the annotation.
* @param leaderExtend The leader extend float value.
*/
","* This will set the length of the leader line extensions.
     * 
     * @param leaderExtend length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderOffset(float),356,359,"/**
* Sets the leader offset value in the annotation.
* @param leaderOffset The leader offset value to set.
*/
","* This will set the length of the leader line offset.
     * 
     * @param leaderOffset length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseDictElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseDictElement(org.w3c.dom.Element),357,423,"/**
 * Parses a dictionary element from the given XML element.
 * @param dictEl XML element representing the dictionary
 * @return COSDictionary object parsed from the element
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontWeight(float),347,350,"/**
* Sets the font weight.
* @param fontWeight The font weight value to set.
*/","* Set the weight of the font.
     *
     * @param fontWeight The new weight of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalicAngle(float),452,455,"/**
 * Sets the italic angle.
 * @param angle The italic angle in degrees.
 */","* This will set the italic angle for the font.
     *
     * @param angle The new italic angle for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAscent(float),472,475,"/**
* Sets the ascent value for the current font.
* @param ascent The ascent value to set.
*/
","* This will set the ascent for the font.
     *
     * @param ascent The new ascent for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setDescent(float),492,495,"/**
* Sets the descent value in the DIC.
* @param descent The descent value to set.
*/
","* This will set the descent for the font.
     *
     * @param descent The new descent for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setLeading(float),512,515,"/**
* Sets the leading value for the dictionary.
* @param leading The leading value to set.
*/","* This will set the leading for the font.
     *
     * @param leading The new leading for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCapHeight(float),541,545,"/**
* Sets the cap height value.
* @param capHeight The cap height to set.
*/
","* This will set the cap height for the font.
     *
     * @param capHeight The new cap height for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setXHeight(float),570,574,"/**
 * Sets the x-height value and stores it in the dictionary.
 * @param xHeight The x-height value to set.
 */
","* This will set the x height for the font.
     *
     * @param xHeight The new x height for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemV(float),591,594,"/**
* Sets the stem V value in the DIC.
* @param stemV The stem V value to set.
*/
","* This will set the stem V for the font.
     *
     * @param stemV The new stem v for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemH(float),611,614,"/**
* Sets the stem height value in the DIC.
* @param stemH The stem height to set.
*/
","* This will set the stem H for the font.
     *
     * @param stemH The new stem h for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAverageWidth(float),631,634,"/**
* Sets the average width.
* @param averageWidth The average width to set.
*/","* This will set the average width for the font.
     *
     * @param averageWidth The new average width for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMaxWidth(float),651,654,"/**
* Sets the maximum width value.
* @param maxWidth The maximum width to set.
*/
","* This will set the max width for the font.
     *
     * @param maxWidth The new max width for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMissingWidth(float),691,694,"/**
* Sets the missing width value in the dictionary.
* @param missingWidth The missing width to set.
*/","* This will set the missing width for the font.
     *
     * @param missingWidth The new missing width for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setXStep(float),137,140,"/**
* Sets the X step value within the COS object.
* @param xStep The X step value to set.
*/
","* This will set the XStep value.
     * @param xStep The new XStep value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setYStep(float),155,158,"/**
* Sets the Y step value in the COS object.
* @param yStep The Y step value to set.
*/
","* This will set the YStep value.
     * @param yStep The new YStep value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setVolume(float),83,90,"/**
 * Sets the volume level.
 * @param volume Volume level between -1.0 and 1.0.
 */
","* Gets the volume at which to play the sound, in the range −1.0 to 1.0.
     *
     * @param volume The volume at which to play the sound, in the range −1.0 to 1.0.
     * 
     * @throws IllegalArgumentException if the volume parameter is outside of the range −1.0 to 1.0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineLength(float),282,285,"/**
* Sets the length of the leader line.
* @param leaderLineLength The desired length of the leader line.
*/
","* This will set the length of the leader line.
     * 
     * @param leaderLineLength length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineExtensionLength(float),302,305,"/**
* Sets the length of the leader line extension.
* @param leaderLineExtensionLength Extension length in floats.
*/
","* This will set the length of the leader line extensions.
     * 
     * @param leaderLineExtensionLength length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineOffsetLength(float),322,325,"/**
* Sets the leader line offset length in the COS object.
* @param leaderLineOffsetLength The offset length to set.
*/
","* This will set the length of the leader line offset.
     * 
     * @param leaderLineOffsetLength length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setConstantOpacity(float),124,127,"/**
* Sets the constant opacity value for the COS object.
* @param ca The constant opacity value to set.
*/
","* This will set the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @param ca the constant opacity value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setWidth(float),106,117,"/**
 * Sets the width of the PDF object.
 * Rounds to int if possible, otherwise sets as float.
 */
","* This will set the border width in points, 0 = no border.
     *
     * There is a bug in Adobe Reader DC, float values are ignored for text field widgets. As a
     * workaround, floats that are integers (e.g. 2.0) are written as integer in the PDF.
     * <p>
     * In Adobe Acrobat DC, the values are shown as ""0 = Invisible, 1 = Thin, 2 = Medium, 3 = Thick""
     * for widget and link annotations.
     *
     * @param w float the width in points",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setV(float),363,366,"/**
* Sets the 'V' float value in the dictionary.
* @param minimumRequiredCapability The float value to set.
*/
","* (Optional) The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @param minimumRequiredCapability is the minimum required capability of the
     * signature field seed value dictionary parser",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCYX(float),331,334,"/**
 * Sets the CYX value in the COS object.
 * @param cyx The CYX value to set.
 */
","* This will set the CYX factor.
     * 
     * @param cyx CYX factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseCOSStream,org.apache.pdfbox.pdfparser.COSParser:parseCOSStream(org.apache.pdfbox.cos.COSDictionary),713,777,"/**
 * Parses a COS stream from a dictionary.
 * @param dic COSDictionary containing stream information.
 * @return COSStream object or null on error.
 */
","* This will read a COSStream from the input stream using length attribute within dictionary. If
     * length attribute is a indirect reference it is first resolved to get the stream length. This
     * means we copy stream data without testing for 'endstream' or 'endobj' and thus it is no
     * problem if these keywords occur within stream. We require 'endstream' to be found after
     * stream data is read.
     *
     * @param dic dictionary that goes with this stream.
     *
     * @return parsed pdf stream.
     *
     * @throws IOException if an error occurred reading the stream, like problems with reading
     * length attribute, stream does not end with 'endstream' after data read, stream too short etc.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneMerge,"org.apache.pdfbox.multipdf.PDFCloneUtility:cloneMerge(org.apache.pdfbox.pdmodel.common.COSObjectable,org.apache.pdfbox.pdmodel.common.COSObjectable)",195,202,"/**
 * Merges the contents of base COS object into target COS object.
 * @param base Base COS object to merge from.
 * @param target Target COS object to merge into.
 */
","* Merges two objects of the same type by deep-cloning its members. <br>
     * Base and target must be instances of the same class.
     * 
     * @param base the base object to be cloned
     * @param target the merge target
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)",1483,1496,"/**
 * Recursively updates page references within a tree entry.
 * Processes COSArray and COSDictionary objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(boolean),149,186,"/**
 * Parses a PDF document.
 * @param lenient lenient parsing flag; throws IOException if false.
 * @return PDDocument object representing the parsed document.
 */
","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing.
     *
     * @param lenient activate leniency if set to true
     * @return the populated PDDocument
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStreamOperators,org.apache.pdfbox.contentstream.PDFStreamEngine:processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream),531,571,"/**
 * Processes stream operators from a content stream.
 * Handles operator parsing and color operator processing.
 */
","* Processes the operators of the given content stream.
     *
     * @param contentStream to content stream to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFStreamParser:parse(),79,88,"/**
 * Parses tokens into a list.
 * @return List of parsed objects, or empty list if none found.
 */
","* This will parse all the tokens in the stream. This will close the stream when it is finished parsing.
     *
     * @return All of the tokens in the stream.
     * @throws IOException If there is an error while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getGlyphBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getGlyphBBox(),114,152,"/**
 * Extracts the bounding box of a glyph from a PDF stream.
 * Returns a PDRectangle or null if not found.
 */","* Calculate the bounding box of this glyph. This will work only if the first operator in the
     * stream is d1.
     *
     * @return the bounding box of this glyph, or null if the first operator is not d1.
     * @throws IOException If an io error occurs while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getWidth(),167,185,"/**
 * Retrieves the width value from the PDF stream.
 * @throws IOException if an error occurs during parsing.
 */
","* Get the width from a type3 charproc stream.
     *
     * @return the glyph width.
     * @throws IOException if the stream could not be read, or did not have d0 or d1 as first
     * operator, or if their first argument was not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractNonStrokingColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),364,428,"/**
 * Extracts the non-stroking color from the annotation's /DA.
 * Returns a default black color if parsing fails.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument),1463,1466,"/**
 * Writes a PDF document to an output stream.
 * @param doc The PDF document to write.
 * @throws IOException if an I/O error occurs.
 */
","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream),1105,1114,"/**
 * Saves the document incrementally to the given output stream.
 * @param output Output stream to save the incremental changes to.
 * @throws IOException if an I/O error occurs.
 */
","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     * <p>
     * Other usages of this method are for experienced users only. You will usually never need it. It is useful only if
     * you are required to keep the current revision and append the changes. A typical use case is changing a signed
     * file without invalidating the signature.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Another problem with page-based modifications can occur if the page tree isn't flat: there
     * won't be an closed update path from the catalog to the page. To fix this, add code like this:
     * <pre>{@code
     * COSDictionary parent = page.getCOSObject().getCOSDictionary(COSName.PARENT);
     * while (parent != null)
     * {
     *     parent.setNeedToBeUpdated(true);
     *     parent = parent.getCOSDictionary(COSName.PARENT);
     * }
     * }</pre>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,"org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream,java.util.Set)",1143,1151,"/**
* Writes the PDF document to the output stream.
* Uses COSWriter to handle the writing process.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(),162,165,"/**
 * Constructs a PDDocument with a default memory stream cache.
 */
","* Creates an empty PDF document.
     * You need to add at least one page for the document to be valid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareVisibleSignature,"org.apache.pdfbox.pdmodel.PDDocument:prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",557,598,"/**
 * Prepares visible signature by finding and assigning required objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocument:getDocumentCatalog(),789,805,"/**
 * Returns the document catalog. Creates one if it doesn't exist.
 */","* This will get the document CATALOG. This is guaranteed to not return null.
     * 
     * @return The documents /Root dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOutputIntents,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOutputIntents(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",1341,1369,"/**
 * Merges output intents from src to dest catalog, avoiding duplicates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,enqueueKids,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:enqueueKids(org.apache.pdfbox.cos.COSDictionary),190,222,"/**
 * Enqueues child nodes of a page tree node, avoiding cycles.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,"org.apache.pdfbox.pdmodel.PDPageTree:get(int,org.apache.pdfbox.cos.COSDictionary,int)",295,366,"/**
* Recursively finds a COSDictionary by page number.
* @param pageNum target page number
* @param node current node
* @param encountered pages encountered so far
* @return COSDictionary or null if not found
*/
","* Returns the given COS page using a depth-first search.
     *
     * @param pageNum 1-based page number
     * @param node page tree node to search
     * @param encountered number of pages encountered so far
     * @return COS dictionary of the Page object
     * @throws IllegalStateException if the requested page number isn't found
     * @throws IndexOutOfBoundsException if the requested page number is higher than the page count",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,findPage,"org.apache.pdfbox.pdmodel.PDPageTree:findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",397,413,"/**
 * Recursively searches page tree nodes, returning if found.
 * Uses context to track found state and visit nodes.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,next,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:next(),230,243,"/**
 * Returns the next page in the sequence.
 * Throws NoSuchElementException if no more pages exist.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),49,57,"/**
 * Converts a COSDictionary to a PDComplexFileSpecification.
 * @param base The COSDictionary to convert.
 * @return A PDComplexFileSpecification object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification.java,createFS,org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:createFS(org.apache.pdfbox.cos.COSBase),45,65,"/**
 * Creates a PDFileSpecification from a COSBase object.
 * @param base COSBase object representing file specification
 * @return PDFileSpecification object or null if base is null
 * @throws IOException if the base object type is unknown
 */
","* A file specification can either be a COSString or a COSDictionary.  This
     * will create the file specification either way.
     *
     * @param base The cos object that describes the fs.
     *
     * @return The file specification for the COSBase object.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,notifyChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:notifyChanged(),185,191,"/**
 * Notifies the structure element about a change.
 * Calls attributeChanged on the structure element.
 */","* Notifies the attribute object change listeners about a change in this
     * attribute object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),162,169,"/**
* Appends a COSObjectable as a child object.
* Handles null input; delegates to appendKid.
*/
","* Appends an objectable kid.
     * 
     * @param objectable the objectable",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertObjectableBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",219,226,"/**
* Inserts a COSObjectable before a reference object.
* @param newKid The object to insert.
* @param refKid The reference object.
*/
","* Inserts an objectable kid before a reference kid.
     * 
     * @param newKid the objectable
     * @param refKid the reference kid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),294,301,"/**
 * Removes a COSObjectable kid object. Returns true on success.
 */","* Removes an objectable kid.
     * 
     * @param objectable the objectable
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),530,534,"/**
 * Sets the standard cryptographic filter dictionary.
 * @param cryptFilterDictionary The dictionary to set.
 */
","* Sets the standard crypt filter.
     * 
     * @param cryptFilterDictionary the standard crypt filter to set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),541,545,"/**
 * Sets the default crypt filter dictionary.
 * Sets direct flag and associates with the default COS name.
 */
","* Sets the default crypt filter (for public-key security handler).
     *
     * @param defaultFilterDictionary the standard crypt filter to set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(),42,46,"/**
 * Constructs a new FDFAnnotationCaret object.
 * Initializes the annotation subtype.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(),43,47,"/**
 * Constructs a FDF annotation circle.
 * Initializes the annotation subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(),40,44,"/**
* Constructs a FDFAnnotationFileAttachment object.
* Initializes the subtype name for the annotation.
*/
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(),49,52,"/**
 * Initializes a FDFAnnotationFreeText object.
 * Sets the annotation subtype to SUBTYPE.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(),54,58,"/**
* Initializes a new FDFAnnotationInk object.
* Sets the annotation subtype to SUBTYPE.
*/
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(),46,49,"/**
 * Constructs a FDFAnnotationLine object, setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(),52,55,"/**
 * Initializes the FDFAnnotationLink with a subtype name.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(),50,54,"/**
 * Constructs a FDFAnnotationPolygon object, initializing its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(),51,55,"/**
* Constructs a FDFAnnotationPolyline object, initializing its subtype.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(),40,44,"/**
 * Constructs a FDFAnnotationSound object, initializing its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(),44,48,"/**
* Constructs a FDFAnnotationSquare object, initializing its subtype.
*/
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(),62,65,"/**
 * Initializes the FDF annotation stamp with a subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(),42,46,"/**
 * Constructs a FDFAnnotationText object, setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(),36,38,"/**
 * Default constructor for the FDFAnnotationTextMarkup class.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initCallout(org.w3c.dom.Element),121,134,"/**
 * Initializes callout values from element attribute.
 * Parses comma-separated float values into an array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:initVertices(org.w3c.dom.Element),87,109,"/**
 * Parses vertex data from an XML element using XPath.
 * @param element XML element containing vertex data.
 * @throws IOException if 'vertices' element is missing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initVertices(org.w3c.dom.Element),83,105,"/**
 * Extracts vertex values from an XML element using XPath.
 * @param element XML element containing vertex data.
 * @throws IOException if 'vertices' element is missing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(java.util.TreeMap),342,393,"/**
 * Generates vertical header metrics for the CID font.
 * Populates the CID font's W2 item with height and advance data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary),516,545,"/**
 * Builds and sets vertical metrics for the CID font dictionary.
 */",* Build vertical metrics with Identity CIDToGIDMap (for embedding full font).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(),57,59,"/**
 * Default constructor for the PDSimpleFont class.
 */",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,addNameTag,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:addNameTag(java.lang.String),223,231,"/**
* Sets the base font name by appending a tag to the font name.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:toRGB(float[]),77,114,"/**
 * Converts XYZ value to RGB, applying whitepoint calibration if enabled.
 * @param value XYZ color value array
 * @return RGB color value array
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,initColorConversionCache,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:initColorConversionCache(org.apache.pdfbox.pdmodel.PDResources),111,175,"/**
 * Initializes color conversion cache based on attributes and resources.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:toString(),137,171,"/**
 * Returns a string representation of the PDSeparation object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildImageObject,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",331,406,"/**
* Creates a PDImageXObject from the PNG state, handling color profiles.
* @param state PNG state object containing image data and metadata.
* @return PDImageXObject or null if creation fails.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroup(java.lang.String),146,163,"/**
 * Retrieves an Optional Content Group by name.
 * @param name Group name to search for.
 * @return PDOptionalContentGroup or null if not found.
 */
","* Returns the first optional content group of the given name.
     *
     * @param name the group name
     * @return the optional content group or null, if there is no such group",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOptionalContentGroups,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOptionalContentGroups(),188,201,"/**
 * Retrieves a collection of Optional Content Groups.
 * Returns a Collection<PDOptionalContentGroup> objects.
 */","* Returns the collection of all optional content groups.
     * @return the optional content groups",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setDecodeValues(org.apache.pdfbox.cos.COSArray),43,43,"/**
 * Extends PDTriangleBasedShadingType for a specific shading type.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setDecodeValues(org.apache.pdfbox.cos.COSArray),41,41,"/**
 * Extends PDTriangleBasedShadingType for shading type 5.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineWidth(java.lang.Float),232,235,"/**
* Sets the line width for the PDF content.
* @param width The line width to set.
*/
","* This will set the line width.
     *
     * @param width The line width for the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setMiterLimit(java.lang.Float),293,296,"/**
* Sets the miter limit value.
* @param miterLimit The miter limit to set.
*/
","* This will set the miter limit for the graphics state.
     *
     * @param miterLimit The new miter limit value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFlatnessTolerance(java.lang.Float),468,471,"/**
* Sets the flatness tolerance value.
* @param flatness The flatness tolerance to set.
*/
","* This will set the flatness tolerance.
     *
     * @param flatness The new flatness tolerance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setSmoothnessTolerance(java.lang.Float),488,491,"/**
* Sets the smoothness tolerance value.
* @param smoothness The desired smoothness tolerance.
*/
","* This will set the smoothness tolerance.
     *
     * @param smoothness The new smoothness tolerance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingAlphaConstant(java.lang.Float),528,531,"/**
* Sets the constant stroking alpha value.
* @param alpha The alpha value to set (0.0-1.0).
*/
","* This will set the stroking alpha constant.
     *
     * @param alpha The new stroking alpha constant.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingAlphaConstant(java.lang.Float),548,551,"/**
* Sets the non-stroking alpha value.
* @param alpha The alpha value to set.
*/
","* This will set the non stroking alpha constant.
     *
     * @param alpha The new non stroking alpha constant.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(),71,74,"/**
 * Constructs a new PDAnnotationLink, setting the subtype.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(),52,54,"/**
 * Default constructor for the PDAnnotationMarkup class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(),44,47,"/**
* Initializes the annotation popup, setting its subtype.
*/
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(),43,46,"/**
 * Initializes the annotation widget, setting its subtype.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
* Creates a PDAnnotationLink object from a COSDictionary.
* @param field The COSDictionary containing annotation link data.
*/
","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Creates a PDAnnotationMarkup object from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Creates a PDAnnotationPopup object from a COSDictionary.
 * @param field The COSDictionary representing the popup.
 */
","* Creates a popup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnknown.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnknown:<init>(org.apache.pdfbox.cos.COSDictionary),35,38,"/**
 * Creates a PDAnnotationUnknown object from a COSDictionary.
 */","* Creates an arbitrary annotation from a COSDictionary, expected to be a correct object definition for some sort of
     * annotation.
     *
     * @param dic The dictionary which represents this Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(org.apache.pdfbox.cos.COSDictionary),53,57,"/**
 * Constructs a PDAnnotationWidget from a COSDictionary.
 * Sets the subtype name in the COS object.
 */
","* Creates a PDWidget from a COSDictionary, expected to be a correct object definition for a field in PDF.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float),62,64,"/**
* Sets all rect differences to the given value.
* @param difference The value to set for all rect differences.
*/
","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and boundaries of the underlying.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float),149,151,"/**
* Sets all rect differences to the given value.
* @param difference The value to set for all differences.
*/
","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float),137,140,"/**
* Sets the rectangle differences using a single float value.
* Uses the provided difference for all four sides.
*/
","* This will set the difference between the annotations ""outer"" rectangle defined by /Rect and
     * the border.
     *
     * <p>
     * This will set an equal difference for all sides</p>
     *
     * @param difference from the annotations /Rect entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setBorderLine,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",206,229,"/**
 * Sets the line dash pattern based on border style or array.
 * @param lineWidth line width
 * @param bs border style dictionary
 * @param border border array
 */
","* Convenience method for annotations: sets the line with and dash style.
     *
     * @param lineWidth The line width.
     * @param bs The border style, may be null.
     * @param border The border array, must have at least three entries. This is
     * only used if the border style is null.
     *
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(char,char,char,char,char,char,char,char,char)",421,437,"/**
 * Adds key usage flags to the key usage string.
 * Flags represent different cryptographic operations.
 */
","* works like {@link #addKeyUsage(String)} but enters each character separately
     *
     * @param digitalSignature char that is one of {0, 1, X}
     * @param nonRepudiation char that is one of {0, 1, X}
     * @param keyEncipherment char that is one of {0, 1, X}
     * @param dataEncipherment char that is one of {0, 1, X}
     * @param keyAgreement char that is one of {0, 1, X}
     * @param keyCertSign char that is one of {0, 1, X}
     * @param cRLSign char that is one of {0, 1, X}
     * @param encipherOnly char that is one of {0, 1, X}
     * @param decipherOnly char that is one of {0, 1, X}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),41,44,"/**
 * Constructs a PDCheckBox object, initializing it with a PDAcroForm.
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
 * Creates a PDComboBox instance associated with a PDAcroForm.
 * @param acroForm The form to associate with this combo box.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),37,40,"/**
* Constructs a PDListBox object, initializing with a PDAcroForm.
*/
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.lang.String),374,383,"/**
 * Sets the string value of the COS object.
 * @param value The string value to set.
 * @throws IOException if an I/O error occurs.
 */
","* Set the selected value of this field, and try to update the visual appearance.
     *
     * @param value The name of the selected item.
     * @throws IOException if the value could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,updateSelectedOptionsIndex,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:updateSelectedOptionsIndex(java.util.List,java.util.List)",475,486,"/**
 * Finds and sorts indices of selected options.
 * @param values list of selected options
 * @param options list of available options
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),106,112,"/**
 * Creates a signature field within the PDF form.
 * Sets the signature field in the PDF structure.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,addOriginalContent,"org.apache.pdfbox.multipdf.Overlay:addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)",431,450,"/**
 * Adds content to the content array, handling streams and arrays.
 * @param contents COSBase object to add
 * @param contentArray Array to add content to
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeKEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",968,1039,"/**
* Merges K entries from source to destination structure trees.
* @param cloner PDFCloneUtility instance for cloning objects.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createColorSpace(org.apache.pdfbox.cos.COSBase),168,192,"/**
 * Creates a PDColorSpace from a COSBase object.
 * @param cs COSBase representing the color space.
 * @throws IOException if the color space type is invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getBorder(),731,757,"/**
 * Retrieves the border array, ensuring it has at least 3 elements.
 * If null, creates a default border array.
 */","* This will retrieve the border array. If none is available then it will create and return a
     * default array, which is [0 0 1]. The array consists of at least three numbers defining the
     * horizontal corner radius, vertical corner radius, and border width. The array may have a
     * fourth element, an optional dash array defining a pattern of dashes and gaps that shall be
     * used in drawing the border. If the array has less than three elements, the original array
     * will be copied and missing elements with value 0 will be added.
     *
     * @return the border array, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,<init>,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",74,90,"/**
 * Initializes a COSWriterCompressionPool with a document and parameters.
 * @param document PDDocument to compress
 * @param parameters Compression parameters, or default if null
 */
","* <p>
     * Constructs an object that can be used to compress the contents of a given {@link PDDocument}. It provides the
     * means to:
     * </p>
     * <ul>
     * <li>Compress the COSStructure of the document, by streaming {@link COSBase}s to compressed
     * {@link COSWriterObjectStream}s</li>
     * </ul>
     *
     * @param document The document, that shall be compressed.
     * @param parameters The configuration of the compression operations, that shall be applied.
     * @throws IOException Shall be thrown if a compression operation failed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addElements,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addElements(java.util.Iterator),194,224,"/**
* Iterates through elements, adding structures and handling object keys.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getNormalizedPath(int),340,344,"/**
 * Retrieves a normalized path for the given code.
 * @param code Path code to normalize.
 * @return Normalized GeneralPath object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPath(int),438,453,"/**
 * Retrieves a GeneralPath based on the given code.
 * Returns a new path if no glyph is found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,decode,"org.apache.pdfbox.filter.CCITTFaxFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",37,124,"/**
 * Decodes an image stream.
 * @param encoded Input stream of encoded data.
 * @param decoded Output stream for decoded data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",852,855,"/**
 * Gets the embedded date for the given COS name.
 * @param embedded COS name of the embedded object
 * @param key COS name of the key
 * @return Calendar object representing the date.
 */
","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",229,233,"/**
 * Creates a PDF image object from a BufferedImage.
 * @param document PDF document
 * @param image BufferedImage to convert
 * @return PDF image object
 */
","* Creates a new JPEG PDImageXObject from a BufferedImage.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addCornerCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addCornerCurl(double,double,double,double,double,double,double,boolean)",428,439,"/**
* Draws a corner curl segment using arc segments.
* @param anglePrev, angleCur, radius, cx, cy, alpha, alphaPrev
*/
",* Creates a corner curl for polygons and ellipses.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,drawBasicEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:drawBasicEllipse(double,double,double,double)",1000,1008,"/**
 * Draws an ellipse defined by its bounding rectangle coordinates.
 * @param left, bottom, right, top Ellipse bounding box coordinates.
 */
",* Draws an ellipse without a cloudy border effect.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,format,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:format(),144,190,"/**
* Formats text content paragraphs based on wrapping and alignment.
*/","* Format the text block.
     * 
     * @throws IOException if there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateFontSize,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",890,958,"/**
 * Calculates appropriate font size based on font and content rect.
 * @param font PDFont object
 * @param contentRect PDRectangle defining content area
 * @return Font size as float
 */","* My ""not so great"" method for calculating the fontsize. It does not work superb, but it
     * handles ok.
     * 
     * @return the calculated font-size
     * @throws IOException If there is an error getting the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDSimpleFont:readEncoding(),86,138,"/**
 * Reads and sets the font encoding based on dictionary values.
 * Handles different encoding types and provides fallbacks.
 */","* Reads the Encoding from the Font dictionary or the embedded or substituted font file.
     * Must be called at the end of any subclass constructors.
     *
     * @throws IOException if the font file could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isFontSymbolic(),197,253,"/**
 * Determines if the font is symbolic based on various conditions.
 * Returns true if symbolic, false if not, null if unknown.
 */","* Internal implementation of isSymbolic, allowing for the fact that the result may be indeterminate.
     * 
     * @return true if isSymbolic",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",314,335,"/**
 * Retrieves a TrueTypeFont mapping, falling back to a default if needed.
 * @param baseFont base font name
 * @param fontDescriptor font descriptor
 * @return FontMapping object
 */
","* Finds a TrueType font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param fontDescriptor FontDescriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontBoxFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",343,364,"/**
 * Retrieves a FontBoxFont based on baseFont/descriptor.
 * Returns a FontMapping, using fallback if needed.
 */","* Finds a font with the given PostScript name, or a suitable substitute, or null. This allows
     * any font to be substituted with a PFB, TTF or OTF.
     *
     * @param fontDescriptor the FontDescriptor of the font to find",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,xfaIsDynamic,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:xfaIsDynamic(),574,577,"/**
* Checks if the XFA form is dynamic.
* Returns true if XFA is present and has no fields.
*/
","* This will tell if the AcroForm is a dynamic XFA form.
     *
     * @return true if the AcroForm is a dynamic XFA form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,enqueueKids,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField),108,129,"/**
 * Adds field and its children to the queue, avoiding recursion.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRichContents(),866,869,"/**
* Retrieves rich content from the dictionary object.
* Returns the content as a String.
*/
","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:writeXML(java.io.Writer),117,158,"/**
 * Writes XML representation of the field to the given Writer.
 * @param output Writer to write XML to.
 * @throws IOException if an I/O error occurs.
 */
","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getRichTextValue(),218,221,"/**
 * Returns the rich text value from the inheritable attribute.
 */","* Get the fields rich text value.
     * 
     * @return the rich text value string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:<init>(org.apache.pdfbox.cos.COSBase),48,54,"/**
 * Parses a PDF function stream and builds instruction sequence.
 * @param functionStream COSBase object representing the function stream.
 */
","* Constructor.
     *
     * @param functionStream The function stream.
     * @throws IOException if an I/O error occurs while reading the function",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readLookupData,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readLookupData(),256,278,"/**
 * Reads lookup data from the array, populating the lookupData field.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpol,"org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpol(int[],int)",299,343,"/**
 * Recursively interpolates samples based on coordinates and step.
 * @param coord Coordinate array, step Incrementing index
 */
","* Do a linear interpolation if the two coordinates can be known, or
         * call itself recursively twice.
         *
         * @param coord coord partially set coordinate (not set from step
         * upwards); gets fully filled in the last call (""leaf""), where it is
         * used to get the correct sample
         * @param step between 0 (first call) and dimension - 1
         * @return interpolated result sample",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getBitsPerComponent(),848,860,"/**
* Returns the bits per component. 1 if stencil, otherwise from COS.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getColorSpace(),868,911,"/**
 * Returns the color space associated with this image.
 * Creates if null, caches if possible, throws on failure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getHeight(),945,950,"/**
* Returns the height of the PDF page.
* Uses internal values; initJPXValues() must be called first.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getWidth(),958,963,"/**
* Gets the width of the Jpx object.
* Returns the width as an integer.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Creates a Type6 shading context with specified parameters.
* @param shading Shading object; colorModel, xform, matrix, bounds
*/
","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Constructs a Type7ShadingContext with specified parameters.
* @param shading The shading object.
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
 * Creates a paint context for shading. Returns a black context on error.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
 * Creates a paint context for Type5 shading.
 * Returns a default context on error.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytes,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytes(),74,86,"/**
 * Retrieves the byte representation of the XFA object.
 * Returns an empty array if no bytes are found.
 */
","* Get the XFA content as byte array.
     * 
     * The XFA is either a stream containing the entire XFA resource or an array specifying individual packets that
     * together make up the XFA resource.
     * 
     * A packet is a pair of a string and stream. The string contains the name of the XML element and the stream
     * contains the complete text of this XML element. Each packet represents a complete XML element, with the exception
     * of the first and last packet, which specify begin and end tags for the xdp:xdp element. [IS0 32000-1:2008:
     * 12.7.8]
     * 
     * @return the XFA content
     * @throws IOException if the XFA content could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,preparePredictorPDImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",566,620,"/**
 * Creates a PDImageXObject with predictor and color space setup.
 * @param stream Image data stream
 * @param bitsPerComponent Bits per color component
 * @return PDImageXObject instance
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(),42,47,"/**
* Initializes a PDPageFitDestination object.
* Sets the array size to 2 and name to TYPE.
*/
","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:setFitBoundingBox(boolean),74,85,"/**
 * Sets whether to fit the bounding box.
 * If true, sets array name to TYPE_BOUNDED, else to TYPE.
 */
","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(),42,47,"/**
* Initializes a PDPageFitHeightDestination object.
* Sets the array size to 3 and sets name of element 1 to TYPE.
*/
","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setLeft(int),75,86,"/**
 * Sets the left child value in the array.
 * Sets array[2] to x or null if x is -1.
 */
","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setFitBoundingBox(boolean),103,114,"/**
 * Sets whether to fit the bounding box.
 * If true, sets array name to TYPE_BOUNDED, else to TYPE.
 */
","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(),38,43,"/**
* Initializes a PDPageFitRectangleDestination object.
* Sets the array size to 6 and names element 1 as TYPE.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setLeft(int),71,82,"/**
 * Sets the value at index 2 of the array to x or null.
 */","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setBottom(int),100,111,"/**
 * Sets the bottom coordinate. If y is -1, sets to null; otherwise, sets the int at index 3.
 */
","* Set the bottom y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The bottom y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setRight(int),129,140,"/**
 * Sets the value at index 4 of the array. Null if x is -1.
 */
","* Set the right x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The right x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setTop(int),159,170,"/**
 * Sets the 'top' value in the array. Sets to null if y is -1.
 */","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(),43,48,"/**
* Initializes the destination array with the TYPE constant.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setTop(int),77,88,"/**
 * Sets the 'top' value in the array. Null if y is -1, otherwise sets to y.
 */","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setFitBoundingBox(boolean),105,116,"/**
 * Sets whether to fit the bounding box.
 * If true, sets array element 1 to TYPE_BOUNDED.
 */
","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(),42,46,"/**
 * Initializes the destination array with a size of 5 and sets its name.
 */","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setLeft(int),74,85,"/**
 * Sets the value at index 2 of the array.
 * If x is -1, sets to null; otherwise, sets the integer value.
 */
","* Set the left x-coordinate, values 0 or -1 imply that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setTop(int),103,114,"/**
 * Sets the top value in the array. Sets to null if y is -1.
 */","* Set the top y-coordinate, values 0 or -1 imply that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setZoom(float),137,148,"/**
* Sets the zoom level. Sets array element to null or COSFloat.
*/","* Set the zoom value for the page, values 0 or -1 imply that the current zoom
     * will be used.
     * @param zoom The zoom value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryValue,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryValue(),222,261,"/**
 * Parses a COSDictionary value, handling object references.
 * Returns a COSBase object or COSNull.NULL on error.
 */
","* This will parse a PDF dictionary value.
     *
     * @return The parsed Dictionary object.
     *
     * @throws IOException If there is an error parsing the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:getDecodeParms(),269,273,"/**
* Retrieves decode parameters, trying /DP if /DecodeParms is absent.
*/","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:getFileDecodeParams(),282,285,"/**
 * Retrieves decode parameters from the PDF structure.
 * @return List of decode parameters, may be empty.
 */","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(),44,47,"/**
 * Constructs a PDCalGray object, initializing with COSName.CALGRAY.
 */",* Create a new CalGray color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(),39,42,"/**
 * Constructs a PDCalRGB object, initializing with COSName.CALRGB.
 */",* Creates a new CalRGB color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(),41,44,"/**
 * Constructs a PDLab object, extending PDF object with LAB type.
 */",* Creates a new Lab color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a PDCalGray object from a COSArray.
 * @param array The COSArray containing the PDF data.
 */
","* Creates a new CalGray color space using the given COS array.
     *
     * @param array the COS array which represents this color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(org.apache.pdfbox.cos.COSArray),48,51,"/**
 * Constructs a PDCalRGB object from a COSArray.
 * @param rgb COSArray representing RGB color values.
 */
","* Creates a new CalRGB color space using the given COS array.
     * @param rgb the cos array which represents this color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a PDLab object from a COSArray.
 * @param lab The COSArray representing the lab data.
 */
","* Creates a new Lab color space from a PDF array.
     * @param lab the color space array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,loadICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:loadICCProfile(),164,224,"/**
 * Loads the ICC profile from the input stream. Falls back if error.
 */","* Load the ICC profile, or init alternateColorSpace color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(java.awt.image.WritableRaster),193,281,"/**
 * Converts a raster to an RGB BufferedImage, handling colorants.
 * @param raster Input raster to convert.
 * @return RGB BufferedImage.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,<init>,"org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,boolean,org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.graphics.color.PDColor)",1768,1937,"/**
 * Renders a transparency group, handling backdrop and transforms.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGBImage(java.awt.image.WritableRaster),64,112,"/**
 * Converts a raster to an RGB BufferedImage, scaling pixel values.
 * @param raster The input WritableRaster to convert.
 * @return An RGB BufferedImage representation of the raster.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultDecode(int),158,164,"/**
 * Returns default decode values based on bits per component.
 * Returns an array of float values.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getInitialColor(),166,178,"/**
 * Returns the initial color. Lazily initializes if null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setARange(org.apache.pdfbox.pdmodel.common.PDRange),229,232,"/**
* Sets the range for a component using the provided PDRange object.
*/
","* This will set the a range for the ""a"" component.
     * @param range the new range for the ""a"" component, 
     * or null if defaults (-100..100) are to be set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setBRange(org.apache.pdfbox.pdmodel.common.PDRange),239,242,"/**
* Sets the B range of the PDRange object.
* @param range The PDRange object to set.
*/
","* This will set the ""b"" range for this color space.
     * @param range the new range for the ""b"" component,
     * or null if defaults (-100..100) are to be set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setKids(java.util.List),113,130,"/**
 * Updates limits and kids array based on child nodes.
 * Sets limits to first/last child's limits if kids exist.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setNumbers(java.util.Map),246,274,"/**
 * Sets NUMS item in node, handling null numbers input.
 * @param numbers Map of key-value pairs to be added to NUMS.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initStyles,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initStyles(org.w3c.dom.Element),107,126,"/**
 * Initializes styles from element attributes (head, tail, interior-color).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,calculateLimits,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:calculateLimits(),160,204,"/**
 * Calculates and sets the lower and upper limits for the node.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNote,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNote(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",194,217,"/**
 * Draws a note annotation with specified appearance stream.
 * @param annotation The annotation to draw.
 * @param contentStream Content stream for drawing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawInsert,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawInsert(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",263,276,"/**
 * Draws an insertion marker on the annotation's content stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",416,434,"/**
 * Draws an upward-pointing arrow annotation.
 * @param annotation The annotation to draw on.
 * @param contentStream Content stream for drawing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpLeftArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",436,456,"/**
 * Draws an up-left arrow on the annotation content stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawKey,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawKey(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",549,590,"/**
* Draws a key shape onto the PDF content stream.
* Uses predefined coordinates to draw the key outline.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getCropBox,org.apache.pdfbox.pdmodel.PDPage:getCropBox(),442,453,"/**
 * Gets the crop box of the page, or the media box if none is defined.
 */","* A rectangle, expressed in default user space units, defining the visible region of default user space. When the
     * page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
     * 
     * @return the cropbox of the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveBoundingBox,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",1028,1037,"/**
 * Resolves the bounding box for a PDF annotation widget.
 * @param fieldWidget The annotation widget.
 * @param appearanceStream The appearance stream.
 * @return The bounding rectangle.
 */
","* Resolve the bounding box.
     * 
     * @param fieldWidget the annotation widget.
     * @param appearanceStream the annotations appearance stream.
     * @return the resolved boundingBox.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,setBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),857,864,"/**
* Sets the bounding box of the PDF object.
* @param bbox The PDRectangle representing the new bounding box.
*/
","* Sets the bounding box.
     * 
     * @param bbox the bounding box",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setColor,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",425,431,"/**
 * Sets the color value by name.
 * @param name color name
 * @param value the color value (PDGamma)
 */
","* Sets a colour.
     * 
     * @param name the attribute name
     * @param value the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setFourColors,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)",439,445,"/**
* Sets the value for a four-color object by name.
* @param name Name of the object.
* @param value The new PDFourColours value.
*/
","* Sets four colours.
     * 
     * @param name the attribute name
     * @param value the four colours",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(),82,85,"/**
 * Constructs a PDPage with default LETTER page size.
 */","* Creates a new PDPage instance for embedding, with a size of U.S. Letter (8.5 x 11 inches).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createPage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),67,74,"/**
 * Creates a PDF page with specified dimensions.
 * @param properties Page properties (width, height)
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",130,200,"/**
 * Adds a page to the document, handling content appending/prepending.
 * @param sourcePage The page to add.
 * @param stream The stream to add to the page.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",708,735,"/**
 * Adds an object to the specified resource dictionary with a new key.
 * @param kind Resource kind (e.g., Images, Fonts)
 * @param prefix Prefix for the new key
 * @param object Object to add
 * @return The new key assigned to the object.
 */
",* Adds the given resource if it does not already exist.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)",780,783,"/**
* Puts a font into the PDF object using the FONT key.
* @param name Font name
* @param font The font object to be added
*/
","* Sets the font resource with the given name.
     *
     * @param name the name of the resource
     * @param font the font to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",791,794,"/**
* Sets the color space for the object.
* Delegates to the color space property.
*/
","* Sets the color space resource with the given name.
     *
     * @param name the name of the resource
     * @param colorSpace the color space to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",802,805,"/**
* Sets the extended graphics state associated with a COS name.
*/","* Sets the extended graphics state resource with the given name.
     *
     * @param name the name of the resource
     * @param extGState the extended graphics state to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",813,816,"/**
* Adds a shading object to the document with a given name.
*/","* Sets the shading resource with the given name.
     *
     * @param name the name of the resource
     * @param shading the shading to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",824,827,"/**
* Adds a pattern to the pattern dictionary.
* @param name Pattern name.
* @param pattern Pattern object to add.
*/
","* Sets the pattern resource with the given name.
     *
     * @param name the name of the resource
     * @param pattern the pattern to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",835,838,"/**
* Adds properties to the document with a given name.
* @param name the name for the properties
* @param properties the properties to add
*/
","* Sets the property list resource with the given name.
     *
     * @param name the name of the resource
     * @param properties the property list to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)",846,849,"/**
* Adds an XObject to the document's XObject dictionary.
* @param name XObject name
* @param xobject The XObject to add
*/
","* Sets the XObject resource with the given name.
     *
     * @param name the name of the resource
     * @param xobject the XObject to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeIDTree,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",1084,1127,"/**
* Merges the ID tree from srcStructTree into destStructTree.
* Handles null trees and duplicate keys, cloning elements.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneIDTree,"org.apache.pdfbox.multipdf.Splitter:cloneIDTree(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",252,278,"/**
 * Copies ID tree elements from source to destination structure tree.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:initFringe(org.w3c.dom.Element),79,96,"/**
 * Initializes the fringe rectangle from an element's attribute.
 * @param element The element containing the fringe attribute.
 * @throws IOException if fringe attribute is invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:initFringe(org.w3c.dom.Element),81,98,"/**
 * Initializes the fringe rectangle from element attribute.
 * @param element The element containing the fringe attribute.
 * @throws IOException if fringe attribute is invalid.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initFringe(org.w3c.dom.Element),102,119,"/**
* Parses the 'fringe' attribute and sets the fringe rectangle.
* @param element Element containing the 'fringe' attribute.
* @throws IOException if fringe attribute is invalid.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:initFringe(org.w3c.dom.Element),82,99,"/**
* Initializes the fringe rectangle from an element attribute.
* @param element Element containing the 'fringe' attribute.
* @throws IOException if the fringe attribute is invalid.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getFDF(),116,130,"/**
 * Retrieves the FDF dictionary. Creates one if it doesn't exist.
 * @return FDFDictionary object.
 */
","* This will get the FDF dictionary.
     *
     * @return The FDF dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(),60,73,"/**
 * Constructs a new FDFDocument object, initializing its components.
 */","* Constructor, creates a new FDF document.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,getCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:getCatalog(),139,154,"/**
 * Retrieves the FDF catalog from the document.
 * Creates a new catalog if one doesn't exist.
 * @return The FDF catalog object.
 */
","* This will get the FDF Catalog. This is guaranteed to not return null.
     *
     * @return The documents /Root dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getFractionalSpaceToAllocate(),151,167,"/**
 * Gets the fractional space to allocate, or defaults to 0.5.
 * @return PDRange object representing the allocated space.
 */
","* This is guaranteed to never return null.<br>
     *
     * To quote the PDF Spec ""An array of two numbers between 0.0 and 1.0 indicating the fraction of leftover space to
     * allocate at the left and bottom of the icon. A value of [0.0 0.0] positions the icon at the bottom-left corner of
     * the annotation rectangle; a value of [0.5 0.5] centers it within the rectangle. This entry is used only if the
     * icon is scaled proportionally. Default value: [0.5 0.5].""
     *
     * @return The fractional space to allocate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDSet,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDSet(java.util.TreeMap),261,274,"/**
 * Sets the CID set for the font descriptor from a byte stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(),59,68,"/**
 * Constructs a PDTilingPattern object, initializing its properties.
 */",* Creates a new tiling pattern.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearance(),120,129,"/**
 * Returns the appearance dictionary, creating it if null.
 */","* Get the annotations appearance dictionary.
     * 
     * <p>
     * This will get the annotations appearance dictionary. If this is not
     * existent an empty appearance dictionary will be created.
     * 
     * @return the annotations appearance dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareNonVisibleSignature,org.apache.pdfbox.pdmodel.PDDocument:prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),542,555,"/**
 * Sets rectangle and appearance for non-visible signature widgets.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAppearanceDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",235,249,"/**
 * Creates and sets the appearance dictionary for a PDF signature.
 * @param holderForml Form holder object
 * @param signatureField Signature field object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingBefore,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),102,120,"/**
* Inserts a new sibling outline item before the current item.
* @param newSibling The outline item to insert.
*/
","* Insert a single sibling before this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingAfter,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),75,93,"/**
 * Inserts a new sibling after the current outline item.
 * @param newSibling The item to insert as a sibling.
 */
","* Insert a single sibling after this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,append,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),119,133,"/**
 * Adds a child to this outline item, updating parent/sibling links.
 */","* Appends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,prepend,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),141,155,"/**
 * Adds a child outline item as the first child.
 * Sets parent/sibling links accordingly.
 */
","* Prepends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),105,112,"/**
* Sets the first bead and associates it with the thread.
* @param bead The PDThreadBead to set as the first bead.
*/
","* This will set the first bead in the thread.  When this is set it will
     * also set the thread property of the bead object.
     *
     * @param bead The first bead in the thread.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(),52,58,"/**
 * Constructs a new PDThreadBead object, initializing its properties.
 */","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,appendBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),142,149,"/**
 * Appends a bead to the thread bead chain.
 * @param append The bead to append to the chain.
 */
","* Append a bead after this bead.  This will correctly set the next/previous beads in the
     * linked list.
     *
     * @param append The bead to insert.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeMarkInfo,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",950,966,"/**
 * Merges mark information from srcCatalog into destCatalog.
 * Updates destCatalog's mark info with properties from src.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeViewerPreferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",894,936,"/**
 * Merges viewer preferences from srcCatalog into destCatalog.
 * @param destCatalog Destination catalog to merge into.
 * @param srcCatalog Source catalog to merge from.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setRoleMap(java.util.Map),199,203,"/**
 * Sets the role map within the COS object.
 * Uses roleMap to populate the COSDictionary.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setName(java.lang.String,java.lang.String)",198,204,"/**
 * Sets the name value in the COS object and notifies changes.
 * @param name The name of the property to set.
 * @param value The new value for the property.
 */
","* Sets a name value.
     * 
     * @param name the attribute name
     * @param value the name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setRenderingIntent(java.lang.String),352,355,"/**
 * Sets the rendering intent.
 * @param ri The rendering intent string to set.
 */
","* This will set the rendering intent for the graphics state.
     *
     * @param ri The new rendering intent",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,setN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:setN(java.lang.String),64,67,"/**
 * Sets the name associated with the action.
 * @param name The name to set for the action.
 */
","* This will set the name of the action to be performed.
     *
     * @param name The name of the action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setStyle(java.lang.String),101,104,"/**
 * Sets the style name for the COS object.
 * @param s The style name to set.
 */
","* This will set the border effect, see the STYLE_* constants for valid values.
     *
     * @param s the border effect to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument),62,69,"/**
 * Creates a PDPageLabels object associated with a document.
 * Initializes the labels map with a default range.
 */
","* Creates an empty page label dictionary for the given document.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",53,58,"/**
 * Creates a PDStructureElement with a type and parent node.
 * @param structureType The type of the structure element.
 * @param parent The parent PDStructureNode.
 */
","* Constructor with required values.
     *
     * @param structureType The structure type. Constants are available in the
     * {@link StandardStructureTypes} class.
     * @param parent The parent structure node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(),57,60,"/**
 * Constructs a PDStructureTreeRoot object, initializing its type.
 */","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(),38,41,"/**
* Initializes a shading pattern object.
* Sets the pattern type to shading pattern.
*/
",* Creates a new shading pattern.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(),50,54,"/**
 * Constructs a new PDAction object, initializing its COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDocumentOutline(),196,200,"/**
 * Retrieves the document outline. Returns null if no outline exists.
 */","* Get the outline associated with this document or null if it does not exist.
     *
     * @return The document's outline.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getParent(),53,65,"/**
 * Returns the parent node, or null if no parent exists.
 */",* @return The parent of this node or null if there is no parent.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(int),178,190,"/**
 * Sets the value at the specified index.
 * @param index The index of the value to set.
 * @throws IllegalArgumentException if index is out of bounds.
 */
","* Set the selected option given its index, and try to update the visual appearance.
     * 
     * NOTE: this method is only usable if there are export values and used for 
     * radio buttons with FLAG_RADIOS_IN_UNISON not set.
     * 
     * @param index index of option to be selected
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the index provided is not a valid index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByOption,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByOption(java.lang.String),412,439,"/**
 * Updates the annotation based on the provided option value.
 * @param value The option value (name or index).
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(),38,41,"/**
 * Initializes the PDRectlinearMeasureDictionary with a subtype.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(),39,42,"/**
 * Constructs a PDTransition object with the default transition style.
 */","* creates a new transition with default ""replace"" style {@link PDTransitionStyle#R}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(java.lang.String,java.util.Calendar)",316,319,"/**
* Sets the date for a given key using PDF name conversion.
* @param key The key for the date.
* @param date The Calendar object representing the date.
*/
","* Set the value of a date entry in the dictionary.
     *
     * @param key The key to the date value.
     * @param date The date value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",339,351,"/**
 * Sets the date value for a given key within an embedded dictionary.
 * @param embedded The embedded COSName.
 * @param key The key for the date value.
 * @param date The Calendar date to set.
 */
","* Set the date object.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the date.
     * @param date The date to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreationDate(java.util.Calendar),220,223,"/**
* Sets the creation date of the info object.
* @param date The Calendar object representing the date.
*/","* This will set the creation date of the document.
     *
     * @param date The new creation date for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setModificationDate(java.util.Calendar),240,243,"/**
 * Sets the modification date of the document.
 * @param date The Calendar object representing the date.
 */","* This will set the modification date of the document.
     *
     * @param date The new modification date for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setCreationDate(java.util.Calendar),795,798,"/**
* Sets the creation date of the annotation.
* @param date The Calendar object representing the date.
*/","* Set the creation date.
     *
     * @param date The date the annotation was created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.util.Calendar),650,653,"/**
* Sets the modified date of the COS object to the given Calendar.
* @param c Calendar object representing the modified date.
*/
","* This will set the date and time the annotation was modified.
     *
     * @param c the date and time the annotation was created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setCreationDate(java.util.Calendar),176,179,"/**
* Sets the creation date of the COS object.
* @param creationDate The Calendar object representing the date.
*/
","* This will set the date and time the annotation was created.
     *
     * @param creationDate the date and time the annotation was created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSignDate(java.util.Calendar),195,198,"/**
* Sets the signing date in the dictionary.
* @param cal Calendar object representing the signing date.
*/
","* Set the sign date.
     *
     * @param cal the date to be used as sign date",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCustomMetadataValue,"org.apache.pdfbox.pdmodel.PDDocumentInformation:setCustomMetadataValue(java.lang.String,java.lang.String)",291,294,"/**
* Sets a custom metadata value for a specified field.
* @param fieldName Name of the metadata field.
* @param fieldValue Value to set for the field.
*/
","* Set the custom metadata value.
     *
     * @param fieldName The name of the custom metadata field.
     * @param fieldValue The value to the custom metadata field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setString(java.lang.String,java.lang.String)",89,95,"/**
* Sets the string value for a given key in the COS object.
* @param name Key for the string value.
* @param value New string value to set.
*/
","* Sets a string attribute value.
     * 
     * @param name the attribute name
     * @param value the string attribute value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,setBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:setBase(java.lang.String),85,88,"/**
* Sets the ""Base"" string value within the COS object.
* @param base The string value to set.
*/
","* This will set the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @param base The base URI to be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setVersion(java.lang.String),119,122,"/**
* Sets the application version in the dictionary.
* @param applicationVersion The version string to set.
*/
","* A text string indicating the version of the application implementation, as described by the
     * <code>Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     * <p>
     * NOTE: Version value is specific for build data dictionary when used as the <code>App</code>
     * dictionary in a build properties dictionary.
     * </p>
     *
     * @param applicationVersion the application implementation version",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setUnits(java.lang.String),119,122,"/**
 * Sets the units value in the COS object.
 * @param units The units string to set.
 */","* This will set the label for the units.
     * 
     * @param units the label for the units",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFractionalDisplay(java.lang.String),160,174,"/**
 * Sets the fractional display type. Accepts ""D"", ""F"", ""R"", ""T"", or null.
 */","* This will set the value for the manner to display a fractional value.
     * Allowed values are ""D"", ""F"", ""R"", ""T"" and null.
     * 
     * @param fractionalDisplay the manner to display a fractional value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setThousandsSeparator(java.lang.String),231,234,"/**
 * Sets the thousands separator string in the COS object.
 * @param thousandsSeparator The separator string to set.
 */
","* This will set the text to be used between orders of thousands in display of numerical values.
     * 
     * @param thousandsSeparator thousands separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDecimalSeparator(java.lang.String),251,254,"/**
* Sets the decimal separator for the PDF document.
* @param decimalSeparator The decimal separator string.
*/","* This will set the text to be used as the decimal point in displaying numerical values.
     * 
     * @param decimalSeparator decimal separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPrefixString(java.lang.String),269,272,"/**
* Sets the prefix string for labels on the COS object.
* @param labelPrefixString The prefix string to set.
*/
","* This will set the text to be concatenated to the left of the label specified by U.
     * @param labelPrefixString label prefix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelSuffixString(java.lang.String),289,292,"/**
* Sets the ""SS"" string value in the COS object.
* @param labelSuffixString The string to set as the suffix.
*/
","* This will set the text to be concatenated after the label specified by U.
     * 
     * @param labelSuffixString label suffix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPositionToValue(java.lang.String),310,322,"/**
* Sets the ""O"" string value in the COS object.
* Value must be null, LABEL_PREFIX_TO_VALUE, or LABEL_SUFFIX_TO_VALUE.
*/
","* This will set the value indicating the ordering of the label specified by U to the calculated
     * unit value. Possible values are ""S"", ""P"" and null.
     *
     * @param labelPositionToValue label position",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacSubtype(java.lang.String),190,202,"/**
 * Sets the MAC subtype within the COS dictionary.
 * @param macSubtype The subtype string to set.
 */
","* Set the mac subtype.
     *
     * @param macSubtype The mac subtype.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacCreator(java.lang.String),220,232,"/**
* Sets the MAC creator in the COSDictionary.
* @param macCreator The creator string to set.
*/
","* Set the mac Creator.
     *
     * @param macCreator The mac Creator.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacResFork(java.lang.String),250,262,"/**
 * Sets the MAC/RES_FORK embedded string in the COSDictionary.
 * @param macResFork The string value to set.
 */
","* Set the mac ResFork.
     *
     * @param macResFork The mac ResFork.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeLanguage,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",938,948,"/**
 * Merges language setting from srcCatalog to destCatalog if null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.w3c.dom.Element),75,108,"/**
 * Creates a FDFField from an XML element.
 * @param fieldXML XML element representing the field.
 * @throws IOException if an I/O error occurs.
 */
","* This will create an FDF field from an XFDF XML document.
     *
     * @param fieldXML The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:exportFDF(),100,116,"/**
 * Exports this field as an FDF field.
 * @return FDFField representing this field and its children.
 * @throws IOException if an I/O error occurs during export.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:exportFDF(),141,152,"/**
 * Creates an FDF field object from the current field.
 * @return FDFField object representing the field.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(java.lang.String),33,37,"/**
 * Creates a new Optional Content Group with the given name.
 */","* Creates a new optional content group (OCG).
     * @param name the name of the content group",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,addGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),169,182,"/**
 * Adds a content group and adds it to the ""Order"" array.
 * @param ocg The content group to add.
 */
","* Adds an optional content group (OCG).
     * @param ocg the optional content group",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getBaseState(),207,212,"/**
 * Retrieves the base state from the COS dictionary.
 * Returns a BaseState enum value.
 */","* Returns the base state for optional content groups.
     * @return the base state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState),219,222,"/**
* Sets the base state name in the COSDictionary.
* @param state The state object whose name is set.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",400,460,"/**
 * Enables/disables a content group. Returns true if found.
 * @param group The group to enable/disable.
 * @param enable True to enable, false to disable.
 */
","* Enables or disables an optional content group.
     * @param group the group object
     * @param enable true to enable, false to disable
     * @return true if the group already had an on or off setting, false otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setInteger(java.lang.String,int)",264,270,"/**
* Sets an integer value for a given key in the COS dictionary.
* @param name Key for the integer value
* @param value Integer value to set
*/
","* Sets an integer.
     * 
     * @param name the attribute name
     * @param value the integer",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,int)",350,356,"/**
 * Sets the integer value for a given key in the COS object.
 * @param name Key for the integer value.
 * @param value The integer value to set.
 */
","* Sets an integer number.
     * 
     * @param name the attribute name
     * @param value the integer number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDenominator(int),191,194,"/**
* Sets the denominator value in the COS object.
* @param denominator The denominator value to set.
*/
","* This will set the precision or denominator of a fractional amount.
     * 
     * @param denominator the precision or denominator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setInvisible(boolean),512,515,"/**
* Sets the invisible flag on the annotation.
* @param invisible If true, annotation is invisible.
*/
","* Set the invisible flag.
     *
     * @param invisible The new invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setHidden(boolean),532,535,"/**
 * Sets the hidden flag on the annotation.
 * @param hidden The value to set the hidden flag to.
 */
","* Set the hidden flag.
     *
     * @param hidden The new hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPrinted(boolean),552,555,"/**
* Sets the ""printed"" flag on the annotation.
* @param printed The new value for the printed flag.
*/
","* Set the printed flag.
     *
     * @param printed The new printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoZoom(boolean),572,575,"/**
* Sets the no-zoom flag in the annotation.
* @param noZoom True to disable zoom, false otherwise.
*/
","* Set the noZoom flag.
     *
     * @param noZoom The new noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoRotate(boolean),592,595,"/**
* Sets the no-rotate flag in the annotation.
* @param noRotate boolean value for no-rotate setting
*/
","* Set the noRotate flag.
     *
     * @param noRotate The new noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoView(boolean),612,615,"/**
 * Sets the ""no view"" flag in the annotation.
 * @param noView True to set the flag, false otherwise.
 */
","* Set the noView flag.
     *
     * @param noView The new noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setReadOnly(boolean),632,635,"/**
* Sets the read-only flag on the annotation.
* @param readOnly True to set read-only, false otherwise.
*/
","* Set the readOnly flag.
     *
     * @param readOnly The new readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLocked(boolean),652,655,"/**
 * Sets the locked flag on the annotation.
 * @param locked The new value for the locked flag.
 */
","* Set the locked flag.
     *
     * @param locked The new locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setToggleNoView(boolean),672,675,"/**
 * Sets the ""toggle no view"" flag using the provided boolean value.
 */","* Set the toggleNoView flag.
     *
     * @param toggleNoView The new toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLockedContents(boolean),692,695,"/**
 * Sets the flag indicating whether contents are locked.
 * @param lockedContents True to lock, false to unlock.
 */
","* Set the LockedContents flag.
     * 
     * @param lockedContents The new LockedContents flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setInvisible(boolean),407,410,"/**
* Sets the invisible flag of the COS object.
* @param invisible boolean value indicating invisibility
*/","* Set the invisible flag.
     * 
     * @param invisible The new invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setHidden(boolean),427,430,"/**
 * Sets the hidden flag of the COS object.
 * @param hidden The value to set the hidden flag to.
 */
","* Set the hidden flag.
     * 
     * @param hidden The new hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPrinted(boolean),447,450,"/**
* Sets the printed flag on the COS object.
* @param printed The new value for the printed flag.
*/
","* Set the printed flag.
     * 
     * @param printed The new printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoZoom(boolean),467,470,"/**
* Sets the no-zoom flag in the COS object.
* @param noZoom boolean value to set the flag to.
*/
","* Set the noZoom flag.
     * 
     * @param noZoom The new noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoRotate(boolean),487,490,"/**
* Sets the no-rotate flag on the COS object.
* @param noRotate boolean value for no-rotate setting
*/
","* Set the noRotate flag.
     * 
     * @param noRotate The new noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoView(boolean),507,510,"/**
 * Sets the ""no view"" flag on the COS object.
 * @param noView True to set the flag, false to clear it.
 */
","* Set the noView flag.
     * 
     * @param noView The new noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setReadOnly(boolean),527,530,"/**
 * Sets the read-only flag on the COS object.
 * @param readOnly The new read-only flag value.
 */
","* Set the readOnly flag.
     * 
     * @param readOnly The new readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLocked(boolean),547,550,"/**
 * Sets the locked status of the COS object.
 * @param locked The new locked status (true/false).
 */
","* Set the locked flag.
     * 
     * @param locked The new locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setToggleNoView(boolean),567,570,"/**
 * Sets the ""no view"" toggle flag on the COS object.
 * @param toggleNoView The value of the toggle flag (true/false).
 */
","* Set the toggleNoView flag.
     * 
     * @param toggleNoView The new toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLockedContents(boolean),596,599,"/**
 * Sets the locked contents flag on the COS object.
 * @param lockedContents The flag value to set.
 */
","* Set the LockedContents flag. If set, do not allow the contents of the annotation to be
     * modified by the user. This flag does not restrict deletion of the annotation or changes to
     * other annotation properties, such as position and size.
     *
     * @param lockedContents The new LockedContents flag value.
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/PDF32000_2008.pdf#page=393"">PDF
     * 32000-1:2008 12.5.3, Table 165</a>
     * @see #isLockedContents()
     * @see #FLAG_LOCKED_CONTENTS
     * @since PDF 1.7",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilterRequired(boolean),126,129,"/**
* Sets the filter required flag on the COS object.
* @param flag True to enable filtering, false otherwise.
*/
","* set true if the filter shall be required.
     * 
     * @param flag if true, the specified Filter shall be used when signing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilterRequired(boolean),145,148,"/**
* Sets the subfilter required flag on the COS object.
* @param flag The boolean value indicating if subfilter is required.
*/
","* set true if the subfilter shall be required.
     * 
     * @param flag if true, the first supported SubFilter in the array shall be used when signing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethodRequired(boolean),164,167,"/**
 * Sets whether digest method is required for the COS object.
 * @param flag True to require digest method, false otherwise.
 */
","* set true if the DigestMethod shall be required.
     * 
     * @param flag if true, one digest from the array shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setVRequired(boolean),183,186,"/**
* Sets the 'V' required flag on the COS object.
* @param flag The boolean value for the 'V' flag.
*/
","* set true if the V entry shall be required.
     * 
     * @param flag if true, the V entry shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasonRequired(boolean),202,205,"/**
 * Sets whether a reason is required.
 * @param flag True to require a reason, false otherwise.
 */","* set true if the Reason shall be required.
     * 
     * @param flag if true, the Reason entry shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestationRequired(boolean),221,224,"/**
* Sets whether legal attestation is required.
* @param flag True to require legal attestation, false otherwise.
*/
","* set true if the LegalAttestation shall be required.
     * 
     * @param flag if true, the LegalAttestation entry shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setAddRevInfoRequired(boolean),240,243,"/**
 * Sets whether to require adding revision information.
 * @param flag boolean value to set the flag to
 */
","* set true if the AddRevInfo shall be required.
     * 
     * @param flag if true, the AddRevInfo shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectRequired(boolean),114,117,"/**
* Sets whether the subject field is required.
* @param flag true to require subject, false otherwise.
*/
","* set true if subject shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuerRequired(boolean),133,136,"/**
* Sets whether the issuer is required.
* @param flag True to require issuer, false otherwise.
*/
","* set true if Issuer shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Issuer shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOIDRequired(boolean),152,155,"/**
* Sets the OID required flag in the dictionary.
* @param flag True if OID is required, false otherwise.
*/
","* set true if OID shall be required as a constraint on signature.
     *
     * @param flag if true, the specified OID shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDNRequired(boolean),171,174,"/**
* Sets whether the subject distinguished name is required.
* @param flag True to require, false otherwise.
*/
","* set true if subject DN shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject DN shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsageRequired(boolean),190,193,"/**
 * Sets the key usage flag in the dictionary.
 * @param flag The boolean value for key usage requirement.
 */
","* set true if KeyUsage shall be required as a constraint on signature.
     *
     * @param flag if true, the specified KeyUsage shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLRequired(boolean),209,212,"/**
* Sets whether a URL is required.
* @param flag True if URL is required, false otherwise.
*/
","* set true if URL shall be required as a constraint on signature.
     *
     * @param flag if true, the specified URL shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setItalic(boolean),374,377,"/**
 * Sets the italic flag in the COS object.
 * @param italic boolean value to set for italic.
 */","* Set the italic property of the text.
     *
     * @param italic The new italic flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setBold(boolean),394,397,"/**
 * Sets the bold flag for the PDF content.
 * @param bold True to set bold, false otherwise.
 */","* Set the bold property of the text.
     *
     * @param bold The new bold flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setSignaturesExist(boolean),642,645,"/**
 * Sets the flag indicating whether signatures exist.
 * @param signaturesExist boolean value for signature existence
 */
","* Set the SignaturesExist bit.
     *
     * @param signaturesExist The value for SignaturesExist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setAppendOnly(boolean),682,685,"/**
 * Sets the append-only flag for the dictionary.
 * @param appendOnly True to enable append-only mode.
 */
","* Set the AppendOnly bit.
     *
     * @param appendOnly The value for AppendOnly.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSort(boolean),283,286,"/**
 * Sets the sort flag on the COS object.
 * @param sort The boolean value to set as the sort flag.
 */
","* Set the Sort bit.
     * 
     * @see #isSort()
     * @param sort The value for Sort.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setMultiSelect(boolean),303,306,"/**
* Sets the multi-select flag on the COS object.
* @param multiSelect The boolean value for multi-select.
*/
","* Set the MultiSelect bit.
     *
     * @param multiSelect The value for MultiSelect.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDoNotSpellCheck(boolean),323,326,"/**
 * Sets the do not spell check flag on the COS object.
 * @param doNotSpellCheck flag indicating whether to disable spell check
 */
","* Set the DoNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for DoNotSpellCheck.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCommitOnSelChange(boolean),343,346,"/**
 * Sets the commit flag on selection change.
 * @param commitOnSelChange Flag to set for commit on selection.
 */
","* Set the CommitOnSelChange bit.
     *
     * @param commitOnSelChange The value for CommitOnSelChange.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCombo(boolean),363,366,"/**
* Sets the combo flag on the COS object.
* @param combo The value to set the combo flag to.
*/
","* Set the Combo bit.
     *
     * @param combo The value for Combo.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,setEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:setEdit(boolean),73,76,"/**
* Sets the edit flag on the COS object.
* @param edit The boolean value for the edit flag.
*/
","* Set the Edit bit.
     *
     * @param edit The value for Edit.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:setReadOnly(boolean),148,151,"/**
 * Sets the read-only flag for the dictionary.
 * @param readonly True to make the dictionary read-only.
 */","* sets the field to be read-only.
     * 
     * @param readonly The new flag for readonly.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:setRequired(boolean),168,171,"/**
* Sets the required flag for the dictionary.
* @param required The boolean value to set as the required flag.
*/
","* sets the flag whether the field is to be required to have a value at the time it is exported
     * by a submit-form action.
     *
     * @param required The new flag for required.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:setNoExport(boolean),187,190,"/**
* Sets the ""no export"" flag in the dictionary.
* @param noExport True to disable exporting, false otherwise.
*/
","* sets the field to be not exported.
     * 
     * @param noExport The new flag for noExport.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
 * Constructs a PushButton field, initializing its COS flag.
 * @param acroForm The parent AcroForm object.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),43,47,"/**
 * Constructs a PDRadioButton with the given acroForm.
 * Sets the radio button flag in the COS object.
 */
","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,setRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:setRadiosInUnison(boolean),69,72,"/**
 * Sets the radiosInUnison flag in the COS object.
 * @param radiosInUnison The value to set for radiosInUnison.
 */
","* From the PDF Spec <br>
     * If set, a group of radio buttons within a radio button field that use the same value for the on state will turn
     * on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually
     * exclusive (the same behavior as HTML radio buttons).
     *
     * @param radiosInUnison The new flag for radiosInUnison.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMultiline(boolean),75,78,"/**
* Sets the multiline flag for the COS object.
* @param multiline True to enable multiline, false otherwise.
*/
","* Set the multiline bit.
     *
     * @param multiline The value for the multiline.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setPassword(boolean),93,96,"/**
* Sets the password flag in the COS object.
* @param password The boolean value for the password flag.
*/
","* Set the password bit.
     *
     * @param password The value for the password.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setFileSelect(boolean),111,114,"/**
 * Sets the file select flag on the COS object.
 * @param fileSelect The boolean value for file selection.
 */
","* Set the file select bit.
     *
     * @param fileSelect The value for the fileSelect.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotSpellCheck(boolean),129,132,"/**
* Sets the do not spell check flag on the COS object.
* @param doNotSpellCheck boolean value for spell check setting
*/
","* Set the doNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for the doNotSpellCheck.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotScroll(boolean),147,150,"/**
 * Sets the do-not-scroll flag on the COS object.
 * @param doNotScroll The value of the do-not-scroll flag.
 */
","* Set the doNotScroll bit.
     *
     * @param doNotScroll The value for the doNotScroll.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setComb(boolean),165,168,"/**
* Sets the COMB flag in the COS object to the specified value.
*/","* Set the comb bit.
     *
     * @param comb The value for the comb.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setRichText(boolean),183,186,"/**
 * Sets the rich text flag on the COS object.
 * @param richText The value of the rich text flag.
 */
","* Set the richText bit.
     *
     * @param richText The value for the richText.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",61,106,"/**
 * Decodes an image from an input stream to an output stream.
 * @param encoded Input stream containing the encoded image.
 * @param decoded Output stream to write the decoded image.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPages,org.apache.pdfbox.pdfparser.COSParser:checkPages(org.apache.pdfbox.cos.COSDictionary),938,953,"/**
 * Validates the page tree dictionary and dereferencing.
 * Throws IOException if the page tree root is not a dictionary.
 */","* Check if all entries of the pages dictionary are present. Those which can't be dereferenced are removed.
     * 
     * @param root the root dictionary of the pdf
     * @throws java.io.IOException if the page tree root is null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPages,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPages(),164,168,"/**
 * Returns the page tree of the PDF document.
 * Creates a new PDPageTree object.
 */
","* Returns all pages in the document, as a page tree.
     * 
     * @return PDPageTree providing all pages of the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary),68,71,"/**
 * Constructs a PDPageTree with a root dictionary and no parent.
 * @param root The root COSDictionary for the page tree.
 */
","* Constructor for reading.
     *
     * @param root A page tree root.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.pdmodel.PDPage),465,468,"/**
 * Removes a page from the document.
 * @param page The page to remove.
 */","* Removes the given page from the page tree.
     *
     * @param page The page to remove.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertBefore,"org.apache.pdfbox.pdmodel.PDPageTree:insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",530,552,"/**
 * Inserts a new page before an existing page in the document.
 * @param newPage The page to insert.
 * @param nextPage The page before which to insert.
 */","* Insert a page before another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param nextPage the page that is to be after the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertAfter,"org.apache.pdfbox.pdmodel.PDPageTree:insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",562,584,"/**
* Inserts a new page after a specified previous page in a PDF.
* @param newPage The page to insert.
* @param prevPage The page after which to insert.
*/
","* Insert a page after another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param prevPage the page that is to be before the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,incrementRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:incrementRevisionNumber(),492,495,"/**
 * Increments the revision number by one.
 */",* Increments th revision number.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlagBit,"org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlagBit(int,boolean)",255,267,"/**
 * Sets or clears a specific bit flag based on the provided value.
 * @param bit The bit flag to set/clear.
 * @param value True to set, false to clear the bit.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",60,91,"/**
 * Creates a PDImageXObject from a BufferedImage. Supports only 1-bit grayscale images.
 */
","* Creates a new CCITT group 4 (T6) compressed image XObject from a b/w BufferedImage. This
     * compression technique usually results in smaller images than those produced by {@link LosslessFactory#createFromImage(PDDocument, BufferedImage)
     * }.
     *
     * @param document the document to create the image as part of.
     * @param image the image.
     * @return a new image XObject.
     * @throws IOException if there is an error creating the image.
     * @throws IllegalArgumentException if the BufferedImage is not a b/w image.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromRandomAccessImpl,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,int)",209,232,"/**
 * Creates a PDImageXObject from a RandomAccessRead, extracting TIFF data.
 * @param document PDDocument to associate with the image.
 * @param reader RandomAccessRead object containing TIFF data.
 * @param number Image number to extract.
 * @return PDImageXObject or null if extraction fails.
 */
","* Creates a new CCITT Fax compressed image XObject from a TIFF file.
     * 
     * @param document the document to create the image as part of.
     * @param reader the random access TIFF file which contains a suitable CCITT
     * compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject, or null if no such page
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerComponent(int),43,43,"/**
* Extends PDTriangleBasedShadingType for shading type 4.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerComponent(int),41,41,"/**
 * Extends PDTriangleBasedShadingType for shading type 5.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerCoordinate(int),43,43,"/**
 * Extends PDTriangleBasedShadingType for a specific shading type.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerCoordinate(int),41,41,"/**
 * Extends PDTriangleBasedShadingType for a specific shading type.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefInc,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefInc(org.apache.pdfbox.cos.COSDocument),710,750,"/**
* Writes incremental XRef table and trailer information.
* Handles both XRefStreams and standard XRef tables.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,float)",336,342,"/**
* Sets the float value for a given key in the COS object.
* @param name Key for the float value.
* @param value The float value to set.
*/
","* Sets a float number.
     * 
     * @param name the attribute name
     * @param value the float number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setIntensity(float),81,84,"/**
 * Sets the intensity value.
 * @param i The intensity value to set.
 */","* This will set the intensity of the applied effect.
     *
     * @param i the intensity of the effect values 0 to 2",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setConversionFactor(float),139,142,"/**
 * Sets the conversion factor for the COS object.
 * @param conversionFactor The conversion factor to set.
 */","* This will set the conversion factor.
     * 
     * @param conversionFactor the conversion factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreams(java.util.Map),305,373,"/**
 * Processes object streams, decrypts, and updates offsets in maps.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFileObject,"org.apache.pdfbox.pdfparser.COSParser:parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey)",525,611,"/**
 * Parses a COS object from the input source at the given offset.
 * @param objOffset Offset of the object in the input stream.
 * @param objKey Key identifying the object.
 * @return Parsed COSBase object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefObjStream,"org.apache.pdfbox.pdfparser.XrefParser:parseXrefObjStream(long,boolean)",265,286,"/**
 * Parses an object stream and returns the previous object offset.
 * @param objByteOffset Offset of the object.
 * @param isStandalone Whether the stream is standalone.
 * @return Previous object offset.
 */
","* Parses an xref object stream starting with indirect object id.
     * 
     * @return value of PREV item in dictionary or <code>-1</code> if no such item exists",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",1401,1419,"/**
 * Updates page references in a number tree map.
 * Iterates through values, updating refs based on COS object type.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(),134,137,"/**
 * Parses a PDF document.
 * @return Parsed PDDocument object.
 * @throws IOException If an I/O error occurs.
 */
","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing. Lenient mode is active by default.
     *
     * @return the populated PDDocument
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),227,269,"/**
 * Processes a transparency group, handling resources and transformations.
 * @param group The transparency group to process.
 * @throws IOException if an I/O error occurs.
 */
","* Processes a transparency group stream.
     * 
     * @param group transparency group to be processed
     * @throws IOException if the transparency group cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processType3Stream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",278,310,"/**
 * Processes a Type 3 stream, applying transformations and operators.
 * @param charProc The character processor for the stream.
 * @param textRenderingMatrix Transformation matrix for text rendering.
 */","* Processes a Type 3 character stream.
     *
     * @param charProc Type 3 character procedure
     * @param textRenderingMatrix the Text Rendering Matrix
     * @throws IOException if there is an error reading or parsing the character content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processAnnotation,"org.apache.pdfbox.contentstream.PDFStreamEngine:processAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",319,370,"/**
 * Processes an annotation's appearance stream, adjusting its matrix.
 * @param annotation The annotation to process.
 * @param appearance The appearance stream to process.
 */","* Process the given annotation with the specified appearance stream.
     *
     * @param annotation The annotation containing the appearance stream to process.
     * @param appearance The appearance stream to process.
     * @throws IOException If there is an error reading or parsing the appearance content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",396,442,"/**
 * Processes a tiling pattern, applying transformations and clipping.
 * @param tilingPattern The tiling pattern to process.
 */
","* Process the given tiling pattern. Allows the pattern matrix to be overridden for custom
     * rendering.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @param patternMatrix the pattern matrix, may be overridden for custom rendering.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStream,org.apache.pdfbox.contentstream.PDFStreamEngine:processStream(org.apache.pdfbox.contentstream.PDContentStream),496,523,"/**
 * Processes a PDF content stream, handling resources and transformations.
 */","* Process a content stream.
     *
     * @param contentStream the content stream
     * @throws IOException if there is an exception while processing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:generateBoundingBox(),324,373,"/**
* Generates a bounding box for the font, using fallback strategies.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidthFromFont(int),184,193,"/**
 * Gets the width of a character from the font.
 * @param code Character code. Returns 0 if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.cos.COSDocument),1449,1453,"/**
 * Writes a COSDocument to a PDF file.
 * @param doc The COSDocument to write.
 * @throws IOException if an I/O error occurs.
 */
","* This will write the pdf document.
     *
     * @throws IOException If an error occurs while generating the data.
     * @param doc The document to write.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1044,1060,"/**
 * Saves the document to an output stream with optional compression.
 * @param output Output stream to save to.
 * @param compressParameters Compression parameters to use.
 * @throws IOException if an I/O error occurs.
 */
","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getVersion,org.apache.pdfbox.pdmodel.PDDocument:getVersion(),1415,1441,"/**
 * Returns the document version. Uses catalog version if >= 1.4.
 */","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. 1.4f)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractFontDetails,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractFontDetails(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),432,489,"/**
 * Extracts font details from the annotation's default appearance.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroForm,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroForm(org.apache.pdfbox.pdmodel.PDDocument),91,98,"/**
 * Creates an AcroForm and associates it with the document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,"org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:<init>(org.apache.pdfbox.pdmodel.PDPageTree,org.apache.pdfbox.cos.COSDictionary)",184,188,"/**
 * Initializes the PageIterator with a COSDictionary, enqueues kids.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,org.apache.pdfbox.pdmodel.PDPageTree:get(int),261,269,"/**
 * Retrieves a page from the document at the specified index.
 * @param index the index of the page to retrieve
 * @return PDPage object representing the page
 */
","* Returns the page at the given index.
     *
     * @param index zero-based index
     * @return the page at the given index
     * 
     * @throws IllegalStateException if the requested index isn't found or doesn't point to a valid page dictionary
     * @throws IndexOutOfBoundsException if the requested index is higher than the page count",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(int),454,458,"/**
 * Removes the node at the given index.
 * @param index index of the node to remove
 */
","* Removes the page with the given index from the page tree.
     * @param index zero-based page index",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,indexOf,org.apache.pdfbox.pdmodel.PDPageTree:indexOf(org.apache.pdfbox.pdmodel.PDPage),386,394,"/**
 * Finds the index of a page within the document.
 * @param page The PDPage to search for.
 * @return The index of the page, or -1 if not found.
 */
","* Returns the index of the given page, or -1 if it does not exist.
     *
     * @param page The page to search for.
     * @return the zero-based index of the given page, or -1 if the page is not found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFile,org.apache.pdfbox.pdmodel.common.PDStream:getFile(),337,341,"/**
 * Retrieves the file specification from the stream.
 * @return PDFileSpecification object representing the file.
 * @throws IOException if an I/O error occurs.
 */
","* This will get the file specification for this stream. This is only
     * required for external files.
     * 
     * @return The file specification.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFile(),285,288,"/**
 * Retrieves the file specification from the FDF document.
 * @return PDFileSpecification object representing the file.
 */
","* The source file or target file: the PDF document file that this FDF file was exported from or is intended to be
     * imported into.
     *
     * @return The F entry of the FDF dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEmbeddedFDFs(),512,526,"/**
 * Retrieves embedded FDF specifications.
 * @return List of PDFileSpecification objects or null.
 * @throws IOException if an I/O error occurs.
 */
","* This will get the list of embedded FDF entries, or null if the entry is null. This will return a list of
     * PDFileSpecification objects.
     *
     * @return A list of embedded FDF files.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getFileSpecification(),91,94,"/**
 * Retrieves the file specification from the PDF dictionary.
 * @return PDF file specification object.
 * @throws IOException if an I/O error occurs.
 */
","* This will get the file specification of this reference. An optional parameter.
     *
     * @return The F entry for this dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getFile(),108,111,"/**
 * Retrieves the file specification.
 * Returns a PDFileSpecification object.
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific embedded go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:getFile(),61,64,"/**
* Retrieves the file specification from the action dictionary.
* Returns a PDFileSpecification object.
*/
","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getFile(),70,73,"/**
* Retrieves the file specification.
* Returns a PDFileSpecification object.
*/
","* This will get the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @return The F entry of the specific launch action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getFile(),66,69,"/**
* Retrieves the file specification from the action dictionary.
* Returns a PDFileSpecification object.
*/
","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific remote go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFile(),64,67,"/**
* Retrieves the file specification from the action dictionary.
* Returns a PDFileSpecification object.
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getFile(),82,85,"/**
* Retrieves the file specification from the action dictionary.
* Returns a PDFileSpecification object.
*/
","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific thread action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getFile(),84,87,"/**
 * Retrieves the file specification.
 * Returns a PDFileSpecification object.
 */","* Return the attached file.
     *
     * @return The attached file.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",156,162,"/**
 * Notifies listeners if the COSBase value has changed.
 * @param oldBase The previous COSBase value.
 * @param newBase The new COSBase value.
 */
","* Notifies the attribute object change listeners if the attribute is changed.
     * 
     * @param oldBase old value
     * @param newBase new value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),151,155,"/**
 * Appends a kid element, sets its parent to this element.
 * @param structureElement The element to append as a kid.
 */
","* Appends a structure element kid and sets the parent property (/P) to this.
     * 
     * @param structureElement the structure element",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement,java.lang.Object)",208,211,"/**
 * Inserts a new element before a reference element.
 * @param newKid The element to insert.
 * @param refKid The reference element.
 */
","* Inserts a structure element kid before a reference kid.
     * 
     * @param newKid the structure element
     * @param refKid the reference kid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),278,286,"/**
 * Removes a child element and detaches it from its parent.
 * @param structureElement The element to remove.
 * @return True if the element was removed, false otherwise.
 */
","* Removes a structure element kid and if successful also removes the parent property (/P).
     *
     * @param structureElement the structure element
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)",562,571,"/**
 * Prepares AES encryption dictionary with filter method and length.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",414,431,"/**
 * Prepares AES encryption dictionary with recipients and filter settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(),40,44,"/**
 * Constructs a FDFAnnotationHighlight object, initializing subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(),40,44,"/**
 * Constructs a FDFAnnotationSquiggly object.
 * Initializes the annotation subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(),40,44,"/**
* Constructs a FDFAnnotationStrikeOut object, initializing subtype.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(),40,44,"/**
* Constructs a new FDFAnnotationUnderline object.
* Initializes the annotation subtype.
*/
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,createCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:createCIDFont(),190,221,"/**
 * Creates a CID font dictionary.
 * Populates with font type information and descriptors.
 * @return COSDictionary representing the CID font.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(),39,42,"/**
* Initializes the annotation caret with a subtype.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(),62,65,"/**
* Constructs a new attachment file.
* Sets the subtype COS name to the default value.
*/
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(),56,59,"/**
* Initializes a free text annotation.
* Sets the subtype COS name to SUB_TYPE.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(),43,46,"/**
* Initializes the annotation ink object.
* Sets the subtype COS name to SUB_TYPE.
*/
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(),113,118,"/**
 * Constructs a new line annotation. Sets subtype and initial line data.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(),43,46,"/**
 * Constructs a PDAnnotationPolygon, setting its subtype.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(),42,45,"/**
* Constructs a PDAnnotationPolyline, setting the subtype.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(),99,102,"/**
* Initializes the RubberStamp annotation with a subtype.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(),37,40,"/**
* Sets the subtype name of the annotation sound object.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(java.lang.String),39,42,"/**
 * Constructs a PDAnnotationSquareCircle with the given subtype.
 * @param subType The subtype of the annotation.
 */
","* Creates a Circle or Square annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(),126,129,"/**
* Initializes the annotation text object.
* Sets the subtype name to SUB_TYPE.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(java.lang.String),36,42,"/**
 * Creates a text markup annotation with the given subtype.
 * @param subType The subtype of the annotation.
 */
","* Creates a TextMarkup annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Creates a PDAnnotationCaret object from a COSDictionary.
 */","* Creates a Caret annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Creates a file attachment annotation from a COSDictionary.
 * @param field The COSDictionary representing the attachment.
 */
","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),66,69,"/**
 * Creates a free text annotation using the provided COSDictionary.
 */","* Creates a FreeText annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Creates a PDAnnotationInk object from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),125,128,"/**
 * Creates a line annotation from a COSDictionary.
 * @param field The COSDictionary containing annotation data.
 */
","* Creates a Line annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Creates a PDAnnotationPolygon from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Creates a PDAnnotationPolyline object from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(org.apache.pdfbox.cos.COSDictionary),109,112,"/**
 * Creates a RubberStamp annotation from a COSDictionary.
 * @param field The COSDictionary representing the annotation.
 */
","* Creates a Rubber Stamp annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Creates a PDAnnotationSound object from a COSDictionary.
 * @param field The COSDictionary containing annotation sound data.
 */
","* Creates a sound annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a PDAnnotationSquareCircle from a COSDictionary.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),136,139,"/**
 * Creates a PDAnnotationText object from a COSDictionary.
 */","* Creates a Text annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Creates a text markup annotation from a COSDictionary.
 * @param field The COSDictionary containing annotation data.
 */
","* Creates a TextMarkup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getPopup(),93,97,"/**
 * Creates and returns a PDAnnotationPopup object.
 * Returns null if no popup dictionary exists.
 */
","* This will retrieve the popup annotation used for entering/editing the text for this annotation.
     *
     * @return the popup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getWidgets(),162,185,"/**
 * Retrieves a list of annotation widgets. Returns an empty list if none exist.
 */","* Returns the widget annotations associated with this field.
     *
     * @return The list of widget annotations. Be aware that this list is <i>not</i> backed by the
     * actual widget collection of the field, so adding or deleting has no effect on the PDF
     * document until you call {@link #setWidgets(java.util.List) setWidgets()} with the modified
     * list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,handleBorderBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:handleBorderBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle,float)",518,549,"/**
* Calculates the border box for a square/circle annotation.
* @param annotation Annotation to process.
* @param lineWidth Border line width.
* @return PDRectangle representing the border box.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:generateNormalAppearance(),54,145,"/**
 * Generates the normal appearance for a link annotation.
 * Creates a visual representation based on annotation properties.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.util.List),402,424,"/**
* Sets selected values. Throws exception if multi-select is off.
* Updates COS object and applies changes.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getColorSpace(),130,148,"/**
 * Retrieves the color space for the inline image.
 * @return PDColorSpace object or throws IOException if missing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/AnnotationBorder.java,getAnnotationBorder,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary)",38,87,"/**
 * Extracts border information from annotation/style.
 * @param annotation The annotation object.
 * @param borderStyle Border style dictionary.
 * @return AnnotationBorder object with border details.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBodyCompressed,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBodyCompressed(org.apache.pdfbox.cos.COSDocument),457,525,"/**
 * Writes compressed body objects to the document.
 * Handles object streams and encryption setup.
 */","* This will write the compressed body of the document.
     *
     * @param document The document to write the body for.
     * @throws IOException If there is an error writing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getNormalizedPath(int),455,489,"/**
 * Gets a normalized GeneralPath based on the given code.
 * Returns an empty path if no path is found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyPolygonImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)",281,393,"/**
 * Draws a cloud-like shape based on a polygon's vertices.
 * @param vertices polygon vertex coordinates
 * @param intensity cloud intensity value
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isSymbolic(),174,190,"/**
 * Checks if the font is symbolic, caching the result.
 * @return True if symbolic, false if definitively not, else true.
 */
","* Returns true if the font is a symbolic (that is, it does not use the Adobe Standard Roman character set).
     * 
     * @return true if the font is a symbolic",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,isDynamicXfa,org.apache.pdfbox.multipdf.PDFMergerUtility:isDynamicXfa(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),1531,1534,"/**
 * Checks if the PDF form is dynamic XFA.
 * @param acroForm The PDF form object.
 * @return True if dynamic, false otherwise.
 */
","* Test for dynamic XFA content.
     * 
     * @param acroForm the AcroForm
     * @return true if there is a dynamic XFA form.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),76,83,"/**
 * Initializes the iterator with fields from the given form.
 * @param form The PDAcroForm to iterate over.
 */
","* Constructor for reading.
     *
     * @param acroForm the AcroForm containing the fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,create,org.apache.pdfbox.pdmodel.common.function.PDFunction:create(org.apache.pdfbox.cos.COSBase),115,147,"/**
 * Creates a PDFunction based on the provided COSBase object.
 * @param function COSBase representing the function.
 * @throws IOException if the function type is unknown.
 */
","* Create the correct PD Model function based on the COS base function.
     *
     * @param function The COS function dictionary.
     *
     * @return The PDModel Function object, never null.
     *
     * @throws IOException If we are unable to create the PDFunction object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readColorTable(),283,306,"/**
 * Reads color table data from lookup data.
 * Calculates max index and populates colorTable array.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpolate,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpolate(),284,287,"/**
* Performs R-interpolation.
* Delegates to rinterpol with default input array.
*/
","* Calculate the interpolation.
         *
         * @return interpolated result sample",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawImage(),519,523,"/**
* Returns a BufferedImage from the raw raster data.
* Uses the color space to convert the raster.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,extractMatte,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),538,556,"/**
* Extracts matte data from a soft mask.
* @param softMask The soft mask image.
* @return Float array representing matte data, or null if none.
*/
","* Extract the matte color from a softmask.
     * 
     * @param softMask
     * @return the matte color.
     * @throws IOException if the color conversion fails.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildTransparencyMaskFromIndexedData,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",259,300,"/**
 * Decodes FlateDecode data and prepares an image XObject.
 * @param state The state object containing image data.
 * @return Prepared image XObject.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
 * Creates a paint context for shading.
 * Returns a default context on error.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
 * Creates a paint context for shading.
 * Returns a default context on error.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getDocument,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getDocument(),128,132,"/**
 * Parses document bytes to a Document object.
 * @return Document object representing the parsed document.
 * @throws IOException if an I/O error occurs during parsing.
 */
","* Get the XFA content as W3C document.
     * 
     * @see #getBytes()
     * 
     * @return the XFA content
     * 
     * @throws IOException if something went wrong when reading the XFA content.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,encode,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:encode(),343,500,"/**
 * Encodes the image data for PNG format.
 * @return Encoded PDImageXObject or null on error.
 * @throws IOException if an I/O error occurs
 */","* Tries to compress the image using a predictor.
         *
         * @return the image or null if it is not possible to encoded the image (e.g. not supported
         * raster format etc.)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.PDPage),206,215,"/**
 * Sets the destination of the PDF page.
 * @param page The PDF page to set as the destination.
 */
","* A convenience method that will create an XYZ destination using only the defaults.
     *
     * @param page The page to refer to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryNameValuePair,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary),377,402,"/**
 * Parses a name-value pair from a COSDictionary.
 * @param obj The COSDictionary to add the pair to.
 * @return True if parsing was successful, false otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBImage(java.awt.image.WritableRaster),177,188,"/**
 * Converts a WritableRaster to a BufferedImage, using attributes or tint transform.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setParent,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),94,97,"/**
 * Sets the parent node and recalculates limits.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setKids(java.util.List),139,158,"/**
 * Sets kids and limits for the node, handling root nodes.
 * @param kids List of COSNode objects (children)
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setNames(java.util.Map),308,327,"/**
 * Sets the 'names' item in the node, or null if names is null.
 * Calculates limits if names is not null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,initPage,org.apache.pdfbox.contentstream.PDFStreamEngine:initPage(org.apache.pdfbox.pdmodel.PDPage),120,131,"/**
 * Initializes the page with given parameters.
 * @param page The PDF page to initialize.
 */
",* Initializes the stream engine for the given page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBBox,org.apache.pdfbox.pdmodel.PDPage:getBBox(),381,385,"/**
* Returns the bounding box of the PDRectangle.
* Delegates to the crop box for the actual value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBleedBox,org.apache.pdfbox.pdmodel.PDPage:getBleedBox(),479,483,"/**
* Gets the bleed box of the page. Returns crop box if bleed box is null.
*/
","* A rectangle, expressed in default user space units, defining the region to which the contents
     * of the page should be clipped when output in a production environment. The default is the
     * CropBox.
     * 
     * @return The BleedBox attribute.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTrimBox,org.apache.pdfbox.pdmodel.PDPage:getTrimBox(),508,512,"/**
 * Gets the trim box of the page. Returns crop box if trim box is null.
 */","* A rectangle, expressed in default user space units, defining the intended dimensions of the
     * finished page after trimming. The default is the CropBox.
     * 
     * @return The TrimBox attribute.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getArtBox,org.apache.pdfbox.pdmodel.PDPage:getArtBox(),538,542,"/**
* Gets the art box rectangle. Returns crop box if art box is null.
*/","* A rectangle, expressed in default user space units, defining the extent of the page's
     * meaningful content (including potential white space) as intended by the page's creator The
     * default is the CropBox.
     * 
     * @return The ArtBox attribute.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedCropBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage),327,340,"/**
* Gets the rotated crop box of a page.
* @param page the page to get the crop box from
* @return PDRectangle representing the rotated crop box
*/
","* This will find the CropBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The CropBox at this level in the hierarchy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,fillBeadRectangles,org.apache.pdfbox.text.PDFTextStripper:fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage),386,421,"/**
 * Populates beadRectangles list with adjusted rectangles from page.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",122,125,"/**
 * Constructs a PDF page with default resource handling.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.font.PDFont),596,599,"/**
* Adds a font to the PDF dictionary.
* @param font The font object to add.
* @return The COSName representing the added font.
*/
","* Adds the given font to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param font the font to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),608,611,"/**
* Adds a color space to the document.
* @param colorSpace The color space object to add.
* @return The added color space name.
*/
","* Adds the given color space to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param colorSpace the color space to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),620,623,"/**
* Adds an extended graphics state.
* @param extGState The extended graphics state object.
* @return COSName object representing the added state.
*/
","* Adds the given extended graphics state to the resources of the current page and returns the
     * name for the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param extGState the extended graphics state to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),632,635,"/**
* Adds a shading object to the document.
* @param shading The shading object to add.
* @return COSName representing the added shading.
*/
","* Adds the given shading to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param shading the shading to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern),644,647,"/**
* Adds a pattern to the COS object.
* @param pattern The pattern to add.
* @return The COS name representing the added pattern.
*/
","* Adds the given pattern to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param pattern the pattern to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),656,666,"/**
 * Adds a property list to the COS object.
 * @param properties The property list to add.
 * @return COSName object representing the added property.
 */
","* Adds the given property list to the resources of the current page and returns the name for
     * the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param properties the property list to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),675,678,"/**
* Adds an image to the document's resources.
* @param image The image to add.
* @return COSName representing the image resource.
*/
","* Adds the given image to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param image the image to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),687,690,"/**
* Adds a form XObject to the document's resources.
* @param form The form XObject to add.
* @return The COS name of the added form.
*/
","* Adds the given form to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param form the form to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)",700,703,"/**
 * Adds an XObject with a given prefix.
 * @param xobject The XObject to add.
 * @param prefix Prefix for the XObject name.
 * @return COSName of the added XObject.
 */
","* Adds the given XObject to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param xobject the XObject to add
     * @param prefix the prefix to be used when creating the resource name
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,insertInnerFormToHolderResources,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)",281,288,"/**
* Inserts an inner form into a holder's resources.
* @param innerForm The form to insert.
* @param holderFormResources Resources of the holder form.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createBackgroundLayerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",328,339,"/**
 * Creates a blank background layer form with specified bounds.
 * @param innerFormResource Resource to add the form to.
 * @param bbox Bounding box for the form.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:exportFDF(),151,172,"/**
* Exports the document fields to an FDF document.
* @return FDFDocument containing the exported fields.
* @throws IOException if an I/O error occurs.
*/
","* This will export all FDF form data.
     *
     * @return An FDF document used to export the document.
     * @throws IOException If there is an error when exporting the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDownAppearance(),172,184,"/**
 * Retrieves the down appearance entry from the appearance dictionary.
 * Creates a new entry if it's a subdictionary.
 */","* Get the annotations down appearance.
     * 
     * <p>
     * This will get the annotations down appearance. If this is not existent an
     * empty appearance entry will be created.
     * 
     * @return the appearance entry representing the down appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRolloverAppearance(),195,207,"/**
 * Retrieves the rollover appearance entry. Creates if it's missing.
 */","* Get the annotations rollover appearance.
     * 
     * <p>
     * This will get the annotations rollover appearance. If this is not
     * existent an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the rollover appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearance(),477,489,"/**
 * Gets the normal appearance entry, creating it if it's missing.
 * Returns the PDAppearanceEntry object.
 */
","* Get the annotations normal appearance.
     * 
     * <p>
     * This will get the annotations normal appearance. If this is not existent
     * an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the normal appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addLast,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),79,84,"/**
 * Adds a child outline item to the end of the list.
 * @param newChild The outline item to add.
 */
","* Adds the given node to the bottom of the children list.
     *
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addFirst,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),93,98,"/**
 * Adds a new child outline item as the first child.
 * @param newChild The outline item to add.
 */
","* Adds the given node to the top of the children list.
     * 
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,98,"/**
 * Creates a PDPageLabels object from a document and dictionary.
 * @param document The document to associate labels with.
 * @param dict COSDictionary containing page label information.
 */
","* Creates an page label dictionary for a document using the information in
     * the given COS dictionary.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @param dict
     *            an existing page label dictionary
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)
     * @throws IOException
     *             If something goes wrong during the number tree conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(),48,51,"/**
 * Initializes the embedded GoTo action by setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(),44,47,"/**
 * Initializes a PDActionGoTo object by setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(),40,43,"/**
 * Initializes a PDActionHide object, setting its subtype.
 */",* Default Constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(),40,43,"/**
 * Initializes the PDActionImportData object.
 * Sets the subtype to SUB_TYPE constant.
 */
",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(),40,43,"/**
 * Initializes the PDActionJavaScript object.
 * Sets the subtype to a predefined constant.
 */
",* Constructor #1.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(),44,47,"/**
 * Initializes the PDActionLaunch object, setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(),36,39,"/**
 * Initializes a PDActionMovie object, setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(),34,37,"/**
 * Initializes a PDActionNamed object, setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(),44,47,"/**
 * Initializes the PDActionRemoteGoTo with a predefined subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(),38,41,"/**
 * Constructs a PDActionResetForm, setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(),41,44,"/**
 * Initializes a PDActionSound object, setting its subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(),43,46,"/**
 * Initializes the form by setting its subtype to SUB_TYPE.
 */",* Default Constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(),44,47,"/**
 * Constructs a PDActionThread, setting its subtype to SUB_TYPE.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(),41,44,"/**
 * Default constructor. Sets the subtype to SUB_TYPE constant.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,updateParentOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:updateParentOpenCount(int),284,305,"/**
* Updates the open count of the parent node by a delta.
* @param delta The amount to add to the parent's open count.
*/
","* The count parameter needs to be updated when you add, remove, open or close outline items.
     *
     * @param delta The amount to update by.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(java.lang.String),149,166,"/**
 * Sets the value. Updates via option or direct value update.
 * @param value The value to set.
 * @throws IOException if an I/O error occurs.
 */
","* Set the selected option given its name, and try to update the visual appearance.
     * 
     * @param value Name of option to select
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the value is not a valid option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),304,346,"/**
 * Checks if a content group is enabled based on COS dictionaries.
 * @param group The content group to check.
 * @return True if enabled, false if disabled, otherwise default.
 */
","* Indicates whether an optional content group is enabled.
     * @param group the group object
     * @return true if the group is enabled",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(java.lang.String,boolean)",374,392,"/**
 * Sets the enabled state of a group by name.
 * @param groupName Name of the group to modify.
 * @param enable True to enable, false to disable.
 * @return True if the group was found and enabled/disabled.
 */
","* Enables or disables all optional content groups with the given name.
     *
     * @param groupName the group name
     * @param enable true to enable, false to disable
     * @return true if at least one group with this name already had an on or off setting, false
     * otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroFormDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",131,147,"/**
 * Creates an AcroForm dictionary and adds a signature field.
 * Sets flags and adds fields to the AcroForm.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,113,"/**
 * Decodes data from an input stream to an output stream.
 * Uses default DecodeOptions.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPages,org.apache.pdfbox.pdmodel.PDDocument:getPages(),1246,1249,"/**
 * Returns the pages in the PDF document.
 * Delegates to the document catalog.
 */
","* Returns the page tree.
     * 
     * @return the page tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getNumberOfPages,org.apache.pdfbox.pdmodel.PDDocument:getNumberOfPages(),1256,1259,"/**
 * Returns the number of pages in the document.
 */","* This will return the total page count of the PDF document.
     * 
     * @return The total number of pages in the PDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFixedPitch(boolean),85,88,"/**
* Sets the fixed pitch flag.
* @param flag True to enable fixed pitch, false otherwise.
*/
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSerif(boolean),105,108,"/**
 * Sets the Serif flag.
 * @param flag The value to set the Serif flag to (true/false).
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSymbolic(boolean),125,128,"/**
 * Sets the symbolic flag.
 * @param flag The value to set the symbolic flag to.
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setScript(boolean),145,148,"/**
 * Sets the script execution flag.
 * @param flag True to enable, false to disable.
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setNonSymbolic(boolean),165,168,"/**
* Sets the non-symbolic flag.
* @param flag True to set the flag, false to clear it.
*/
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalic(boolean),185,188,"/**
 * Sets the italic flag.
 * @param flag True to set italic, false to unset it.
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAllCap(boolean),205,208,"/**
 * Sets the ALL_CAP flag.
 * @param flag The value to set the flag to (true/false).
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSmallCap(boolean),225,228,"/**
* Sets the small-cap flag.
* @param flag The boolean value to set the flag to.
*/
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setForceBold(boolean),245,248,"/**
 * Sets the force bold flag.
 * @param flag True to force bold, false otherwise.
 */
","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",128,135,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document The document.
 * @param byteArray Image data as bytes.
 * @param number Image number.
 * @return PDImageXObject created from the byte array.
 */
","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)",190,197,"/**
 * Creates a PDImageXObject from a file.
 * @param document PDDocument object
 * @param file File to read image from
 * @param number image number
 * @return PDImageXObject
 */
","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the TIFF file which contains a suitable CCITT compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.w3c.dom.Element),130,314,"/**
 * Creates an FDFAnnotation from an XML element.
 * @param element XML element representing the annotation.
 * @throws IOException if required attributes are missing.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting data from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,rebuildTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:rebuildTrailer(java.util.Map),822,858,"/**
 * Rebuilds the document trailer and xref table from XRef objects.
 * @return COSDictionary representing the rebuilt trailer.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectDynamically,"org.apache.pdfbox.pdfparser.COSParser:parseObjectDynamically(org.apache.pdfbox.cos.COSObjectKey,boolean)",465,496,"/**
 * Parses a COSBase object dynamically, fetching or parsing as needed.
 * @param objKey COSObjectKey identifying the object
 * @return COSBase object or null if not found.
 */
","* Parse the object for the given object key.
     * 
     * @param objKey key of object to be parsed
     * @param requireExistingNotCompressedObj if <code>true</code> the object to be parsed must be defined in xref
     * (comment: null objects may be missing from xref) and it must not be a compressed object within object stream
     * (this is used to circumvent being stuck in a loop in a malicious PDF)
     * 
     * @return the parsed object (which is also added to document object)
     * 
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXref,"org.apache.pdfbox.pdfparser.XrefParser:parseXref(org.apache.pdfbox.cos.COSDocument,long)",90,198,"/**
 * Parses Xref tables and resolves references, updating document state.
 * @param document The COSDocument to update.
 * @param startXRefOffset Starting offset for Xref parsing.
 */","* Parses cross reference tables.
     * 
     * @param document the corresponding COS document of the pdf.
     * @param startXRefOffset start offset of the first table
     * 
     * @return the trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",225,237,"/**
 * Parses a PDF document from the input stream.
 * @param input Input stream containing the PDF data.
 * @throws IOException if an I/O error occurs during parsing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",477,480,"/**
* Parses the PDF document using the provided parser.
* @return Parsed PDF document.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,initFromRandomAccessRead,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead),96,101,"/**
 * Initializes from a RandomAccessRead object, parsing the PDF.
 * @param rar Source for PDF data; must be readable.
 * @throws IOException If an I/O error occurs during parsing.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),169,172,"/**
* Processes a transparency group.
* @param form The transparency group to process.
*/","* Shows a transparency group from the content stream.
     *
     * @param form transparency group (form) XObject
     * @throws IOException if the transparency group cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processSoftMask,org.apache.pdfbox.contentstream.PDFStreamEngine:processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),199,219,"/**
* Processes a transparency group, setting up graphics state for soft masking.
*/","* Processes a soft mask transparency group stream.
     * 
     * @param group transparency group used for the soft mask
     * @throws IOException if the transparency group cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showType3Glyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",867,875,"/**
 * Displays a Type 3 glyph using the provided parameters.
 * @param textRenderingMatrix Matrix for rendering.
 * @param font The Type 3 font.
 * @param code Glyph code.
 * @param displacement Vector displacement.
 */
","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showAnnotation,org.apache.pdfbox.contentstream.PDFStreamEngine:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),450,457,"/**
 * Processes an annotation by extracting and handling its appearance.
 * @param annotation The annotation to process.
 * @throws IOException If an I/O error occurs during processing.
 */
","* Shows the given annotation.
     *
     * @param annotation An annotation on the current page.
     * @throws IOException If an error occurred reading the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",380,384,"/**
* Processes a tiling pattern with provided color and color space.
* Delegates to overloaded method with matrix parameter.
*/
","* Process the given tiling pattern.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showForm,org.apache.pdfbox.contentstream.PDFStreamEngine:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),180,191,"/**
 * Displays a PDF form.
 * @param form The PDF form to display.
 * @throws IOException If an I/O error occurs.
 */
","* Shows a form from the content stream.
     *
     * @param form form XObject
     * @throws IOException if the form cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getBoundingBox(),314,322,"/**
 * Returns the bounding box for the font. Lazily initializes if null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidth(int),155,182,"/**
* Gets the width of a character based on its code point.
* @param code The character code point.
* @return The width of the character, or a default value.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,getVisualSignatureAsStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument),157,165,"/**
 * Converts a COSDocument to an InputStream.
 * @param visualSignature The COSDocument to convert.
 * @return InputStream of the COSDocument.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream),975,978,"/**
* Saves data to the provided output stream.
* @param output Output stream to save data to.
*/
","* This will save the document to an output stream.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",994,1007,"/**
 * Saves data to a file, optionally compressing it.
 * @param file The file to save to.
 * @param compressParameters Compression parameters.
 * @throws IOException if an I/O error occurs.
 */
","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param file The file to save as.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocument,org.apache.pdfbox.multipdf.Splitter:createNewDocument(),743,783,"/**
 * Creates a new PDF document, copying settings from the source.
 * @return A new PDDocument object.
 * @throws IOException if an I/O error occurs.
 */
","* Create a new document to write the split contents to.
     *
     * @return the newly created PDDocument. 
     * @throws IOException If there is an problem creating the new document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setVersion,org.apache.pdfbox.pdmodel.PDDocument:setVersion(float),1449,1473,"/**
* Sets the version to the specified value, preventing downgrades.
* Updates document/catalog version based on document version.
*/","* Sets the PDF specification version for this document.
     *
     * @param newVersion the new PDF version (e.g. 1.4f)
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,iterator,org.apache.pdfbox.pdmodel.PDPageTree:iterator(),127,131,"/**
 * Returns an iterator for the pages in this document.
 */","* Returns an iterator which walks all pages in the tree, in order.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPage,org.apache.pdfbox.pdmodel.PDDocument:getPage(int),1236,1239,"/**
 * Retrieves a page from the document at the specified index.
 * @param pageIndex Index of the page to retrieve (0-based).
 * @return The PDPage object at the given index.
 */
","* Returns the page at the given 0-based index.
     * <p>
     * This method is too slow to get all the pages from a large PDF document
     * (1000 pages or more). For such documents, use the iterator of
     * {@link PDDocument#getPages()} instead.
     *
     * @param pageIndex the 0-based page index
     * @return the page at the given index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOpenAction,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOpenAction(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",849,892,"/**
 * Merges the open action from srcCatalog to dstCatalog.
 * Clones the action, handles errors, and validates destination.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createDictionaryClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createDictionaryClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",413,533,"/**
* Creates a clone of a COSBase dictionary.
* @param src Source COSBase, dstParent, currentPageDict
* @return Cloned COSDictionary or null if cloning fails.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,indexOfPageTree,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:indexOfPageTree(org.apache.pdfbox.cos.COSDictionary),138,158,"/**
* Finds the index of a page within the page tree.
* Returns -1 if the page is not found in the tree.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:writeXML(java.io.Writer),239,264,"/**
 * Writes the FDF data to the specified XML writer.
 * @param output XML writer to write the FDF data to
 * @throws IOException if an I/O error occurs
 */
","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev6,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",426,515,"/**
 * Prepares encryption dictionary using owner/user passwords & permissions.
 * @param ownerPassword Owner's password for encryption.
 * @param userPassword User's password for encryption.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev234(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",517,560,"/**
 * Prepares encryption dictionary with keys based on passwords & revisions.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),322,412,"/**
 * Prepares a PDF document for encryption using AES.
 * @param doc The PDF document to be encrypted.
 * @throws IOException if an I/O error occurs during encryption.
 */
","* Prepare the document for encryption.
     *
     * @param doc The document that will be encrypted.
     *
     * @throws IOException If there is an error while encrypting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(),36,39,"/**
 * Constructs a PDAnnotationCircle object, extending PDAnnotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(),37,40,"/**
 * Constructs a PDAnnotationSquare object, initializing with subtype.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(),40,43,"/**
 * Constructs a PDAnnotationHighlight object, initializing subtype.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(),40,43,"/**
 * Constructs a PDAnnotationSquiggly object, initializing its subtype.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(),40,43,"/**
 * Constructs a strikeout annotation.
 * Calls the superclass constructor with SUB_TYPE.
 */
",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(),40,43,"/**
 * Constructs a PDAnnotationUnderline object, extending PDAnnotation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Creates a PDAnnotationCircle object from a COSDictionary.
 * @param field The COSDictionary containing annotation data.
 */
","* Creates a circle annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Creates a square annotation from a COSDictionary.
 * @param field The COSDictionary representing the annotation.
 */
","* Creates a square annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates a highlight annotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates a squiggly annotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates a strikeout annotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Creates an underline annotation from a COSDictionary.
 * @param dict The COSDictionary containing annotation data.
 */
","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),236,305,"/**
* Imports a FDF field value and flags into the current field.
* @param fdfField The FDF field to import from.
*/
","* This will import a fdf field from a fdf document.
     * 
     * @param fdfField The fdf field to import.
     * @throws IOException If there is an error importing the data for this field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws a PDInlineImage at specified coordinates with given dimensions.
 * @param inlineImage Inline image to draw.
 * @param x X coordinate.
 * @param y Y coordinate.
 * @param width Image width.
 * @param height Image height.
 */
","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawImage(),365,369,"/**
* Returns a BufferedImage from the raw raster data.
* Uses the color space to convert the raster.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:generateNormalAppearance(),50,198,"/**
 * Generates the normal appearance for a polyline annotation.
 * Handles vertex adjustments, style drawing, and error handling.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyPolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyPolygon(float[][]),104,125,"/**
 * Creates a cloudy polygon from a 2D float array path.
 * @param path Array of points, supports only point segments.
 * @throws IOException if an I/O error occurs.
 */
","* Creates a cloudy border for a Polygon annotation.
     *
     * @param path polygon path
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyRectangleImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyRectangleImpl(double,double,double,double,boolean)",225,271,"/**
 * Draws a cloudy rectangle or polygon based on dimensions.
 * @param left, bottom, right, top Rectangle coordinates.
 * @param isEllipse Whether to draw as ellipse or rectangle.
 */
","* Cloudy rectangle implementation is based on converting the rectangle
     * to a polygon.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,iterator,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:iterator(),58,62,"/**
 * Returns an iterator to iterate over the fields in the form.
 */","* Returns an iterator which walks all fields in the tree, in order.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:eval(float[]),61,126,"/**
 * Evaluates a PDF function based on input, selecting a child function.
 * @param input Input value for evaluation.
 * @return Float array representing the evaluation result.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",91,108,"/**
 * Creates a PDDeviceN object from a COS array and resources.
 */","* Creates a new DeviceN color space from the given COS array.
     * 
     * @param deviceN an array containing the color space information
     * @param resources resources, can be null.
     * 
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getTintTransform(),563,570,"/**
 * Returns the tint transform function. Creates if null.
 */","* This will get the tint transform function.
     *
     * @return The tint transform function.
     *
     * @throws IOException if there is an error creating the function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",85,98,"/**
 * Creates a PDSeparation object from a COSArray and resources.
 * @param separation COSArray containing separation data
 * @param resources PDResources for color space creation
 */","* Creates a new Separation color space from a PDF color space array.
     * @param separation an array containing all separation information.
     * @param resources resources, can be null.
     * @throws IOException if the color space or the function could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunction(),337,348,"/**
 * Retrieves the PDFunction object, creating it if necessary.
 * @return PDFunction object or null if no function is defined.
 */
","* This will return the function used to convert the color values.
     *
     * @return the function
     * @throws java.io.IOException if we were not able to create the function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunctionsArray,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunctionsArray(),356,382,"/**
 * Retrieves the array of PDFunction objects.
 * @return PDFunction[] array of functions or null if none.
 * @throws IOException if the function element is invalid.
 */
","* Provide the function(s) of the shading dictionary as array.
     *
     * @return an array containing the function(s).
     * @throws IOException if we were unable to create a function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getTransferFunction,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getTransferFunction(),187,198,"/**
 * Retrieves the transfer function. Creates if null.
 * @return PDFunction object representing the transfer function.
 */
","* Returns the transfer function.
     * 
     * @return the transfer function
     * @throws IOException If we are unable to create the PDFunction object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applyTransferFunction,"org.apache.pdfbox.rendering.PageDrawer:applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",1397,1484,"/**
* Applies a transfer function to an image.
* @param image Input image.
* @param transfer Transfer function (COSBase).
* @return Image with applied transfer function.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",88,96,"/**
 * Creates a PDIndexed object.
 * @param indexedArray Indexed array from PDF.
 * @param resources PDF resources.
 */
","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @param resources the resources, can be null. Allows to use its cache for the colorspace.
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:eval(float[]),424,467,"/**
 * Evaluates the function using linear interpolation.
 * @param input Input array of floats to be processed.
 * @return Array of floats representing the evaluated output values.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(java.awt.Rectangle,int)",467,517,"/**
 * Retrieves an image from the sampled image reader.
 * @param region Region to extract, null for full image.
 * @param subsampling Subsampling value for image extraction.
 * @return BufferedImage object representing the extracted image.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",79,116,"/**
* Creates a PDImageXObject from a BufferedImage, using predictor encoding or fallback.
* @param document The document to add the image to.
* @param image The BufferedImage to create the image from.
*/
","* Creates a new lossless encoded image XObject from a BufferedImage.
     * <p>
     * <u>New for advanced users from 2.0.12 on:</u><br>
     * If you created your image with a non standard ICC colorspace, it will be
     * preserved. (If you load images in java using ImageIO then no need to read
     * this segment) However a new colorspace will be created for each image. So
     * if you create a PDF with several such images, consider replacing the
     * colorspace with a common object to save space. This is done with
     * {@link PDImageXObject#getColorSpace()} and
     * {@link PDImageXObject#setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace) PDImageXObject.setColorSpace()}
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new image XObject
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processPage,org.apache.pdfbox.contentstream.PDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),152,161,"/**
 * Processes a PDF page, extracting and handling its contents.
 * @param page The PDF page to process.
 * @throws IOException if an I/O error occurs.
 */
","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws IOException if there is an error accessing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processChildStream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)",478,488,"/**
 * Processes a child content stream for a page.
 * Throws exception if a page is already being processed.
 */
","* Process a child stream of the given page. Cannot be used with {@link #processPage(PDPage)}.
     *
     * @param contentStream the child content stream
     * @param page the page to be used for processing
     * @throws IOException if there is an exception while processing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",80,87,"/**
* Creates a content stream on a page, overwriting existing content.
* @param document The document to add the content to.
* @param sourcePage The page to write content on.
*/
","* Create a new PDPage content stream. This constructor overwrites all existing content streams
     * of this page.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @throws IOException If there is an error writing to the page contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)",103,105,"/**
 * Calls the primary constructor with default compression flag.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
 * Sets the current font and size.
 * @param font The PDF font to set.
 * @param fontSize The font size.
 */
","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,getName,org.apache.pdfbox.pdmodel.PDAbstractContentStream:getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),637,649,"/**
 * Gets the name of the color space.
 * @param colorSpace The color space object.
 * @return COSName object representing the color space name.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
* @param state The graphics state to set.
* @throws IOException if an I/O error occurs.
*/
","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Adds a shading to resources and applies the SHADING_FILL operator.
* @param shading The PDShading object to be added.
* @throws IOException If an I/O error occurs.
*/
","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Begins marked content with tag and property list.
 * Writes operator and handles simplified notation for MCID.
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
 * Adds marked content point with properties to the PDF.
 * @param tag COSName tag for the marked content.
 * @param propertyList Property list for the content.
 */
","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image at specified coordinates with given dimensions.
 * @param image The image to draw.
 * @param x X coordinate.
 * @param y Y coordinate.
 * @param width Image width.
 * @param height Image height.
 */
","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image with the given matrix transform.
 * @param image The image to draw.
 * @param matrix The transformation matrix.
 */
","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
 * Draws a PDF form object.
 * Throws exception if called within a text block.
 */
","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayXObject,"org.apache.pdfbox.multipdf.Overlay:createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.multipdf.PDFCloneUtility)",503,529,"/**
* Creates and adds a form XObject to the page resources.
* Creates a form XObject and adds it to the page's resources.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",306,326,"/**
 * Creates an image form XObject and adds it to resources.
 * @param img Image XObject to be added
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(boolean),157,161,"/**
 * Gets the normal appearance as a content stream.
 * @param compress Whether to compress the stream.
 * @return PDAppearanceContentStream object.
 */
","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to.
     * 
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLabels(),620,624,"/**
* Retrieves page labels from the document's COSDictionary.
* Returns PDPageLabels object or null if not present.
*/
","* Returns the page labels descriptor of the document.
     *
     * @return the page labels descriptor of the document.
     * @throws IOException If there is a problem retrieving the page labels.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(java.lang.String),50,54,"/**
 * Creates a PDActionJavaScript object with the given JavaScript.
 * @param js The JavaScript code to execute.
 */
","* Constructor.
     *
     * @param js Some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,switchNodeCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:switchNodeCount(),264,269,"/**
 * Inverts the open count and updates the parent's count.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(java.lang.String),279,297,"/**
 * Checks if a group is enabled.
 * @param groupName The name of the group to check.
 * @return True if the group is enabled, false otherwise.
 */
","* Indicates whether <em>at least one</em> optional content group with this name is enabled.
     * There may be disabled optional content groups with this name even if this function returns
     * true.
     *
     * @param groupName the group name
     * @return true if at least one group is enabled",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isGroupEnabled,org.apache.pdfbox.rendering.PDFRenderer:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),448,452,"/**
 * Checks if an optional content group is enabled.
 * @param group The optional content group to check.
 * @return True if group is enabled or OCProperties is null.
 */
","* Indicates whether an optional content group is enabled.
     * @param group the group
     * @return true if the group is enabled",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,fixDestinations,org.apache.pdfbox.multipdf.Splitter:fixDestinations(org.apache.pdfbox.pdmodel.PDDocument),160,185,"/**
 * Updates destinations in a document, fixing page references.
 */","* Replace the page destinations, if the source and destination pages are in the target
     * document. This must be called after all pages (and its annotations) are processed.
     *
     * @param destinationDocument",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addPage,org.apache.pdfbox.pdmodel.PDDocument:addPage(org.apache.pdfbox.pdmodel.PDPage),240,244,"/**
 * Adds a page to the document and updates the highest imported object number.
 * @param page The page to add.
 */
","* This will add a page to the document. This is a convenience method, that will add the page to the root of the
     * hierarchy and set the parent of the page to the root.
     * 
     * @param page The page to add to the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(org.apache.pdfbox.pdmodel.PDPage),656,659,"/**
 * Removes a page from the document's page list.
 * @param page The page to remove.
 */
","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     *
     * @param page The page to remove from the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(int),668,671,"/**
 * Removes a page at the specified index.
 * @param pageNumber The index of the page to remove.
 */
","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     * 
     * @param pageNumber 0 based index to page number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean,org.apache.pdfbox.rendering.PDFRenderer)",139,148,"/**
 * Constructs a PDFPrintable with provided parameters.
 * @param document The PDF document.
 * @param scaling Scaling factor for the document.
 */
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).
     * @param renderer the document renderer. Useful if {@link PDFRenderer} has been subclassed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,<init>,org.apache.pdfbox.rendering.PDFRenderer:<init>(org.apache.pdfbox.pdmodel.PDDocument),71,75,"/**
* Initializes a PDF renderer with the given document.
* @param document The PDF document to render.
*/
","* Creates a new PDFRenderer.
     * @param document the document to render",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument),42,46,"/**
 * Initializes the PageExtractor with a PDF document.
 * @param sourceDocument The PDF document to extract pages from.
 */
","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndicesByLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndicesByLabels(),208,214,"/**
 * Returns a map of labels to page indices.
 * Uses computeLabels to populate the map.
 */
","* Returns a mapping with computed page labels as keys and corresponding
     * 0-based page indices as values. The returned map will contain at most as
     * much entries as the document has pages.
     * 
     * <p>
     * <strong>NOTE:</strong> If the document contains duplicate page labels,
     * the returned map will contain <em>less</em> entries than the document has
     * pages. The page index returned in this case is the <em>highest</em> index
     * among all pages sharing the same label.
     * </p>
     * 
     * @return a mapping from labels to 0-based page indices.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getLabelsByPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getLabelsByPageIndices(),223,235,"/**
 * Retrieves labels for each page in the document.
 * @return String array of labels, one for each page.
 */
","* Returns a mapping with 0-based page indices as keys and corresponding
     * page labels as values as an array. The array will have exactly as much
     * entries as the document has pages.
     * 
     * @return an array mapping from 0-based page indices to labels.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float,boolean)",106,115,"/**
 * Creates a PDFPageable object.
 * @param document The PDF document.
 * @param orientation Page orientation.
 */
","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero, and optionally be centered.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.type1.Type1Font),110,127,"/**
 * Creates a PDFontDescriptor from a Type1Font.
 * @param type1 The Type1Font to build the descriptor from.
 * @return PDFontDescriptor object.
 */
","* Returns a PDFontDescriptor for the given PFB.
     * 
     * @throws IOException if the font bounding box isn't available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.afm.FontMetrics),134,153,"/**
 * Creates a PDFontDescriptor from FontMetrics.
 * @param metrics FontMetrics object containing font information.
 * @return PDFontDescriptor object.
 */
","* Returns a PDFontDescriptor for the given AFM. Used only for Standard 14 fonts.
     *
     * @param metrics AFM",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,createFontDescriptor,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont),182,279,"/**
 * Creates a PDFontDescriptor from a TrueTypeFont.
 * Extracts font properties from TTF tables.
 * @param ttf The TrueTypeFont object to process.
 * @return A PDFontDescriptor object.
 * @throws IOException if essential tables are missing.
 */
",* Creates a new font descriptor dictionary for the given TTF.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",107,111,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document The document to associate with the image.
 * @param byteArray The byte array containing the image data.
 * @return A PDImageXObject.
 */
","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",170,174,"/**
 * Creates a PDImageXObject from a file.
 * @param document The document to associate with the image.
 * @param file The file containing the image.
 * @return The created PDImageXObject.
 */
","* Creates a new CCITT Fax compressed image XObject from the first image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage)}
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the  TIFF file which contains a suitable CCITT compressed image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.w3c.dom.Element),65,77,"/**
 * Creates a FDFAnnotationCaret from an Element.
 * @param element The Element to create the caret from.
 * @throws IOException if an I/O error occurs.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.w3c.dom.Element),66,79,"/**
 * Creates a FDF annotation circle from an Element.
 * Parses interior color if present; initializes fringe.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs a FDF annotation file attachment from a PDF element.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.w3c.dom.Element),71,100,"/**
 * Constructs a FDFAnnotationFreeText object from an Element.
 * Parses attributes like justification, appearance, and rotation.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.w3c.dom.Element),77,113,"/**
 * Parses ink gestures from an Element, storing them in inklist.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.w3c.dom.Element),68,155,"/**
 * Creates a FDFAnnotationLine from an Element, parsing attributes.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.w3c.dom.Element),74,101,"/**
 * Creates a FDF annotation link from an Element.
 * Parses URI from element for action.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.w3c.dom.Element),73,85,"/**
 * Creates a FDF annotation polygon from an XML element.
 * Parses interior color if present; sets subtype.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.w3c.dom.Element),74,81,"/**
 * Creates a FDF annotation polyline from a PDF element.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.w3c.dom.Element),63,67,"/**
 * Creates a FDF annotation sound from a PDF element.
 * @param element The PDF element to create the sound from.
 * @throws IOException if an I/O error occurs.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.w3c.dom.Element),67,80,"/**
 * Creates a FDF annotation square from an Element.
 * Sets subtype and parses interior color, initializes fringe.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.w3c.dom.Element),84,135,"/**
 * Creates a FDF annotation stamp from an Element.
 * Parses appearance XML from the element, if available.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.w3c.dom.Element),65,84,"/**
 * Constructs a FDFAnnotationText object from an Element.
 * Initializes subtype, icon, and state/stateModel attributes.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.w3c.dom.Element),57,77,"/**
 * Creates a FDFAnnotationTextMarkup from an Element.
 * Parses coords attribute, throws IOException if invalid.
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,dereferenceCOSObject,org.apache.pdfbox.pdfparser.COSParser:dereferenceCOSObject(org.apache.pdfbox.cos.COSObject),428,444,"/**
 * Dereferences a COS object and parses it dynamically.
 * @param obj The COS object to dereference.
 * @return The parsed COSBase object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,retrieveTrailer,org.apache.pdfbox.pdfparser.COSParser:retrieveTrailer(),241,295,"/**
 * Retrieves the trailer dictionary from the PDF document.
 * Rebuilds if necessary based on lenient mode and errors.
 * @return COSDictionary trailer object.
 */
","* Read the trailer information and provide a COSDictionary containing the trailer information.
     * 
     * @return a COSDictionary containing the trailer information
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String)",201,205,"/**
 * Loads a PDF document from byte array with optional password & keystore.
 * @param input PDF data, password, keystore, alias.
 * @return PDDocument object.
 */
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",350,361,"/**
 * Loads a PDF file using a RandomAccessRead.
 * @param file Input file. Throws IOException on failure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead),376,379,"/**
 * Loads a PDF document from a RandomAccessRead.
 * @param randomAccessRead Input stream for PDF data.
 * @return A PDDocument object representing the PDF.
 */
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF new streams.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",398,398,"/**
* Loads a PDF document using the provided loader and function.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",413,417,"/**
 * Loads a PDF document from a RandomAccessRead, optionally with a password.
 */","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     *
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",432,437,"/**
 * Loads a PDF document from a RandomAccessRead.
 * @param randomAccessRead Source for PDF data.
 * @param password Password for decryption, if any.
 * @return PDDocument object representing the PDF.
 */
","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",456,456,"/**
* Loads a PDF document using provided parameters.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.File),80,83,"/**
* Sets the visual signature from a file.
* @param file The file containing the visual signature.
* @throws IOException if an I/O error occurs.
*/
","* Reads the visual signature from the given file.
     *
     * @param file the file containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.InputStream),91,94,"/**
* Initializes visual signature from an input stream.
* @param is Input stream containing signature data.
* @throws IOException if an I/O error occurs.
*/
","* Reads the visual signature from the given input stream.
     *
     * @param is the input stream containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showGlyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",828,839,"/**
 * Displays a glyph based on font type.
 * @param matrix Transformation matrix.
 * @param font PDFont object.
 * @param code Glyph code.
 * @param displacement Vector displacement.
 */
","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",47,92,"/**
 * Processes a form XObject, handling transparency groups and recursion.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",53,92,"/**
 * Processes a form XObject, handling transparency groups and recursion limits.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveGlyphHeight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveGlyphHeight(org.apache.pdfbox.pdmodel.font.PDFont,int)",979,1019,"/**
 * Resolves the height of a glyph for a given font and code.
 * @param font The PDFont object.
 * @param code The glyph code.
 * @return Glyph height as float, or -1 if not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType3Font:getDisplacement(int),149,153,"/**
* Calculates displacement vector based on code.
* Uses getFontMatrix to transform a width vector.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,buildPDF,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),76,155,"/**
 * Builds a PDF with signature properties.
 * @param properties Signer properties for PDF creation.
 * @return InputStream containing the generated PDF.
 * @throws IOException if an I/O error occurs.
 */
","* Build a PDF with a visible signature step by step, and return it as a stream.
     *
     * @param properties properties to be used for the creation
     * @return InputStream stream containing the pdf holding the visible signature
     * @throws IOException if the PDF could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File),955,958,"/**
* Saves data to a file.
* @param file The file to save to.
* @throws IOException If an I/O error occurs.
*/
","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param file The file to save as.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1024,1027,"/**
 * Saves data to a file with specified compression parameters.
 * @param fileName File name to save to.
 * @param compressParameters Compression settings.
 */
","* Save the document to a file using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param fileName The file to save as.
     * @param compressParameters The parameters for the document's compression.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocumentIfNecessary,org.apache.pdfbox.multipdf.Splitter:createNewDocumentIfNecessary(),704,715,"/**
 * Creates a new document if needed based on page split.
 */","* Helper method for creating new documents at the appropriate pages.
     *
     * @throws IOException If there is an error creating the new document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteHeader,org.apache.pdfbox.pdfwriter.COSWriter:doWriteHeader(org.apache.pdfbox.cos.COSDocument),644,668,"/**
 * Writes the document header, including version and comments.
 * @param doc The COSDocument to write the header for.
 */","* This will write the header to the PDF document.
     *
     * @param doc The document to get the data from.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties),653,662,"/**
* Sets optional content properties and updates PDF version if needed.
* @param ocProperties Optional content properties to set.
*/
","* Sets the optional content properties dictionary. The document version is incremented to 1.5
     * if lower.
     *
     * @param ocProperties the optional properties dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildToUnicodeCMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildToUnicodeCMap(java.util.Map),125,179,"/**
 * Creates a ToUnicode dictionary for the given glyphs.
 * Maps GIDs to Unicode code points and handles surrogates.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPages,org.apache.pdfbox.multipdf.Overlay:getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument),328,338,"/**
 * Extracts LayoutPage objects from a PDDocument.
 * @param doc The document to extract pages from.
 * @return A map of page index to LayoutPage.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,org.apache.pdfbox.multipdf.Overlay:getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument),305,308,"/**
* Gets a layout page from a PDF document.
* @param doc The PDF document.
* @return A LayoutPage object.
*/
","* Create a LayoutPage object from the first page of the given document.
     *
     * @param doc
     * @return
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSize,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",195,208,"/**
 * Calculates page dimensions based on the given page number.
 * @param document The PDF document.
 * @param page The page number to calculate dimensions for.
 */
","* Each page of document can be different sizes. This method calculates the page size based on
     * the page media box.
     * 
     * @param document
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IllegalArgumentException if the page argument is lower than 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,findDestinationPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument),228,274,"/**
 * Finds the destination page in a PDF document.
 * @param doc The PDF document to search.
 * @return The destination page or null if not found.
 */
","* This method will attempt to find the page in this PDF document that this outline points to.
     * If the outline does not point to anything then this method will return null. If the outline
     * is an action that is not a GoTo action then this method will also return null.
     *
     * @param doc The document to get the page from.
     *
     * @return The page that this outline will go to when activated or null if it does not point to
     * anything.
     * @throws IOException If there is an error when trying to find the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPageFormat,org.apache.pdfbox.printing.PDFPageable:getPageFormat(int),177,233,"/**
 * Gets the PageFormat for the specified page index.
 * @param pageIndex index of the page
 * @return PageFormat object representing the page format
 */
","* {@inheritDoc}
     * 
     * Returns the actual physical size of the pages in the PDF file. May not fit the local printer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,retrievePageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:retrievePageNumber(),119,135,"/**
 * Retrieves the page number from an array. Returns -1 if empty.
 */","* Returns the page number for this destination, regardless of whether this is a page number or
     * a reference to a page.
     *
     * @see org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem
     * @return the 0-based page number, or -1 if the destination type is unknown.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:writeXML(java.io.Writer),74,78,"/**
 * Writes the FDF data to an XML writer.
 * @param output XML writer to write to.
 * @throws IOException if writing fails.
 */
","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),365,424,"/**
 * Prepares the document's encryption dictionary for encryption.
 * Sets version, revision, permissions, and passwords.
 */","* Prepare document for encryption.
     *
     * @param document The document to encrypt.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,createAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:createAnnotation(org.apache.pdfbox.cos.COSBase),106,168,"/**
 * Creates a PDAnnotation based on the provided COSBase object.
 * @param base COSBase object representing the annotation.
 * @throws IOException if the annotation type is unknown.
 */
","* Create the correct annotation from the base COS object.
     *
     * @param base The COS object that is the annotation.
     * @return The correctly typed annotation object, never null.
     *
     * @throws IOException If the annotation type is unknown.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),75,98,"/**
* Imports FDF data, recursively handling child fields.
* @param fdfField The FDF field to import.
* @throws IOException if an I/O error occurs.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),98,139,"/**
* Imports FDF field data, updating widget flags based on FDF values.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
 * Draws an inline image at the specified coordinates.
 * @param inlineImage The image to draw.
 * @param x The x coordinate.
 * @param y The y coordinate.
 */
","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:generateNormalAppearance(),55,155,"/**
 * Generates the normal appearance for a polygon annotation.
 * Adjusts rectangle and draws the annotation's outline.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),86,96,"/**
 * Creates a cloudy rectangle based on the provided rectangle.
 * @param rd The rectangle to base the cloudy effect on.
 * @throws IOException if an I/O error occurs.
 */
","* Creates a cloudy border for a rectangular annotation.
     * The rectangle is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     * <p>
     * This can be used for Square and FreeText annotations. However, this does
     * not produce the text and the callout line for FreeTexts.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyEllipseImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyEllipseImpl(double,double,double,double)",743,935,"/**
 * Draws a cloudy ellipse using specified bounds.
 * @param leftOrig Left bound of the ellipse.
 * @param bottomOrig Bottom bound of the ellipse.
 * @param rightOrig Right bound of the ellipse.
 * @param topOrig Top bound of the ellipse.
 */",* Cloudy ellipse implementation.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureFields,org.apache.pdfbox.pdmodel.PDDocument:getSignatureFields(),866,881,"/**
 * Retrieves a list of signature fields from the form.
 * Returns a list of PDSignatureField objects.
 */
","* Retrieve all signature fields from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(),339,348,"/**
 * Refreshes the appearances of terminal fields in the field tree.
 */","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of all fields.
     * 
     * @throws IOException if the appearance streams could not be refreshed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldIterator,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldIterator(),419,422,"/**
 * Returns an iterator to traverse the fields in the document.
 */","* Returns an iterator which walks all fields in the field tree, in order.
     * 
     * @return an iterator which walks all fields in the field tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCacheFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCacheFields(boolean),442,457,"/**
 * Enables/disables field caching. If enabled, populates fieldCache.
 */","* This will tell this form to cache the fields into a Map structure
     * for fast access via the getField method.  The default is false.  You would
     * want this to be false if you were changing the COSDictionary behind the scenes,
     * otherwise setting this to true is acceptable.
     *
     * @param cache A boolean telling if we should cache the fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getField(java.lang.String),475,493,"/**
 * Retrieves a PDF field by its fully qualified name.
 * @param fullyQualifiedName Field's unique identifier.
 * @return The PDF field or null if not found.
 */
","* This will get a field by name, possibly using the cache if setCache is true.
     *
     * @param fullyQualifiedName The name of the field to get.
     * @return The field with that name of null if one was not found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",89,242,"/**
 * Creates a PDColorSpace based on the provided COSBase.
 * @param colorSpace COSBase representing the color space.
 */
","* Creates a color space given a name or array. Abbreviated device color names are not supported
     * here, please replace them first. This method is for PDFBox internal use only, others should
     * use {@link #create(COSBase, PDResources)}.
     *
     * @param colorSpace the color space COS object
     * @param resources the current resources.
     * @param wasDefault if current color space was used by a default color space.
     * @return a new color space.
     * @throws MissingResourceException if the color space is missing in the resources dictionary
     * @throws IOException if the color space is unknown or cannot be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float[]),403,436,"/**
 * Evaluates functions with input, clamps values to [0, 1].
 * @param input input array for function evaluation
 * @return float array of evaluated function values
 */
","* Convert the input values using the functions of the shading dictionary.
     *
     * @param input the input values
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applySoftMaskToPaint,"org.apache.pdfbox.rendering.PageDrawer:applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",604,653,"/**
 * Applies a soft mask to a paint, returning a modified paint.
 * @param parentPaint The original paint to modify.
 * @param softMask The soft mask to apply.
 * @return A new paint with the soft mask applied.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray),76,79,"/**
* Constructs a PDIndexed object from a COSArray.
* @param indexedArray The COSArray containing index information.
*/
","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(),458,462,"/**
* Gets the image. Delegates to getImage(String, int).
* @return BufferedImage object representing the image.
*/","* {@inheritDoc}
     * The returned images are cached via a SoftReference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureImage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",185,190,"/**
* Creates a signature image in the PDF document from a BufferedImage.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.LegacyPDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
 * Processes a PDF page, setting rotation and cropbox.
 * Sets translation matrix based on cropbox position.
 */","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",36,36,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream appearance.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDFormContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPageContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",37,37,"/**
* Stream for writing content to a PDF page. Implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
 * Sets the stroking color, writing operators to the PDF stream.
 * @param color The PDColor object representing the color.
 * @throws IOException if an I/O error occurs.
 */
","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
 * Sets the non-stroking color, writing corresponding PDF operators.
 */","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDFormContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),26,26,"/**
 * Extends PDAbstractContentStream for PDF form content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPageContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),37,37,"/**
* Extends AbstractContentStream, implements Closeable for content writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPatternContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),26,26,"/**
 * Abstract class for content streams in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),36,36,"/**
 * Extends PDAbstractContentStream, implementing Closeable for content stream management.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDFormContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),26,26,"/**
 * Extends PDAbstractContentStream for PDF form content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPageContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),37,37,"/**
* Extends ContentStream, implements Closeable for PDF page content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPatternContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",36,36,"/**
 * Represents the content stream for a PDF appearance. Implements Closeable.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",37,37,"/**
* Extends AbstractContentStream, implements Closeable for content writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",26,26,"/**
 * Represents a content stream in a PDF pattern. Extends PDAbstractContentStream.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Draws an image at specified coordinates.
* @param image The image to draw.
* @param x X coordinate.
* @param y Y coordinate.
*/
","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",26,26,"/**
 * Represents a content stream within a Portable Document Form (PDF).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content stream writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",26,26,"/**
 * Represents a content stream in a PDF pattern, extending PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",37,37,"/**
* Stream for writing content to a PDF page. Implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",26,26,"/**
 * Represents a content stream for PatternContent in PDF.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDFormContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPageContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),37,37,"/**
* Extends AbstractContentStream, implements Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPatternContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayPage,"org.apache.pdfbox.multipdf.Overlay:overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.multipdf.PDFCloneUtility)",455,464,"/**
 * Adds overlay stream to array, creating resources if needed.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(),141,144,"/**
 * Returns the normal appearance as a content stream.
 * Overloads the method for cleaner code.
 */","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to. It will be
     * uncompressed.
     *
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,openNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:openNode(),243,250,"/**
 * Opens the node, incrementing the node count if it's closed.
 */","* This will set this node to be open when it is shown in the viewer. By default, when a new node is created it will
     * be closed. This will do nothing if the node is already open.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,closeNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:closeNode(),256,262,"/**
 * Closes the node if it's currently open, decrementing the count.
 */","* Close this node.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCG,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),2123,2146,"/**
 * Checks if an optional content group is hidden.
 * @param propertyList Property list to check.
 * @return True if hidden, false otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,importPage,org.apache.pdfbox.pdmodel.PDDocument:importPage(org.apache.pdfbox.pdmodel.PDPage),698,716,"/**
 * Imports a page from another PDF page into the current document.
 * @param page The page to import.
 * @return The imported page.
 */
","* This will import and copy the contents from another location. Currently the content stream is
     * stored in a scratch file. The scratch file is associated with the document. If you are adding
     * a page to this document from another document and want to copy the contents to this
     * document's scratch file then use this method otherwise just use the {@link #addPage addPage()}
     * method.
     * <p>
     * Unlike {@link #addPage addPage()}, this method creates a new PDPage object. If your page has
     * annotations, and if these link to pages not in the target document, then the target document
     * might become huge. What you need to do is to delete page references of such annotations. See
     * <a href=""http://stackoverflow.com/a/35477351/535646"">here</a> for how to do this.
     * <p>
     * Inherited (global) resources are ignored because these can contain resources not needed for
     * this page which could bloat your document, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-28"">PDFBOX-28</a> and related issues.
     * If you need them, call <code>importedPage.setResources(page.getResources());</code>
     * <p>
     * This method should only be used to import a page from a loaded document, not from a generated
     * document because these can contain unfinished parts, e.g. font subsetting information.
     *
     * @param page The page to import.
     * @return The page that was imported.
     *
     * @throws IOException If there is an error copying the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createTemplate(org.apache.pdfbox.pdmodel.PDPage),83,89,"/**
 * Creates a PDF template by adding a page to a new document.
 * @param page The page to add to the template.
 */
","* Creates a PDDocument and adds the page parameter to it and keeps this as a template in the PDF template
     * Structure.
     *
     * @param page the page to be added
     * @throws IOException if the document could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean)",121,125,"/**
 * Constructs a PDFPrintable with a default PDFRenderer.
 * @param document The PDF document.
 * @param scaling Scaling factor.
 */
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument),50,53,"/**
 * Creates a PDFPageable from a PDDocument with default settings.
 */","* Creates a new PDFPageable.
     *
     * @param document the document to print",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation)",61,64,"/**
 * Constructs a PDFPageable with default settings.
 * @param document The PDF document.
 * @param orientation Page orientation (portrait/landscape).
 */
","* Creates a new PDFPageable with the given page orientation.
     *
     * @param document the document to print
     * @param orientation page orientation policy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean)",74,77,"/**
 * Constructs a PDFPageable with default page count mode.
 * @param document The PDF document.
 * @param orientation Page orientation.
 * @param showPageBorder Whether to show page border.
 */
","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float)",89,93,"/**
 * Constructs a PDFPageable with default fit width.
 * @param document The PDF document.
 * @param orientation Page orientation.
 * @param showPageBorder Whether to show page border.
 * @param dpi Resolution in dots per inch.
 */
","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",56,103,"/**
 * Embeds a Type1 font into a PDF document using a PFB stream.
 * @param doc The PDF document.
 * @param dict The font dictionary.
 * @param pfbStream PFB stream for the font.
 * @param encoding Font encoding.
 */","* This will load a PFB to be embedded into a document.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param dict The Font dictionary to write to.
     * @param pfbStream The pfb input.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),85,98,"/**
 * Creates a PDFont object from a base font.
 * @param baseFont The base font to use for the PDFont.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFont:loadFontDescriptor(),116,132,"/**
 * Loads a PDFontDescriptor from the dictionary or AFM.
 * @return PDFontDescriptor object or null if not found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",70,114,"/**
 * Embeds a TrueType font into a PDF document, optionally as a subset.
 * @param document PDF document to embed into
 * @param dict COS dictionary for the font
 * @param ttf TrueType font to embed
 * @param embedSubset Whether to embed a subset of the font
 * @throws IOException if embedding is not permitted or unsupported
 */
",* Creates a new TrueType font for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,buildFontFile2,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:buildFontFile2(java.io.InputStream),116,135,"/**
 * Parses a TTF stream, validates embedding, and sets font file data.
 * @param ttfStream TTF input stream to parse.
 * @throws IOException if font embedding is not permitted.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByExtension,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",213,250,"/**
 * Creates a PDImageXObject from a file based on its extension.
 * @param file The image file.
 * @param doc The document to add the image to.
 * @throws IOException If an I/O error occurs.
 */
","* Create a PDImageXObject from an image file. The file format is determined by the file name
     * suffix. The following suffixes are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This is
     * a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByContent,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",273,317,"/**
 * Creates a PDImageXObject from a file based on its content.
 * @param file The file to create the image from.
 * @param doc The document to add the image to.
 * @return PDImageXObject object.
 * @throws IOException if file reading fails.
 */
","* Create a PDImageXObject from an image file. The file format is determined by the file
     * content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This
     * is a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.w3c.dom.Element),63,67,"/**
 * Creates a FDF annotation highlight from a COS element.
 * @param element The COS element representing the annotation.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.w3c.dom.Element),63,67,"/**
 * Creates a FDF squiggly annotation from a PDF element.
 * @param element The PDF element to initialize from.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs a FDFAnnotationStrikeOut from a PDF element.
 * @param element The PDF element to initialize from.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.w3c.dom.Element),63,67,"/**
 * Creates an FDFAnnotationUnderline object from an Element.
 * @param element The Element to create the object from.
 */
","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String)",182,185,"/**
 * Loads a PDF document from a byte array.
 * @param input PDF data as bytes
 * @param password Password for the PDF, if any
 * @return Loaded PDF document
 */
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",273,273,"/**
* Loads a PDF document using the provided parameters.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String)",288,291,"/**
 * Loads a PDF document from a file.
 * @param file The file containing the PDF.
 * @param password Password for the PDF, if any.
 * @return A PDDocument object.
 */
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",311,311,"/**
* Loads a PDF document using the provided file, password, and cache function.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)",327,331,"/**
 * Loads a PDF document from a file, using optional password, keystore, and alias.
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties),111,114,"/**
* Sets the visual signature using properties.
* @param visSignatureProperties Properties for the visual signature.
* @throws IOException If an I/O error occurs.
*/
","* Reads the visual signature from the given visual signature properties
     *
     * @param visSignatureProperties the <code>PDVisibleSigProperties</code> object containing the
     * visual signature
     *
     * @throws IOException when something went wrong during parsing",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveCapHeight,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveCapHeight(org.apache.pdfbox.pdmodel.font.PDFont),965,967,"/**
 * Resolves the cap height of a PDF font using the 'H' glyph.
 * @param font The PDFont object.
 * @return The cap height as a float.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveDescent,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveDescent(org.apache.pdfbox.pdmodel.font.PDFont),974,976,"/**
 * Calculates descent value based on glyph heights of 'y' and 'a'.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigProperties.java,buildSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:buildSignature(),44,49,"/**
 * Builds a visible signature using PDFTemplateCreator.
 * Uses PDVisibleSigBuilder to create the signature.
 */
","* start building of visible signature
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String),936,939,"/**
 * Saves data to a file.
 * @param fileName The name of the file to save to.
 * @throws IOException If an I/O error occurs.
 */
","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDocument,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDocument(org.apache.pdfbox.cos.COSDocument),1293,1348,"/**
 * Writes the PDF document content, handling incremental updates.
 * @param doc The COSDocument to write.
 * @throws IOException if an I/O error occurs.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importOcProperties,org.apache.pdfbox.multipdf.LayerUtility:importOcProperties(org.apache.pdfbox.pdmodel.PDDocument),309,330,"/**
* Imports optional content properties from source document to target.
*/","* Imports OCProperties from source document to target document so hidden layers can still be
     * hidden after import.
     *
     * @param srcDoc The source PDF document that contains the /OCProperties to be copied.
     * @throws IOException If an I/O error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",105,122,"/**
 * Rebuilds font data after GID changes, including mappings and metrics.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,int)",101,105,"/**
 * Constructs a PDVisibleSignDesigner with a document, image stream, and page.
 */","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param imageStream Image as a stream.
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException If we can't read, flush, or can't close stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,int)",150,154,"/**
 * Creates a PDVisibleSignDesigner with a document, image, and page.
 */","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromRandomAccessRead,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead,int)",177,185,"/**
 * Calculates page size from a PDF document.
 * @param documentSource PDF source
 * @param page page number
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDocument:writeXML(java.io.Writer),114,122,"/**
 * Writes XML data to the provided Writer.
 * @param output Writer to write the XML data to.
 * @throws IOException if an I/O error occurs.
 */
","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(org.apache.pdfbox.pdmodel.interactive.annotation.AnnotationFilter),766,789,"/**
 * Retrieves annotations from a page, filtered by the given criteria.
 * @param annotationFilter Filter to apply to annotations
 * @return List of matching PDAnnotation objects
 */
","* This will return a list of the annotations for this page.
     *
     * @param annotationFilter the annotation filter provided allowing to filter out specific annotations
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getReferencedObject(),92,128,"/**
 * Retrieves the referenced COS object, potentially an XObject or annotation.
 * Returns null if the object cannot be determined.
 */","* Gets a higher-level object for the referenced object.
     * Currently this method may return a {@link PDAnnotation},
     * a {@link PDXObject} or <code>null</code>.
     * 
     * @return a higher-level object for the referenced object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getInReplyTo(),188,192,"/**
 * Retrieves the ""In-Reply-To"" annotation.
 * @return PDAnnotation object or null if not present.
 */
","* This will retrieve the annotation to which this one is ""In Reply To"" the actual relationship
     * is specified by the RT entry.
     *
     * @return the other annotation or null if there is none.
     * @throws IOException if there is an error creating the other annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getParent(),94,114,"/**
* Retrieves the parent annotation markup.
* Returns null if the parent annotation is not a PDAnnotationMarkup.
*/
","* This will retrieve the markup annotation which this popup relates to.
     *
     * @return The parent markup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",37,37,"/**
* Stream for writing content to a PDF page. Implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",26,26,"/**
 * Represents a content stream for a pattern in PDF. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:generateNormalAppearance(),55,96,"/**
 * Generates the normal appearance of the annotation.
 * Handles border effects and draws the annotation shape.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyEllipse,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle),135,145,"/**
 * Creates a cloudy ellipse based on the provided rectangle.
 * @param rd The rectangle defining the ellipse's bounds.
 */","* Creates a cloudy border for a Circle annotation.
     * The ellipse is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureDictionaries,org.apache.pdfbox.pdmodel.PDDocument:getSignatureDictionaries(),888,900,"/**
 * Retrieves a list of signature dictionaries from signature fields.
 * @return List of PDSignature objects.
 */
","* Retrieve all signature dictionaries from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:process(),36,61,"/**
 * Refreshes AcroForm appearances and sets NeedAppearances to false.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormLegacyMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1285,1337,"/**
 * Copies fields from srcAcroForm to destAcroForm, handling duplicates.
 * @param cloner PDFCloneUtility instance
 * @param destAcroForm Destination PDF form
 * @param srcAcroForm Source PDF form
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument),128,143,"/**
 * Imports fields from an FDF document into the current document.
 * @param fdf The FDFDocument containing the fields to import.
 */
","* This method will import an entire FDF document into the PDF document
     * that this acroform is part of.
     *
     * @param fdf The FDF document to import.
     *
     * @throws IOException If there is an error doing the import.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float),391,394,"/**
 * Evaluates a function with a single float input.
 * @param inputValue The input value to evaluate.
 * @return Float array containing the result.
 */
","* Convert the input value using the functions of the shading dictionary.
     *
     * @param inputValue the input value
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,evalFunctionAndConvertToRGB,org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:evalFunctionAndConvertToRGB(float[]),160,167,"/**
 * Evaluates a shading function and converts the result to RGB.
 * @param values Input values for the shading function.
 * @return RGB value derived from the evaluated function.
 */
","* Convert color to RGB color value, using function if required, then convert from the shading
     * color space to an RGB value, which is encoded into an integer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getStrokingPaint(),682,687,"/**
 * Creates a stroking paint with soft mask applied.
 * @return Paint object with applied soft mask.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getNonStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getNonStrokingPaint(),697,702,"/**
 * Returns a paint with a soft mask applied.
 * Uses the non-stroking color and graphics state.
 */
","* Returns the non-stroking AWT Paint. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.
     *
     * @return The non-stroking AWT Paint.
     * @throws IOException if the non-stroking AWT Paint could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawBufferedImage,"org.apache.pdfbox.rendering.PageDrawer:drawBufferedImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",1296,1395,"/**
* Draws a BufferedImage with transformations and masks.
* @param pdImage Image object, image transform, and graphics state.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shadingFill,org.apache.pdfbox.rendering.PageDrawer:shadingFill(org.apache.pdfbox.cos.COSName),1486,1541,"/**
 * Fills an area with a shading based on the provided name.
 * @param shadingName Name of the shading to apply.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,setupIndexedColorSpace,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",306,324,"/**
* Sets the color space of an image to an indexed color space.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,processPage,org.apache.pdfbox.text.PDFMarkedContentExtractor:processPage(org.apache.pdfbox.pdmodel.PDPage),42,42,"/**
 * Extends LegacyPDFStreamEngine to extract marked content from PDFs.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPage,org.apache.pdfbox.text.PDFTextStripper:processPage(org.apache.pdfbox.pdmodel.PDPage),340,384,"/**
 * Processes a page, conditionally performing actions based on page number.
 */","* This will process the contents of a page.
     *
     * @param page The page to process.
     *
     * @throws IOException If there is an error processing the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:generateNormalAppearance(),51,326,"/**
 * Generates the normal appearance of the annotation.
 * Adjusts rectangle and draws line with leader lines.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(java.awt.Color),657,688,"/**
 * Sets the stroking color, writing necessary operators to the stream.
 * @param color The PDColor to set.
 * @throws IOException if an I/O error occurs.
 */
","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),26,26,"/**
 * Represents content stream for a Portable Document Form (PDF).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),37,37,"/**
* Extends ContentStream, implements Closeable for writing to PDF pages.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),26,26,"/**
 * Represents a content stream for a pattern in PDF documents.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(java.awt.Color),776,807,"/**
 * Sets the non-stroking color, writing operators and operands.
 * @param color The PDColor to set.
 * @throws IOException if an I/O error occurs.
 */
","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable interface.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),37,37,"/**
* Extends AbstractContentStream, implementing Closeable for PDF content.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),26,26,"/**
 * Extends PDAbstractContentStream for pattern content streams.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setOpacity,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",271,281,"/**
 * Sets the opacity of the content stream.
 * @param contentStream The content stream to modify.
 * @param opacity Opacity value (0.0 to 1.0).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCircles,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCircles(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",219,261,"/**
 * Draws circles within a PDF annotation's content stream.
 * Uses Adobe's strategy for visual enhancement.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawRightArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawRightArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",458,497,"/**
* Draws a right arrow annotation on the content stream.
* Adjusts rectangle, sets graphics state, and draws shapes.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawComment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawComment(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",499,547,"/**
 * Draws a comment annotation with specific styling.
 * Uses contentStream to draw the annotation's appearance.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",36,36,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream management.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",37,37,"/**
* Extends PDAbstractContentStream, implements Closeable for content writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",26,26,"/**
 * Represents a content stream for a PDF pattern. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,appendFormAsLayer,"org.apache.pdfbox.multipdf.LayerUtility:appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",248,287,"/**
 * Appends a form as a new layer to the target page.
 * @param form The form to append.
 * @return The newly created optional content group.
 */
","* Places the given form over the existing content of the indicated page (like an overlay).
     * The form is enveloped in a marked content section to indicate that it's part of an
     * optional content group (OCG), here used as a layer. This optional group is returned and
     * can be enabled and disabled through methods on {@link PDOptionalContentProperties}.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before calling this method to make
     * sure that the graphics state is reset.
     *
     * @param targetPage the target page
     * @param form the form to place
     * @param transform the transformation matrix that controls the placement of your form. You'll
     * need this if your page has a crop box different than the media box, or if these have negative
     * coordinates, or if you want to scale or adjust your form.
     * @param layerName the name for the layer/OCG to produce
     * @return the optional content group that was generated for the form usage
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,processPages,org.apache.pdfbox.multipdf.Overlay:processPages(org.apache.pdfbox.pdmodel.PDDocument),390,429,"/**
* Processes each page of a PDF document, modifying its content.
* @param document The PDF document to process.
* @throws IOException if an I/O error occurs.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shouldSkipAnnotation,org.apache.pdfbox.rendering.PageDrawer:shouldSkipAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1587,1609,"/**
 * Determines if an annotation should be skipped based on its properties.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showForm,org.apache.pdfbox.rendering.PageDrawer:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1640,1654,"/**
 * Displays a PDF form, skipping if hidden. Restores linePath if rendered.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroupOnGraphics,"org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroupOnGraphics(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.awt.Graphics2D)",1669,1738,"/**
* Draws a transparency group onto the provided Graphics2D object.
* @param form The transparency group to draw.
* @param graphics The Graphics2D context to draw on.
*/
","* For advanced users, to extract the transparency group into a separate graphics device.
     * 
     * @param form the transparency group to be extracted
     * @param graphics the target graphics device
     * @throws IOException if the transparency group could not be extracted",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginMarkedContentSequence,"org.apache.pdfbox.rendering.PageDrawer:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",2088,2104,"/**
 * Starts a marked content sequence, handling hidden OCGs.
 * @param tag COSName tag for the sequence.
 * @param properties Dictionary with sequence properties.
 */
",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOrVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenOrVisibilityExpression(org.apache.pdfbox.cos.COSArray),2240,2267,"/**
* Checks if a visibility expression array indicates hidden content.
* Recursively checks nested arrays/dictionaries for hidden state.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPrintable,org.apache.pdfbox.printing.PDFPageable:getPrintable(int),235,246,"/**
 * Creates a PDFPrintable object for the specified page index.
 * @param i page index; throws IndexOutOfBoundsException if invalid.
 * @return PDFPrintable object for the given page.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float)",105,108,"/**
 * Constructs a PDFPrintable with default pageable.
 * @param document PDDocument, Scaling, showPageBorder, dpi
 */
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",170,180,"/**
 * Creates a PDType1Font object from a PFB input stream.
 * @param doc The document.
 * @param pfbIn PFB input stream.
 * @param encoding Font encoding.
 */
","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @param encoding encoding to be used for the font
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),65,68,"/**
 * Initializes the font, calling superclass constructor & assigns glyph list.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.cos.COSDictionary),105,114,"/**
 * Initializes a PDFont with a COSDictionary.
 * @param fontDictionary The COSDictionary containing font data.
 */
","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",71,96,"/**
 * Embeds a Type 2 font within a PDF document.
 * @param document PDF document, dictionary, font, embed flag, parent font, vertical flag
 * @throws IOException if an I/O error occurs
 */
","* Creates a new TrueType font embedder for the given TTF as a PDCIDFontType2.
     *
     * @param document parent document
     * @param dict font dictionary
     * @param ttf True Type Font
     * @param parent parent Type 0 font
     * @throws IOException if the TTF could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",54,71,"/**
 * Creates a PDTrueTypeFontEmbedder, embedding a TrueType font.
 * @param document The document to embed in.
 * @param dict The COS dictionary.
 * @param ttf The TrueType font.
 * @param encoding The font encoding.
 */
","* Creates a new TrueType font embedder for the given TTF as a PDTrueTypeFont.
     *
     * @param document The parent document
     * @param dict Font dictionary
     * @param ttf TrueType font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @throws IOException if the TTF could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)",187,190,"/**
 * Creates a PDImageXObject from an image file.
 * @param imagePath Path to the image file.
 * @param doc The document to associate with the image.
 * @return PDImageXObject created from the file.
 */
","* Create a PDImageXObject from an image file, see {@link #createFromFileByExtension(File, PDDocument)} for
     * more details.
     *
     * @param imagePath the image file path.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject, or if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.w3c.dom.Element),74,230,"/**
 * Parses an FDF XML element to populate the dictionary.
 * @param fdfXML The root XML element representing the FDF.
 */
","* This will create an FDF dictionary from an XFDF XML document.
     *
     * @param fdfXML The XML document that contains the XFDF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(byte[]),165,168,"/**
* Loads a PDF document from a byte array.
* @param input byte array containing PDF data
* @return PDDocument object representing the PDF
*/
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,"org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File,java.lang.String)",230,234,"/**
 * Loads a PDF document from a file, using the given password.
 * @param file The file to load.
 * @param password Password for the PDF document.
 * @return A PDDocument object.
 */
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File, String)} instead",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(java.io.File),252,255,"/**
* Loads a PDF document from a file.
* @param file The file containing the PDF document.
* @return A PDDocument object representing the PDF.
*/
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",165,228,"/**
 * Imports a page as a form XObject, copying resources and transforming it.
 * @param sourceDoc Source PDF document.
 * @param page The page to import.
 * @return A PDFormXObject representing the imported page.
 */
","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param page the page in the source PDF document to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.io.InputStream,int)",83,91,"/**
 * Constructs a PDVisibleSignDesigner with image and document source.
 * @param documentSource RandomAccessRead for document
 * @param imageStream Input stream for the visible signature image
 * @param page Page number (1-based)
 */
","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param imageStream Image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.awt.image.BufferedImage,int)",133,141,"/**
 * Constructs a PDVisibleSignDesigner with image and document source.
 * @param documentSource Source for document page size.
 * @param image Visible signature image.
 * @param page Page number.
 */
","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.Writer),242,255,"/**
 * Writes XFDF data to the provided Writer, closing it afterward.
 */","* This will save the document to an output stream and close the stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(),752,755,"/**
 * Retrieves all annotations.
 * @return A list of all annotations.
 */","* This will return a list of the annotations for this page.
     *
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:generateNormalAppearance(),54,119,"/**
 * Generates the normal appearance for a circle annotation.
 * Handles cloudy borders and draws the circle outline.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getLastSignatureDictionary,org.apache.pdfbox.pdmodel.PDDocument:getLastSignatureDictionary(),850,859,"/**
 * Returns the last signature dictionary from the list.
 * Returns null if the list is empty.
 */
","* This will return the last signature from the field tree. Note that this may not be the
     * last in time when empty signature fields are created first but signed after other fields.
     * 
     * @return the last signature as <code>PDSignatureField</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncrementalForExternalSigning,org.apache.pdfbox.pdmodel.PDDocument:saveIncrementalForExternalSigning(java.io.OutputStream),1190,1224,"/**
 * Saves incremental data to output stream for external signing.
 * @param output OutputStream to write the incremental data to.
 * @return SigningSupport object for subsequent signing operations.
 */
","* Save PDF incrementally without closing for external signature creation scenario. The general sequence is:
     * 
     * <pre>
     *    PDDocument pdDocument = ...;
     *    OutputStream outputStream = ...;
     *    SignatureOptions signatureOptions = ...; // options to specify fine tuned signature options or null for defaults
     *    PDSignature pdSignature = ...;
     *
     *    // add signature parameters to be used when creating signature dictionary
     *    pdDocument.addSignature(pdSignature, signatureOptions);
     *    // prepare PDF for signing and obtain helper class to be used
     *    ExternalSigningSupport externalSigningSupport = pdDocument.saveIncrementalForExternalSigning(outputStream);
     *    // get data to be signed
     *    InputStream dataToBeSigned = externalSigningSupport.getContent();
     *    // invoke signature service
     *    byte[] signature = sign(dataToBeSigned);
     *    // set resulted CMS signature
     *    externalSigningSupport.setSignature(signature);
     *
     *    // last step is to close the document
     *    pdDocument.close();
     * </pre>
     * <p>
     * Note that after calling this method, only {@code close()} method may invoked for {@code PDDocument} instance and
     * only AFTER {@link ExternalSigningSupport} instance is used.
     * </p>
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write the final PDF. It will be closed when the document is closed. It <i><b>must
     * never</b></i> point to the source file or that one will be harmed!
     * @return instance to be used for external signing and setting CMS signature
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream or signature options were
     * not set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormJoinFieldsMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1270,1274,"/**
 * Joins fields from srcAcroForm to destAcroForm using legacy mode.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,addLinePoints,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:addLinePoints(org.apache.pdfbox.pdmodel.graphics.shading.Line,int[][])",125,131,"/**
 * Adds points of a line to the array, using line's color.
 * @param line The line to process.
 * @param array The array to add points to.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,strokePath,org.apache.pdfbox.rendering.PageDrawer:strokePath(),793,805,"/**
 * Draws the line path to the graphics context, resets the path.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawGlyph,"org.apache.pdfbox.rendering.PageDrawer:drawGlyph(java.awt.geom.GeneralPath,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",525,575,"/**
 * Draws a glyph to the PDF graphics context, applying transformations.
 * @param path Glyph path, font, code, displacement, and transform.
 */
","* Renders a glyph.
     * 
     * @param path the GeneralPath for the glyph
     * @param font the font
     * @param code character code
     * @param displacement the glyph's displacement (advance)
     * @param at the transformation
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillPath,org.apache.pdfbox.rendering.PageDrawer:fillPath(int),807,860,"/**
 * Fills the path with the current paint, disabling antialiasing if rectangular.
 * @param windingRule Sets the winding rule for the path.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawImage,org.apache.pdfbox.rendering.PageDrawer:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage),1074,1262,"/**
 * Draws a PDF image, handling optional content and stencils.
 * @param pdImage The image to draw.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildIndexImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",213,254,"/**
 * Builds a PDImageXObject from indexed image state, handling PLTE validation.
 * @return PDImageXObject or null if PLTE is invalid or unsupported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPages,org.apache.pdfbox.text.PDFTextStripper:processPages(org.apache.pdfbox.pdmodel.PDPageTree),263,308,"/**
 * Processes each page in the provided page tree, extracting content.
 * @param pages The PDPageTree containing pages to process.
 */","* This will process all of the pages and the text that is in them.
     *
     * @param pages The pages object in the document.
     *
     * @throws IOException If there is an error parsing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(java.awt.Color),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(java.awt.Color),26,26,"/**
 * Represents a content stream for a PDF form. Extends PDAbstractContentStream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(java.awt.Color),37,37,"/**
* Extends AbstractContentStream, implements Closeable for content writing.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(java.awt.Color),26,26,"/**
 * Extends PDAbstractContentStream for content streams in PDF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:generateNormalAppearance(),47,132,"/**
 * Generates the normal appearance for an ink annotation.
 * Adjusts rectangle and draws ink paths with specified color/style.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:generateNormalAppearance(),46,143,"/**
 * Generates the normal appearance for a strikeout annotation.
 * Adjusts rectangle and draws lines based on annotation data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:generateNormalAppearance(),46,142,"/**
 * Generates the normal appearance for the annotation.
 * Adjusts rectangle and sets appearance stream content.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(java.awt.Color),36,36,"/**
* Extends PDAbstractContentStream, implements Closeable.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(java.awt.Color),26,26,"/**
* Extends PDAbstractContentStream for PDF form content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(java.awt.Color),37,37,"/**
* Extends PDAbstractContentStream, implementing Closeable for content stream operations.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(java.awt.Color),26,26,"/**
* Extends PDAbstractContentStream for pattern content streams.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:generateNormalAppearance(),49,100,"/**
 * Generates the normal appearance of the annotation.
 * Sets colors, opacity, and draws the annotation's outline.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,initializeAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",369,434,"/**
 * Initializes appearance content based on characteristics.
 * Writes to stream, handles background, border, and dividers.
 */","* Initialize the content of the appearance stream.
     * 
     * Get settings like border style, border width and colors to be used to draw a rectangle and background color 
     * around the widget
     * 
     * @param widget the field widget
     * @param appearanceCharacteristics the appearance characteristics dictionary from the widget or
     * null
     * @param appearanceStream the appearance stream to be used
     * @throws IOException in case we can't write to the appearance stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,writeTo,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:writeTo(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",290,303,"/**
 * Writes content to the appearance stream, using provided font size.
 */","* Write font name, font size and color from the /DA string to the given content stream.
     *
     * @param contents The content stream.
     * @param zeroFontSize The calculated font size to use if the /DA string has a size 0
     * (autosize). Otherwise the size from the /DA string is used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:generateNormalAppearance(),53,212,"/**
 * Generates normal appearance for annotation, adjusting rectangle.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:generateNormalAppearance(),57,169,"/**
 * Generates the normal appearance of the annotation.
 * Adjusts rectangle and draws appearance stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showAnnotation,org.apache.pdfbox.rendering.PageDrawer:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1543,1585,"/**
 * Displays an annotation, handling rotation and transparency issues.
 * @param annotation The annotation to display.
 * @throws IOException if an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroup,org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),1656,1660,"/**
 * Displays a transparency group on the graphics context.
 * @param form The transparency group to display.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean)",90,93,"/**
* Constructs a PDFPrintable with default rasterization setting.
* @param document The PDF document to print.
* @param scaling The scaling factor.
* @param showPageBorder Whether to show the page border.
*/
","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",157,160,"/**
 * Creates a PDType1Font from a PFB input stream.
 * @param doc The document this font belongs to.
 * @param pfbIn Input stream containing the PFB data.
 */
","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),105,148,"/**
 * Initializes a Type1 font, handling encoding and fallback fonts.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,78,"/**
 * Initializes a PDSimpleFont with a COSDictionary.
 * @param fontDictionary COSDictionary containing font data
 */
","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.cos.COSDictionary),71,100,"/**
 * Creates a PDType0Font from a COSDictionary.
 * @param fontDictionary COSDictionary containing font data
 * @throws IOException if font data is missing or invalid
 */
","* Constructor for reading a Type0 font from a PDF file.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @throws IOException if the descendant font is missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)",114,142,"/**
 * Creates a PDType0Font from a TrueTypeFont, embedding or closing it.
 * @param embedSubset Whether to embed a subset of the font.
 */","* Private. Creates a new PDType0Font font for embedding.
     *
     * @param document
     * @param ttf
     * @param embedSubset
     * @param closeTTF whether to close the ttf parameter after embedding. Must be true when the ttf
     * parameter was created in the load() method, false when the ttf parameter was passed to the
     * load() method.
     * @param vertical whether to enable vertical substitutions.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",156,175,"/**
 * Creates a PDTrueTypeFont from a TrueTypeFont and encoding.
 * @param closeTTF Closes the TTF data source if true.
 */",* Creates a new TrueType font for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.w3c.dom.Element),60,65,"/**
 * Constructs a FDFCatalog from an Element.
 * @param element The Element to create the catalog from.
 */
","* This will create an FDF catalog from an XFDF XML document.
     *
     * @param element The XML document that contains the XFDF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDF,org.apache.pdfbox.multipdf.Overlay:loadPDF(java.lang.String),274,277,"/**
 * Loads a PDF document from the given file name.
 * @param pdfName Path to the PDF file.
 * @return PDFDocument object.
 * @throws IOException If an I/O error occurs.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,optimizedMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:optimizedMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",377,433,"/**
 * Merges PDF sources into a new document, cloning pages and resources.
 * @param sources Iterable of PDF sources (File or RandomAccessRead)
 * @param destinationFileName Output file name or stream.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File),211,215,"/**
* Loads a PDF document from a file.
* @param file The file containing the PDF document.
* @return A PDDocument object representing the PDF.
*/
","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File)} instead",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromFile,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromFile(java.lang.String,int)",168,175,"/**
 * Calculates page size from PDF file.
 * @param filename PDF file path
 * @param page Page number (1-based)
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)",144,148,"/**
* Imports a page from a document as a form XObject.
* @param sourceDoc Source document.
* @param pageNumber Page number to import.
* @return Form XObject representing the page.
*/
","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param pageNumber the 0-based page number of the page to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.File),214,221,"/**
 * Saves XFDF data to a file.
 * @param fileName File to save XFDF data to.
 * @throws IOException if an I/O error occurs.
 */
","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateStructParentEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",1504,1523,"/**
* Adjusts struct parent entries for page and its annotations.
* @param page The page to update.
* @param structParentOffset Offset to add to struct parent values.
*/","* Update the StructParents and StructParent values in a PDPage.
     *
     * @param page the new page
     * @param structParentOffset the offset which should be applied",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneStructureTree,org.apache.pdfbox.multipdf.Splitter:cloneStructureTree(org.apache.pdfbox.pdmodel.PDDocument),194,250,"/**
 * Clones the structure tree from the source to the destination document.
 */","* Clone the structure tree from the source to the current destination document. This must be
     * called after all pages are processed.
     *
     * @param destinationDocument
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processAnnotations,org.apache.pdfbox.multipdf.Splitter:processAnnotations(org.apache.pdfbox.pdmodel.PDPage),820,965,"/**
 * Processes annotations on the imported page, cloning and fixing references.
 */","* Clone all annotations because of changes possibly made, and because the structure tree is
     * cloned.
     *
     * @param imported
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",317,474,"/**
 * Adds a signature to the document.
 * @param sigObject Signature object to add.
 * @param signatureInterface Signature interface implementation.
 * @param options Signature options.
 */
","* This will add a signature to the document. If the 0-based page number in the options
     * parameter is smaller than 0 or larger than max, the nearest valid page number will be used
     * (i.e. 0 or max) and no exception will be thrown.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignature,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",114,129,"/**
 * Creates a PDF signature on a page with a given signer name.
 * @param pdSignatureField Signature field to attach signature to.
 * @param page The page to add the signature to.
 * @param signerName Signer's name (optional).
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,buildPagesWidgetsMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:buildPagesWidgetsMap(java.util.List,org.apache.pdfbox.pdmodel.PDPageTree)",773,815,"/**
 * Populates map of pages to annotations, handling missing page refs.
 * @return Map of pages to annotations.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeAcroForm,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",1222,1259,"/**
 * Merges AcroForms from source to destination catalog.
 * Handles different merge modes and potential IOException.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,calcPixelTable,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:calcPixelTable(java.util.List,int[][],java.awt.Rectangle)",82,123,"/**
 * Processes triangles, adding points based on their degree.
 * Handles 2-degree triangles differently than others.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showFontGlyph,"org.apache.pdfbox.rendering.PageDrawer:showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",495,513,"/**
 * Draws a glyph for a given character code using cached paths.
 * @param textRenderingMatrix Transformation matrix for glyph rendering.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillAndStrokePath,org.apache.pdfbox.rendering.PageDrawer:fillAndStrokePath(int),948,956,"/**
 * Fills and strokes the path, preserving the original linePath.
 */","* Fills and then strokes the path.
     *
     * @param windingRule The winding rule this path will use.
     * @throws IOException If there is an IO error while filling the path.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPng,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",134,204,"/**
 * Parses PNG IHDR chunk to extract image dimensions and properties.
 * @return Image object if successful, null otherwise.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeText,"org.apache.pdfbox.text.PDFTextStripper:writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)",239,254,"/**
 * Writes document content to the specified output stream.
 * @param doc The document to write.
 * @param outputStream The output stream to write to.
 */
","* This will take a PDDocument and write the text of that document to the print writer.
     *
     * @param doc The document to get the data from.
     * @param outputStream The location to put the text.
     *
     * @throws IOException If the doc is in an invalid state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",487,640,"/**
 * Inserts generated appearance data into the stream.
 * @param widget The annotation widget.
 * @param appearanceStream Appearance stream.
 * @param output Output stream to write to.
 */",* Generate and insert text content and clipping around it.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawPage,"org.apache.pdfbox.rendering.PageDrawer:drawPage(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.common.PDRectangle)",268,294,"/**
 * Draws a page onto the provided Graphics2D context.
 * @param g Graphics2D object to draw on.
 * @param pageSize Rectangle representing the page size.
 */
","* Draws the page to the requested context.
     * 
     * @param g The graphics context to draw onto.
     * @param pageSize The size of the page to draw.
     * @throws IOException If there is an IO error while drawing the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling)",78,81,"/**
 * Constructs a PDFPrintable with default page interaction.
 * @param document The PDF document to print.
 * @param scaling The scaling factor for the document.
 */
","* Creates a new PDFPrintable with the given page scaling.
     *
     * @param document the document to print
     * @param scaling page scaling policy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getDefaultFont,org.apache.pdfbox.contentstream.PDFStreamEngine:getDefaultFont(),137,144,"/**
 * Returns the default PDF font (Helvetica).
 * Lazily initializes if not already set.
 */
","* Provide standard 14 Helvetica font as default if there isn't any font available.  
     * @return the default font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,verifyOrCreateDefaults,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:verifyOrCreateDefaults(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),70,114,"/**
 * Ensures default appearance and resources are set on the form.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFont,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFont(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),246,258,"/**
 * Retrieves a font box font by base name, caching if needed.
 * @param baseName The base name of the font.
 * @return The FontBox font object.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDefaultFont,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDefaultFont(),82,89,"/**
 * Returns the default PDF font (Helvetica). Lazily initialized.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.cos.COSDictionary),103,152,"/**
 * Creates a TrueType font from a COSDictionary, parsing or mapping.
 * @param fontDictionary Font dictionary from the PDF.
 * @throws IOException if an I/O error occurs during parsing.
 */
","* Creates a new TrueType font from a Font dictionary.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1CFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,140,"/**
 * Creates a PDType1CFont from a COSDictionary, parsing embedded fonts.
 * @param fontDictionary Font dictionary containing font information.
 * @throws IOException if there's an I/O error reading the font.
 */
","* Constructor.
     * 
     * @param fontDictionary the corresponding dictionary
     * @throws IOException it something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),189,282,"/**
 * Creates a Type1 font from a font dictionary.
 * @param fontDictionary Font dictionary containing font data.
 * @throws IOException if an I/O error occurs while reading the font.
 */
","* Creates a Type 1 font from a Font dictionary in a PDF.
     * 
     * @param fontDictionary font dictionary.
     * @throws IOException if there was an error initializing the font.
     * @throws IllegalArgumentException if /FontFile3 was used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",82,87,"/**
 * Creates a PDType3Font object from a COSDictionary.
 * @param fontDictionary Font dictionary.
 * @param resourceCache Resource cache.
 */
","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param resourceCache Resource cache, can be null.
     * 
     * @throws IOException if the font could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,boolean,boolean)",199,204,"/**
 * Loads a PDType0Font from a RandomAccessRead.
 * @param doc PDDocument, read, embedSubset, vertical flags
 * @return PDType0Font object
 */
","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead source of a TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @param vertical whether to enable vertical substitutions.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",216,220,"/**
 * Creates a PDType0Font from a TrueTypeFont, embedding a subset if specified.
 * @param doc PDDocument to associate with the font.
 * @param ttf TrueTypeFont to use.
 * @param embedSubset Whether to embed a subset of the font.
 */
","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",272,276,"/**
 * Creates a PDType0Font from a TrueTypeFont.
 * @param doc PDDocument to associate with the font
 * @param ttf TrueTypeFont to use
 * @param embedSubset Whether to embed a font subset
 * @return PDType0Font object
 */
","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",227,231,"/**
 * Creates a PDTrueTypeFont instance.
 * @param doc PDDocument, the document.
 * @param ttf TrueTypeFont, the font.
 * @param encoding Encoding, the font encoding.
 * @return PDTrueTypeFont object.
 */
","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.
     * </p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A true type font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",247,251,"/**
 * Loads a TrueType font from a RandomAccessRead.
 * @param doc PDDocument, encoding Encoding, read stream
 * @return PDTrueTypeFont object
 */
","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.
     * </p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead the source of the TTF.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.w3c.dom.Document),94,105,"/**
 * Creates an FDF document from a Document object.
 * @param doc The Document object to create from.
 * @throws IOException if the document root is not 'xfdf'.
 */
","* This will create an FDF document from an XFDF XML document.
     *
     * @param doc The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDFs,org.apache.pdfbox.multipdf.Overlay:loadPDFs(),205,272,"/**
 * Loads PDF documents from filenames into member variables.
 * Throws IllegalArgumentException if input PDF is missing.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.io.InputStream,int)",65,73,"/**
 * Creates a PDVisibleSignDesigner with filename, image stream, and page.
 */","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param imageStream image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.awt.image.BufferedImage,int)",115,123,"/**
 * Constructs a PDVisibleSignDesigner with a filename, image, and page.
 */","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.lang.String),230,233,"/**
 * Saves XFDF data to a file.
 * @param fileName The name of the file to save to.
 */
","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPage,org.apache.pdfbox.multipdf.Splitter:processPage(org.apache.pdfbox.pdmodel.PDPage),792,811,"/**
* Imports a page into the destination document, handling resources and annotations.
*/","* Interface to start processing a new page.
     *
     * @param page The page that is about to get processed.
     *
     * @throws IOException If there is an error creating the new document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",278,281,"/**
* Adds a signature, delegating to a more detailed method.
* @param sigObject The signature object to add.
* @param options Signature options.
*/
","* Add parameters of signature to be created externally. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",296,299,"/**
* Adds a signature using default options.
* @param sigObject The signature object to add.
* @param signatureInterface Signature interface implementation.
*/
","* Add a signature to be created using the instance of given interface.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     * 
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(java.util.List,boolean)",229,317,"/**
 * Flattens form fields, handling appearances and dynamic forms.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,appendDocument,"org.apache.pdfbox.multipdf.PDFMergerUtility:appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",510,847,"/**
* Appends source PDF document to the destination PDF document.
* Handles metadata, structure tree, and other merging tasks.
*/
","* append all pages from source to destination.
     *
     * @param destination the document to receive the pages
     * @param source the document originating the new pages
     *
     * @throws IOException If there is an error accessing data from either
     * document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPNGImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])",113,123,"/**
* Converts PNG image data to a PDImageXObject.
* @param doc PDDocument to add the image to.
* @param imageData PNG image data as bytes.
* @return PDImageXObject or null if conversion fails.
*/
","* Try to convert a PNG into a PDImageXObject. If for any reason the PNG can not
     * be converted, null is returned.
     * <p>
     * This usually means the PNG structure is damaged (CRC error, etc.) or it uses
     * some features which can not be mapped to PDF.
     *
     * @param doc       the document to put the image in
     * @param imageData the byte data of the PNG
     * @return null or the PDImageXObject built from the png",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getText,org.apache.pdfbox.text.PDFTextStripper:getText(org.apache.pdfbox.pdmodel.PDDocument),216,221,"/**
 * Extracts text from a PDF document.
 * @param doc The PDF document to extract text from.
 * @return The extracted text as a String.
 */
","* This will return the text of a document. See writeText. <br>
     * NOTE: The document must not be encrypted when coming into this method.
     *
     * <p>IMPORTANT: By default, text extraction is done in the same sequence as the text in the PDF page content stream.
     * PDF is a graphic format, not a text format, and unlike HTML, it has no requirements that text one on page
     * be rendered in a certain order. The order is the one that was determined by the software that created the
     * PDF. To get text sorted from left to right and top to botton, use {@link #setSortByPosition(boolean)}.
     * 
     * @param doc The document to get the text from.
     * @return The text of the PDF document.
     * @throws IOException if the doc state is invalid or it is encrypted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",260,348,"/**
 * Renders a PDF page as a BufferedImage.
 * @param pageIndex page index
 * @param scale rendering scale
 * @param imageType desired BufferedImage type
 * @param destination rendering destination
 * @return BufferedImage representation of the page
 */","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @param destination controlling visibility of optional content groups
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)",423,441,"/**
 * Renders a PDF page to graphics at specified scale and destination.
 * @param pageIndex Index of the page to render.
 */","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Known problems:
     * <ul>
     * <li>rendering of PDF files with transparencies is not supported on Ubuntu, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4581"">PDFBOX-4581</a> and
     * <a href=""https://bugs.openjdk.java.net/browse/JDK-6689349"">JDK-6689349</a>. Rendering will
     * not abort, but the pages will be rendered incorrectly.</li>
     * <li>Clipping the Graphics2D will not work properly, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4583"">PDFBOX-4583</a>.</li>
     * </ul>
     * If you encounter these problems, then you should render into an image by using the
     * {@link #renderImage(int) renderImage} methods.
     * 
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @param destination controlling visibility of optional content groups
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,70,"/**
 * Initializes a PDFPrintable with default scaling.
 * @param document The PDF document to print.
 */
","* Creates a new PDFPrintable.
     *
     * @param document the document to print",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showText,org.apache.pdfbox.contentstream.PDFStreamEngine:showText(byte[]),735,816,"/**
* Displays text encoded in a byte array, applying font and text state parameters.
* @param string byte array containing the text to display
*/
","* Process text from the PDF Stream. You should override this method if you want to
     * perform an action when encoded text is being processed.
     *
     * @param string the encoded text
     * @throws IOException if there is an error processing the string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:process(),46,60,"/**
 * Retrieves and processes the AcroForm from the document.
 * Uses null parameter to prevent recursive calls.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphPath,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphPath(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName,java.lang.String)",273,306,"/**
 * Retrieves the path for a glyph, handling special cases.
 * Returns a default path if the glyph isn't found.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDMMType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDMMType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),37,40,"/**
 * Constructs a PDMMType1Font from a COSDictionary.
 * @param fontDictionary The COSDictionary representing the font.
 */
","* Creates an MMType1Font from a Font dictionary in a PDF.
     *
     * @param fontDictionary font dictionary
     * 
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Constructs a PDType3Font with a COSDictionary.
 * @param fontDictionary The COSDictionary for the font.
 * @throws IOException If an I/O error occurs.
 */
","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",153,156,"/**
* Loads a PDType0Font from a file.
* @param doc The document to load into.
* @param file The file to load from.
* @return The loaded PDType0Font.
*/
","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",182,186,"/**
 * Loads a PDType0Font from an input stream.
 * @param doc The document.
 * @param input Input stream to load from.
 * @param embedSubset Whether to embed a subset.
 * @return The loaded PDType0Font.
 */
","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when
     * creating a font for AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",230,233,"/**
 * Loads a vertical font from a file.
 * @param doc The document.
 * @param file The file to load from.
 * @return The loaded font.
 */
","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",243,246,"/**
 * Loads a vertical font from an input stream.
 * @param doc The document.
 * @param input Input stream for the font data.
 * @return The loaded PDType0Font object.
 */
","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",257,261,"/**
 * Loads a vertical PDType0Font from an input stream.
 * @param input Input stream containing the font data.
 * @param embedSubset Whether to embed a subset of the font.
 * @return The loaded PDType0Font.
 */
","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",189,193,"/**
 * Loads a TrueType font from a file.
 * @param doc The document.
 * @param file The file to load.
 * @param encoding The encoding to use.
 * @return A PDTrueTypeFont object.
 */
","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.</p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TTF file.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",207,211,"/**
 * Loads a TrueType font from an input stream.
 * @param doc The document. @param input Input stream. @param encoding Encoding.
 * @return PDTrueTypeFont object.
 */
","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.</p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TTF file stream
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.InputStream),149,152,"/**
 * Loads an XFDF document from an input stream.
 * @param input Input stream containing the XFDF data.
 * @return FDFDocument object representing the loaded document.
 */
","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlay,org.apache.pdfbox.multipdf.Overlay:overlay(java.util.Map),115,133,"/**
* Processes PDF overlays and pages, returning the modified document.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayDocuments,org.apache.pdfbox.multipdf.Overlay:overlayDocuments(java.util.Map),151,162,"/**
 * Processes PDF documents and overlays, returning the modified document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPages,org.apache.pdfbox.multipdf.Splitter:processPages(),676,697,"/**
 * Processes pages within a specified range.
 * Iterates through pages, processing those between start/end pages.
 */","* Interface method to handle the start of the page processing.
     *
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),259,262,"/**
* Adds a signature using default options.
* @param sigObject The signature object to add.
* @throws IOException if an I/O error occurs.
*/
","* Add parameters of signature to be created externally using default signature options. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(),192,208,"/**
 * Flattens the form, merging fields into a single PDF.
 * Does nothing for dynamic XFA forms.
 */
","* This will flatten all form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * <p>
     * The appearances for the form fields widgets will <strong>not</strong> be generated
     * </p>
     * 
     * @throws IOException if something went wrong flattening the fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,legacyMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:legacyMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",446,499,"/**
 * Merges multiple PDF sources into a single document.
 * @param sources Iterable of PDF sources to merge.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String,org.apache.pdfbox.pdmodel.graphics.image.CustomFactory)",362,410,"/**
 * Creates a PDImageXObject from a byte array, supporting various image types.
 * @param document The document to add the image to.
 * @param byteArray Image data as a byte array.
 * @param name Image name.
 * @param customFactory Custom image factory, if available.
 * @return PDImageXObject created from the image data.
 * @throws IOException If an I/O error occurs.
 */
","* Create a PDImageXObject from an image byte array. This overloaded version allows providing 
     * a custom factory to handle specific image formats, such as BMP and GIF, or to act as a 
     * fallback strategy when the default converters (e.g., for PNG or TIFF) fail.
     *
     * @param document the document that shall use this PDImageXObject.
     * @param byteArray bytes from an image file.
     * @param name name of image file for exception messages, can be null.
     * @param customFactory optional factory used to handle BMP, GIF, or fallback cases 
     *                       (e.g., for PNG or TIFF). If {@code null}, this method delegates to
     *                       {@link #createFromByteArray(PDDocument, byte[], String)}.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType)",244,249,"/**
 * Renders an image from a page.
 * @param pageIndex Page index to render.
 * @param scale Render scale.
 * @param imageType Image type.
 * @return BufferedImage object.
 */
","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,print,"org.apache.pdfbox.printing.PDFPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int)",199,319,"/**
 * Draws a PDF page to the specified graphics context.
 * @param graphics Graphics context to draw to.
 * @param pageFormat Page format information.
 * @param pageIndex Index of the page to draw.
 * @return PAGE_EXISTS if successful, NO_SUCH_PAGE otherwise.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float)",394,399,"/**
 * Renders a page to graphics, using default destination if none provided.
 * @param pageIndex Page index to render.
 * @param graphics Graphics context to draw to.
 * @param scaleX X scale factor.
 * @param scaleY Y scale factor.
 */
","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextString,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextString(byte[]),654,657,"/**
 * Displays a byte array as text, using the showText method.
 * @param string Byte array to display.
 * @throws IOException If an I/O error occurs.
 */
","* Called when a string of text is to be shown.
     *
     * @param string the encoded text
     * @throws IOException if there was an error showing the text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextStrings,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextStrings(org.apache.pdfbox.cos.COSArray),665,714,"/**
 * Displays text strings from a COS array, applying text adjustments.
 * @param array COSArray containing text strings or TJ values.
 */
","* Called when a string of text with spacing adjustments is to be shown.
     *
     * @param array array of encoded text strings and adjustments
     * @throws IOException if there was an error showing the text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawHelp,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawHelp(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",278,318,"/**
 * Draws help annotation content, including a circle and question mark.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",320,360,"/**
 * Draws a paragraph annotation with specific appearance settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNewParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",362,388,"/**
 * Draws a new paragraph annotation with triangle and ""NP"" text.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCrossHairs,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",390,414,"/**
 * Draws crosshairs within an annotation's content stream.
 * Uses Symbol font and scales/translates the content.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawZapf,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawZapf(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,int,int,java.lang.String)",592,615,"/**
 * Draws a Zapf Dingbats glyph onto the annotation's content stream.
 * @param annotation The annotation to draw on.
 * @param contentStream The content stream to draw to.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",124,190,"/**
 * Creates a PDFont object based on the provided dictionary.
 * @param dictionary Font dictionary
 * @param resourceCache Resource cache
 * @return PDFont object
 */
","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @param resourceCache resource cache, only useful for type 3 fonts, can be null
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",167,170,"/**
 * Loads a PDType0Font from an input stream.
 * @param doc The document.
 * @param input Input stream containing font data.
 * @return The loaded PDType0Font.
 */
","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.lang.String),120,123,"/**
 * Loads an XFDF document from the specified file.
 * @param filename Path to the XFDF file.
 * @return FDFDocument object.
 */
","* This will load a document from a file.
     *
     * @param filename The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.File),134,137,"/**
 * Loads an XFDF document from the given file.
 * @param file The file containing the XFDF document.
 * @return The loaded FDFDocument object.
 */
","* This will load a document from a file.
     *
     * @param file The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,split,org.apache.pdfbox.multipdf.Splitter:split(org.apache.pdfbox.pdmodel.PDDocument),128,152,"/**
* Splits a PDDocument into multiple PDDocuments.
* @param document The document to split.
* @return List of PDDocuments created by the split.
*/
","* This will take a document and split into several other documents.
     *
     * @param document The document to split.
     *
     * @return A list of all the split documents. These should all be saved before closing any
     * documents, including the source document. Any further operations should be made after
     * reloading them, to avoid problems due to resource sharing. For the same reason, they should
     * not be saved with encryption.
     *
     * @throws IOException If there is an IOError",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",364,373,"/**
* Merges documents based on the specified merge mode.
* Uses streamCacheCreateFunction and compressParameters.
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",341,344,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document The document to add the image to.
 * @param byteArray Image data as bytes.
 * @param name Image name.
 * @return PDImageXObject object.
 */
","* Create a PDImageXObject from bytes of an image file. The file format is determined by the
     * file content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG.
     * This is a convenience method that calls {@link JPEGFactory#createFromByteArray},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param byteArray bytes from an image file.
     * @param document the document that shall use this PDImageXObject.
     * @param name name of image file for exception messages, can be null.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float)",205,208,"/**
* Renders an image for a given page and scale.
* @param pageIndex The page index to render.
* @param scale The rendering scale.
* @return A BufferedImage representing the rendered image.
*/
","* Returns the given page as an RGB image at the given scale.
     * A scale of 1 will render at 72 DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float)",217,220,"/**
 * Renders an image with specified DPI.
 * @param pageIndex Page index to render.
 * @param dpi Dots per inch for rendering.
 * @return Rendered BufferedImage.
 */
","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)",230,234,"/**
 * Renders an image with specified DPI.
 * @param pageIndex Page index to render.
 * @param dpi DPI value.
 * @param imageType Image type.
 * @return Rendered BufferedImage.
 */
","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float)",376,380,"/**
 * Renders a page to graphics at the specified index and scale.
 * @param pageIndex Index of the page to render.
 * @param graphics Graphics context to draw on.
 * @param scale Scaling factor for the page.
 */
","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scale the scaling factor, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,64,"/**
 * Shows a text string using the current PDF stream engine.
 * @param arguments Arguments list containing the string to show.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,62,"/**
 * Shows text strings from a COS array.
 * Requires arguments and a valid text matrix.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:generateNormalAppearance(),81,164,"/**
 * Generates the normal appearance of the annotation based on its name.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFont,org.apache.pdfbox.pdmodel.PDResources:getFont(org.apache.pdfbox.cos.COSName),142,182,"/**
 * Retrieves a PDFont instance by name, caching if possible.
 * @param name Font name (COSName)
 * @return PDFont object or null if not found.
 */
","* Returns the font resource with the given name, or null if none exists.
     *
     * @param name Name of the font resource.
     * @return the font with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
 * Creates a PDFont from a COSDictionary.
 * @param dictionary COSDictionary containing font information
 * @return PDFont object
 */
","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,extract,org.apache.pdfbox.multipdf.PageExtractor:extract(),73,85,"/**
 * Extracts a PDDocument based on start/end page numbers.
 * Returns an empty document if page range is invalid.
 */
","* This will take a document and extract the desired pages into a new 
     * document.  Both startPage and endPage are included in the extracted 
     * document.  If the endPage is greater than the number of pages in the 
     * source document, it will go to the end of the document.  If startPage is
     * less than 1, it'll start with page 1.  If startPage is greater than 
     * endPage or greater than the number of pages in the source document, a 
     * blank document will be returned.
     * 
     * @return The extracted document
     * @throws IOException If there is an IOError",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),346,348,"/**
 * Merges documents using provided function and default compression.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,org.apache.pdfbox.rendering.PDFRenderer:renderImage(int),192,195,"/**
 * Renders an image for a given page index.
 * @param pageIndex Index of the page to render.
 * @return BufferedImage representing the rendered page.
 */
","* Returns the given page as an RGB image at 72 DPI
     * @param pageIndex the zero-based index of the page to be converted.
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D)",360,363,"/**
 * Delegates to overloaded method with default quality.
 * @param pageIndex Index of the page to render.
 * @param graphics Graphics context to draw on.
 */
","* Renders a given page to an AWT Graphics2D instance at 72 DPI.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,process,"org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",52,78,"/**
* Sets the font size and font for text rendering.
* @param arguments List of COSBase objects (font name, size)
*/
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,ensureFontResources,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:ensureFontResources(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)",231,265,"/**
 * Ensures font resources are available for a PDF field.
 * Retrieves and adds missing fonts to default resources.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:generateNormalAppearance(),71,361,"/**
 * Generates the normal appearance of the annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,validateAndEnsureAcroFormResources,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:validateAndEnsureAcroFormResources(),134,180,"/**
* Adds font resources from widgets to the AcroForm's resources.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFont,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFont(java.util.List),147,176,"/**
 * Sets the font based on operands; throws IOException if operands are missing or font not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,copyNeededResourcesTo,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),309,325,"/**
 * Copies needed resources (font) to the appearance stream.
 * @param appearanceStream The stream to add resources to.
 */
","* Copies any needed resources from the document’s DR dictionary into the stream’s Resources
     * dictionary. Resources with the same name shall be left intact.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFont(),78,87,"/**
 * Retrieves the font object from the font setting.
 * @return PDFont object or null if no font is found.
 */
","* This will get the font for this font setting.
     *
     * @return The font for this setting of null if one was not found.
     *
     * @throws IOException If there is an error getting the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveFieldsFromWidgets,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveFieldsFromWidgets(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),78,113,"/**
 * Resolves form fields from widgets on each page of the document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processOperator,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",124,138,"/**
 * Processes operator based on its name, handling font and color settings.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",439,482,"/**
 * Updates annotation appearance stream by modifying content.
 * Copies resources, modifies BMC/EMC, and writes to stream.
 */
",* Constructs and sets new contents for given appearance stream.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,copyIntoGraphicsState,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState),82,190,"/**
 * Copies graphics state properties into the provided GraphicsState.
 * @param gs the GraphicsState to copy properties to
 * @throws IOException if an I/O error occurs
 */","* This will implement the gs operator.
     *
     * @param gs The state to copy this dictionaries values into.
     *
     * @throws IOException If there is an error copying font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:process(),60,76,"/**
 * Processes the AcroForm in the document, resolving fields.
 * Uses getAcroForm(null) to prevent recursive calls.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processAppearanceStringOperators,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processAppearanceStringOperators(byte[]),96,114,"/**
 * Parses appearance string operators from byte array.
 * Parses operators and arguments from a PDF stream.
 */","* Processes the operators of the given content stream.
     *
     * @param content the content to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,process,"org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",49,70,"/**
 * Copies graphics state parameters from a COSName to the current state.
 * @param arguments List of COSBase objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,apply,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:apply(),32,58,"/**
 * Applies form defaults and generates appearances for the document.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:<init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)",73,88,"/**
 * Initializes appearance and resources.
 * Requires /DA and /DR entries; processes appearance string.
 */","* Constructor for reading an existing DA string.
     * 
     * @param defaultResources DR entry
     * @param defaultAppearance DA entry
     * @throws IOException If the DA could not be parsed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getWidgetDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),339,344,"/**
 * Gets the default appearance string from a widget.
 * @param widget Annotation widget
 * @return PDDefaultAppearanceString object
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearanceString(),96,106,"/**
 * Retrieves the default appearance string.
 * @return PDDefaultAppearanceString object.
 * @throws IOException if an I/O error occurs.
 */
","* Get the default appearance.
     *
     * This is an inheritable attribute.
     *
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     *
     * @return the DA element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceValue(java.lang.String),188,272,"/**
 * Sets the appearance value for a PDF field, handling multiline formatting.
 * @param apValue The appearance value to set.
 */
","* This is the public method for setting the appearance stream.
     *
     * @param apValue the String value which the appearance should represent
     * @throws IOException If there is an error creating the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText),113,128,"/**
 * Initializes the helper with a PDF variable text field.
 * @param field The PDF variable text field.
 * @throws IOException if default appearance string processing fails.
 */
","* Constructs a COSAppearance from the given field.
     *
     * @param field the field which you wish to control the appearance of
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:constructAppearances(),78,93,"/**
 * Constructs appearance based on retrieved values.
 * Uses AppearanceGeneratorHelper to set the appearance value.
 */
",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:constructAppearances(),81,87,"/**
 * Initializes appearance generation helper with an empty value.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:constructAppearances(),257,263,"/**
 * Configures appearance settings using the helper class.
 */",,,,True
