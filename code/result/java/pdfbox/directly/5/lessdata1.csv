file_path,Name,full_name,Start Line,End Line,Comment,Pre_Comment,child Name,domain,inner_method
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,<init>,org.apache.pdfbox.Loader:<init>(),45,47,"/**
 * Private constructor to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorName.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorName:<init>(),114,116,"/**
 * Private constructor to prevent instantiation of the class.
 */",* private constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.OperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes an OperatorProcessor with a given PDFStreamEngine.
 * @param context the PDF processing engine to use
 */","* Creates a new OperatorProcessor.
     * 
     * @param context the processing context to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBase.java,<init>,org.apache.pdfbox.cos.COSBase:<init>(),37,39,"/**
 * Initializes a new instance of COSBase.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,<init>,org.apache.pdfbox.cos.COSUpdateState:<init>(org.apache.pdfbox.cos.COSUpdateInfo),53,56,"/**
 * Initializes a new instance of COSUpdateState with given update information.
 * @param updateInfo details about the update
 */","* Creates a new {@link COSUpdateState} for the given {@link COSUpdateInfo}.
     *
     * @param updateInfo The {@link COSUpdateInfo}, that shall be managed by this {@link COSUpdateState}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,<init>,org.apache.pdfbox.cos.PDFDocEncoding:<init>(),108,110,"/**
 * Private constructor to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream$Code:<init>(int,int)",272,275,"/**
 * Initializes a new Code with specified code and length.
 * @param code numeric code value
 * @param length length of the code
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(),44,47,"/**
 * Default constructor for DecodeOptions.
 */",* Constructs an empty DecodeOptions instance,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(java.awt.Rectangle),55,58,"/**
 * Initializes DecodeOptions with a specified source region.
 * @param sourceRegion defines the area to decode
 */","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param sourceRegion Region of the source image that should be decoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions:<init>(int),81,85,"/**
 * Initializes DecodeOptions with uniform subsampling.
 * @param subsampling value for both X and Y subsampling
 */","* Constructs an instance specifying the image should be decoded using subsampling. The
     * subsampling will be the same for the X and Y axes.
     *
     * @param subsampling The number of rows and columns to advance in the source for each pixel in
     * the decoded image.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary),36,39,"/**
 * Initializes a new DecodeResult with given parameters.
 * @param parameters dictionary containing decode parameters
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,<init>,"org.apache.pdfbox.filter.DecodeResult:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace)",41,45,"/**
 * Constructs a DecodeResult with given parameters and color space.
 * @param parameters dictionary containing decode parameters
 * @param colorSpace color space for decoding
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,<init>,org.apache.pdfbox.filter.Filter:<init>(),66,68,"/**
 * Default constructor for Filter class.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,org.apache.pdfbox.filter.Predictor:<init>(),33,35,"/**
 * Private constructor to prevent instantiation of the class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,<init>,"org.apache.pdfbox.multipdf.Overlay$LayoutPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDictionary,short)",289,295,"/**
* Initializes a new LayoutPage with specified parameters.
* @param mediaBox defines the page's dimensions and position
* @param contentStream holds the page's content data
* @param resources contains resources like fonts and images
* @param rotation specifies the page's orientation in degrees
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,"org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument,int,int)",54,59,"/**
* Initializes a PageExtractor with a document and page range.
* @param sourceDocument the PDF document to extract pages from
* @param startPage the starting page index (inclusive)
* @param endPage the ending page index (exclusive)
*/","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.
     * @param startPage The first page you want extracted (1-based, inclusive)
     * @param endPage The last page you want extracted (1-based, inclusive)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,<init>,org.apache.pdfbox.pdfparser.XrefParser:<init>(org.apache.pdfbox.pdfparser.COSParser),64,68,"/**
 * Initializes XrefParser with a COSParser.
 * @param cosParser the COSParser instance to use
 */","* Default constructor.
     *
     * @param cosParser the parser to be used to read the pdf.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,<init>,org.apache.pdfbox.pdfparser.xref.AbstractXReference:<init>(org.apache.pdfbox.pdfparser.xref.XReferenceType),37,40,"/**
* Initializes an XReference with a specified type.
* @param type the XReferenceType to set
*/","* Creates a crossreference stream entry of the given {@link XReferenceType}.
     *
     * @param type The {@link XReferenceType} of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,<init>,org.apache.pdfbox.pdfwriter.ContentStreamWriter:<init>(java.io.OutputStream),59,62,"/**
 * Initializes a new ContentStreamWriter with an output stream.
 * @param out the OutputStream to write content to
 */","* This will create a new content stream writer.
     *
     * @param out The stream to write the data to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(boolean),42,45,"/**
 * Initializes cache creation with stable cache option.
 * @param enableStableCache flag to enable or disable stable cache
 */","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,93,"/**
* Initializes a new PDDocumentCatalog.
* @param doc the PDDocument to associate with this catalog
* @param rootDictionary the root dictionary for the catalog
*/","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.
     * @param rootDictionary The root dictionary that this object wraps.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Initializes document information from a dictionary.
 * @param dic dictionary containing document metadata
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),41,44,"/**
 * Initializes a new PDDocumentNameDestinationDictionary with the given dictionary.
 * @param dict COSDictionary containing name destination information
 */","* Constructor.
     *
     * @param dict The dictionary of names and corresponding destinations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,"org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.cos.COSDictionary)",56,60,"/**
 * Initializes a new document name dictionary.
 * @param cat PDDocumentCatalog instance
 * @param names COSDictionary containing names
 */","* Constructor.
     *
     * @param cat The document that this dictionary is part of.
     * @param names The names dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary),104,107,"/**
 * Initializes a new PDPage with a given COS dictionary.
 * @param pageDictionary Dictionary representing the PDF page
 */","* Creates a new instance of PDPage for reading.
     * 
     * @param pageDictionary A page dictionary in a PDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,"org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",114,118,"/**
* Constructs a PDPage from a COSDictionary and resource cache.
* @param pageDictionary PDF dictionary representing the page
* @param resourceCache cache for resources like fonts and images
*/","* Creates a new instance of PDPage for reading.
     *
     * @param pageDictionary A page dictionary in a PDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,<init>,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:<init>(java.util.Map,org.apache.pdfbox.cos.COSDictionary)",50,54,"/**
* Initializes a COSDictionaryMap with provided maps.
* @param actualsMap backing map for actual values
* @param dicMap COSDictionary to map keys to values
*/","* Constructor for this map.
     *
     * @param actualsMap The map with standard java objects as values.
     * @param dicMap The map with COSBase objects as values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a new PDDictionaryWrapper with the given COSDictionary.
 * @param dictionary the underlying COSDictionary to wrap
 */","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Initializes a PDNameTreeNode with a given dictionary.
 * @param dict the COSDictionary to initialize the node with
 */","* Constructor.
     *
     * @param dict The dictionary that holds the name information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,"org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary,java.lang.Class)",66,70,"/**
* Initializes a PDNumberTreeNode with a dictionary and value class.
* @param dict the COSDictionary containing node data
* @param valueClass the class type of values in the node
*/","* Constructor.
     *
     * @param dict The dictionary that holds the number information.
     * @param valueClass The PD Model type of object that is the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(org.apache.pdfbox.cos.COSDictionary),83,86,"/**
 * Initializes a PDPageLabelRange with a given dictionary.
 * @param dict COSDictionary containing page label information
 */","* Creates a new page label range object from the given dictionary.
     * 
     * @param dict
     *            the base dictionary for the new object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:<init>(org.apache.pdfbox.pdmodel.common.PDPageLabelRange,int)",301,306,"/**
* Initializes a LabelGenerator with page labels and total pages.
* @param label PDPageLabelRange object for page labels
* @param pages total number of pages to be labeled
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes a PDRange with a given COSArray.
 * @param range the COSArray representing the range
 */","* Constructor assumes a starting index of 0.
     *
     * @param range The array that describes the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRange:<init>(org.apache.pdfbox.cos.COSArray,int)",64,68,"/**
 * Initializes a PDRange with a given COSArray and an index.
 * @param range the COSArray containing the range values
 * @param index the starting index within the array
 */","* Constructor with an index into an array.  Because some arrays specify
     * multiple ranges ie [ 0,1,  0,2,  2,3 ] It is convenient for this
     * class to take an index into an array.  So if you want this range to
     * represent 0,2 in the above example then you would say <code>new PDRange( array, 1 )</code>.
     *
     * @param range The array that describes the index
     * @param index The range index into the array for the start of the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSStream),81,84,"/**
 * Constructs a PDStream from a COSStream.
 * @param str underlying COSStream object
 */","* Creates a PDStream which wraps the given COSStream.
     * 
     * @param str The stream parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators:<init>(),28,31,"/**
 * Prevents instantiation of the class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators:<init>(),28,31,"/**
 * Prevents instantiation of utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators:<init>(),28,31,"/**
 * Private constructor to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Parser:<init>(),33,36,"/**
 * Private constructor to prevent instantiation of the class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators:<init>(),28,31,"/**
 * Private default constructor to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators:<init>(),30,33,"/**
* Private default constructor to prevent instantiation.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Initializes PDMarkInfo with a given COSDictionary.
 * @param dic the COSDictionary to initialize with
 */","* Constructor for an existing MarkInfo element.
     *
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Initializes a new instance with a given COSDictionary.
 * @param dictionary COSDictionary to be used
 */","* Constructor for an existing marked content reference.
     * 
     * @param dictionary the page dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Initializes a PDObjectReference with a given COSDictionary.
 * @param theDictionary the dictionary to be used for initialization
 */","* Constructor for an existing object reference.
     *
     * @param theDictionary The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSArray),37,40,"/**
 * Constructs a PDParentTreeValue with the given COSArray.
 * @param obj the COSArray to be associated with this value
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDParentTreeValue.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDParentTreeValue:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Constructs a PDParentTreeValue with a given COSDictionary.
 * @param obj the COSDictionary to initialize with
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
 * Initializes a new PDStructureNode with a given COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Constructor for an existing structure node.
     *
     * @param dictionary The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:<init>(),37,39,"/**
* Constructs a new Revisions object.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(org.apache.pdfbox.cos.COSDictionary),71,74,"/**
 * Initializes a property list with a given dictionary.
 * @param dict COSDictionary containing properties
 */","* Constructor for subclasses.
     * 
     * @param dict the dictionary to be used to create an instance of PDPropertyList",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
 * Initializes a new PDBoxStyle with a given dictionary.
 * @param dic COSDictionary containing style information
 */","* Constructor for an existing BoxStyle element.
     *
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/StandardStructureTypes.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.StandardStructureTypes:<init>(),317,319,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(),70,73,"/**
* Initializes AccessPermission with default settings.
* Sets bytes to DEFAULT_PERMISSIONS.
*/","* Create a new access permission object.
     * By default, all permissions are granted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(byte[]),82,92,"/**
* Constructs AccessPermission from a byte array.
* @param b 4-byte array representing the permission
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,<init>,org.apache.pdfbox.pdmodel.encryption.AccessPermission:<init>(int),99,102,"/**
 * Constructs an AccessPermission with specified integer value.
 * @param permissions integer representing access permissions
 */","* Creates a new access permission object from a single integer.
     *
     * @param permissions The permission bits.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,<init>,org.apache.pdfbox.pdmodel.encryption.MessageDigests:<init>(),28,30,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a new PDCryptFilterDictionary with the given COSDictionary.
 * @param d the COSDictionary to initialize with
 */","* creates a new crypt filter dictionary from the low level dictionary provided.
     * @param d the low level dictionary that will be managed by the newly created object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,<init>,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:<init>(),37,40,"/**
 * Initializes the RC4 cipher with a 256-element salt array.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,<init>,org.apache.pdfbox.pdmodel.encryption.SaslPrep:<init>(),32,34,"/**
 * Constructs a new SaslPrep instance.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:<init>(),31,33,"/**
 * Private constructor to prevent instantiation of SecurityProvider class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),118,121,"/**
 * Initializes a new FDF annotation with the given COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a The FDF annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a new FDFCatalog with a given COSDictionary.
 * @param cat COSDictionary representing the catalog data
 */","* Constructor.
     *
     * @param cat The FDF documents catalog.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Constructs an FDFDictionary from a COSDictionary.
 * @param fdfDictionary the underlying COSDictionary to use
 */","* Constructor.
     *
     * @param fdfDictionary The FDF documents catalog.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.apache.pdfbox.cos.COSDictionary),64,67,"/**
 * Constructs an FDFField with a given COSDictionary.
 * @param f COSDictionary representing the field data
 */","* Constructor.
     *
     * @param f The FDF field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(org.apache.pdfbox.cos.COSDictionary),73,76,"/**
 * Initializes FDFIconFit with given dictionary.
 * @param f COSDictionary to be used for fitting
 */","* Constructor.
     *
     * @param f The icon fit dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs an FDFJavaScript object with the given COSDictionary.
 * @param javaScript the COSDictionary containing JavaScript data
 */","* Constructor.
     *
     * @param javaScript The FDF java script.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Initializes a new FDFNamedPageReference with a COSDictionary.
 * @param r COSDictionary representing the reference
 */","* Constructor.
     *
     * @param r The FDF named page reference dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Initializes an FDFOptionElement with a COSArray.
 * @param o the COSArray representing the option
 */","* Constructor.
     *
     * @param o The option element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs an FDFPage with the given dictionary.
 * @param p COSDictionary representing the page data
 */","* Constructor.
     *
     * @param p The FDF page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes FDFPageInfo with given dictionary.
 * @param p COSDictionary containing page information
 */","* Constructor.
     *
     * @param p The FDF page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Initializes a new FDFTemplate with a given COSDictionary.
 * @param t COSDictionary representing the template
 */","* Constructor.
     *
     * @param t The FDF page template.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AbstractFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AbstractFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Initializes a fixup with a PDDocument.
 * @param document the PDF document to be fixed up
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AbstractProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AbstractProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),25,28,"/**
 * Initializes an AbstractProcessor with a PDDocument.
 * @param document the PDF document to be processed
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.CIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",31,36,"/**
 * Constructs a new CIDSystemInfo instance.
 * @param registry the registry identifier
 * @param ordering the ordering method
 * @param supplement the supplement value
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,<init>,org.apache.pdfbox.pdmodel.font.CMapManager:<init>(),35,37,"/**
 * Private constructor for CMapManager to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:<init>(org.apache.pdfbox.pdmodel.font.FontInfo),720,723,"/**
 * Initializes FontMatch with provided font information.
 * @param info FontInfo object containing font details
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMappers.java,<init>,org.apache.pdfbox.pdmodel.font.FontMappers:<init>(),29,31,"/**
 * Private constructor to prevent instantiation of the class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(org.apache.pdfbox.cos.COSDictionary),42,45,"/**
 * Initializes a new instance with a COSDictionary.
 * @param dictionary the COSDictionary to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
* Initializes a font descriptor with a given dictionary.
* @param desc dictionary containing font descriptor information
*/","* Creates a PDFontDescriptor from a COS dictionary.
     *
     * @param desc The wrapped COS Dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",90,94,"/**
* Constructs a FontType with specified type and subtype.
* @param type font type identifier
* @param subtype specific font subtype
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory:<init>(),48,50,"/**
 * Private constructor to prevent instantiation of PDFontFactory.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanose:<init>(byte[]),37,40,"/**
* Constructs a PDPanose object from a byte array.
* @param bytes byte array representing PDPanose data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,<init>,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:<init>(byte[]),35,38,"/**
 * Initializes a new instance of PDPanoseClassification with byte data.
 * @param bytes byte array containing classification data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:<init>(org.apache.pdfbox.pdmodel.font.PDType3Font,org.apache.pdfbox.cos.COSStream)",54,58,"/**
* Initializes a new PDType3CharProc.
* @param font the associated PDType3Font
* @param charStream the character stream for the glyph
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,<init>,org.apache.pdfbox.pdmodel.font.Standard14Fonts:<init>(),118,120,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,<init>,org.apache.pdfbox.pdmodel.font.UniUtil:<init>(),27,29,"/**
 * Private constructor to prevent instantiation of the utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(org.apache.pdfbox.cos.COSArray),57,60,"/**
 * Constructs a PDFontSetting with a given COSArray.
 * @param fs COSArray representing font settings
 */","* Constructs a font setting from an existing array.
     *
     * @param fs The new font setting value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(),41,45,"/**
 * Initializes an empty line dash pattern with no dashes.
 */","* Creates a new line dash pattern, with no dashes and a phase of 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:<init>(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",80,84,"/**
 * Initializes a new instance of BlendComposite.
 * @param blendMode specifies the blending mode to use
 * @param constantAlpha constant alpha value for blending operations
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,<init>,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendChannelFunction,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode$BlendFunction)",201,207,"/**
* Initializes a new BlendMode with specified parameters.
* @param name the COSName representing the blend mode
* @param blendChannel the channel-specific blending function
* @param blend the overall blending function
*/","* Private constructor due to the limited set of possible blend modes.
     * 
     * @param name the corresponding COSName of the blend mode
     * @param blendChannel the blend function for separable blend modes
     * @param blend the blend function for non-separable blend modes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",121,126,"/**
* Constructs a PDColor with a specified pattern name and color space.
* @param patternName the name of the pattern
* @param colorSpace the color space for the color
*/","* Creates a PDColor containing the given pattern name.
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern is defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
* Initializes a new PDDeviceNAttributes instance with given attributes.
* @param attributes COSDictionary containing device N attributes
*/","* Creates a new DeviceN colour space attributes dictionary from the given dictionary.
     * @param attributes a dictionary that has all of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(org.apache.pdfbox.cos.COSDictionary),57,60,"/**
* Initializes a PDDeviceNProcess with given attributes.
* @param attributes COSDictionary containing process attributes
*/","* Creates a new  DeviceN Process Dictionary from the given attributes.
     * @param attributes a DeviceN attributes dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(org.apache.pdfbox.cos.COSArray),51,54,"/**
* Initializes PDGamma with a COSArray.
* @param array COSArray containing gamma values
*/","* Creates a new gamma from a COS array.
     * @param array the array containing the XYZ values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
* Constructs a PDOutputIntent from a COSDictionary.
* @param dictionary The underlying COSDictionary
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a PDTristimulus from a COSArray.
 * @param array the COSArray containing the tristimulus values
 */","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDTransparencyGroupAttributes with given COSDictionary.
 * @param dic COSDictionary containing transparency group attributes
 */","* Creates a group object from a given dictionary
     * @param dic {@link COSDictionary} object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:<init>(),45,47,"/**
 * Private constructor to prevent instantiation of CCITTFactory.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:<init>(),66,68,"/**
 * Private constructor to prevent instantiation of JPEGFactory.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:<init>(),58,60,"/**
 * Private constructor to prevent instantiation of LosslessFactory.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:<init>(),98,100,"/**
 * Private constructor to prevent instantiation of PNGConverter.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:<init>(),50,52,"/**
 * Private constructor for SampledImageReader.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(org.apache.pdfbox.cos.COSDictionary),103,106,"/**
 * Initializes PDF optional content properties with given dictionary.
 * @param props COSDictionary containing properties
 */","* Creates a new instance based on a given {@link COSDictionary}.
     * @param props the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
* Initializes a pattern with a given dictionary.
* @param dictionary COSDictionary containing pattern properties
*/","* Creates a new Pattern dictionary from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(org.apache.pdfbox.cos.COSDictionary),94,97,"/**
 * Initializes a new instance of PDShading with a given COSDictionary.
 * @param shadingDictionary the COSDictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,org.apache.pdfbox.util.Matrix)",34,38,"/**
 * Constructs a ShadingPaint object.
 * @param shading the shading pattern to be used
 * @param matrix transformation matrix for the shading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",69,73,"/**
* Initializes a PDExtendedGraphicsState with a COSDictionary and ResourceCache.
* @param dictionary the COSDictionary containing graphics state information
* @param resourceCache the ResourceCache for managing resources
*/","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.
     * @param resourceCache Resource cache, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",117,121,"/**
* Initializes a PDSoftMask with given dictionary and resource cache.
* @param dictionary PDF dictionary containing mask properties
* @param resourceCache cache for managing resources
*/","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.
     * @param resourceCache Resource cache, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:<init>(java.lang.String),135,138,"/**
 * Constructs a new Paragraph with the given text.
 * @param text content of the paragraph
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$Word:<init>(java.lang.String),305,308,"/**
 * Constructs a Word with given text.
 * @param text content of the word
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),72,75,"/**
 * Initializes a new Builder instance with specified content stream.
 * @param contents PDAppearanceContentStream to be used
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:<init>(org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder),127,137,"/**
* Constructs a PlainTextFormatter using the provided Builder.
* @param builder configuration for the formatter
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Initializes a new PDAction with a given COSDictionary.
 * @param a dictionary representing the action's properties
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:<init>(),33,36,"/**
 * Private constructor to prevent instantiation of utility class.
 */",* Utility Class.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes PDAdditionalActions with a COSDictionary.
 * @param a dictionary containing action data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes additional annotation actions from a dictionary.
 * @param a COSDictionary containing action settings
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs an additional actions catalog.
 * @param a COSDictionary containing action settings
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes additional field actions with provided dictionary.
 * @param a COSDictionary containing action details
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a new instance with the given dictionary.
 * @param a COSDictionary containing page actions
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Initializes a PDTargetDirectory with a COSDictionary.
* @param dictionary the COSDictionary to initialize with
*/","* Create a target directory from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Initializes a new instance of PDURIDictionary with a given COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs PDWindowsLaunchParams with a given dictionary.
 * @param p COSDictionary containing launch parameters
 */","* Constructor.
     *
     * @param p The params dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDAppearanceCharacteristicsDictionary from a COSDictionary.
 * @param dict dictionary containing appearance characteristics
 */","* Constructor.
     * 
     * @param dict dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Initializes a PDAppearanceDictionary with a given COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Constructor for reading.
     *
     * @param dictionary The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(),37,39,"/**
* Private constructor for PDAppearanceEntry.
* Initializes a new instance.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDAppearanceEntry from a COSDictionary.
 * @param entry dictionary containing appearance data
 */","* Constructor for reading.
     * 
     * @param entry the dictionary of the appearance entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),60,63,"/**
 * Initializes a new border effect dictionary.
 * @param dict COSDictionary containing border effect properties
 */","* Constructor.
     *
     * @param dict a border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),79,82,"/**
 * Constructs a border style from a COS dictionary.
 * @param dict the COS dictionary containing border style information
 */","* Constructor.
     *
     * @param dict a border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a new PDExternalDataDictionary from a COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Constructor.
     * 
     * @param dictionary Dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:<init>(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,double,double,org.apache.pdfbox.pdmodel.common.PDRectangle)",66,73,"/**
* Initializes a CloudyBorder with specified parameters.
* @param stream PDAppearanceContentStream for drawing
* @param intensity visual intensity of the border
* @param lineWidth width of the border line
* @param rect bounding rectangle for the border
*/","* Creates a new <code>CloudyBorder</code> that writes to the specified
     * content stream.
     *
     * @param stream content stream
     * @param intensity intensity of cloudy effect (entry <code>I</code>); typically 1.0 or 2.0
     * @param lineWidth line width for annotation border (entry <code>W</code>)
     * @param rect annotation rectangle (entry <code>Rect</code>)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,80,"/**
* Initializes appearance handler with annotation and document.
* @param annotation PDF annotation to be processed
* @param document associated PDF document
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(org.apache.pdfbox.cos.COSDictionary),52,56,"/**
 * Constructs a PDPropBuild object with a given COSDictionary.
 * @param dict the COSDictionary to be used for property building
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(org.apache.pdfbox.cos.COSDictionary),49,54,"/**
 * Initializes PDPropBuildDataDict with a COSDictionary.
 * @param dict the COSDictionary to be used
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(org.apache.pdfbox.cos.COSDictionary),95,99,"/**
 * Initializes a PDSeedValue with a given COSDictionary.
 * @param dict the COSDictionary to be used for initialization
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(org.apache.pdfbox.cos.COSDictionary),83,87,"/**
 * Initializes a PDSeedValueCertificate with a given COSDictionary.
 * @param dict the COSDictionary to initialize with
 */","* Constructor.
     *
     * @param dict The certificate seed value dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Initializes a PDSeedValueMDP with a given COSDictionary.
 * @param dict the COSDictionary to be used
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(org.apache.pdfbox.cos.COSDictionary),46,50,"/**
 * Initializes PDSeedValueTimeStamp with a COSDictionary.
 * @param dict the dictionary to be used
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(org.apache.pdfbox.cos.COSDictionary),101,104,"/**
 * Initializes a PDSignature with a COSDictionary.
 * @param dict the COSDictionary containing signature data
 */","* Constructor.
     *
     * @param dict The signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:<init>(),49,52,"/**
 * Initializes a new instance of SignatureOptions with default page number.
 */",* Creates the default signature options.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:<init>(org.apache.pdfbox.pdfwriter.COSWriter),34,37,"/**
 * Initializes SigningSupport with a COSWriter.
 * @param cosWriter the COSWriter instance to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:<init>(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateBuilder),54,57,"/**
 * Initializes a new PDF template creator.
 * @param templateBuilder builder object to construct templates
 */","* Constructor.
     * 
     * @param templateBuilder the template builder",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:<init>(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),33,36,"/**
 * Initializes iterator with a starting outline item.
 * @param startingItem the first item in the iteration
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:<init>(java.lang.String,java.lang.String)",49,53,"/**
* Constructs a new KeyValue pair.
* @param theKey unique key identifier
* @param theValue associated value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:<init>(),75,77,"/**
* Private constructor to prevent instantiation of utility class.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",62,67,"/**
* Initializes a new PDField.
* @param acroForm the form containing the field
* @param field the COSDictionary representing the field
* @param parent the parent non-terminal field
*/","* Constructor.
     *  @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:<init>(),38,40,"/**
 * Private constructor to prevent instantiation of PDFieldFactory.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:<init>(org.apache.pdfbox.cos.COSBase),45,48,"/**
 * Initializes PDXFA resource with COSBase.
 * @param xfaBase XFA base object to be used
 */","* Constructor.
     *
     * @param xfaBase The xfa resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDMeasureDictionary from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),77,80,"/**
 * Constructs a number format dictionary.
 * @param dictionary COSDictionary containing number format settings
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a PDViewportDictionary with a given COSDictionary.
 * @param dictionary the underlying COSDictionary to be used
 */","* Constructor.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a PDThread with a given dictionary.
 * @param t COSDictionary representing the thread
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param t The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(org.apache.pdfbox.cos.COSDictionary),43,46,"/**
 * Constructs a PDThreadBead with a given COSDictionary.
 * @param b COSDictionary representing the thread bead
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param b The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(org.apache.pdfbox.cos.COSDictionary),146,149,"/**
 * Initializes PDViewerPreferences with a given dictionary.
 * @param dic COSDictionary containing viewer preferences
 */","* Constructor that is used for a preexisting dictionary.
     *
     * @param dic The underlying dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawerParameters.java,<init>,"org.apache.pdfbox.rendering.PageDrawerParameters:<init>(org.apache.pdfbox.rendering.PDFRenderer,org.apache.pdfbox.pdmodel.PDPage,boolean,org.apache.pdfbox.rendering.RenderDestination,java.awt.RenderingHints,float)",43,53,"/**
 * Initializes parameters for PDF page drawing.
 * @param renderer PDFRenderer instance
 * @param page PDPage to draw
 * @param subsamplingAllowed flag for subsampling images
 * @param destination RenderDestination for output
 * @param renderingHints RenderingHints for image quality
 * @param imageDownscalingOptimizationThreshold threshold for image downscaling
 */",* Package-private constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(),2148,2151,"/**
 * Initializes a new LineItem with no assigned text position.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$LineItem:<init>(org.apache.pdfbox.text.TextPosition),2153,2156,"/**
 * Constructs a LineItem with specified text position.
 * @param textPosition the position of the text in the document
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper:<init>(org.apache.pdfbox.text.TextPosition),2222,2225,"/**
 * Wraps a TextPosition.
 * @param position TextPosition to be wrapped
 */","* Constructs a PositionWrapper around the specified TextPosition object.
         *
         * @param position the text position.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,"org.apache.pdfbox.text.PDFTextStripper$WordWithTextPositions:<init>(java.lang.String,java.util.List)",2180,2184,"/**
* Initializes a WordWithTextPositions object.
* @param word the word associated with the text positions
* @param positions list of TextPosition objects representing character positions in the text
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,<init>,org.apache.pdfbox.util.DateConverter:<init>(),69,71,"/**
 * Private constructor to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,<init>,org.apache.pdfbox.util.Hex:<init>(),45,45,"/**
 * Private constructor to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,<init>,org.apache.pdfbox.util.IterativeMergeSort:<init>(),47,50,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(),41,51,"/**
* Initializes a 3x3 identity transformation matrix.
* @param none
* @return none
*/",* Constructor. This produces an identity matrix.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(float[]),57,60,"/**
 * Initializes a matrix with a source array.
 * @param src source array of float values
 */","* Constructor. This produces a matrix with the given array as data.
     * The source array is not copied or cloned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,"org.apache.pdfbox.util.Matrix:<init>(float,float,float,float,float,float)",101,111,"/**
* Initializes a 2x3 transformation matrix.
* @param a, b, c, d, e, f matrix coefficients
*/","* Creates a transformation matrix with the given 6 elements. Transformation matrices are
     * discussed in 8.3.3, ""Common Transformations"" and 8.3.4, ""Transformation Matrices"" of the PDF
     * specification. For simple purposes (rotate, scale, translate) it is recommended to use the
     * static methods below.
     *
     * Produces the following matrix:
     * a b 0
     * c d 0
     * e f 1
     *
     * @see Matrix#getRotateInstance(double, float, float)
     * @see Matrix#getScaleInstance(float, float)
     * @see Matrix#getTranslateInstance(float, float)
     *
     * @param a the X coordinate scaling element (m00) of the 3x3 matrix
     * @param b the Y coordinate shearing element (m10) of the 3x3 matrix
     * @param c the X coordinate shearing element (m01) of the 3x3 matrix
     * @param d the Y coordinate scaling element (m11) of the 3x3 matrix
     * @param e the X coordinate translation element (m02) of the 3x3 matrix
     * @param f the Y coordinate translation element (m12) of the 3x3 matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,<init>,org.apache.pdfbox.util.NumberFormatUtil:<init>(),55,57,"/**
 * Private constructor to prevent instantiation of utility class.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,<init>,"org.apache.pdfbox.util.Vector:<init>(float,float)",28,32,"/**
 * Initializes a new vector with specified coordinates.
 * @param x horizontal coordinate
 * @param y vertical coordinate
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,<init>,org.apache.pdfbox.util.Version:<init>(),38,41,"/**
 * Private constructor to prevent instantiation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,<init>,org.apache.pdfbox.util.XMLUtil:<init>(),45,47,"/**
 * Private constructor to prevent instantiation of XMLUtil class.
 */","* Utility class, should not be instantiated.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,<init>,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:<init>(),73,75,"/**
 * Private constructor to prevent instantiation of FileTypeDetector.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFStreamEngine:<init>(),103,105,"/**
* Initializes a new instance of PDFStreamEngine.
*/",* Creates a new PDFStreamEngine.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,addOperator,org.apache.pdfbox.contentstream.PDFStreamEngine:addOperator(org.apache.pdfbox.contentstream.operator.OperatorProcessor),112,115,"/**
 * Adds an operator processor.
 * @param op OperatorProcessor to be added
 */","* Adds an operator processor to the engine.
     *
     * @param op operator processor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,createBlendModeMap,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:createBlendModeMap(),165,187,"/**
* Creates a map of COSName to BlendMode.
* @return Map containing blend mode names and their corresponding modes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,setTerminator,org.apache.pdfbox.filter.ASCII85OutputStream:setTerminator(char),71,78,"/**
* Sets the terminator character.
* @param term character to use as terminator (must be 118-126 excluding 'z')
*/","* This will set the terminating character.
     *
     * @param term The terminating character.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setSplitAtPage,org.apache.pdfbox.multipdf.Splitter:setSplitAtPage(int),632,639,"/**
* Sets the page at which to split content.
* @param split number of pages, must be greater than zero
*/","* This will tell the splitting algorithm where to split the pages.  The default
     * is 1, so every page will become a new document.  If it was two then each document would
     * contain 2 pages.  If the source document had 5 pages it would split into
     * 3 new documents, 2 documents containing 2 pages and 1 document containing one
     * page.
     *
     * @param split The number of pages each split document should contain.
     * @throws IllegalArgumentException if the page is smaller than one.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setStartPage,org.apache.pdfbox.multipdf.Splitter:setStartPage(int),647,654,"/**
* Sets the starting page number.
* @param start page number, must be greater than zero
*/","* This will set the start page.
     *
     * @param start the 1-based start page
     * @throws IllegalArgumentException if the start page is smaller than one.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,setEndPage,org.apache.pdfbox.multipdf.Splitter:setEndPage(int),662,669,"/**
* Sets the end page number.
* @param end the last page number, must be greater than zero
*/","* This will set the end page.
     *
     * @param end the 1-based end page
     * @throws IllegalArgumentException if the end page is smaller than one.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,setLenient,org.apache.pdfbox.pdfparser.COSParser:setLenient(boolean),419,426,"/**
 * Sets parser leniency.
 * @param lenient true for lenient parsing, false otherwise
 * @throws IllegalArgumentException if called after initial parse
 */","* Change the parser leniency flag.
     *
     * This method can only be called before the parsing of the file.
     *
     * @param lenient try to handle malformed PDFs.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(int),46,53,"/**
* Initializes CompressParameters with object stream size.
* @param objectStreamSize size of the object stream
*/","* Sets the number of objects, that can be contained in compressed object streams. Higher object stream sizes may
     * cause PDF readers to slow down during the rendering of PDF documents, therefore a reasonable value should be
     * selected. A value of 0 disables the compression.
     *
     * @param objectStreamSize The number of objects, that can be contained in compressed object streams.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache,java.util.Map)",109,123,"/**
* Initializes PDResources with given dictionaries and caches.
* @param resourceDictionary PDF resource dictionary
* @param resourceCache shared resource cache
* @param directFontCache font cache for direct fonts
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.
     * @param directFontCache The document's direct font cache. Must be mutable",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),307,314,"/**
* Sets the blending mode.
* @param blendMode the new blending mode to apply
*/","* Sets the blend mode in the current graphics state
     *
     * @param blendMode blend mode
     * @throws IllegalArgumentException if blendMode is null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,53,"/**
* Constructs a PDFieldTree with the given PDAcroForm.
* @param acroForm the root PDAcroForm object, must not be null
*/","* Constructor for reading.
     *
     * @param acroForm the AcroForm containing the fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getLength,org.apache.pdfbox.cos.COSStream:getLength(),331,340,"/**
* Returns the length of the stream.
* Throws IllegalStateException if there's an open OutputStream.
*/","* Returns the length of the encoded stream.
     *
     * @return length in bytes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setValue,org.apache.pdfbox.util.filetypedetector.ByteTrie$ByteTrieNode:setValue(java.lang.Object),45,52,"/**
* Sets the value for this trie node.
* @param value the value to be set
* @throws IllegalStateException if a value is already set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,<init>,org.apache.pdfbox.multipdf.PDFMergerUtility:<init>(),147,150,"/**
 * Initializes a new instance of PDFMergerUtility.
 * Sets up an empty list to store source PDFs.
 */",* Instantiate a new PDFMergerUtility.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:<init>(org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool),69,72,"/**
 * Initializes a new COSWriterObjectStream with a given compression pool.
 * @param compressionPool pool used for managing compression resources
 */","* Creates an object stream for compressible objects from the given {@link COSWriterCompressionPool}. The objects
     * must first be prepared for this object stream, by adding them via calling
     * {@link COSWriterObjectStream#prepareStreamObject(COSObjectKey, COSBase)} and will be written to this
     * {@link COSStream}, when {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @param compressionPool The compression pool an object stream shall be created for.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObjects,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObjects(),41,48,"/**
* Returns the list of objects.
* Initializes the list if it is null.
* @return List of T objects
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumbers,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumbers(),50,57,"/**
 * Retrieves or initializes the list of revision numbers.
 * @return List of integer revision numbers
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:<init>(),68,70,"/**
* Constructs a new instance of PublicKeyProtectionPolicy.
*/",* Creates a new PublicKeyProtectionPolicy with an empty recipients list.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginTextClip,org.apache.pdfbox.rendering.PageDrawer:beginTextClip(),465,469,"/**
 * Initializes text clipping storage.
 * Resets the list to hold new clipping areas.
 */","* Begin buffering the text clipping path, if any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,equals,org.apache.pdfbox.cos.COSName:equals(java.lang.Object),737,741,"/**
* Checks equality based on name.
* @param object to compare
* @return true if names are equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageLayout.java,fromString,org.apache.pdfbox.pdmodel.PageLayout:fromString(java.lang.String),54,64,"/**
* Converts string to corresponding PageLayout enum.
* @param value string representation of the layout
* @return matching PageLayout instance
* @throws IllegalArgumentException if no match found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PageMode.java,fromString,org.apache.pdfbox.pdmodel.PageMode:fromString(java.lang.String),45,55,"/**
* Converts string to corresponding PageMode.
* @param value string representation of the page mode
* @return PageMode enum instance or throws IllegalArgumentException if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/RenderingIntent.java,fromString,org.apache.pdfbox.pdmodel.graphics.state.RenderingIntent:fromString(java.lang.String),47,59,"/**
* Converts string to RenderingIntent.
* @param value string representation of rendering intent
* @return corresponding RenderingIntent or RELATIVE_COLORIMETRIC if unrecognized
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.io.File),308,311,"/**
* Adds a file source to the list.
* @param source File object representing the source to be added
* @throws FileNotFoundException if the file does not exist
*/","* Add a source file to the list of files to merge.
     *
     * @param source File representing source document
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(org.apache.pdfbox.io.RandomAccessRead),319,322,"/**
 * Adds a source to the list of sources.
 * @param source RandomAccessRead object to be added
 */","* Add a source to the list of documents to merge.
     *
     * @param source RandomAccessRead representing source document. To pass an InputStream, wrap it
     * into a {@link RandomAccessReadBuffer}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addName,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addName(java.lang.String),35,38,"/**
 * Adds a name to the instructions list.
 * @param name the name to be added
 */","* Add a name (ex. an operator)
     * @param name the name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addProc,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addProc(org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence),71,74,"/**
 * Adds an instruction sequence to the list.
 * @param child InstructionSequence to be added
 */","* Adds a proc (sub-sequence of instructions).
     * @param child the child proc",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,addRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:addRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),76,79,"/**
 * Adds a recipient to the list of public key recipients.
 * @param recipient PublicKeyRecipient object to be added
 */","* Adds a new recipient to the recipients list.
     * @param recipient A new recipient.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,addWord,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:addWord(org.apache.pdfbox.pdmodel.interactive.PlainText$Word),288,291,"/**
 * Adds a word to the collection.
 * @param word Word object to be added
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,addRegion,"org.apache.pdfbox.text.PDFTextStripperByArea:addRegion(java.lang.String,java.awt.geom.Rectangle2D)",68,72,"/**
* Adds a new region with its bounding rectangle.
* @param regionName unique name for the region
* @param rect bounding area of the region as a Rectangle2D
*/","* Add a new region to group text by.
     *
     * @param regionName The name of the region.
     * @param rect The rectangle area to retrieve the text from. The y-coordinates are java
     * coordinates (y == 0 is top), not PDF coordinates (y == 0 is bottom).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ClosePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,52,"/**
* Closes the current path in graphics context.
* @param operator unused parameter
* @param operands list of COSBase objects (not used)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setTrailer(org.apache.pdfbox.cos.COSDictionary),197,206,"/**
* Sets the trailer dictionary for the current cross-reference.
* @param trailer the COSDictionary representing the trailer
*/","* Adds trailer information for current XRef object.
     *
     * @param trailer the current document trailer dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(),296,300,"/**
 * Creates an input stream from decoded data.
 * @return InputStream containing the decoded data
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getObject(org.apache.pdfbox.cos.COSObjectKey),126,129,"/**
 * Retrieves an object from the pool using its key.
 * @param key unique identifier of the object
 * @return COSBase object associated with the key, or null if not found
 */","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.
     *
     * @param key The {@link COSObjectKey} a registered {@link COSBase} shall be found for.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey}, or null if no object is
     * registered for that key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,getOperator,org.apache.pdfbox.pdmodel.common.function.type4.Operators:getOperator(java.lang.String),136,139,"/**
 * Retrieves an Operator by name.
 * @param operatorName unique identifier for the operator
 * @return Operator object or null if not found
 */","* Returns the operator for the given operator name.
     * @param operatorName the operator name
     * @return the operator (or null if there's no such operator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,sequenceToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:sequenceToName(java.lang.String),197,205,"/**
* Converts Unicode sequence to character name.
* @param unicodeSequence Unicode sequence as a string
* @return Character name or "".notdef"" if not found
*/","* Returns the name for a given sequence of Unicode characters.
     *
     * @param unicodeSequence sequence of Unicode characters
     * @return PostScript glyph name, or "".notdef""",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getStreamCache,org.apache.pdfbox.cos.COSDocument:getStreamCache(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),140,165,"/**
* Attempts to create a RandomAccessStreamCache using the provided function.
* Falls back to memory-only cache if initial creation fails.
* @param streamCacheCreateFunction function to create the stream cache
* @return created RandomAccessStreamCache or null on failure
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,operatorException,"org.apache.pdfbox.contentstream.PDFStreamEngine:operatorException(org.apache.pdfbox.contentstream.operator.Operator,java.util.List,java.io.IOException)",959,986,"/**
* Handles operator exceptions by logging or rethrowing based on type.
* @param operator the operator causing the exception
* @param operands list of COSBase operands
* @param exception the IOException to handle
*/","* Called when an exception is thrown by an operator.
     *
     * @param operator The unknown operator.
     * @param operands The list of operands.
     * @param exception the excpetion which occured when processing the operator
     * 
     * @throws IOException if there is an error processing the operator exception",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsState(),1039,1042,"/**
 * Retrieves the current graphics state from the stack.
 * @return PDGraphicsState object representing the current graphics state
 */",* @return Returns the graphicsState.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,restoreGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:restoreGraphicsState(),999,1002,"/**
* Restores previous graphics state from stack.
*/",* Pops the current graphics state from the stack.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getGraphicsStackSize,org.apache.pdfbox.contentstream.PDFStreamEngine:getGraphicsStackSize(),1031,1034,"/**
 * Returns the size of the graphics stack.
 * @return number of elements in the graphics stack
 */",* @return Returns the size of the graphicsStack.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transformPoint,"org.apache.pdfbox.util.Matrix:transformPoint(float,float)",345,354,"/**
* Transforms a point using an affine transformation matrix.
* @param x the x-coordinate of the point
* @param y the y-coordinate of the point
* @return transformed Point2D.Float object
*/","* Transforms the given point by this matrix.
     *
     * @param x x-coordinate
     * @param y y-coordinate
     *
     * @return the transformed point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,decreaseLevel,org.apache.pdfbox.contentstream.PDFStreamEngine:decreaseLevel(),1170,1177,"/**
* Decreases the level by one.
* Logs an error if level becomes negative.
*/","* Decrease the level. Call this after running a potentially recursive operation. A log message
     * is shown if the level is below 0. This can happen if the level is not decreased after an
     * operation is done, e.g. by using a ""finally"" block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addInteger,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addInteger(int),44,47,"/**
 * Adds an integer to the instructions list.
 * @param value integer value to be added
 */","* Adds an int value.
     * @param value the value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,createDiacritics,org.apache.pdfbox.text.TextPosition:createDiacritics(),125,160,"/**
* Creates a mapping of diacritic marks to their Unicode values.
* @return Map with integer keys and string values representing diacritics
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:isDataEmpty(),83,87,"/**
 * Checks if the patch list is empty.
 * @return true if no patches are present; false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:setExportValues(java.util.List),64,71,"/**
* Sets export values for a button.
* @param values list of values to be set
* @throws IllegalArgumentException if values are provided
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toString,org.apache.pdfbox.pdmodel.font.PDFont:toString(),666,670,"/**
 * Returns a string representation of the object.
 * @return Class name followed by space and name
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toString,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils$KeyValue:toString(),65,69,"/**
 * Returns string representation of key-value pair.
 * @return formatted string with key and value
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/MissingOperandException.java,<init>,"org.apache.pdfbox.contentstream.operator.MissingOperandException:<init>(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",29,32,"/**
 * Constructs an exception indicating missing operands for an operator.
 * @param operator the operator in question
 * @param operands list of provided operands
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/EmptyGraphicsStackException.java,<init>,org.apache.pdfbox.contentstream.operator.state.EmptyGraphicsStackException:<init>(),32,35,"/**
 * Constructs an exception indicating the graphics stack is empty.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,checkClosed,org.apache.pdfbox.cos.COSStream:checkClosed(),105,114,"/**
* Checks if the COSStream is closed and throws IOException if so.
*/","* Throws if the random access backing store has been closed. Helpful for catching cases where
     * a user tries to use a COSStream which has outlived its COSDocument.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,reset,org.apache.pdfbox.filter.ASCII85InputStream:reset(),269,273,"/**
 * Throws an exception as reset operation is unsupported.
 * @throws IOException indicating that reset is not supported
 */","* Unsupported.
     *
     * @throws IOException telling that this is an unsupported action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,reset,org.apache.pdfbox.filter.CCITTFaxDecoderStream:reset(),492,495,"/**
 * Throws an exception as mark/reset is not supported.
 * @throws IOException always thrown with message ""mark/reset not supported""
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,reset,org.apache.pdfbox.filter.FlateFilterDecoderStream:reset(),239,243,"/**
 * Throws an exception as reset operation is unsupported.
 * @throws IOException indicating reset operation is not supported
 */","* Unsupported.
     *
     * @throws IOException always throw as reset is an unsupported feature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/MissingImageReaderException.java,<init>,org.apache.pdfbox.filter.MissingImageReaderException:<init>(java.lang.String),33,36,"/**
 * Constructs a new MissingImageReaderException with the specified detail message.
 * @param message the detail message
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getEncryption,org.apache.pdfbox.pdfparser.COSParser:getEncryption(),1164,1172,"/**
 * Retrieves the encryption settings of the document.
 * @return PDEncryption object representing the encryption settings
 * @throws IOException if the document has not been parsed yet
 */","* This will get the encryption dictionary. The document must be parsed before this is called.
     *
     * @return The encryption dictionary of the document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getAccessPermission,org.apache.pdfbox.pdfparser.COSParser:getAccessPermission(),1181,1189,"/**
* Retrieves access permission for the parsed document.
* @throws IOException if document is not parsed
*/","* This will get the AccessPermission. The document must be parsed before this is called.
     *
     * @return The access permission of document that was parsed.
     *
     * @throws IOException If there is an error getting the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/MissingResourceException.java,<init>,org.apache.pdfbox.pdmodel.MissingResourceException:<init>(java.lang.String),27,30,"/**
 * Constructs a MissingResourceException with a specified detail message.
 * @param message the detail message indicating the missing resource
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/InvalidPasswordException.java,<init>,org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException:<init>(java.lang.String),31,34,"/**
 * Constructs an InvalidPasswordException with a specified message.
 * @param message detail message explaining the exception
 */","* Creates a new InvalidPasswordException.
     * @param message A msg to go with this exception.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,<init>,org.apache.pdfbox.contentstream.operator.Operator:<init>(java.lang.String),44,51,"/**
* Initializes an Operator object.
* @param aOperator the operator string to be set
* @throws IllegalArgumentException if the operator starts with '/'
*/","* Constructor.
     *
     * @param aOperator The operator that this object will represent.
     * @throws IllegalArgumentException if the operator starts with ""/"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,toString,org.apache.pdfbox.contentstream.operator.Operator:toString(),102,106,"/**
 * Returns string representation of PDFOperator.
 * @return formatted string with operator name
 */","* This will print a string rep of this class.
     *
     * @return A string rep of this class.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toString,org.apache.pdfbox.cos.COSArray:toString(),516,520,"/**
 * Returns string representation of COSArray.
 * @return formatted string with array contents
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,toString,org.apache.pdfbox.cos.COSName:toString(),731,735,"/**
* Returns string representation of COSName.
* @return formatted string including name
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,toString,org.apache.pdfbox.cos.COSObject:toString(),148,152,"/**
 * Returns string representation of COSObject.
 * @return formatted string with key
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(org.apache.pdfbox.cos.COSName),88,96,"/**
* Retrieves a filter by its name.
* @param filterName the name of the filter to retrieve
* @return the Filter object associated with the given name
* @throws IOException if the filter is not found
*/","* Returns a filter instance given its COSName.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/OperatorProcessor.java,checkArrayTypesClass,"org.apache.pdfbox.contentstream.operator.OperatorProcessor:checkArrayTypesClass(java.util.List,java.lang.Class)",77,80,"/**
* Checks if all elements in the list are instances of the specified class.
* @param operands list of COSBase objects to check
* @param clazz class to compare against
* @return true if all elements match the class, false otherwise
*/","* Check whether all operands list elements are an instance of a specific class.
     *
     * @param operands The operands list.
     * @param clazz The expected class.
     * @return true if all operands list elements are an instance of the given class",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addReal(float),53,56,"/**
 * Adds a real number to the instructions list.
 * @param value the real number to be added
 */","* Adds a real value.
     * @param value the value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,width,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:width(float),361,366,"/**
* Sets the width of the visible signature.
* @param width the desired width in pixels
* @return the PDVisibleSignDesigner instance for method chaining
*/","* 
     * @param width signature image width
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,height,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:height(float),382,387,"/**
* Sets the height of the visible signature.
* @param height the desired height in float
* @return PDVisibleSignDesigner instance for method chaining
*/","* 
     * @param height signature image height
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getLen,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:getLen(java.awt.geom.Point2D,java.awt.geom.Point2D)",130,135,"/**
* Calculates the Euclidean distance between two points.
* @param ps starting point
* @param pe ending point
* @return distance as a double
*/","* Calculate the distance from point ps to point pe.
     *
     * @param ps one end of a line
     * @param pe the other end of the line
     * @return length of the line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",162,165,"/**
* Calculates the value of the edge equation for a point.
* @param p the point to evaluate
* @param p1 first point defining the edge
* @param p2 second point defining the edge
* @return signed distance from point to edge
*/","* A line from point p1 to point p2 defines an equation, adjust the form of
     * the equation to let the rhs equals 0, then calculate the lhs value by
     * plugging the coordinate of p in the lhs expression.
     *
     * @param p target point
     * @param p1 one end of a line
     * @param p2 the other end of a line
     * @return calculated value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,edgeEquationValue,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:edgeEquationValue(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",213,217,"/**
* Calculates the value of the edge equation for a point.
* @param p the point to evaluate
* @param p1 first endpoint of the edge
* @param p2 second endpoint of the edge
* @return the edge equation value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",64,69,"/**
* Initializes a new PDMarkedContent with a tag and properties.
* @param tag the content tag name
* @param properties dictionary containing content properties
*/","* Creates a new marked content object.
     * 
     * @param tag the tag
     * @param properties the properties",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getName(),59,63,"/**
 * Returns the name of the color space.
 * @return ""DeviceGray"" as specified by COSName.CALGRAY
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getName(),53,57,"/**
 * Returns the name of the CALRGB color space.
 * @return String representing the color space name
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getName(),116,120,"/**
 * Returns the name of the DEVICECMYK color space.
 * @return ""DeviceCMYK""
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:getName(),42,46,"/**
 * Returns the name of the DeviceGray color space.
 * @return ""DeviceGray""
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getName(),442,446,"/**
 * Returns the name of the DeviceN color space.
 * @return ""DeviceN"" as a string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:getName(),43,47,"/**
 * Returns the name of the DeviceRGB color space.
 * @return ""DeviceRGB"" as a string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getName(),146,150,"/**
 * Returns the name of the ICCBased color space.
 * @return ""ICCBased"" as the color space name
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getName(),98,102,"/**
 * Returns the name of the indexed COSName.
 * @return Name of the indexed COSName as a String
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getName(),55,59,"/**
 * Returns the name of the LAB color space.
 * @return ""Lab"" as the name of the color space
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getName(),68,72,"/**
* Returns the name of the pattern.
* @return Name of the pattern as a String
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getName(),100,104,"/**
 * Returns the name of the SEPARATION constant.
 * @return Name as a String
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getType(),109,112,"/**
 * Returns the type as a string.
 * @return ""Pattern"" indicating the object type
 */","* This will return the paint type.
     * @return The type of object that this is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getType(),115,118,"/**
 * Returns the type name of the shading.
 * @return String representing the shading type
 */","* This will return the type.
     *
     * @return the type of object that this is",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getDefaultValue(),198,209,"/**
* Retrieves the default value of an attribute.
* @return String representation of the default value or empty string if none
*/","* Returns the default value, if any.
     *
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,unCheck,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:unCheck(),84,87,"/**
 * Unchecks the item by setting its value to ""Off"".
 * @throws IOException if an I/O error occurs during value setting
 */","* Unchecks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(java.util.List),356,365,"/**
* Refreshes appearances for a list of PDF form fields.
* @param fields List of PDField objects to update
*/","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of the specified fields.
     * 
     * @param fields a list of fields to be refreshed
     * @throws IOException if the appearance streams could not be refreshed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,53,"/**
* Begins a marked content sequence with the specified tag.
* @param operator PDF operator instance
* @param arguments list of COSBase arguments
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,44,"/**
* Ends a marked content sequence in the PDF context.
* @param operator the operator triggering this action (unused)
* @param arguments list of COSBase objects representing operands (unused)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,isWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:isWhitePoint(),71,76,"/**
* Checks if the point is a white point.
* @return true if wpX, wpY, and wpZ are all equal to 1, false otherwise
*/","* Tests if the current point is the white point.
     *
     * @return true if the current point is the white point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:calcColorTable(),138,156,"/**
* Calculates color table for shading.
* @return int array of RGB values
* @throws IOException if function evaluation fails
*/","* Calculate the color on the axial line and store them in an array.
     *
     * @return an array, index denotes the relative position, the corresponding
     * value is the color on the axial line
     * @throws IOException if the color conversion fails.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calcColorTable,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calcColorTable(),143,161,"/**
* Calculates color table for shading.
* @return int array of RGB values
* @throws IOException if function evaluation fails
*/","* Calculate the color on the line that connects two circles' centers and store the result in an
     * array.
     *
     * @return an array, index denotes the relative position, the corresponding value the color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createInitialCodeTable,org.apache.pdfbox.filter.LZWFilter:createInitialCodeTable(),261,271,"/**
* Initializes the initial code table for LZW compression.
* @return List of byte arrays representing codes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,createCodeTable,org.apache.pdfbox.filter.LZWFilter:createCodeTable(),252,257,"/**
* Creates and initializes a code table.
* @return List of byte arrays representing the code table
*/",* Init the code table with 1 byte entries and the EOD and CLEAR_TABLE markers.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSources,org.apache.pdfbox.multipdf.PDFMergerUtility:addSources(java.util.List),329,332,"/**
 * Adds multiple RandomAccessRead sources to the collection.
 * @param sourcesList list of RandomAccessRead objects to be added
 */","* Add a list of sources to the list of documents to merge.
     *
     * @param sourcesList List of RandomAccessRead objects representing source documents",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,get,org.apache.pdfbox.cos.COSArray:get(int),294,297,"/**
 * Retrieves an element from the list by index.
 * @param index position of the element in the list
 * @return COSBase object at the specified index
 */","* This will get an object from the array.  This will NOT dereference
     * the COS object.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,get,org.apache.pdfbox.pdmodel.common.COSArrayList:get(int),450,455,"/**
 * Retrieves element at specified index.
 * @param index position of the element to retrieve
 * @return element at the given index
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,size,org.apache.pdfbox.cos.COSArray:size(),437,440,"/**
 * Returns the number of elements in the collection.
 * @return integer count of elements
 */","* This will get the size of this array.
     *
     * @return The number of elements in the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,size,org.apache.pdfbox.pdmodel.common.COSArrayList:size(),132,136,"/**
 * Returns the number of elements in the collection.
 * @return Size of the collection as an integer
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getNumberOfRecipients,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getNumberOfRecipients(),123,126,"/**
 * Returns the number of recipients.
 * @return count of recipients
 */","* Returns the number of recipients
     * @return the number of recipients",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,ensureStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:ensureStream(),498,509,"/**
* Ensures a stream is available.
* @return true if a valid stream is set, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getInterWordSpacing,org.apache.pdfbox.pdmodel.interactive.PlainText$Line:getInterWordSpacing(float),283,286,"/**
 * Calculates inter-word spacing.
 * @param width total line width
 * @return calculated spacing between words
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,isEmpty,org.apache.pdfbox.cos.COSArray:isEmpty(),447,450,"/**
 * Checks if the collection is empty.
 * @return true if no elements are present, false otherwise
 */","* Returns true if the container is empty, false otherwise.
     *
     * @return true if the container is empty, false otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSArrayList:isEmpty(),141,145,"/**
 * Checks if the collection is empty.
 * @return true if the collection contains no elements, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,isDataEmpty,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:isDataEmpty(),82,86,"/**
 * Checks if the list of triangles is empty.
 * @return true if no triangles are present; false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,removeRecipient,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:removeRecipient(org.apache.pdfbox.pdmodel.encryption.PublicKeyRecipient),86,89,"/**
 * Removes a recipient from the list.
 * @param recipient the PublicKeyRecipient to remove
 * @return true if removed, false otherwise
 */","* Removes a recipient from the recipients list.
     * @param recipient The recipient to remove.
     * @return true If a recipient was found and removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,iterator,org.apache.pdfbox.cos.COSArray:iterator(),527,531,"/**
 * Returns an iterator over the COSBase objects.
 * @return Iterator of COSBase elements
 */","* Get access to the list.
     *
     * @return an iterator over the array elements",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,iterator,org.apache.pdfbox.pdmodel.common.COSArrayList:iterator(),159,163,"/**
 * Returns an iterator over the elements in this collection.
 * @return Iterator object for traversing the collection
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyProtectionPolicy.java,getRecipientsIterator,org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy:getRecipientsIterator(),96,99,"/**
 * Returns an iterator over the list of public key recipients.
 * @return Iterator<PublicKeyRecipient> object
 */","* Returns an iterator to browse the list of recipients.
     * Object found in this iterator are <code>PublicKeyRecipient</code>.
     * @return The recipients list iterator.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toList,org.apache.pdfbox.cos.COSArray:toList(),669,672,"/**
 * Converts internal objects list to an ArrayList.
 * @return ArrayList of COSBase objects
 */","*  Return contents of COSArray as a Java List.
     *
     *  @return the COSArray as List",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNameStringList,org.apache.pdfbox.cos.COSArray:toCOSNameStringList(),679,684,"/**
 * Converts COSBase objects to a list of COSName strings.
 * @return List of COSName strings
 */","* This will return a list of names if the COSArray consists of COSNames only.
     * 
     * @return the list of names of the COSArray of COSNames",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSStringStringList,org.apache.pdfbox.cos.COSArray:toCOSStringStringList(),691,696,"/**
* Converts list of COSString objects to a list of strings.
* @return List of string values extracted from COSString objects
*/","* This will return a list of names if the COSArray consists of COSStrings only.
     * 
     * @return the list of names of the COSArray of COSStrings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,getBoolean,org.apache.pdfbox.cos.COSBoolean:getBoolean(java.lang.Boolean),99,102,"/**
* Converts Boolean to COSBoolean.
* @param value Java Boolean object
* @return COSBoolean representation of the input
*/","* This will get the boolean value.
     *
     * @param value Parameter telling which boolean value to get.
     *
     * @return The single boolean instance that matches the parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,toString,org.apache.pdfbox.cos.COSBoolean:toString(),121,125,"/**
 * Returns string representation of the value.
 * @return String form of the value
 */","* Return a string representation of this object.
     *
     * @return The string value of this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,writePDF,org.apache.pdfbox.cos.COSBoolean:writePDF(java.io.OutputStream),151,161,"/**
* Writes boolean value as PDF to OutputStream.
* @param output stream to write PDF data
* @throws IOException if writing fails
*/","* This will write this object out to a PDF stream.
     *
     * @param output The stream to write this object out to.
     *
     * @throws IOException If an error occurs while writing out this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,writePDF,org.apache.pdfbox.cos.COSNull:writePDF(java.io.OutputStream),65,68,"/**
 * Writes NULL bytes to the specified output stream.
 * @param output the OutputStream to write to
 * @throws IOException if an I/O error occurs
 */","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeBytes,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeBytes(byte[]),1524,1527,"/**
 * Writes byte array to output stream.
 * @param data byte array to be written
 * @throws IOException if an I/O error occurs
 */","* Writes binary data to the content stream.
     * 
     * @param data as byte formatted to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,entrySet,org.apache.pdfbox.cos.COSDictionary:entrySet(),1233,1236,"/**
 * Returns an unmodifiable set of entries in the dictionary.
 * @return Set of Map.Entry objects representing key-value pairs
 */","* Returns the name-value entries in this dictionary. The returned set is in the order the entries were added to the
     * dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return name-value entries in this dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isEntryChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isEntryChanged(java.lang.Object,java.lang.Object)",177,184,"/**
* Checks if an entry has changed.
* @param oldEntry the original entry
* @param newEntry the updated entry
* @return true if entries differ, false otherwise
*/","* Is the value changed?
     * 
     * @param oldEntry old entry
     * @param newEntry new entry
     * @return <code>true</code> if the entry is changed, <code>false</code>
     * otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,size,org.apache.pdfbox.cos.COSDictionary:size(),122,125,"/**
 * Returns the number of items in the collection.
 * @return Size of the collection as an integer
 */","* This will return the number of elements in this dictionary.
     *
     * @return The number of elements in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName),1177,1180,"/**
 * Retrieves item by key.
 * @param key unique identifier for the item
 * @return COSBase object or null if not found
 */","* This will do a lookup into the dictionary.
     *
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,keySet,org.apache.pdfbox.cos.COSDictionary:keySet(),1221,1224,"/**
 * Returns the set of keys from the underlying map.
 * @return Set containing all COSName keys
 */","* Returns the names of the entries in this dictionary. The returned set is in the order the entries were added to
     * the dictionary.
     *
     * @since Apache PDFBox 1.1.0
     * @return names of the entries in this dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,forEach,org.apache.pdfbox.cos.COSDictionary:forEach(java.util.function.BiConsumer),1244,1247,"/**
 * Applies an action to each key-value pair in the map.
 * @param action the action to be performed on each entry
 */","* Convenience method that calls {@link Map#forEach(java.util.function.BiConsumer) Map.forEach(BiConsumer)}.
     *
     * @param action The action to be performed for each entry
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getValues,org.apache.pdfbox.cos.COSDictionary:getValues(),1254,1257,"/**
 * Returns the collection of values from the items map.
 * @return Collection of COSBase objects
 */","* This will get all of the values for the dictionary.
     *
     * @return All the values for the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,addAll,org.apache.pdfbox.cos.COSDictionary:addAll(org.apache.pdfbox.cos.COSDictionary),1277,1280,"/**
 * Adds all key-value pairs from another dictionary.
 * @param dict source dictionary containing items to add
 */","* This will add all of the dictionaries keys/values to this dictionary. Existing key/value pairs will be
     * overwritten.
     *
     * @param dict The dictionaries to get the key/value pairs from.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(org.apache.pdfbox.cos.COSName),1288,1291,"/**
 * Checks if the map contains a key.
 * @param name the key to check
 * @return true if the key is present, false otherwise
 */","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,tokenizeOnSpace,org.apache.pdfbox.util.StringUtil:tokenizeOnSpace(java.lang.String),36,39,"/**
 * Splits string into tokens on spaces.
 * @param s input string to split
 * @return array of tokens including spaces as separate elements
 */","* Split at spaces but keep them
     *
     * @param s
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseInt,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseInt(java.lang.String),112,115,"/**
 * Converts string to integer.
 * @param token string representation of an integer
 * @return parsed integer value
 */","* Parses a value of type ""int"".
     * @param token the token to be parsed
     * @return the parsed value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,"org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName,java.lang.String)",73,88,"/**
 * Initializes a FontType with specified type and subtype.
 * @param type font type as COSName
 * @param subtypeString string representation of font subtype
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunction:toString(),362,366,"/**
 * Returns string representation of FunctionType.
 * @return concatenated string with function type
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/ProtectionPolicy.java,setEncryptionKeyLength,org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy:setEncryptionKeyLength(int),46,53,"/**
* Sets the encryption key length.
* @param l key length, must be 40, 128, or 256
*/","* set the length in (bits) of the secret key that will be
     * used to encrypt document data.
     * The default value is 40 bits, which provides a low security level
     * but is compatible with old versions of Acrobat Reader.
     *
     * @param l the length in bits (must be 40, 128 or 256)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setStartPage,org.apache.pdfbox.text.PDFTextStripper:setStartPage(int),1077,1084,"/**
* Sets the starting page value.
* @param startPageValue 1-based page number
* @throws IllegalArgumentException if startPageValue is less than 1
*/","* This will set the first page to be extracted by this class.
     *
     * @param startPageValue New value of 1-based startPage property.
     * 
     * @throws IllegalArgumentException if the parameter is below 1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,setEndPage,org.apache.pdfbox.text.PDFTextStripper:setEndPage(int),1105,1112,"/**
* Sets the end page value.
* @param endPageValue 1-based end page number
* @throws IllegalArgumentException if endPageValue is less than or equal to 0
*/","* This will set the last page to be extracted by this class.
     *
     * @param endPageValue New value of 1-based endPage property.
     *
     * @throws IllegalArgumentException if the parameter is below 1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,hashCode,org.apache.pdfbox.cos.COSString:hashCode(),286,291,"/**
* Generates hash code based on byte array and hex form flag.
* @return computed hash code
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,<init>,org.apache.pdfbox.filter.FilterFactory:<init>(),39,69,"/**
* Initializes filter factory with various decoding filters.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,<init>,"org.apache.pdfbox.pdfparser.BruteForceParser:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.pdfparser.COSParser)",92,97,"/**
* Initializes a new BruteForceParser instance.
* @param cosDocument the COSDocument to parse
* @param cosParser the COSParser used for parsing
* @throws IOException if an I/O error occurs
*/","* Constructor. Triggers a brute force search for all objects of the document.
     *
     * @param cosDocument the corresponding COS document
     * @param cosParser the COSParser to be used for reading the pdf
     * 
     * @throws IOException if the source data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,<init>,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:<init>(),72,75,"/**
 * Initializes a new XrefTrailerObj with TABLE xref type.
 */",*  Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary),74,83,"/**
* Initializes PDResources with a COSDictionary.
* @param resourceDictionary the dictionary containing resources
* @throws IllegalArgumentException if resourceDictionary is null
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,"org.apache.pdfbox.pdmodel.PDResources:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",91,100,"/**
* Initializes PDResources with a dictionary and cache.
* @param resourceDictionary the COSDictionary containing resources
* @param resourceCache the ResourceCache for caching resources
*/","* Constructor for reading.
     *
     * @param resourceDictionary The cos dictionary for this resource.
     * @param resourceCache The document's resource cache, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Operators.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.Operators:<init>(),82,129,"/**
* Initializes a map with operator names and their corresponding enum values.
*/",* Creates a new Operators object with the default set of operators.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGB(float[]),124,141,"/**
 * Converts a color value to RGB.
 * @param value input color value array
 * @return RGB color array
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",98,102,"/**
* Constructs a PDAcroForm from a document and a form dictionary.
* @param doc PDDocument containing the form
* @param form COSDictionary representing the form data
*/","* Constructor.
     *
     * @param doc The document that this form is part of.
     * @param form The existing acroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,<init>,org.apache.pdfbox.rendering.GlyphCache:<init>(org.apache.pdfbox.pdmodel.font.PDVectorFont),42,45,"/**
 * Initializes a new GlyphCache instance with the specified font.
 * @param font PDVectorFont object to be cached
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getTrailerCount,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getTrailerCount(),142,145,"/**
 * Returns the count of trailers.
 * @return number of trailer entries in the map
 */","* Returns the count of trailers.
     *
     * @return the count of trailers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getAllFilters,org.apache.pdfbox.filter.FilterFactory:getAllFilters(),99,102,"/**
 * Retrieves all filters.
 * @return Collection of Filter objects
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectFromPool,org.apache.pdfbox.cos.COSDocument:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),505,514,"/**
* Retrieves an object from the pool by key.
* @param key unique identifier for the object
* @return COSObject if found, otherwise null
*/","* This will get an object from the pool.
     *
     * @param key The object key.
     *
     * @return The object in the pool or a new one if it has not been parsed yet.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,addXRefTable,org.apache.pdfbox.cos.COSDocument:addXRefTable(java.util.Map),521,524,"/**
* Adds entries to the cross-reference table.
* @param xrefTableValues map of COSObjectKey to Long values
*/","* Populate XRef HashMap with given values.
     * Each entry maps ObjectKeys to byte offsets in the file.
     * @param xrefTableValues  xref table entries to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parseReal,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parseReal(java.lang.String),122,125,"/**
 * Parses a string to a floating-point number.
 * @param token string representation of the number
 * @return parsed float value
 */","* Parses a value of type ""real"".
     * @param token the token to be parsed
     * @return the parsed value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,coerce,org.apache.pdfbox.cos.COSFloat:coerce(float),120,137,"/**
* Coerces a float value to handle special cases.
* @param floatValue input floating-point number
* @return coerced float value with special cases handled
*/","* Check and coerce the value field to be between MIN_NORMAL and MAX_VALUE.
     * 
     * @param floatValue the value to be checked
     * @return the coerced value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getDir,org.apache.pdfbox.text.TextPosition:getDir(),245,284,"/**
 * Determines the text direction based on matrix transformations.
 * @return Direction in degrees (0, 90, 180, 270)
 */","* Return the direction/orientation of the string in this object based on its text matrix. Only
     * angles of 0, 90, 180, or 270 are supported. To get other angles, use this code:
     * <pre>
     * TextPosition text = ...
     * Matrix m = text.getTextMatrix().clone();
     * m.concatenate(text.getFont().getFontMatrix());
     * int angle = (int) Math.round(Math.toDegrees(Math.atan2(m.getShearY(), m.getScaleY())));
     * </pre>
     *
     * @return The direction of the text (0, 90, 180, or 270).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,equals,org.apache.pdfbox.cos.COSFloat:equals(java.lang.Object),175,180,"/**
* Compares this COSFloat with another object.
* @param o the object to compare
* @return true if objects are equal, false otherwise
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,hashCode,org.apache.pdfbox.cos.COSFloat:hashCode(),185,189,"/**
 * Generates hash code based on float value.
 * @return hash code of the float value
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,formatString,org.apache.pdfbox.cos.COSFloat:formatString(),204,214,"/**
* Formats the numeric value as a string.
* Handles scientific notation conversion if necessary.
* @return formatted string representation of the value
*/","* Builds, if needed, and returns the string representation of the current value.
     * @return current value as string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSNull,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSNull(java.io.OutputStream),385,389,"/**
 * Writes ""null"" followed by a space to the output stream.
 * @param output the OutputStream to write to
 * @throws IOException if an I/O error occurs
 */","* Write {@link COSNull} to the given stream.
     *
     * @param output The stream, that shall be written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,<init>,org.apache.pdfbox.cos.COSIncrement:<init>(org.apache.pdfbox.cos.COSUpdateInfo),67,70,"/**
 * Constructs a COSIncrement with the given update info.
 * @param incrementOrigin the original update information
 */","* Creates a new {@link COSIncrement} for the given {@link COSUpdateInfo}, the increment will use it´s
     * {@link COSDocumentState} as it´s own origin and shall collect all updates contained in the given
     * {@link COSUpdateInfo}.<br>
     * Should the given object be {@code null}, the resulting increment shall be empty.
     *
     * @param incrementOrigin The {@link COSUpdateInfo} serving as an update source for this {@link COSIncrement}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,<init>,org.apache.pdfbox.multipdf.PDFCloneUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),57,60,"/**
 * Initializes PDF cloning utility with destination document.
 * @param dest PDDocument to clone content into
 */","* Creates a new instance for the given target document.
     * 
     * @param dest the destination PDF document that will receive the clones",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(boolean),102,105,"/**
 * Initializes the resource cache.
 * @param enableStableCache flag to enable or disable stable caching
 */","* Constructor providing a parameter to enable/disable the stable object cache.
     * 
     * @param enableStableCache enables/disables the stable object cache
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,isNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:isNeedToBeUpdated(),30,33,"/**
 * Checks if the update state indicates an update is needed.
 * @return true if updated, false otherwise
 */","* Get the update state for the COSWriter. This indicates whether an object is to be written
     * when there is an incremental save.
     *
     * @return the update state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,contains,org.apache.pdfbox.cos.COSIncrement:contains(org.apache.pdfbox.cos.COSBase),243,246,"/**
* Checks if the collection contains the specified COSBase.
* @param base the COSBase to check for presence
* @return true if found, false otherwise
*/","* Returns {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     *
     * @param base The {@link COSBase} to check.
     * @return {@code true}, if the given {@link COSBase} is already known to and has been processed by this
     * {@link COSIncrement}.
     * @see #objects
     * @see #processedObjects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,isExcluded,org.apache.pdfbox.cos.COSIncrement:isExcluded(org.apache.pdfbox.cos.COSBase),325,328,"/**
 * Checks if a COSBase object is in the exclusion list.
 * @param base the COSBase object to check
 * @return true if excluded, false otherwise
 */","* Returns {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     *
     * @param base The {@link COSBase} to check for exclusion.
     * @return {@code true}, if the given {@link COSBase} has been excluded from the increment, and hence is contained
     * in {@link #excluded}.
     * @see #excluded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,add,org.apache.pdfbox.cos.COSIncrement:add(org.apache.pdfbox.cos.COSBase),275,281,"/**
 * Adds a COSBase object to the list.
 * @param object the COSBase object to add
 */","* The given object and actual {COSBase}s shall be part of the increment and must be added to {@link #objects},
     * if possible.<br>
     * {@code null} values shall be skipped.
     *
     * @param object The {@link COSBase} to add to {@link #objects}.
     * @see #objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,addProcessedObject,org.apache.pdfbox.cos.COSIncrement:addProcessedObject(org.apache.pdfbox.cos.COSObject),291,297,"/**
* Adds a processed COSObject to the list.
* @param base the COSObject to be added
*/","* The given {@link COSObject} has been processed, or is being processed. It shall be added to
     * {@link #processedObjects} to skip it, should it be encountered again.<br>
     * {@code null} values shall be ignored.
     *
     * @param base The {@link COSObject} to add to {@link #processedObjects}.
     * @see #processedObjects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneForNewDocument(org.apache.pdfbox.cos.COSBase),81,103,"/**
 * Clones a COSBase object for a new document.
 * @param base the original COSBase object to be cloned
 * @return the cloned TCOSBase object
 * @throws IOException if an I/O error occurs during cloning
 */","* Deep-clones the given object for inclusion into a different PDF document identified by the destination parameter.
     * 
     * Expert use only, don’t use it if you don’t know exactly what you are doing.
     * 
     * @param base the initial object as the root of the deep-clone operation
     * @return the cloned instance of the base object
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,registerTrueTypeFontForClosing,org.apache.pdfbox.pdmodel.PDDocument:registerTrueTypeFontForClosing(org.apache.fontbox.ttf.TrueTypeFont),909,912,"/**
 * Registers TrueTypeFont for closing.
 * @param ttf TrueTypeFont object to be registered
 */","* For internal PDFBox use when creating PDF documents: register a TrueTypeFont to make sure it is closed when the
     * PDDocument is closed to avoid memory leaks. Users don't have to call this method, it is done by the appropriate
     * PDFont classes.
     *
     * @param ttf the TrueTypeFont to be registered",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addToSubset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addToSubset(int),289,293,"/**
 * Adds a Unicode code point to the subset.
 * @param codePoint the Unicode code point to add
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,createWidgetDictionarySet,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:createWidgetDictionarySet(java.util.List),824,836,"/**
* Creates a set of COSDictionary objects from PDF fields.
* @param fields list of PDField objects representing form fields
* @return set of COSDictionary objects representing widget dictionaries
*/","* Return a set of all annotation widget dictionaries related to the fields to be flattened.
     *
     * @param fields
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,addGlyphIds,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:addGlyphIds(java.util.Set),295,298,"/**
 * Adds a set of glyph IDs to the collection.
 * @param glyphIds set of unique glyph identifiers
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getWidgets(),263,267,"/**
 * Returns an empty list of annotation widgets.
 * @return Empty list of PDAnnotationWidget objects
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getExportValues(),58,62,"/**
 * Returns an empty list of export values.
 * @return Empty list of strings
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,<init>,"org.apache.pdfbox.cos.COSInputStream:<init>(java.io.InputStream,java.util.List)",85,89,"/**
 * Initializes a COSInputStream with an input stream and decode results.
 * @param input the source input stream
 * @param decodeResults list of decoding results
 */","* Constructor.
     * 
     * @param input decoded stream
     * @param decodeResults results of decoding",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,<init>,org.apache.pdfbox.filter.ASCII85InputStream:<init>(java.io.InputStream),51,59,"/**
* Initializes an ASCII85 input stream.
* @param is the underlying input stream
*/","* Constructor.
     *
     * @param is The input stream to actually read from.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:<init>(java.io.InputStream,int,int,long,boolean)",89,124,"/**
* Initializes CCITTFaxDecoderStream with given parameters.
* @param stream input stream for fax data
* @param columns number of columns in the image
* @param type compression type (e.g., CCITT_T4, CCITT_T6)
* @param options additional options for decoding
* @param byteAligned flag indicating if byte alignment is required
*/","* Creates a CCITTFaxDecoderStream.
     * This constructor may be used for CCITT streams embedded in PDF files,
     * which use EncodedByteAlign.
     *
     * @param stream the compressed CCITT stream.
     * @param columns the number of columns in the stream.
     * @param type the type of stream, must be one of {@code COMPRESSION_CCITT_MODIFIED_HUFFMAN_RLE},
     *             {@code COMPRESSION_CCITT_T4} or {@code COMPRESSION_CCITT_T6}.
     * @param options CCITT T.4 or T.6 options.
     * @param byteAligned enable byte alignment used in PDF files (EncodedByteAlign).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,get,org.apache.pdfbox.cos.COSInteger:get(long),87,100,"/**
* Retrieves or creates a COSInteger.
* @param val long value to convert
* @return COSInteger instance
*/","* Returns a COSInteger instance with the given value.
     *
     * @param val integer value
     * @return COSInteger instance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,getInvalid,org.apache.pdfbox.cos.COSInteger:getInvalid(boolean),102,106,"/**
 * Returns an invalid COSInteger value.
 * @param maxValue true for Long.MAX_VALUE, false for Long.MIN_VALUE
 * @return COSInteger representing either the maximum or minimum long value
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,equals,org.apache.pdfbox.cos.COSInteger:equals(java.lang.Object),126,130,"/**
* Checks equality with another object.
* @param o object to compare
* @return true if equal, false otherwise
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,toString,org.apache.pdfbox.cos.COSInteger:toString(),145,149,"/**
 * Returns string representation of COSInt.
 * @return formatted string with value
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInteger.java,writePDF,org.apache.pdfbox.cos.COSInteger:writePDF(java.io.OutputStream),214,217,"/**
* Writes value to PDF stream.
* @param output OutputStream to write to
* @throws IOException if writing fails
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,get,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:get(java.lang.Object),96,100,"/**
 * Retrieves value by key from the underlying map.
 * @param key unique identifier for the value
 * @return value associated with the key or null if not found
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:hasExplicitWidth(int),282,286,"/**
* Checks if a character has an explicit width.
* @param code character code
* @return true if explicit width exists, false otherwise
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFontName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFontName(java.lang.String),234,237,"/**
 * Retrieves mapped font name.
 * @param fontName original font name
 * @return mapped FontName object or null if not found
 */","* Returns the base name of the font which the given font name maps to.
     *
     * @param fontName name of font, either a base name or an alias
     * @return the base name or null if this is not one of the known names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(java.lang.String,org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName)",165,168,"/**
* Maps an alias to a base font name.
* @param alias alternative name for the font
* @param baseName standard font name
*/","* Adds an alias name for a standard font to the map of known aliases to the map of aliases (alias as key, standard
     * name as value). We want a single lookup in tbaseNamehe map to find the font both by a base name or an alias.
     *
     * @param alias an alias for the font
     * @param baseName  the font name of the Standard 14 font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,hashCode,org.apache.pdfbox.cos.COSName:hashCode(),743,747,"/**
 * Generates hash code based on the name.
 * @return hash code of the name
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,compareTo,org.apache.pdfbox.cos.COSName:compareTo(org.apache.pdfbox.cos.COSName),749,753,"/**
 * Compares this COSName to another based on their names.
 * @param other the COSName to compare with
 * @return negative if less, positive if greater, zero if equal
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedExportValues(),122,145,"/**
 * Retrieves selected export values based on field value.
 * @return List of selected export values
 */","* This will get the selected export values.
     * <p>
     * A RadioButton might have an export value to allow field values
     * which can not be encoded as PDFDocEncoding or for the same export value 
     * being assigned to multiple RadioButtons in a group.<br>
     * To define an export value the RadioButton must define options {@link #setExportValues(List)}
     * which correspond to the individual items within the RadioButton.</p>
     * <p>
     * The method will either return the corresponding values from the options entry or in case there
     * is no such entry the fields value</p>
     * 
     * @return the export value of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,isEmpty,org.apache.pdfbox.cos.COSName:isEmpty(),759,762,"/**
 * Checks if the name is empty.
 * @return true if name is empty, false otherwise
 */","* Returns true if the name is the empty string.
     * @return true if the name is the empty string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeNumber,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeNumber(java.io.OutputStream,long,int)",221,234,"/**
 * Writes a long number to an OutputStream in big-endian format.
 * @param os the OutputStream to write to
 * @param number the long number to write
 * @param bytes the number of bytes to use for writing
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAbstractContentStream:addComment(java.lang.String),1422,1431,"/**
 * Adds a comment to the output stream.
 * @param comment text to add, must not contain newlines
 * @throws IOException if an I/O error occurs
 */","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeLine(),1513,1516,"/**
 * Writes a newline character to the output stream.
 * @throws IOException if an I/O error occurs
 */","* Writes a newline to the content stream as ASCII.
     * 
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,isFloat,org.apache.pdfbox.cos.COSNumber:isFloat(java.lang.String),97,109,"/**
* Checks if a string represents a float.
* @param number the string to check
* @return true if contains '.' or 'e', indicating a float
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getCharsUTF16BE,org.apache.pdfbox.util.Hex:getCharsUTF16BE(java.lang.String),132,148,"/**
 * Converts a string to its UTF-16BE hexadecimal representation.
 * @param text input string
 * @return char array containing the hexadecimal values in UTF-16BE format
 */","* Takes the characters in the given string, convert it to bytes in UTF16-BE format
     * and build a char array that corresponds to the ASCII hex encoding of the resulting
     * bytes.
     *
     * Example:
     * <pre>
     *   getCharsUTF16BE(""ab"") == new char[]{'0','0','6','1','0','0','6','2'}
     * </pre>
     *
     * @param text The string to convert
     * @return The string converted to hex",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,getObject,org.apache.pdfbox.cos.COSObject:getObject(),109,130,"/**
* Returns the COS object.
* @return COSBase object or null if not found
*/","* This will get the object that this object encapsulates.
     *
     * @return The encapsulated object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int,int)",54,66,"/**
* Constructs a COSObjectKey with specified object and generation numbers.
* @param num object number (must be non-negative)
* @param gen generation number (must be non-negative)
* @param index stream index
*/","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.
     * @param index The index within a compressed object stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,hashCode,org.apache.pdfbox.cos.COSObjectKey:hashCode(),134,138,"/**
 * Generates hash code based on numberAndGeneration.
 * @return hash code of the long value
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,toString,org.apache.pdfbox.cos.COSObjectKey:toString(),140,144,"/**
 * Returns string representation of the object.
 * @return formatted string with number and generation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,compareTo,org.apache.pdfbox.cos.COSObjectKey:compareTo(org.apache.pdfbox.cos.COSObjectKey),146,150,"/**
 * Compares this COSObjectKey with another based on number and generation.
 * @param other the key to compare with
 * @return negative if less, positive if greater, zero if equal
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getDefaultDecode(int),110,114,"/**
* Returns default decode array based on bits per component.
* @param bitsPerComponent number of bits for each color component
* @return float array with min and max values for decoding
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,calculateInputValues,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:calculateInputValues(double,double)",304,335,"/**
 * Calculates two possible values of s for a given point (x, y) in a gradient fill.
 * @param x x-coordinate of the point
 * @param y y-coordinate of the point
 * @return array containing two float values representing s
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorX,org.apache.pdfbox.util.Matrix:getScalingFactorX(),454,479,"/**
 * Calculates the X scaling factor from a transformation matrix.
 * @return The absolute value of the X scaling factor.
 */","* Returns the x-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The x-scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScalingFactorY,org.apache.pdfbox.util.Matrix:getScalingFactorY(),486,494,"/**
* Calculates the Y scaling factor.
* @return Y scaling factor based on array values
*/","* Returns the y-scaling factor of this matrix. This is calculated from the scale and shear.
     *
     * @return The y-scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,<init>,"org.apache.pdfbox.cos.COSOutputStream:<init>(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.OutputStream,org.apache.pdfbox.io.RandomAccessStreamCache)",53,61,"/**
* Initializes a COSOutputStream with specified filters, parameters, and output stream.
* @param filters list of filters to apply
* @param parameters dictionary of additional parameters
* @param output underlying OutputStream for data
* @param streamCache cache for random access streams
* @throws IOException if an I/O error occurs during initialization
*/","* Creates a new COSOutputStream writes to an encoded COS stream.
     * 
     * @param filters Filters to apply.
     * @param parameters Filter parameters.
     * @param output Encoded stream.
     * @param streamCache Stream cache to use.
     * 
     * @throws IOException If there was an error creating a temporary buffer",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,<init>,org.apache.pdfbox.filter.ASCII85OutputStream:<init>(java.io.OutputStream),54,64,"/**
* Initializes ASCII85OutputStream with an underlying OutputStream.
* @param out the target OutputStream for encoded data
*/","* Constructor.
     *
     * @param out The output stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream),56,59,"/**
 * Constructs a COSStandardOutputStream.
 * @param out underlying output stream
 */","* Constructor.
     *
     * @param out The underlying stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,<init>,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:<init>(java.io.OutputStream,long)",67,71,"/**
 * Initializes a new COSStandardOutputStream with an output stream and position.
 * @param out the underlying OutputStream to write data to
 * @param position the initial position in the stream
 */","* Constructor.
     *
     * @param out The underlying stream to write to.
     * @param position The current position of output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,"org.apache.pdfbox.cos.COSOutputStream:write(byte[],int,int)",69,80,"/**
 * Writes bytes to the output stream.
 * @param b byte array containing data to write
 * @param off offset in the byte array to start writing from
 * @param len number of bytes to write
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(int),82,93,"/**
* Writes a byte to the output stream.
* Uses buffer if available, otherwise falls back to superclass method.
* @param b byte to be written
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,flush,org.apache.pdfbox.cos.COSOutputStream:flush(),95,102,"/**
* Flushes the buffer or calls superclass flush if buffer is null.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$1:close(),392,423,"/**
* Closes resources, marking scratch file pages as free.
* @throws IOException if an I/O error occurs during closure
*/","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,close,org.apache.pdfbox.cos.COSStream$2:close(),392,423,"/**
* Closes resources, marking scratch file pages as free.
* @throws IOException if an I/O error occurs during closing
*/","* {@inheritDoc}
     *
     * Called by PDFBox when the PDDocument is closed, this closes the stream and removes the data. You will usually not
     * need this.
     *
     * @throws IOException if something went wrong when closing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,parseWidth,"org.apache.pdfbox.pdmodel.font.PDType3CharProc:parseWidth(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",187,202,"/**
* Parses width from COSBase arguments for given operator.
* @param operator the PDF operator (d0 or d1)
* @param arguments list of COSBase arguments
* @return parsed float value if valid, otherwise throws IOException
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getBytes,org.apache.pdfbox.cos.COSString:getBytes(),247,250,"/**
 * Returns a copy of the internal byte array.
 * @return new byte array containing the same data as the internal array
 */","* Returns the raw bytes of the string using a new byte array. Best used with a PDF <i>byte string</i>.
     * 
     * @return a clone of the underlying byte[] representation of the COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,adjustUserKey,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:adjustUserKey(byte[]),1207,1225,"/**
 * Adjusts user key length to 48 bytes.
 * @param u input user key as a byte array
 * @return adjusted user key or empty array if null input
 * @throws IOException if input length is less than 48 bytes
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[])",1227,1233,"/**
 * Concatenates two byte arrays.
 * @param a first byte array
 * @param b second byte array
 * @return concatenated byte array
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,concat,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:concat(byte[],byte[],byte[])",1235,1242,"/**
* Concatenates three byte arrays into one.
* @param a first byte array
* @param b second byte array
* @param c third byte array
* @return concatenated byte array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncate127,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncate127(byte[]),1244,1253,"/**
* Truncates input array to maximum length of 127 bytes.
* @param in input byte array
* @return truncated byte array or original if shorter than 127 bytes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,copyImageBytes,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:copyImageBytes(byte[],int,byte[],byte[],int)",538,546,"/**
 * Copies image bytes from source to target.
 * @param transferRow source byte array containing image data
 * @param indexInTranferRow starting index in the source array
 * @param targetValues destination byte array for copied image data
 * @param alphaImageData optional alpha channel data array
 * @param alphaPtr pointer index in alpha channel data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteIncrement,org.apache.pdfbox.pdfwriter.COSWriter:doWriteIncrement(),852,861,"/**
 * Writes incremental updates to a PDF.
 * @throws IOException if an I/O error occurs
 */","* Write an incremental update for a non signature case. This can be used for e.g. augmenting
     * signatures.
     *
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getASCII,org.apache.pdfbox.cos.COSString:getASCII(),236,240,"/**
 * Converts byte array to ASCII string.
 * @return ASCII representation of bytes
 */","* Returns the content of this string as a PDF <i>ASCII string</i>.
     * 
     * @return the ASCII string representation of the COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeCollectionFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeCollectionFile(byte[]),266,269,"/**
* Checks if file is a TrueType Collection.
* @param header file header bytes
* @return true if the header matches TTF collection signature, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isOpenTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isOpenTypeFile(byte[]),271,274,"/**
* Checks if file is an OpenType font.
* @param header first few bytes of the file
* @return true if it's an OpenType font, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,isAcceptingUpdates,org.apache.pdfbox.cos.COSUpdateState:isAcceptingUpdates(),195,198,"/**
 * Checks if the document is accepting updates.
 * @return true if updates are accepted, false otherwise
 */","* Returns {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     *
     * @return {@code true}, if the linked {@link #originDocumentState} {@link COSDocumentState#isAcceptingUpdates()}
     * and such a {@link COSDocumentState} has been linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see COSDocumentState#isAcceptingUpdates()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,set,"org.apache.pdfbox.cos.PDFDocEncoding:set(int,char)",112,116,"/**
* Maps an integer code to a Unicode character and vice versa.
* @param code integer representing the code
* @param unicode character representing the Unicode
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,toString,org.apache.pdfbox.cos.PDFDocEncoding:toString(byte[]),121,136,"/**
 * Converts byte array to string using a code-to-unicode mapping.
 * @param bytes input byte array
 * @return resulting string or '?' for unmappable bytes
 */",* Returns the string representation of the given PDFDocEncoded bytes.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,readOperator,org.apache.pdfbox.pdfparser.PDFStreamParser:readOperator(),412,443,"/**
 * Reads an operator from the source.
 * @return String representation of the operator
 * @throws IOException if reading fails
 */","* This will read an operator from the stream.
     *
     * @return The operator that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,getBytes,org.apache.pdfbox.cos.PDFDocEncoding:getBytes(java.lang.String),141,149,"/**
* Converts a string to a byte array using a mapping.
* @param text input string to convert
* @return byte array representation of the string
*/",* Returns the given string encoded with PDFDocEncoding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/PDFDocEncoding.java,containsChar,org.apache.pdfbox.cos.PDFDocEncoding:containsChar(char),156,159,"/**
 * Checks if the Unicode to code map contains the specified character.
 * @param character the character to check
 * @return true if the character is in the map, false otherwise
 */","* Returns true if the given character is available in PDFDocEncoding.
     *
     * @param character UTF-16 character",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsKey,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsKey(java.lang.Object),78,82,"/**
 * Checks if the map contains a mapping for the specified key.
 * @param key key whose presence in this map is to be tested
 * @return true if this map contains a mapping for the specified key
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,containsName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:containsName(java.lang.String),213,216,"/**
 * Checks if a font name is in the aliases map.
 * @param fontName the font name to check
 * @return true if fontName exists in the map, false otherwise
 */","* Returns true if the given font name is one of the known names, including alias.
     *
     * @param fontName the name of font, either a base name or alias
     * @return true if the name is one of the known names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getCodeToNameMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getCodeToNameMap(),81,84,"/**
 * Returns an unmodifiable map of code to name mappings.
 * @return Map with integer codes as keys and corresponding names as values
 */","* Returns an unmodifiable view of the code -&gt; name mapping.
     * 
     * @return the code -&gt; name map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getNameToCodeMap,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getNameToCodeMap(),92,95,"/**
 * Returns an unmodifiable map of name to code mappings.
 * @return Map containing names as keys and codes as values
 */","* Returns an unmodifiable view of the name -&gt; code mapping. More than one name may map to
     * the same code.
     *
     * @return the name -&gt; code map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,setNeedToBeUpdated,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:setNeedToBeUpdated(boolean),40,44,"/**
 * Throws UnsupportedOperationException as this method is not implemented.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:remove(),245,249,"/**
 * Throws UnsupportedOperationException as removal is not supported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,remove,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:remove(),416,421,"/**
* Throws UnsupportedOperationException as removal is not supported.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,getFunctionType,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:getFunctionType(),37,43,"/**
* Throws an exception as this method should not be called.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encode(int),394,400,"/**
* Encodes Unicode to byte array.
* @param unicode the Unicode code point to encode
* @return encoded byte array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,encodeGlyphId,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:encodeGlyphId(int),402,406,"/**
 * Encodes a glyph ID.
 * @param glyphId the ID of the glyph to encode
 * @throws UnsupportedOperationException always, as encoding is not supported
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:addToSubset(int),433,437,"/**
 * Throws an exception as adding to subset is unsupported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,subset,org.apache.pdfbox.pdmodel.font.PDSimpleFont:subset(),439,444,"/**
* Throws exception as only TTF subsetting is supported.
* @throws IOException if unsupported operation is attempted
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",126,132,"/**
 * Throws an exception as this method is not supported.
 * @param ttfSubset input stream for the TrueType font subset
 * @param tag font tag identifier
 * @param gidToCid mapping of glyph IDs to character codes
 * @throws IOException if operation fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getNumberOfComponents(),74,78,"/**
 * Throws UnsupportedOperationException as this method is not implemented.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getDefaultDecode(int),80,84,"/**
 * Throws UnsupportedOperationException as default decoding is not supported.
 * @param bitsPerComponent number of bits per component
 * @return never returns, throws exception instead
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGB(float[]),92,96,"/**
 * Converts a color value to RGB.
 * @param value input color value array
 * @throws UnsupportedOperationException always thrown as conversion is unsupported
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRGBImage(java.awt.image.WritableRaster),98,102,"/**
 * Converts a WritableRaster to an RGB BufferedImage.
 * Throws UnsupportedOperationException as it is not implemented.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:toRawImage(java.awt.image.WritableRaster),104,108,"/**
 * Throws UnsupportedOperationException as conversion is not supported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,remove,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:remove(),71,75,"/**
 * Throws an UnsupportedOperationException as removal is not supported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,remove,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:remove(),102,106,"/**
* Throws UnsupportedOperationException as removal is not supported.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,flush,org.apache.pdfbox.filter.CCITTFaxEncoderStream:flush(),89,92,"/**
 * Flushes the underlying stream.
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,encode,"org.apache.pdfbox.filter.IdentityFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",42,48,"/**
* Transfers data from input to output stream and flushes.
* @param input source InputStream
* @param encoded destination OutputStream
* @param parameters ignored in this implementation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,org.apache.pdfbox.filter.ASCII85InputStream:read(),68,166,"/**
* Reads a byte from the Ascii85 encoded stream.
* @return next byte or -1 if end of stream
* @throws IOException on read error
*/","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,encode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",77,189,"/**
 * Encodes input stream using run-length encoding.
 * @param input the InputStream to encode
 * @param encoded the OutputStream for encoded data
 * @param parameters additional encoding parameters (not used)
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readCode(java.io.InputStream),317,321,"/**
 * Reads a single byte of data from the input stream.
 * @param in InputStream to read from
 * @return integer representing the byte value or -1 if end of stream is reached
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1CFont:readCode(java.io.InputStream),306,310,"/**
 * Reads a single byte from input stream.
 * @param in InputStream to read from
 * @return integer representing byte value or -1 if end of stream
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType1Font:readCode(java.io.InputStream),486,490,"/**
 * Reads a single byte of data from the input stream.
 * @param in InputStream to read from
 * @return the next byte of data, or -1 if the end of the stream is reached
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType3Font:readCode(java.io.InputStream),248,252,"/**
 * Reads a single byte from the input stream.
 * @param in InputStream to read from
 * @return integer representing the byte value or -1 if end of stream is reached
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,close,org.apache.pdfbox.filter.ASCII85InputStream:close(),210,217,"/**
* Closes the resource and marks it as end-of-file.
*/","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,write,org.apache.pdfbox.filter.ASCII85OutputStream:write(int),153,177,"/**
* Writes a byte to output stream, encoding it in ASCII85.
* @param b byte to write
* @throws IOException if an I/O error occurs
*/","* This will write a single byte.
     *
     * @param b The byte to write.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,flush,org.apache.pdfbox.filter.ASCII85OutputStream:flush(),184,226,"/**
* Flushes the ASCII85 encoded data to the output stream.
* Ensures proper padding and line breaks are applied.
*/","* This will flush the data to the stream.
     *
     * @throws IOException If there is an error writing the data to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,toString,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node:toString(),519,522,"/**
* Returns string representation of node.
* @return formatted string with leaf status, value, and fill capability
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,int)",528,558,"/**
 * Fills the trie with a value at a specific path and depth.
 * @param depth the depth of the node to fill
 * @param path the binary path to the node
 * @param value the value to assign to the node at the specified path
 * @throws IOException if a leaf node is encountered where no further nodes can be added
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fill,"org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree:fill(int,int,org.apache.pdfbox.filter.CCITTFaxDecoderStream$Node)",560,590,"/**
 * Fills a node at a specified path in a tree structure.
 * @param depth the depth of the tree
 * @param path the binary path to the node
 * @param node the node to insert
 * @throws IOException if a leaf node is encountered where no further insertion is possible
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,readBit,org.apache.pdfbox.filter.CCITTFaxDecoderStream:readBit(),409,425,"/**
 * Reads a single bit from the input stream.
 * @return true if the bit is set, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,truncateOrPad,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:truncateOrPad(byte[]),976,984,"/**
* Truncates or pads the input password to match encryption padding length.
* @param password input password as a byte array
* @return byte array of fixed length with password and padding
*/","* This will take the password and truncate or pad it as necessary.
     *
     * @param password The password to pad or truncate.
     *
     * @return The padded or truncated password.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,<init>,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:<init>(java.io.OutputStream,int,int,int)",64,76,"/**
* Initializes a CCITTFaxEncoderStream for encoding.
* @param stream output stream to write encoded data
* @param columns number of columns in the image
* @param rows number of rows in the image
* @param fillOrder pixel order (1 for most significant bit first, 0 for least significant bit first)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,close,org.apache.pdfbox.filter.CCITTFaxEncoderStream:close(),94,97,"/**
 * Closes the underlying stream.
 * @throws IOException if an I/O error occurs while closing the stream
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAbstractContentStream:close(),1550,1558,"/**
* Closes the output stream and logs a warning if text mode was used without ending it.
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,importXMPMetadata,org.apache.pdfbox.pdmodel.common.PDMetadata:importXMPMetadata(byte[]),96,103,"/**
* Writes XMP metadata to an output stream.
* @param xmp byte array containing XMP metadata
* @throws IOException if an I/O error occurs
*/","* Import an XMP stream into the PDF document.
     *
     * @param xmp The XMP data.
     *
     * @throws IOException If there is an error generating the XML document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,appendRawCommands,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:appendRawCommands(java.io.OutputStream,java.lang.String)",376,380,"/**
* Writes raw commands to an output stream and closes it.
* @param os OutputStream to write to
* @param commands string containing the commands to write
* @throws IOException if I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int,int)",236,253,"/**
* Writes code bits to the output stream.
* @param code integer representation of the code
* @param codeLength length of the code in bits
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,fill,org.apache.pdfbox.filter.CCITTFaxEncoderStream:fill(),259,264,"/**
* Writes buffered data to output stream and clears buffer.
* @throws IOException if writing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,splitAtPage,org.apache.pdfbox.multipdf.Splitter:splitAtPage(int),732,735,"/**
* Determines if page should be split.
* @param pageNumber current page number
* @return true if page is a split point, false otherwise
*/","* Check if it is necessary to create a new document.
     * By default a split occurs at every page.  If you wanted to split
     * based on some complex logic then you could override this method.  For example.
     * <code>
     * protected void splitAtPage()
     * {
     *     // will split at pages with prime numbers only
     *     return isPrime(pageNumber);
     * }
     * </code>
     * @param pageNumber the 0-based page number to be checked as splitting page
     * 
     * @return true If a new document should be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransform,org.apache.pdfbox.filter.DCTFilter:getAdobeTransform(javax.imageio.metadata.IIOMetadata),182,201,"/**
 * Extracts Adobe transform value from JPEG metadata.
 * @param metadata IIOMetadata object containing image data
 * @return Transform value as an Integer, defaulting to 0 if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getAdobeTransformByBruteForce,org.apache.pdfbox.filter.DCTFilter:getAdobeTransformByBruteForce(javax.imageio.stream.ImageInputStream),205,245,"/**
 * Searches for Adobe transform byte in image stream.
 * @param iis input stream of the image
 * @return transform byte value or 0 if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromYCCKtoCMYK,org.apache.pdfbox.filter.DCTFilter:fromYCCKtoCMYK(java.awt.image.Raster),250,286,"/**
* Converts YCCK raster to CMYK.
* @param raster input YCCK raster
* @return WritableRaster in CMYK format
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,fromBGRtoRGB,org.apache.pdfbox.filter.DCTFilter:fromBGRtoRGB(java.awt.image.Raster),289,310,"/**
* Converts BGR raster to RGB.
* @param raster input BGR raster
* @return WritableRaster with RGB color channels swapped
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,getNumChannels,org.apache.pdfbox.filter.DCTFilter:getNumChannels(javax.imageio.ImageReader),313,335,"/**
* Retrieves number of channels from image metadata.
* @param reader ImageReader instance for the image
* @return String representation of numChannels or empty string if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,encode,"org.apache.pdfbox.filter.DCTFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",343,348,"/**
* Throws exception as DCTFilter encoding is unsupported.
* Use JPEGFactory methods for encoding instead.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSourceRegion,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSourceRegion(java.awt.Rectangle),228,232,"/**
* Throws an exception as modification is unsupported.
* @param sourceRegion region to set (not used)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingX(int),234,238,"/**
 * Throws an exception as modification is unsupported.
 * @param ssX subsampling factor in X direction
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingY(int),240,244,"/**
* Throws an exception as modification is unsupported.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetX,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetX(int),246,250,"/**
* Throws an exception as modification is unsupported.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,setSubsamplingOffsetY,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:setSubsamplingOffsetY(int),252,256,"/**
 * Throws an exception as modifications are not allowed.
 * @param ssOffsetY subsampling offset in Y direction
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,encode,"org.apache.pdfbox.filter.JBIG2Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",148,153,"/**
* Throws exception as JBIG2 encoding is unsupported.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,encode,"org.apache.pdfbox.filter.JPXFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",208,213,"/**
 * Throws an exception as JPX encoding is not supported.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(int),361,365,"/**
 * Throws UnsupportedOperationException as writing is not supported.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,putAll,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:putAll(java.util.Map),127,131,"/**
* Throws an exception as this operation is not supported.
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightY(float),39,43,"/**
* Throws UnsupportedOperationException as the class is immutable.
* @param value float value to be set (unused)
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setUpperRightX(float),48,52,"/**
 * Throws exception as class is immutable.
 * @param value upper right X coordinate
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftY(float),57,61,"/**
 * Throws exception as class is immutable.
 * @param value Y-coordinate to be set (not used)
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:setLowerLeftX(float),66,70,"/**
 * Throws exception as the class is immutable.
 * @param value x-coordinate to set (not used)
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDFont:getPositionVector(int),236,240,"/**
 * Throws exception as horizontal fonts do not support position vectors.
 * @param code font identifier
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDType0Font:getStandard14Width(int),517,521,"/**
 * Throws an exception as this method is not implemented.
 * @param code some identifier or code value
 * @throws UnsupportedOperationException always thrown
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncodingFromFont(),115,120,"/**
* Throws exception as Type 3 fonts lack built-in encoding.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType3Font:getPath(java.lang.String),128,133,"/**
* Throws exception as Type 3 fonts do not support vector paths.
* @param name font name (unused)
* @throws IOException always thrown due to unsupported operation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBoxFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBoxFont(),142,147,"/**
* Throws exception as Type 3 fonts do not support FontBox.
* @throws UnsupportedOperationException always thrown
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType3Font:encode(int),242,246,"/**
* Throws UnsupportedOperationException as encoding is not implemented.
* @param unicode Unicode character to be encoded
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:getCOSObject(),40,44,"/**
 * Throws exception as built-in encodings cannot be serialized.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getInitialColor(),70,74,"/**
* Throws exception as JPX color spaces do not support drawing.
* @return Nothing, always throws UnsupportedOperationException
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:toRGB(float[]),76,80,"/**
* Throws exception as JPX color spaces do not support conversion to RGB.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getCOSObject(),94,98,"/**
* Throws exception as JPX color spaces do not support COS objects.
* @throws UnsupportedOperationException indicating operation is unsupported
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getSignatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getSignatureText(),555,558,"/**
 * Placeholder method to retrieve signature text.
 * Throws UnsupportedOperationException as it's not yet implemented.
 */","* returns visible signature text
     * @return the visible signature's text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureText,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureText(java.lang.String),565,568,"/**
 * Sets the signature text.
 * @param signatureText the text to be used as the signature
 * @return this PDVisibleSignDesigner instance
 * @throws UnsupportedOperationException if the method is not yet implemented
 */","* 
     * @param signatureText - adds the text on visible signature
     * @return the signature design",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(java.lang.String),118,123,"/**
* Throws exception as signature fields do not support setting value as String.
*/","* <b>This will throw an UnsupportedOperationException if used as the signature fields
     * value can't be set using a String</b>
     * 
     * @param value the plain text value.
     * 
     * @throws UnsupportedOperationException in all cases!",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,clipRegion,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:clipRegion(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle)",141,155,"/**
* Clips image to specified region.
* @param pdImage the PDImage to clip
* @param region the desired clipping area
* @return clipped Rectangle within image bounds
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getCompressionLevel,org.apache.pdfbox.filter.Filter:getCompressionLevel(),204,216,"/**
 * Retrieves the compression level for deflation.
 * @return integer representing the compression level, default is DEFAULT_COMPRESSION
 */",* @return the ZIP compression level configured for PDFBox,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,contains,org.apache.pdfbox.pdmodel.common.COSArrayList:contains(java.lang.Object),150,154,"/**
 * Checks if the collection contains the specified element.
 * @param o element to be checked
 * @return true if the collection contains the element, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,encode,"org.apache.pdfbox.filter.FlateFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",50,62,"/**
* Compresses input stream using DEFLATE algorithm.
* @param input source data to compress
* @param encoded output stream for compressed data
* @param parameters compression settings (not used)
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,<init>,org.apache.pdfbox.filter.FlateFilterDecoderStream:<init>(java.io.InputStream),54,60,"/**
* Creates a FlateFilterDecoderStream to decode compressed data.
* @param inputStream source of compressed data
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param inputStream The input stream to actually read from.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,fetch,org.apache.pdfbox.filter.FlateFilterDecoderStream:fetch(),62,116,"/**
 * Reads and inflates compressed data.
 * @return true if successful, false if EOF or error
 * @throws IOException on I/O errors
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,close,org.apache.pdfbox.filter.FlateFilterDecoderStream:close(),182,187,"/**
 * Closes the stream and releases resources.
 * Ends decompression and closes parent stream.
 */","* This will close the underlying stream and release any resources.
     *
     * @throws IOException If there is an error closing the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,logLevigoDonated,org.apache.pdfbox.filter.JBIG2Filter:logLevigoDonated(),52,61,"/**
* Logs donation information for the Levigo JBIG2 plugin once.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:<init>(),61,65,"/**
* Initializes a new instance of PDVisibleSigBuilder.
* Creates a PDF structure template and logs the creation.
*/","* Constructor, creates PDF template structure.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,setImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:setImage(java.awt.image.BufferedImage),455,462,"/**
* Sets the image and updates dimensions.
* @param image the BufferedImage to set
*/","* Set image and its height and width.
     *
     * @param image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRawImage(java.awt.image.WritableRaster),245,249,"/**
* Converts WritableRaster to BufferedImage using grayscale color space.
* @param raster source image data
* @return BufferedImage representation of the raster
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)",146,151,"/**
 * Draws an image at the specified coordinates.
 * @param img the image to be drawn
 * @param x the x-coordinate of the upper-left corner
 * @param y the y-coordinate of the upper-left corner
 * @param observer the image observer
 * @return true if the image is completely or partially drawn; false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,dispose,org.apache.pdfbox.rendering.GroupGraphics:dispose(),125,130,"/**
 * Releases resources used by graphics objects.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,checkIndexBounds,"org.apache.pdfbox.filter.LZWFilter:checkIndexBounds(java.util.List,long,javax.imageio.stream.MemoryCacheImageInputStream)",130,144,"/**
 * Validates that the given index is within bounds for the code table.
 * @param codeTable list of byte arrays representing code entries
 * @param index position to check in the code table
 * @param in input stream for error context
 * @throws IOException if index is out of bounds
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,findPatternCode,"org.apache.pdfbox.filter.LZWFilter:findPatternCode(java.util.List,byte[])",229,247,"/**
 * Finds the index of a pattern in a code table.
 * @param codeTable list of byte arrays representing codes
 * @param pattern byte array to search for
 * @return index of pattern in code table or -1 if not found
 */","* Find a matching pattern in the code table.
     *
     * @param codeTable The LZW code table.
     * @param pattern The pattern to be searched for.
     * @return The index of the matching pattern or -1 if nothing is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isTrueTypeFile,org.apache.pdfbox.pdmodel.font.PDFontFactory:isTrueTypeFile(byte[]),260,264,"/**
* Checks if file is of TrueType format.
* @param header file header bytes
* @return true if header matches TrueType signature, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,<init>,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:<init>(java.io.OutputStream,int,int,int,int)",278,289,"/**
* Initializes a PredictorOutputStream with specified parameters.
* @param out underlying output stream
* @param predictor prediction algorithm identifier
* @param colors number of color channels
* @param bitsPerComponent bits per component
* @param columns number of columns in the image
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodePredictorRow,"org.apache.pdfbox.filter.Predictor:decodePredictorRow(int,int,int,int,byte[],byte[])",49,202,"/**
* Decodes a predictor row in an image.
* @param predictor prediction algorithm type
* @param colors number of color channels
* @param bitsPerComponent bits per color component
* @param columns number of columns in the row
* @param actline current active line to decode
* @param lastline previous line for reference (used by some predictors)
*/","* Decodes a single line of data in-place.
     * @param predictor Predictor value for the current line
     * @param colors Number of color components, from decode parameters.
     * @param bitsPerComponent Number of bits per components, from decode parameters.
     * @param columns Number samples in a row, from decode parameters.
     * @param actline Current (active) line to decode. Data will be decoded in-place,
     *                i.e. - the contents of this buffer will be modified.
     * @param lastline The previous decoded line. When decoding the first line, this
     *                 parameter should be an empty byte array of the same length as
     *                 <code>actline</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterPaeth,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterPaeth(int,int,int,int)",680,702,"/**
* Applies Paeth filter for PNG compression.
* @param x current pixel value
* @param a left pixel value
* @param b above pixel value
* @param c top-left diagonal pixel value
* @return filtered byte value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,estCompressSum,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:estCompressSum(byte[]),704,713,"/**
* Estimates compression sum for PNG filter selection.
* @param dataRawRowSub raw row sub-byte array
* @return estimated sum of absolute byte values
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,equals,org.apache.pdfbox.pdmodel.PDPage:equals(java.lang.Object),805,809,"/**
* Checks if two PDPage objects are equal based on their COSObject.
* @param other the object to compare with
* @return true if both objects have the same COSObject, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree$SearchContext:<init>(org.apache.pdfbox.pdmodel.PDPage),422,425,"/**
 * Initializes a search context with a given PDF page.
 * @param page PDPage object representing the PDF page to be searched
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,subsetDesignatedFonts,org.apache.pdfbox.pdmodel.PDDocument:subsetDesignatedFonts(),1062,1070,"/**
 * Subsets designated fonts in the document.
 * @throws IOException if an I/O error occurs during subsetting
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XrefTrailerObj:reset(),77,80,"/**
 * Clears all entries from the cross-reference table.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,resetEngine,org.apache.pdfbox.text.PDFTextStripper:resetEngine(),223,229,"/**
* Resets engine state to initial values.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,"org.apache.pdfbox.multipdf.Overlay:getLayoutPage(int,int)",466,499,"/**
* Retrieves the appropriate LayoutPage based on page number and configuration.
* @param pageNumber current page number
* @param numberOfPages total number of pages
* @return LayoutPage object or null if none found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSObjectKey),113,116,"/**
 * Checks if the pool contains a specific COSObjectKey.
 * @param key the COSObjectKey to check
 * @return true if the key is present, false otherwise
 */","* Returns true, if a {@link COSBase} is registered for the given {@link COSObjectKey}.
     *
     * @param key The {@link COSObjectKey} that shall be checked for a registered {@link COSBase}.
     * @return True, if a {@link COSBase} is registered for the given {@link COSObjectKey}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,registerHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:registerHandler(java.lang.String,java.lang.Class,java.lang.Class)",66,77,"/**
* Registers a security handler with a given name and protection policy.
* @param name unique identifier for the security handler
* @param securityHandler class implementing SecurityHandler
* @param protectionPolicy class implementing ProtectionPolicy
* @throws IllegalStateException if the handler name is already registered
*/","* Registers a security handler.
     *
     * If the security handler was already registered an exception is thrown.
     * If another handler was previously registered for the same filter name or
     * for the same policy name, an exception is thrown
     *
     * @param name the name of the filter
     * @param securityHandler security handler class to register
     * @param protectionPolicy protection policy class to register",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(java.lang.String),143,146,"/**
 * Checks if the map contains a key with the specified name.
 * @param name the key to search for
 * @return true if the key is present, false otherwise
 */","* Determines if the encoding has a mapping for the given name value.
     * 
     * @param name PostScript glyph name
     * @return true if the encoding has a mapping for the given name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,contains,org.apache.pdfbox.pdmodel.font.encoding.Encoding:contains(int),155,158,"/**
 * Checks if a code is present in the map.
 * @param code the code to check
 * @return true if the code exists, false otherwise
 */","* Determines if the encoding has a mapping for the given code value.
     * 
     * @param code character code
     * @return if the encoding has a mapping for the given code value
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,<init>,"org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:<init>(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",132,136,"/**
* Initializes a new Tokenizer with input text and syntax handler.
* @param text the CharSequence to be tokenized
* @param syntaxHandler the handler for processing syntax rules
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,escapeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:escapeXML(java.lang.String),787,822,"/**
* Escapes special XML characters in a string.
* @param input the original string to escape
* @return a new string with XML special characters replaced
*/","* Escape special characters.
     *
     * @param input the string to be escaped.
     *
     * @return the resulting string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),219,229,"/**
* Sets the bounding box for a PDF element.
* @param bbox PDRectangle representing the bounding box or null to remove it
*/","* This will set the BBox (bounding box) for this form.
     * @param bbox The new BBox for this form.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,float2String,org.apache.pdfbox.multipdf.Overlay:float2String(float),585,600,"/**
* Converts float to string without trailing zeros.
* @param floatValue the float value to convert
* @return string representation of the float without unnecessary trailing zeros
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeHex,org.apache.pdfbox.util.Hex:decodeHex(java.lang.String),219,245,"/**
 * Decodes a hexadecimal string to a byte array.
 * @param s hexadecimal string input
 * @return decoded byte array or empty if invalid characters found
 */","* Decodes a hex String into a byte array.
     *
     * @param s A String with ASCII hex.
     * @return decoded byte array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,close,org.apache.pdfbox.pdmodel.PDDocument:close(),1266,1305,"/**
* Closes all resources and handles exceptions.
* Ensures all IO resources are closed and logs errors.
*/","* This will close the underlying COSDocument object.
     * 
     * @throws IOException If there is an error releasing resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,close,org.apache.pdfbox.pdmodel.fdf.FDFDocument:close(),262,284,"/**
 * Closes the document and associated streams.
 * @throws IOException if an I/O error occurs during closing
 */","* This will close the underlying COSDocument object.
     *
     * @throws IOException If there is an error releasing resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getOnValues(),91,95,"/**
 * Returns an empty set of on values.
 * @return Empty set of strings representing on values
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,hasNext,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:hasNext(),38,51,"/**
* Checks if there are more items to iterate over.
* @return true if next item exists and is not the starting item, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getCOSObject,org.apache.pdfbox.pdmodel.common.function.PDFunction:getCOSObject(),84,95,"/**
* Returns the COS object associated with the function.
* @return COSDictionary representing the function's COS object
*/","* Returns the stream.
     * @return The stream for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName)",112,118,"/**
* Initializes a PDXObject with a given stream and subtype.
* @param stream the PDStream associated with this object
* @param subtype the subtype of the XObject
*/","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject:getCOSObject(),136,140,"/**
 * Returns the underlying COSStream.
 * @return COSStream object
 */","* Returns the stream.
     * {@inheritDoc}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getMetadata(),455,458,"/**
 * Retrieves metadata from the PDF document.
 * @return COSStream containing metadata or null if not found
 */","* Returns the metadata stream for this object, or null if there is no metadata stream.
     * @return the metadata stream, or null if there is none",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setMetadata,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setMetadata(org.apache.pdfbox.cos.COSStream),533,536,"/**
* Sets metadata for the PDF stream.
* @param metadata COSStream containing metadata to be set
*/","* Sets the metadata stream that is associated with this color space.
     * @param metadata the new metadata stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureAnnotation,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureAnnotation(java.util.List,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",530,540,"/**
* Checks if the widget is annotated with a signature.
* @param annotations list of PDF annotations
* @param widget PDF annotation widget to check
* @return true if widget has a signature annotation, false otherwise
*/","* Check if the widget already exists in the annotation list.
     *
     * @param annotations the list of PDAnnotation fields.
     * @param widget the annotation widget.
     * @return true if the widget already existed in the annotation list, false if not.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,equals,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:equals(java.lang.Object),201,216,"/**
* Compares this annotation with another for equality.
* @param o the object to compare with
* @return true if equal, false otherwise
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,keySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:keySet(),146,150,"/**
 * Returns a set of all keys in the map.
 * @return Set containing all keys from the underlying map
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,checkSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:checkSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",509,521,"/**
* Checks if the iterator contains a matching signature field.
* @param fieldIterator iterator for form fields
* @param signatureField the signature field to match
* @return true if a match is found, false otherwise
*/","* Check if the field already exists in the field list.
     *
     * @param fieldIterator iterator on all fields.
     * @param signatureField the signature field.
     * @return true if the field already existed in the field list, false if not.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,values,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:values(),155,159,"/**
 * Returns a collection of all values in the map.
 * @return Collection containing all values from the underlying map
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,fillPagesAnnotationMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:fillPagesAnnotationMap(java.util.Map,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget)",838,852,"/**
 * Adds a widget's COS dictionary to the map for its corresponding page.
 * @param pagesAnnotationsMap mapping of pages to their annotation widgets
 * @param page PDF page containing the widget
 * @param widget annotation widget to be added
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,<init>,org.apache.pdfbox.pdfparser.BaseParser:<init>(org.apache.pdfbox.io.RandomAccessRead),173,176,"/**
 * Initializes a new parser with a PDF source.
 * @param pdfSource the PDF file to parse
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isHexDigit,org.apache.pdfbox.pdfparser.BaseParser:isHexDigit(char),178,183,"/**
* Checks if a character is a valid hex digit.
* @param ch the character to check
* @return true if ch is a hex digit, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isDigit,org.apache.pdfbox.pdfparser.BaseParser:isDigit(),1298,1301,"/**
 * Checks if the next character in the source is a digit.
 * @return true if the next character is a digit, false otherwise
 * @throws IOException if an I/O error occurs while reading from the source
 */","* This will tell if the next byte is a digit or not.
     *
     * @return true if the next byte in the stream is a digit.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,compareCOSObjects,"org.apache.pdfbox.pdfparser.BruteForceParser:compareCOSObjects(org.apache.pdfbox.cos.COSObject,java.lang.Long,org.apache.pdfbox.cos.COSObject)",499,517,"/**
 * Compares two COSObjects to determine the newer version.
 * @param newObject the newly encountered COSObject
 * @param newOffset offset of the new object in the document
 * @param currentObject the currently stored COSObject
 * @return the newer COSObject or newObject if current is null
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectNumbers(),174,191,"/**
 * Reads object numbers and their offsets from the source.
 * @return Map of object numbers to offsets
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setXRef,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:setXRef(org.apache.pdfbox.cos.COSObjectKey,long)",175,190,"/**
* Sets XRef entry for an object.
* @param objKey key of the COSObject
* @param offset file offset of the object
*/","* Populate XRef HashMap of current XRef object.
     * Will add an Xreftable entry that maps ObjectKeys to byte offsets in the file.
     * @param objKey The objkey, with id and gen numbers
     * @param offset The byte offset in this file",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,add,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:add(int,java.lang.String)",106,110,"/**
* Adds a mapping from code to name and vice versa.
* @param code unique identifier
* @param name associated with the code
*/","* This will add a character encoding. An already existing mapping is preserved when creating
     * the reverse mapping. Should only be used during construction of the class.
     * 
     * @see #overwrite(int, String)
     * 
     * @param code character code
     * @param name PostScript glyph name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isSpace,org.apache.pdfbox.pdfparser.BaseParser:isSpace(),1275,1278,"/**
 * Checks if the next character in the source is a space.
 * @return true if the next character is a space, false otherwise
 * @throws IOException if an I/O error occurs while reading from the source
 */","* This will tell if the next byte is a space or not.
     *
     * @return true if the next byte in the stream is a space character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(int),454,470,"/**
 * Determines if a line break should be skipped.
 * @param linebreak character code of the current line break
 * @return true if line break is skipped, false otherwise
 */","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @param linebreak the first character to be checked.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,checkForEndOfString,org.apache.pdfbox.pdfparser.BaseParser:checkForEndOfString(int),485,519,"/**
 * Checks for end-of-string markers in a byte stream.
 * @param bracesParameter current count of open braces
 * @return updated count of open braces or 0 if end marker found
 * @throws IOException if an I/O error occurs
 */","* This is really a bug in the Document creators code, but it caused a crash in PDFBox, the first bug was in this
     * format: /Title ( (5) /Creator which was patched in 1 place.
     *
     * However it missed the case where the number of opening and closing parenthesis isn't balanced
     *
     * The second bug was in this format /Title (c:\) /Producer
     *
     * @param bracesParameter the number of braces currently open.
     *
     * @return the corrected value of the brace counter
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isEOL,org.apache.pdfbox.pdfparser.BaseParser:isEOL(int),1207,1210,"/**
 * Checks if character is end-of-line.
 * @param c character to check
 * @return true if character is line feed or carriage return, false otherwise
 */","* This will tell if the next byte to be read is an end of line byte.
     *
     * @param c The character to check against end of line
     * @return true if the next byte is 0x0A or 0x0D.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readStringNumber,org.apache.pdfbox.pdfparser.BaseParser:readStringNumber(),1443,1461,"/**
* Reads a numeric string from the source until a non-digit character is encountered.
* @return StringBuilder containing the read number or an empty StringBuilder if no digits are found
* @throws IOException if reading fails or the number exceeds MAX_LENGTH_LONG
*/","* This method is used to read a token by the {@linkplain #readInt()} and the {@linkplain #readLong()} method. Valid
     * delimiters are any non digit values.
     *
     * @return the token to parse as integer or long by the calling method.
     * @throws IOException throws by the {@link #source} methods.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:toString(),94,107,"/**
* Generates string representation of cubic Bezier curve with control points.
* @return formatted string describing the curve and its control points
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,decodeBuffer,org.apache.pdfbox.pdfparser.BaseParser:decodeBuffer(java.io.ByteArrayOutputStream),926,939,"/**
 * Decodes a ByteArrayOutputStream to a UTF-8 string.
 * @param buffer the ByteArrayOutputStream containing encoded data
 * @return decoded string or alternative charset if UTF-8 fails
 */","* Tries to decode the buffer content to an UTF-8 String. If that fails, tries the alternative Encoding.
     * 
     * @param buffer the {@link ByteArrayOutputStream} containing the bytes to decode
     * @return the decoded String",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedChar,org.apache.pdfbox.pdfparser.BaseParser:readExpectedChar(char),1098,1106,"/**
 * Reads and checks for an expected character.
 * @param ec expected character to read
 * @throws IOException if the actual character does not match the expected one
 */","* Read one char and throw an exception if it is not the expected value.
     *
     * @param ec the char value that is expected.
     * @throws IOException if the read char is not the expected value or if an
     * I/O error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,isWhitespace,org.apache.pdfbox.pdfparser.BaseParser:isWhitespace(),1241,1244,"/**
 * Checks if the next character in the source is whitespace.
 * @return true if the next character is whitespace, false otherwise
 */","* This will tell if the next byte is whitespace or not.
     *
     * @return true if the next byte in the stream is a whitespace character.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseStartXref,org.apache.pdfbox.pdfparser.XrefParser:parseStartXref(),557,568,"/**
* Parses the start XRef position in a PDF file.
* @return the byte offset of the first object reference, or -1 if not found
* @throws IOException if an I/O error occurs during parsing
*/","* This will parse the startxref section from the stream. The startxref value is ignored.
     *
     * @return the startxref value or -1 on parsing error
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchNearestValue,"org.apache.pdfbox.pdfparser.BruteForceParser:searchNearestValue(java.util.List,long)",271,294,"/**
* Finds the nearest value to a given offset in a list.
* @param values list of long values to search through
* @param offset target value to find the nearest neighbor for
* @return the nearest value from the list or -1 if list is empty
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForLastEOFMarker,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForLastEOFMarker(),524,560,"/**
* Searches for the last valid EOF marker in a file.
* @return Position of the last EOF marker or Long.MAX_VALUE if none found
*/","* Brute force search for the last EOF marker.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefTables,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefTables(),641,660,"/**
* Searches for xref table offsets in a PDF.
* @return List of offsets where xref tables are found
*/","* Brute force search for all xref entries (tables).
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getNumberOfColorComponents(),115,124,"/**
 * Retrieves the number of color components.
 * @return number of color components or throws IOException if an error occurs
 */","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRefStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRefStreams(),667,735,"/**
 * Searches for XRef stream offsets in a PDF file.
 * @return List of XRef stream offsets or empty list if none found
 * @throws IOException if an I/O error occurs
 */","* Brute force search for all /XRef entries (streams).
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,getXrefTable,org.apache.pdfbox.pdfparser.XrefParser:getXrefTable(),75,78,"/**
 * Retrieves the cross-reference table.
 * @return Map of COSObjectKey to Long representing the xref table
 */","* Returns the resulting cross reference table.
     * 
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getStartxrefOffset,org.apache.pdfbox.pdfparser.COSParser:getStartxrefOffset(),305,360,"/**
 * Finds the offset of the startxref in a PDF file.
 * @throws IOException if an I/O error occurs
 * @return offset of startxref or throws exception if not found
 */","* Looks for and parses startxref. We first look for last '%%EOF' marker (within last
     * {@link #DEFAULT_TRAIL_BYTECOUNT} bytes (or range set via {@link #setEOFLookupRange(int)}) and go back to find
     * <code>startxref</code>.
     * 
     * @return the offset of StartXref
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,readUntilEndStream,org.apache.pdfbox.pdfparser.COSParser:readUntilEndStream(org.apache.pdfbox.pdfparser.EndstreamFilterStream),793,885,"/**
 * Reads until 'endstream' or 'endobj' is found.
 * @param out stream to filter content
 * @return length of filtered content
 * @throws IOException if an I/O error occurs
 */","* This method will read through the current stream object until
     * we find the keyword ""endstream"" meaning we're at the end of this
     * object. Some pdf files, however, forget to write some endstream tags
     * and just close off objects with an ""endobj"" tag so we have to handle
     * this case as well.
     * 
     * This method is optimized using buffered IO and reduced number of
     * byte compare operations.
     * 
     * @param out  stream we write out to.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,validateStreamLength,org.apache.pdfbox.pdfparser.COSParser:validateStreamLength(long),887,921,"/**
* Validates stream length and checks for proper end.
* @param streamLength length of the stream to validate
* @return true if valid, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseHeader,"org.apache.pdfbox.pdfparser.COSParser:parseHeader(java.lang.String,java.lang.String)",1074,1155,"/**
 * Parses the PDF header to extract and validate the version.
 * @param headerMarker expected header marker string
 * @param defaultVersion default version if none found
 * @return true if valid header is parsed, false otherwise
 * @throws IOException on I/O errors during parsing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,<init>,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:<init>(),49,52,"/**
 * Initializes a new ToUnicodeWriter with mode set to 0.
 */",* Creates a new ToUnicode CMap writer.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,privateReadObjectOffsets,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:privateReadObjectOffsets(),193,212,"/**
* Reads and sorts PDF object offsets.
* @return Map of offsets to object numbers
* @throws IOException if reading fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,setLabelItem,"org.apache.pdfbox.pdmodel.common.PDPageLabels:setLabelItem(int,org.apache.pdfbox.pdmodel.common.PDPageLabelRange)",168,175,"/**
* Sets a page label range starting from the specified page.
* @param startPage the starting page index (must be non-negative)
* @param item the PDPageLabelRange to associate with the startPage
*/","* Sets the page label range beginning at the specified start page.
     * 
     * @param startPage
     *            the 0-based index of the page representing the start of the
     *            page label range.
     * @param item
     *            the page label item to set.
     * @throws IllegalArgumentException if the startPage parameter is &lt; 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,add,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:add(int,java.lang.String)",70,83,"/**
* Adds a mapping from CID to Unicode text.
* @param cid character identifier (must be 0-65535)
* @param text Unicode string to map to CID
*/","* Adds the given CID to Unicode mapping.
     *
     * @param cid CID
     * @param text Unicode text, up to 512 bytes.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNoFollowingBinData,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNoFollowingBinData(),331,403,"/**
* Checks if there is no binary data after 'EI'.
* @return true if no binary data, false otherwise
*/","* Looks up an amount of bytes if they contain only ASCII characters (no
     * control sequences etc.), and that these ASCII characters begin with a
     * sequence of 1-3 non-blank characters between blanks
     *
     * @return <code>true</code> if next bytes are probably printable ASCII
     * characters starting with a PDF operator, otherwise <code>false</code>",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,hasNextSpaceOrReturn,org.apache.pdfbox.pdfparser.PDFStreamParser:hasNextSpaceOrReturn(),457,460,"/**
 * Checks if the next character in source is a space or return.
 * @return true if next char is space or return, false otherwise
 */","* Checks if the next char is a space or a return.
     * 
     * @return true if the next char is a space or a return
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:addEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),140,148,"/**
* Adds an XReferenceEntry to the stream data.
* @param entry XReferenceEntry to be added
*/","* Add an new entry to the XRef stream.
     * 
     * @param entry new entry to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getWEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getWEntry(),155,175,"/**
 * Calculates the maximum width for each column in bytes.
 * @return An array of integers representing the max byte width for each of the three columns.
 */","* determines the minimal length required for all the lengths.
     * 
     * @return the length information",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,<init>,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:<init>(long),46,50,"/**
* Initializes object pool with given highest XRef number.
* @param highestXRefObjectNumber the maximum XRef object number to initialize
*/","* Creates a map of {@link COSBase} instances to {@link COSObjectKey}s, allowing bidirectional lookups. This
     * constructor can be used for pre - initialized structures to start the assignment of new object numbers starting
     * from the hereby given offset.
     *
     * @param highestXRefObjectNumber The highest known object number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getIndexEntry,org.apache.pdfbox.pdfparser.PDFXRefStream:getIndexEntry(),187,219,"/**
 * Generates a list of index entries.
 * @return List containing start and length of contiguous object numbers
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,next,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:next(),224,238,"/**
* Returns the next number in a sequence of ranges.
* Throws NoSuchElementException if no more numbers are available.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getFirstTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getFirstTrailer(),110,119,"/**
* Retrieves the first trailer dictionary.
* @return COSDictionary of the first trailer or null if none exists
*/","* Returns the first trailer if at least one exists.
     * 
     * @return the first trailer or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getLastTrailer,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getLastTrailer(),126,135,"/**
* Retrieves the last trailer from the byte position map.
* @return COSDictionary representing the last trailer or null if empty
*/","* Returns the last trailer if at least one exists.
     * 
     * @return the last trailer ir null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,getContainedObjectNumbers,org.apache.pdfbox.pdfparser.XrefTrailerResolver:getContainedObjectNumbers(int),339,356,"/**
 * Retrieves object numbers contained in a stream.
 * @param objstmObjNr Object stream number to check
 * @return Set of contained object numbers or null if trailer is unresolved
 */","Returns object numbers which are referenced as contained
     *  in object stream with specified object number.
     *  
     *  This will scan resolved xref table for all entries having negated
     *  stream object number as value.
     *
     *  @param objstmObjNr  object number of object stream for which contained object numbers
     *                      should be returned
     *                       
     *  @return set of object numbers referenced for given object stream
     *          or <code>null</code> if {@link #setStartxref(long)} was not
     *          called before so that no resolved xref table exists",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,getFirstColumnValue,org.apache.pdfbox.pdfparser.xref.AbstractXReference:getFirstColumnValue(),59,63,"/**
 * Returns the numeric value of the column type.
 * @return Numeric value representing the column type
 */","* Returns the value for the first column of the crossreference stream entry. (The numeric representation of this
     * entry's (The numeric representation of this entry's {@link XReferenceType}.)
     *
     * @return The value for the first column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.FreeXReference:getThirdColumnValue(),77,81,"/**
 * Retrieves the generation value from the referenced key.
 * @return long representing the generation value
 */","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set next free {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,toString,org.apache.pdfbox.pdfparser.xref.FreeXReference:toString(),88,93,"/**
* Returns a string representation of the FreeReference.
* @return formatted string with key, nextFreeObject, and type information
*/","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getSecondColumnValue(),111,115,"/**
 * Retrieves the second column value as byte offset.
 * @return byte offset value of the second column
 */","* Returns the value for the second column of the crossreference stream entry. (This is byte offset of the
     * {@link COSObject} in the PDF file - for entries of this type.)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.NormalXReference:getThirdColumnValue(),123,127,"/**
 * Retrieves the generation value from the referenced key.
 * @return The generation value as a long.
 */","* Returns the value for the third column of the crossreference stream entry. (This is the generation number of the
     * set {@link COSObjectKey} - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,toString,org.apache.pdfbox.pdfparser.xref.NormalXReference:toString(),134,139,"/**
 * Returns string representation of the reference.
 * @return formatted string with key, type, and byte offset
 */","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getSecondColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getSecondColumnValue(),104,108,"/**
 * Retrieves the value of the second column.
 * @return numeric value from the parent key's number field
 */","* Returns the value for the second column of the crossreference stream entry. (This is object number from the
     * {@link COSObjectKey} of the object stream, that is containing the object represented by this entry - for entries
     * of this type..)
     *
     * @return The value for the second column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,getThirdColumnValue,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:getThirdColumnValue(),116,120,"/**
 * Returns the index of the third column in the object stream.
 * @return The index value as a long.
 */","* Returns the value for the third column of the crossreference stream entry. (This is index of the
     * {@link COSObject} in the containing object stream - for entries of this type.)
     *
     * @return The value for the third column of the crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,toString,org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:toString(),127,132,"/**
* Returns a string representation of the ObjectStreamEntry.
* @return String containing key, type, index, and parent information
*/","* Returns a string representation of this crossreference stream entry.
     *
     * @return A string representation of this crossreference stream entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,"org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(byte[],int,int)",111,117,"/**
* Writes bytes to output stream.
* @param b byte array to write
* @param off offset in the byte array
* @param len number of bytes to write
* @throws IOException if an I/O error occurs
*/","* This will write some byte to the stream.
     *
     * @param b The source byte array.
     * @param off The offset into the array to start writing.
     * @param len The number of bytes to write.
     *
     * @throws IOException If the underlying stream throws an exception.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,write,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:write(int),126,132,"/**
 * Writes a single byte to the output stream.
 * @param b byte to be written
 * @throws IOException if an I/O error occurs
 */","* This will write a single byte to the stream.
     *
     * @param b The byte to write to the stream.
     *
     * @throws IOException If there is an error writing to the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSStandardOutputStream.java,writeEOL,org.apache.pdfbox.pdfwriter.COSStandardOutputStream:writeEOL(),149,156,"/**
 * Writes an end-of-line character if not already on a new line.
 * @throws IOException if an I/O error occurs
 */","* This will write an EOL to the stream.
     *
     * @throws IOException If there is an error writing to the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isCompress,org.apache.pdfbox.pdfwriter.COSWriter:isCompress(),314,317,"/**
 * Checks if compression is enabled.
 * @return true if compression is enabled, false otherwise
 */","* Returns true, if the resulting document shall be compressed.
     *
     * @return True, if the resulting document shall be compressed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addXRefEntry,org.apache.pdfbox.pdfwriter.COSWriter:addXRefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),345,348,"/**
 * Adds an XReferenceEntry to the list.
 * @param entry the XReferenceEntry to be added
 */","* add an entry in the x ref table for later dump.
     *
     * @param entry The new entry to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1570,1581,"/**
* Sets the current stroking color space, replacing the last one if not empty.
* @param colorSpace the new color space to set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColorSpaceStack,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColorSpaceStack(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1583,1594,"/**
* Sets the non-stroking color space stack.
* @param colorSpace new color space to set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,hasNext,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:hasNext(),224,228,"/**
 * Checks if there are more elements to iterate.
 * @return true if queue is not empty, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,hasNext,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:hasNext(),85,89,"/**
 * Checks if there are more elements to iterate over.
 * @return true if queue is not empty, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFMarkedContentExtractor:endMarkedContentSequence(),125,132,"/**
* Ends the current marked content sequence.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectReference,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectReference(java.io.OutputStream,org.apache.pdfbox.cos.COSObjectKey)",367,378,"/**
 * Writes object reference to the given output stream.
 * @param output stream to write to
 * @param indirectReference key of the COSObject
 * @throws IOException if an I/O error occurs
 */","* Write the given {@link COSObjectKey} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param indirectReference The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefEntry,org.apache.pdfbox.pdfwriter.COSWriter:writeXrefEntry(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),995,1005,"/**
* Writes an XRef entry to the standard output.
* @param entry XReferenceEntry object to be written
* @throws IOException if writing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getXRefRanges,org.apache.pdfbox.pdfwriter.COSWriter:getXRefRanges(java.util.List),1025,1058,"/**
 * Extracts and groups reference ranges from a list of XReferenceEntry.
 * @param xRefEntriesList list of cross-reference entries
 * @return array of Long containing start and count of each range
 */","* check the xref entries and write out the ranges.  The format of the
     * returned array is exactly the same as the pdf specification.  See section
     * 7.5.4 of ISO32000-1:2008, example 1 (page 40) for reference.
     * <p>
     * example: 0 1 2 5 6 7 8 10
     * <p>
     * will create a array with follow ranges
     * <p>
     * 0 3 5 4 10 1
     * <p>
     * this mean that the element 0 is followed by two other related numbers 
     * that represent a cluster of the size 3. 5 is follow by three other
     * related numbers and create a cluster of size 4. etc.
     * 
     * @param xRefEntriesList list with the xRef entries that was written
     * @return a integer array with the ranges",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getMD5,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getMD5(),35,46,"/**
* Returns an MD5 MessageDigest instance.
* @return MessageDigest object for MD5 hashing
*/",* @return MD5 message digest,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA1,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA1(),51,62,"/**
* Returns a SHA-1 MessageDigest instance.
* @return MessageDigest object for SHA-1 hashing
*/",* @return SHA-1 message digest,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/MessageDigests.java,getSHA256,org.apache.pdfbox.pdmodel.encryption.MessageDigests:getSHA256(),67,78,"/**
 * Returns a SHA-256 MessageDigest instance.
 * @return SHA-256 MessageDigest object
 */",* @return SHA-256 message digest,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.fdf.FDFDocument),1602,1613,"/**
* Writes FDF document to output.
* @param doc FDFDocument to write
* @throws IOException if writing fails
*/","* This will write the fdf document.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getHighestXRefObjectNumber,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getHighestXRefObjectNumber(),289,292,"/**
 * Retrieves the highest cross-reference object number.
 * @return the highest XRef object number in the pool
 */","* Returns the highest object number, that is registered in this compression pool.
     *
     * @return The highest object number, that is registered in this compression pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,getPreparedKeys,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:getPreparedKeys(),97,100,"/**
 * Returns an unmodifiable list of prepared COS object keys.
 * @return List of COSObjectKey objects
 */","* Returns all {@link COSObjectKey}s, that shall be added to the object stream, when
     * {@link COSWriterObjectStream#writeObjectsToStream(COSStream)} is called.
     *
     * @return All {@link COSObjectKey}s, that shall be added to the object stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:getFont(org.apache.pdfbox.cos.COSObject),107,112,"/**
* Retrieves font from cache.
* @param indirect COSObject representing the font
* @return PDFont object or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:getColorSpace(org.apache.pdfbox.cos.COSObject),147,152,"/**
* Retrieves color space from cache by COS object.
* @param indirect COS object key
* @return PDColorSpace or null if not cached
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getExtGState,org.apache.pdfbox.pdmodel.DefaultResourceCache:getExtGState(org.apache.pdfbox.cos.COSObject),187,192,"/**
* Retrieves extended graphics state by COS object.
* @param indirect COSObject representing the graphics state
* @return PDExtendedGraphicsState or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:getShading(org.apache.pdfbox.cos.COSObject),227,232,"/**
* Retrieves a PDShading object from the cache.
* @param indirect the COSObject key for caching
* @return PDShading object or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getPattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:getPattern(org.apache.pdfbox.cos.COSObject),267,272,"/**
 * Retrieves a pattern from cache by COSObject.
 * @param indirect the COSObject key for the pattern
 * @return PDAbstractPattern object or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:getProperties(org.apache.pdfbox.cos.COSObject),307,312,"/**
 * Retrieves properties for a given COS object.
 * @param indirect the COS object to fetch properties for
 * @return PDPropertyList associated with the object or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,getXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:getXObject(org.apache.pdfbox.cos.COSObject),347,352,"/**
 * Retrieves PDXObject by its COSObject.
 * @param indirect the COSObject key
 * @return the associated PDXObject or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.font.PDFont)",114,118,"/**
* Stores a PDFont in the map with a COSObject key.
* @param indirect unique COSObject identifier
* @param font PDFont to store
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",154,158,"/**
* Stores color space in map with COSObject as key.
* @param indirect COSObject key
* @param colorSpace PDColorSpace to store
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",194,198,"/**
* Stores extended graphics state in map.
* @param indirect COSObject key for the graphics state
* @param extGState PDExtendedGraphicsState to store
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",234,238,"/**
* Stores a shading object in the map.
* @param indirect COSObject key for the shading
* @param shading PDShading object to store
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",274,278,"/**
* Stores a pattern with its associated COSObject.
* @param indirect COSObject key
* @param pattern PDAbstractPattern value wrapped in SoftReference
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",314,318,"/**
 * Stores a property list with an indirect object.
 * @param indirect COSObject key for storage
 * @param propertyList PDPropertyList to store
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,put,"org.apache.pdfbox.pdmodel.DefaultResourceCache:put(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.graphics.PDXObject)",354,358,"/**
* Adds an XObject to the map with soft reference.
* @param indirect COSObject key
* @param xobject PDXObject value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeFont,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeFont(org.apache.pdfbox.cos.COSObject),120,145,"/**
* Removes a PDFont from the cache.
* @param indirect COSObject representing the font
* @return removed PDFont or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeColorSpace,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeColorSpace(org.apache.pdfbox.cos.COSObject),160,185,"/**
* Removes a color space from the cache.
* @param indirect COSObject representing the color space
* @return PDColorSpace object or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeExtState,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeExtState(org.apache.pdfbox.cos.COSObject),200,225,"/**
 * Removes an extended graphics state by its indirect object.
 * @param indirect the COSObject representing the extended graphics state
 * @return the removed PDExtendedGraphicsState or null if not found or already stable
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeShading,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeShading(org.apache.pdfbox.cos.COSObject),240,265,"/**
* Removes a shading from the cache.
* @param indirect COSObject representing the shading
* @return PDShading object or null if removed or not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removePattern,org.apache.pdfbox.pdmodel.DefaultResourceCache:removePattern(org.apache.pdfbox.cos.COSObject),280,305,"/**
* Removes a pattern by its COSObject.
* @param indirect the COSObject representing the pattern
* @return the removed PDAbstractPattern or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeProperties,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeProperties(org.apache.pdfbox.cos.COSObject),320,345,"/**
 * Removes properties associated with a COSObject.
 * @param indirect the COSObject to remove properties from
 * @return PDPropertyList of removed properties or null if none found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,removeXObject,org.apache.pdfbox.pdmodel.DefaultResourceCache:removeXObject(org.apache.pdfbox.cos.COSObject),360,386,"/**
 * Removes an XObject from the cache.
 * @param indirect COSObject representing the XObject to remove
 * @return PDXObject that was removed, or null if not found or limit reached
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,overwrite,"org.apache.pdfbox.pdmodel.font.encoding.Encoding:overwrite(int,java.lang.String)",121,135,"/**
 * Updates the mapping for a given code with a new name.
 * Removes existing reverse mapping if present.
 * @param code unique identifier for the mapping
 * @param name associated name for the code
 */","* This will add a character encoding. An already existing mapping is overwritten when creating
     * the reverse mapping. Should only be used during construction of the class.
     *
     * @see Encoding#add(int, String)
     *
     * @param code character code
     * @param name PostScript glyph name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,removeRegion,org.apache.pdfbox.text.PDFTextStripperByArea:removeRegion(java.lang.String),79,83,"/**
 * Removes a region by name.
 * @param regionName name of the region to be removed
 */","* Delete a region to group text by. If the region does not exist, this method does nothing.
     *
     * @param regionName The name of the region to delete.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMaximumFractionDigits,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMaximumFractionDigits(int),122,125,"/**
 * Sets the maximum number of fractional digits in decimal formatting.
 * @param fractionDigitsNumber the maximum number of fractional digits
 */","* Sets the maximum number of digits allowed for fractional numbers.
     * 
     * @see NumberFormat#setMaximumFractionDigits(int)
     * @param fractionDigitsNumber the maximum number of digits allowed for fractional numbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.OutputStream,org.apache.pdfbox.pdmodel.PDResources)",106,114,"/**
* Initializes a content stream for PDF document.
* @param document the PDDocument to write to
* @param outputStream the output stream for writing content
* @param resources the PDResources for managing resources
*/","* Create a new appearance stream.
     *
     * @param document may be null
     * @param outputStream The appearances output stream to write to.
     * @param resources The resources to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getVerticalDisplacementVectorY,org.apache.pdfbox.pdmodel.font.PDCIDFont:getVerticalDisplacementVectorY(int),306,315,"/**
* Retrieves vertical displacement vector Y.
* @param code unique identifier for the vector
* @return float value of vertical displacement or default value if not found
*/","* Returns the y-component of the vertical displacement vector (w1).
     *
     * @param code character code
     * @return w1y",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,defaultIfNull,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:defaultIfNull(java.lang.Float,float)",201,204,"/**
* Returns the standard value or a default if it's null.
* @param standardValue the value to check
* @param defaultValue the fallback value
* @return the standard value or default if null
*/","* Returns the provided default value in case 'standard' value is <code>null</code>. To be used
     * in cases unboxing may lead to a NPE.
     *
     * @param standardValue 'standard' value
     * @param defaultValue default value
     *
     * @return 'standard' value if not <code>null</code> otherwise default value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,zoom,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:zoom(float),285,292,"/**
* Zooms the image by a specified percentage.
* @param percent zoom factor as a percentage
* @return PDVisibleSignDesigner instance for chaining
*/","* Zoom signature image with some percent.
     * 
     * @param percent increase (positive value) or decrease (negative value) image with x percent.
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getWidth,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getWidth(),351,354,"/**
 * Returns the width of the image.
 * @return width of the image in pixels
 */","* 
     * @return signature image width",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getHeight(),372,375,"/**
* Returns the height of the image.
* @return height in pixels
*/","* 
     * @return signature image height",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addToSubset(int),278,286,"/**
* Adds a character to the subset.
* @param codePoint Unicode code point of the character
* @throws IllegalStateException if subsetting is disabled
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,addGlyphsToSubset,org.apache.pdfbox.pdmodel.font.PDType0Font:addGlyphsToSubset(java.util.Set),288,295,"/**
* Adds glyphs to the subset.
* @param glyphIds set of glyph IDs to be added
* @throws IllegalStateException if subsetting is disabled
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,adjustForRotation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:adjustForRotation(),216,261,"/**
* Adjusts sign design for rotation.
* @return PDVisibleSignDesigner instance with adjusted dimensions and transform
*/","* Adjust signature for page rotation. This is optional, call this after all x and y coordinates
     * have been set if you want the signature to be positioned regardless of page orientation.
     *
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createAffineTransform,org.apache.pdfbox.util.Matrix:createAffineTransform(),169,175,"/**
* Creates an AffineTransform from a float array.
* @return AffineTransform object initialized with matrix values
*/","* Create an affine transform from this matrix's values.
     *
     * @return An affine transform with this matrix's values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.Vertex:toString(),37,50,"/**
* Returns string representation of Vertex.
* @return formatted string with point and color values
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,checkFloatValues,org.apache.pdfbox.util.Matrix:checkFloatValues(float[]),295,302,"/**
 * Checks if all elements in the float array are finite.
 * @param values array of float values to check
 * @return original array if all values are finite, throws exception otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,encode,org.apache.pdfbox.pdmodel.font.PDFont:encode(java.lang.String),329,344,"/**
* Encodes a string into a byte array using custom encoding.
* @param text the input string to encode
* @return byte array representing encoded data
* @throws IOException if an I/O error occurs
*/","* Encodes the given string for use in a PDF content stream.
     *
     * @param text Any Unicode text.
     * @return Array of PDF content stream bytes.
     * @throws IOException If the text could not be encoded.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,codePointToName,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:codePointToName(int),181,189,"/**
 * Converts a Unicode code point to its corresponding name.
 * @param codePoint the Unicode code point
 * @return the name of the code point or "".notdef"" if not found
 */","* Returns the name for the given Unicode code point.
     *
     * @param codePoint Unicode code point
     * @return PostScript glyph name, or "".notdef""",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup$RenderState:valueOf(org.apache.pdfbox.cos.COSName),77,84,"/**
* Converts COSName to corresponding RenderState.
* @param state PDF name representing a render state
* @return RenderState object or null if input is null
*/","* Returns the base state represented by the given {@link COSName}.
         *
         * @param state the state name
         * @return the state enum value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,valueOf,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState:valueOf(org.apache.pdfbox.cos.COSName),71,78,"/**
* Returns BaseState based on COSName.
* @param state COSName representing the state
* @return corresponding BaseState or ON if null
*/","* Returns the base state represented by the given {@link COSName}.
         * @param state the state name
         * @return the state enum value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,applyGSUBRules,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:applyGSUBRules(org.apache.fontbox.ttf.gsub.GsubWorker,java.io.ByteArrayOutputStream,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1715,1755,"/**
 * Applies GSUB rules to transform and encode glyphs.
 * @param gsubWorker worker to apply transforms
 * @param out output stream for encoded glyphs
 * @param font font containing cmap lookup
 * @param word input string to process
 * @return list of transformed glyph IDs
 */","* Retrieve the glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules. The encoded glyph IDs are also written to the specified output stream.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param out The output stream to write the glyph IDs to.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param word The word which is being converted from characters to glyph IDs.
     * @return The glyph IDs for the characters in the specified word, after applying any relevant
     * GSUB rules.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified word.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.encryption.AccessPermission)",226,232,"/**
* Constructs a new PDF document.
* @param doc COSDocument representing the PDF structure
* @param source RandomAccessRead for reading the PDF file
* @param permission AccessPermission for handling user permissions
*/","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf
     * @param permission he access permissions of the pdf
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,"org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",81,86,"/**
* Initializes a new FDFDocument.
* @param doc COSDocument to be used
* @param source RandomAccessRead source for the document
*/","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     *
     * @param doc The COSDocument that this document wraps.
     * @param source The source that will be closed when this document gets closed, can be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,initRgbColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:initRgbColorTable(),125,165,"/**
* Initializes RGB color table from base color space.
* @throws IOException if raster creation fails or stream is invalid
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(),168,172,"/**
 * Converts the collection to an array.
 * @return An array containing all elements of the collection.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toArray,org.apache.pdfbox.pdmodel.common.COSArrayList:toArray(java.lang.Object[]),177,182,"/**
 * Converts collection to array.
 * @param a target array or null
 * @return array containing all elements
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,indexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:indexOf(java.lang.Object),534,538,"/**
 * Returns the index of the first occurrence of the specified element.
 * @param o element to search for
 * @return index of the element or -1 if not found
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,containsAll,org.apache.pdfbox.pdmodel.common.COSArrayList:containsAll(java.util.Collection),242,246,"/**
 * Checks if this collection contains all elements of the specified collection.
 * @param c collection to be checked for containment in this collection
 * @return true if this collection contains all elements of the specified collection, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:isEqual(java.lang.Object,java.lang.Object)",46,60,"/**
* Compares two objects for equality.
* @param op1 first object to compare
* @param op2 second object to compare
* @return true if objects are equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ge:compare(java.lang.Number,java.lang.Number)",87,91,"/**
* Compares two numbers.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1 is greater than or equal to num2, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Gt:compare(java.lang.Number,java.lang.Number)",99,103,"/**
 * Compares two numbers.
 * @param num1 first number to compare
 * @param num2 second number to compare
 * @return true if num1 is greater than num2, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Le:compare(java.lang.Number,java.lang.Number)",111,115,"/**
 * Compares two numbers.
 * @param num1 first number to compare
 * @param num2 second number to compare
 * @return true if num1 is less than or equal to num2, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,compare,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Lt:compare(java.lang.Number,java.lang.Number)",123,127,"/**
* Compares two numbers.
* @param num1 first number to compare
* @param num2 second number to compare
* @return true if num1 is less than num2, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toCOSObjectList,org.apache.pdfbox.pdmodel.common.COSArrayList:toCOSObjectList(java.util.Collection),351,367,"/**
 * Converts a collection to a list of COSBase objects.
 * @param list collection of elements to convert
 * @return list of COSBase objects
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,removeAll,org.apache.pdfbox.pdmodel.common.COSArrayList:removeAll(java.util.Collection),372,389,"/**
 * Removes all elements from this collection that are contained in the specified collection.
 * @param c collection containing elements to be removed
 * @return true if any element was removed, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,retainAll,org.apache.pdfbox.pdmodel.common.COSArrayList:retainAll(java.util.Collection),394,411,"/**
* Retains only elements contained in the specified collection.
* @param c collection containing elements to retain
* @return true if this list changed as a result of the call
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,equals,org.apache.pdfbox.pdmodel.common.COSArrayList:equals(java.lang.Object),432,436,"/**
 * Checks equality based on the wrapped object.
 * @param o the object to compare
 * @return true if equal, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,hashCode,org.apache.pdfbox.pdmodel.common.COSArrayList:hashCode(),441,445,"/**
 * Returns the hash code of the actual object.
 * @return hash code value of the actual object
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,lastIndexOf,org.apache.pdfbox.pdmodel.common.COSArrayList:lastIndexOf(java.lang.Object),543,548,"/**
 * Returns the last index of the specified element.
 * @param o the element to search for
 * @return the last index of the element, or -1 if not found
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(),553,557,"/**
 * Returns a list iterator over the elements in this list.
 * @return ListIterator object for traversing the list
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,listIterator,org.apache.pdfbox.pdmodel.common.COSArrayList:listIterator(int),562,566,"/**
 * Returns a list iterator over the elements in this list.
 * @param index starting index for iteration
 * @return ListIterator starting from the specified index
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,subList,"org.apache.pdfbox.pdmodel.common.COSArrayList:subList(int,int)",571,575,"/**
* Returns a sublist of elements between specified indices.
* @param fromIndex starting index (inclusive)
* @param toIndex ending index (exclusive)
* @return List containing elements from fromIndex to toIndex
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,containsValue,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:containsValue(java.lang.Object),87,91,"/**
 * Checks if the collection contains a specific value.
 * @param value the value to search for
 * @return true if the value is found, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,entrySet,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:entrySet(),164,168,"/**
 * Returns an unmodifiable set view of the entries.
 * @return Unmodifiable set containing all map entries
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getNames,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getNames(),223,226,"/**
 * Returns an unmodifiable set of alias names.
 * @return Set containing all alias names
 */","* Returns the set of known font names, including aliases.
     * 
     * @return the set of known font names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,toString,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:toString(),188,192,"/**
 * Returns string representation of actuals.
 * @return String representation of actuals object
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,equals,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:equals(java.lang.Object),196,224,"/**
* Checks equality based on user attribute object.
* @param obj the object to compare with
* @return true if equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,hashCode,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:hashCode(),186,194,"/**
* Generates hash code for the object.
* Uses prime number multiplication and handles null values.
* @return computed hash code
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandler,"org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandler(java.lang.Class,java.lang.Class[],java.lang.Object[])",122,137,"/**
 * Creates a new SecurityHandler instance.
 * @param handlerClass class of the SecurityHandler to instantiate
 * @param argsClasses parameter types for the constructor
 * @param args arguments for the constructor
 * @return new SecurityHandler instance
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),215,226,"/**
* Converts a COSBase object to a COSObjectable.
* @param base the COSBase object to convert
* @return a COSObjectable instance
* @throws IOException if conversion fails
*/","* Method to convert the COS value in the number tree to the PD Model object. The default
     * implementation will simply use reflection to create the correct object type. Subclasses can
     * do whatever they want.
     *
     * @param base The COS object to convert.
     * @return The converted PD Model object.
     * @throws IOException If there is an error during creation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeRomanLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeRomanLabel(int),376,398,"/**
 * Converts a page index to a Roman numeral label.
 * @param pageIndex the page index to convert
 * @return Roman numeral string representation of the page index
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,makeLetterLabel,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:makeLetterLabel(int),404,414,"/**
* Generates a letter label from a numeric value.
* @param num numeric input to convert
* @return String representing the letter label
*/","* a..z, aa..zz, aaa..zzz ... labeling as described in PDF32000-1:2008,
         * Table 159, Page 375.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageRangeCount,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageRangeCount(),138,141,"/**
* Returns the count of label ranges.
* @return number of label ranges
*/","* Returns the number of page label ranges.
     * 
     * <p>
     * This will be always &gt;= 1, as the required default entry for the page
     * range starting at the first page is added automatically by this
     * implementation (see PDF32000-1:2008, p. 375).
     * </p>
     * 
     * @return the number of page label ranges.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageLabelRange,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageLabelRange(int),153,156,"/**
 * Retrieves page label range starting from a given page.
 * @param startPage index of the first page in the range
 * @return PDPageLabelRange object or null if not found
 */","* Returns the page label range starting at the given page, or {@code null}
     * if no such range is defined.
     * 
     * @param startPage
     *            the 0-based page index representing the start page of the page
     *            range the item is defined for.
     * @return the page label range or {@code null} if no label range is defined
     *         for the given start page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndices(),242,245,"/**
 * Returns sorted page indices.
 * @return NavigableSet of page indices
 */","* Get an ordered set of page indices having a page label range.
     *
     * @return set of page indices.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,toString,org.apache.pdfbox.util.Vector:toString(),65,69,"/**
* Returns string representation of point.
* @return formatted string ""(x, y)""
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,closePath,org.apache.pdfbox.rendering.PageDrawer:closePath(),1005,1009,"/**
 * Closes the current path by connecting the last point to the starting point.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,moveTo,"org.apache.pdfbox.rendering.PageDrawer:moveTo(float,float)",981,985,"/**
 * Moves the drawing path to a new position.
 * @param x new X coordinate
 * @param y new Y coordinate
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,appendRectangle,"org.apache.pdfbox.rendering.PageDrawer:appendRectangle(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",589,602,"/**
* Appends a rectangle to the path using four points.
* @param p0 top-left corner point
* @param p1 top-right corner point
* @param p2 bottom-right corner point
* @param p3 bottom-left corner point
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,lineTo,"org.apache.pdfbox.rendering.PageDrawer:lineTo(float,float)",987,991,"/**
 * Adds a line to the current path.
 * @param x endpoint x-coordinate
 * @param y endpoint y-coordinate
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getDashArray,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getDashArray(),101,104,"/**
 * Returns a copy of the dash array.
 * @return cloned float array representing dashes
 */","* Returns the dash array.
     * @return the dash array, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",102,114,"/**
 * Initializes a PDColor with components and color space.
 * @param components array of color components
 * @param colorSpace the color space for the color
 */","* Creates a PDColor containing the given color component values.
     * @param components array of color component values
     * @param colorSpace color space in which the components are defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:getComponents(),155,166,"/**
* Returns a copy of the color components.
* @return float array of color components
*/","* Returns the components of this color value.
     * @return the components of this color value, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoordinateColorPair.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair:<init>(java.awt.geom.Point2D,float[])",37,41,"/**
 * Initializes a CoordinateColorPair with a point and a color.
 * @param p Point2D representing the coordinate
 * @param c float array representing the color (RGB values)
 */","* Constructor.
     *
     * @param p point
     * @param c color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Vertex.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Vertex:<init>(java.awt.geom.Point2D,float[])",31,35,"/**
 * Initializes a vertex with a position and color.
 * @param p Point2D representing the vertex's position
 * @param c float array for the vertex's color (RGBA values)
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,get255Value,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:get255Value(float),281,284,"/**
* Converts float value to a byte range [0, 255].
* @param val input float value
* @return integer value clamped between 0 and 255
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,toString,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:toString(),137,144,"/**
* Returns a string representation of the FunctionType2 object.
* @return formatted string with C0, C1, and N values
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$False:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),112,117,"/**
* Pushes Boolean.FALSE onto the execution context stack.
* @param context execution environment containing a stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$True:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),170,175,"/**
* Pushes true onto the execution context stack.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getBoundary,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getBoundary(),122,138,"/**
* Calculates the bounding box for three corner points.
* @return int array [minX, maxX, minY, maxY]
*/","* get the boundary of a triangle.
     *
     * @return {xmin, xmax, ymin, ymax}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Bitshift:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),89,105,"/**
* Shifts bits of the top integer on the stack.
* @param context execution context containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popNumber,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popNumber(),63,66,"/**
 * Removes and returns the top number from the stack.
 * @return The top number or null if the stack is empty
 */","* Pops a number (int or real) from the stack. If it's neither data type, a
     * ClassCastException is thrown.
     * @return the number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popInt,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popInt(),73,76,"/**
 * Removes and returns the top integer from the stack.
 * @return the top integer value
 */","* Pops a value of type int from the stack. If the value is not of type int, a
     * ClassCastException is thrown.
     * @return the int value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,popReal,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:popReal(),83,86,"/**
 * Pops and returns the top element as a float.
 * @return The popped float value from the stack
 */","* Pops a number from the stack and returns it as a real value. If the value is not of a
     * numeric type, a ClassCastException is thrown.
     * @return the real value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Exch:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),70,78,"/**
* Swaps the top two elements of the execution context stack.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Pop:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,108,"/**
* Pops an object from the execution context stack.
* @param context execution context containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,addBoolean,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:addBoolean(boolean),62,65,"/**
* Adds a boolean value to the instructions list.
* @param value boolean value to be added
*/","* Adds a bool value.
     * @param value the value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$AbstractNumberComparisonOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),67,77,"/**
* Compares two numbers from the execution context stack.
* @param context execution context containing the operand stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDType3Font:isFontSymbolic(),122,126,"/**
 * Determines if the font is symbolic.
 * @return false indicating the font is not symbolic
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$AbstractLogicalOperator:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,60,"/**
* Executes operation on top two stack elements.
* @param context execution context containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/BitwiseOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.BitwiseOperators$Not:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),124,145,"/**
 * Executes logical NOT on boolean or negates integer.
 * @param context execution context containing operand stack
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ExecutionContext.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext:<init>(org.apache.pdfbox.pdmodel.common.function.type4.Operators),35,38,"/**
 * Initializes an execution context with a set of operators.
 * @param operatorSet the set of operators to be used in execution
 */","* Creates a new execution context.
     * @param operatorSet the operator set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,<init>,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:<init>(),35,38,"/**
 * Initializes the instruction sequence builder.
 * Pushes the main sequence onto the stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,getCurrentSequence,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:getCurrentSequence(),62,65,"/**
 * Retrieves the current instruction sequence from the stack.
 * @return the top InstructionSequence object from the stack
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Dup:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),58,63,"/**
* Duplicates the top element of the execution stack.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getListItemPatterns,org.apache.pdfbox.text.PDFTextStripper:getListItemPatterns(),1813,1825,"/**
* Returns compiled regex patterns for list items.
* Initializes and caches the patterns if not already done.
* @return List of compiled Pattern objects
*/","* returns a list of regular expression Patterns representing different common list item formats. For example
     * numbered items of form:
     * <ol>
     * <li>some text</li>
     * <li>more text</li>
     * </ol>
     * or
     * <ul>
     * <li>some text</li>
     * <li>more text</li>
     * </ul>
     * etc., all begin with some character pattern. The pattern ""\\d+\."" (matches ""1."", ""2."", ...) or ""\[\\d+\]""
     * (matches ""[1]"", ""[2]"", ...).
     * <p>
     * This method returns a list of such regular expression Patterns.
     * 
     * @return a list of Pattern objects.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,hasMore,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:hasMore(),138,141,"/**
 * Checks if there are more characters to process.
 * @return true if index is less than input length, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,currentChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:currentChar(),143,146,"/**
 * Retrieves the current character from the input string.
 * @param index position in the input string
 * @return character at the specified index
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,peek,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:peek(),161,171,"/**
 * Peeks at the next character in the input string.
 * @return the next character or EOT if at the end of the string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Copy:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),38,51,"/**
* Duplicates the top n elements of the stack.
* @param context execution context containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Index:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),85,96,"/**
* Moves an element from the specified position to the top of the stack.
* @param context execution context containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/StackOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.StackOperators$Roll:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),115,162,"/**
 * Rolls a specified number of elements in the execution context stack.
 * @param context execution context containing the stack to be rolled
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacExpertEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacExpertEncoding:<init>(),206,212,"/**
* Initializes MacExpertEncoding with entries from a table.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacRomanEncoding:<init>(),254,260,"/**
* Initializes MacRomanEncoding with entries from MAC_ROMAN_ENCODING_TABLE.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/StandardEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.StandardEncoding:<init>(),194,200,"/**
* Initializes encoding map with standard entries.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:<init>(),230,236,"/**
* Initializes symbol encoding by populating a map.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/WinAnsiEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.WinAnsiEncoding:<init>(),264,280,"/**
* Initializes WinAnsiEncoding with standard and default mappings.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:<init>(),229,235,"/**
* Initializes the Zapf Dingbats encoding by populating a map.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(java.lang.Object[]),205,213,"/**
* Converts an array to a string representation.
* @param array the input array of objects
* @return a string with array elements joined by commas, enclosed in brackets
*/","* Creates a String representation of an Object array.
     * 
     * @param array the Object array
     * @return the String representation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,arrayToString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:arrayToString(float[]),221,229,"/**
* Converts float array to string representation.
* @param array array of floats to convert
* @return string with array elements separated by commas, enclosed in brackets
*/","* Creates a String representation of a float array.
     * 
     * @param array the float array
     * @return the String representation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addText(org.apache.pdfbox.text.TextPosition),167,170,"/**
 * Adds a TextPosition to the contents.
 * @param text TextPosition object to be added
 */","* Adds a text position to the contents.
     * 
     * @param text the text position",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addMarkedContent,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addMarkedContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),177,180,"/**
 * Adds marked content to the document.
 * @param markedContent the content to be added
 */","* Adds a marked content to the contents.
     * 
     * @param markedContent the marked content",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,addXObject,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:addXObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),187,190,"/**
 * Adds an XObject to the contents.
 * @param xobject the XObject to be added
 */","* Adds an XObject to the contents.
     * 
     * @param xobject the XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:toString(),193,199,"/**
* Returns string representation of the object.
* Includes tag, properties, and contents.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,toString,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:toString(),267,271,"/**
* Returns a string representation of the corners.
* @return Concatenated string of corner coordinates
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:toString(),127,136,"/**
* Overrides toString to include list numbering if specified.
* @return String representation of the object with optional list numbering
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:toString(),158,175,"/**
* Returns a string representation of the object.
* Includes role, checked state, and description if specified.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:toString(),193,218,"/**
* Generates a string representation of the object.
* Appends properties if they are specified.
* @return formatted string with object details
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getPermissionBytesForPublicKey,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getPermissionBytesForPublicKey(),176,186,"/**
* Sets and returns permission bits for a public key.
* @return integer representing permission bytes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrint(boolean),217,223,"/**
* Sets print permission.
* @param allowPrinting true to enable printing, false otherwise
*/","* Set if the user can print.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowPrinting A boolean determining if the user can print.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModify(boolean),242,248,"/**
* Sets modification permission.
* @param allowModifications true to allow modifications, false otherwise
*/","* Set if the user can modify the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowModifications A boolean determining if the user can modify the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractContent(boolean),269,275,"/**
* Sets permission to extract content.
* @param allowExtraction true to allow extraction, false otherwise
*/","* Set if the user can extract content from the document.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanModifyAnnotations(boolean),302,308,"/**
* Sets permission to modify annotations.
* @param allowAnnotationModification flag indicating modification permission
*/","* Set if the user can add or modify text annotations and fill in interactive forms fields and,
     * if {@link #canModify() canModify()} returns true, create or modify interactive form fields
     * (including signature fields). Note that if {@link #canFillInForm() canFillInForm()} returns
     * true, it is still possible to fill in interactive forms (including signature fields) even the
     * parameter here is false.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAnnotationModification A boolean determining the new setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanFillInForm(boolean),331,337,"/**
* Sets permission to fill in form.
* @param allowFillingInForm flag indicating if form can be filled
*/","* Set if the user can fill in interactive form fields (including signature fields) even if
     * {@link #canModifyAnnotations() canModifyAnnotations()} returns false. Therefore, if you want
     * to prevent a user from filling in interactive form fields, you need to call
     * {@link #setCanModifyAnnotations(boolean) setCanModifyAnnotations(false)} as well.
     *<p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowFillingInForm A boolean determining if the user can fill in interactive forms.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanExtractForAccessibility(boolean),359,365,"/**
* Sets permission to extract content for accessibility.
* @param allowExtraction flag indicating extraction permission
*/","* Set if the user can extract content from the document for accessibility purposes.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowExtraction A boolean determining if the user can extract content
     *                        from the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanAssembleDocument(boolean),384,390,"/**
* Sets permission to assemble documents.
* @param allowAssembly true to allow, false to disallow
*/","* Set if the user can insert/rotate/delete pages.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param allowAssembly A boolean determining if the user can assemble the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,setCanPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:setCanPrintFaithful(boolean),413,419,"/**
* Sets the permission to print faithfully.
* @param canPrintFaithful flag indicating if printing is allowed
*/","* Set if the user can print the document in a faithful format or in a degraded format (if print
     * is enabled). The PDF version must be 1.5 or higher.
     * <p>
     * This method will have no effect if the object is in read only mode.
     *
     * @param canPrintFaithful A boolean determining if the user can print the document in a
     * faithful format.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrint,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrint(),205,208,"/**
 * Checks if print permission is granted.
 * @return true if print permission is enabled, false otherwise
 */","* This will tell if the user can print.
     *
     * @return true If supplied with the user password they are allowed to print.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModify,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModify(),230,233,"/**
* Checks if modification permission is granted.
* @return true if modification is allowed, false otherwise
*/","* This will tell if the user can modify contents of the document.
     *
     * @return true If supplied with the user password they are allowed to modify the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractContent,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractContent(),256,259,"/**
 * Checks if content extraction permission is enabled.
 * @return true if extraction is allowed, false otherwise
 */","* This will tell if the user can extract text and images from the PDF document.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canModifyAnnotations,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canModifyAnnotations(),286,289,"/**
* Checks if annotations can be modified.
* @return true if modification permission is enabled, false otherwise
*/","* This will tell if the user can add or modify text annotations and fill in interactive forms
     * fields and, if {@link #canModify() canModify()} returns true, create or modify interactive
     * form fields (including signature fields). Note that if
     * {@link #canFillInForm() canFillInForm()} returns true, it is still possible to fill in
     * interactive forms (including signature fields) even if this method here returns false.
     *
     * @return true If supplied with the user password they are allowed to modify annotations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canFillInForm,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canFillInForm(),316,319,"/**
 * Checks if user has permission to fill in forms.
 * @return true if permission is granted, false otherwise
 */","* This will tell if the user can fill in interactive form fields (including signature fields)
     * even if {@link #canModifyAnnotations() canModifyAnnotations()} returns false.
     *
     * @return true If supplied with the user password they are allowed to fill in form fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canExtractForAccessibility,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canExtractForAccessibility(),346,349,"/**
 * Checks if permission to extract content for accessibility is granted.
 * @return true if permission is enabled, false otherwise
 */","* This will tell if the user can extract text and images from the PDF document
     * for accessibility purposes.
     *
     * @return true If supplied with the user password they are allowed to extract content
     *              from the PDF document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canAssembleDocument,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canAssembleDocument(),372,375,"/**
 * Checks if the document assembly permission is granted.
 * @return true if permission is enabled, false otherwise
 */","* This will tell if the user can insert/rotate/delete pages.
     *
     * @return true If supplied with the user password they are allowed to assemble the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,canPrintFaithful,org.apache.pdfbox.pdmodel.encryption.AccessPermission:canPrintFaithful(),399,402,"/**
 * Checks if print permission for faithful users is enabled.
 * @return true if permission is granted, false otherwise
 */","* This will tell if the user can print the document in a faithful format or in a degraded
     * format (if print is enabled).
     *
     * @return true If supplied with the user password they are allowed to print the document in a
     * faithful format.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getCertificate,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getCertificate(),74,90,"/**
 * Retrieves an X509 certificate from the key store.
 * @return X509Certificate object or throws KeyStoreException if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeyDecryptionMaterial.java,getPrivateKey,org.apache.pdfbox.pdmodel.encryption.PublicKeyDecryptionMaterial:getPrivateKey(),108,135,"/**
 * Retrieves a private key from the keystore.
 * @return PrivateKey object or throws exception if issues occur.
 * @throws KeyStoreException on errors accessing the keystore or recovering the key.
 */","* returns The private key that will be used to open the document protection.
     * @return The private key.
     * @throws KeyStoreException If there is an error accessing the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,appendCertInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:appendCertInfo(java.lang.StringBuilder,org.bouncycastle.cms.KeyTransRecipientId,java.security.cert.X509Certificate,org.bouncycastle.cert.X509CertificateHolder)",291,313,"/**
* Appends certificate information to StringBuilder.
* Compares recipient ID serial with certificate serial and issuer.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,getSecureRandom,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:getSecureRandom(),435,442,"/**
* Returns a SecureRandom instance.
* @return existing customSecureRandom if set, otherwise a new SecureRandom instance
*/","* Returns a SecureRandom If customSecureRandom is not defined, instantiate a new SecureRandom
     * 
     * @return SecureRandom",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,setKey,org.apache.pdfbox.pdmodel.encryption.RC4Cipher:setKey(byte[]),47,70,"/**
* Sets the encryption key.
* @param key byte array representing the key (1-32 bytes)
* @throws IllegalArgumentException if key length is outside valid range
*/","* This will reset the key to be used.
     *
     * @param key The RC4 key used during encryption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte,java.io.OutputStream)",106,113,"/**
* Writes a byte to the output stream with RC4 encryption.
* @param aByte the byte to be written
* @param output the OutputStream to write to
* @throws IOException if an I/O error occurs
*/","* This will encrypt and write the next byte.
     *
     * @param aByte The byte to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,combineDiacritic,org.apache.pdfbox.text.TextPosition:combineDiacritic(java.lang.String),794,808,"/**
 * Combines diacritic characters in a string.
 * @param str input string with potential diacritic marks
 * @return normalized string with combined diacritics
 */","* Combine the diacritic, for example, convert non-combining diacritic characters to their
     * combining counterparts.
     *
     * @param str String to normalize
     * @return Normalized string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,prohibited,org.apache.pdfbox.pdmodel.encryption.SaslPrep:prohibited(int),146,158,"/**
* Checks if a Unicode code point is prohibited.
* @param codepoint the Unicode code point to check
* @return true if the code point is prohibited, false otherwise
*/","* Return true if the given {@code codepoint} is a prohibited character
     * as defined by
     * <a href=""https://tools.ietf.org/html/rfc4013#section-2.3"">RFC 4013,
     * Section 2.3</a>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,createCipher,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:createCipher(byte[],byte[],boolean)",392,401,"/**
* Creates AES/CBC/PKCS5Padding cipher for encryption or decryption.
* @param key secret key bytes
* @param iv initialization vector bytes
* @param decrypt true for decryption mode, false for encryption
* @return Cipher instance initialized with the specified parameters
* @throws GeneralSecurityException if cipher initialization fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,computeVersionNumber,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:computeVersionNumber(),812,827,"/**
* Computes version number based on key length and protection policy.
* @return integer representing the computed version number
*/","* Computes the version number of the {@link SecurityHandler} based on the encryption key
     * length. See PDF Spec 1.6 p 93 and
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/pdf/adobe_supplement_iso32000.pdf"">PDF
     * 1.7 Supplement ExtensionLevel: 3</a> and
     * <a href=""http://intranet.pdfa.org/wp-content/uploads/2016/08/ISO_DIS_32000-2-DIS4.pdf"">PDF
     * Spec 2.0</a>.
     *
     * @return The computed version number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityProvider.java,getProvider,org.apache.pdfbox.pdmodel.encryption.SecurityProvider:getProvider(),40,48,"/**
* Returns the singleton instance of the BouncyCastleProvider.
* @return BouncyCastleProvider instance
*/","* Returns the provider to be used for advanced encrypting/decrypting. Default is the BouncyCastleProvider.
     * 
     * @return the security provider",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,logIfStrongEncryptionMissing,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:logIfStrongEncryptionMissing(),1255,1268,"/**
* Logs a warning if JCE unlimited strength encryption is missing.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getNumComponentsFromImageMetadata,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getNumComponentsFromImageMetadata(javax.imageio.ImageReader),187,215,"/**
 * Extracts the number of components from JPEG image metadata.
 * @param reader ImageReader instance for the image
 * @return Number of frame components or 0 if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,richContentsToString,"org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:richContentsToString(org.w3c.dom.Node,boolean)",956,1001,"/**
* Converts rich content to string representation of XML.
* @param node current XML node
* @param root indicates if the node is the root
* @return XML string with proper escaping
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,getNodeValue,org.apache.pdfbox.util.XMLUtil:getNodeValue(org.w3c.dom.Element),99,113,"/**
 * Retrieves text content of a DOM element.
 * @param node the DOM element to process
 * @return concatenated text content of the element's children
 */","* This will get the text value of an element.
     *
     * @param node The node to get the text value for.
     * @return The text of the node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String),845,848,"/**
 * Writes a string to the output stream.
 * @param text the string to be written
 * @throws IOException if an I/O error occurs
 */","* Write a Java string to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.CIDSystemInfo:toString(),53,57,"/**
 * Returns a string representation of the object.
 * @return Concatenated string of registry, ordering, and supplement values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,getPredefinedCMap,org.apache.pdfbox.pdmodel.font.CMapManager:getPredefinedCMap(java.lang.String),46,59,"/**
* Retrieves a predefined CMap by name, caching results.
* @param cMapName name of the CMap
* @return CMap object or throws IOException if parsing fails
*/","* Fetches the predefined CMap from disk (or cache).
     *
     * @param cMapName CMap name
     * @return The predefined CMap, never null.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/CMapManager.java,parseCMap,org.apache.pdfbox.pdmodel.font.CMapManager:parseCMap(org.apache.pdfbox.io.RandomAccessRead),67,75,"/**
* Parses a CMap from a random access read.
* @param randomAccessRead source of data to parse
* @return parsed CMap object or null if parsing fails
*/","* Parse the given CMap.
     *
     * @param randomAccessRead the source of the CMap to be read
     * @return the parsed CMap",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,readTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:readTrueTypeFont(java.lang.String,java.io.File)",216,246,"/**
 * Reads a TrueTypeFont from a file.
 * @param postScriptName name of the font to find in a TTC file
 * @param file file containing the font data
 * @return TrueTypeFont object
 * @throws IOException if an I/O error occurs or font is not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getParser,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",505,526,"/**
 * Determines and returns the appropriate parser for a font file.
 * @param randomAccessRead input stream of the font file
 * @param isEmbedded flag indicating if the font is embedded
 * @return OTFParser or TTFParser based on the file type
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getParser,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getParser(org.apache.pdfbox.io.RandomAccessRead,boolean)",762,783,"/**
 * Determines and returns the appropriate parser for a font file.
 * @param randomAccessRead input stream for reading font data
 * @param isEmbedded flag indicating if the font is embedded
 * @return OTFParser or TTFParser based on the font type
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getOTFFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getOTFFont(java.lang.String,java.io.File)",248,288,"/**
 * Retrieves an OpenTypeFont by its PostScript name from a given file.
 * @param postScriptName the PostScript name of the font
 * @param file the file containing the font data
 * @return the OpenTypeFont object or null if loading fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getType1Font,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getType1Font(java.lang.String,java.io.File)",290,303,"/**
* Loads a Type 1 font from a file.
* @param postScriptName name of the PostScript font
* @param file font file to load
* @return Type1Font object or null if loading fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,isBadPath,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:isBadPath(java.lang.String),402,405,"/**
* Checks if a given path is invalid or unwritable.
* @param path file system path to check
* @return true if the path is null, not a directory, or not writable; false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeLine,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeLine(java.io.BufferedWriter,java.lang.String)",178,182,"/**
 * Writes a line of text to a BufferedWriter.
 * @param writer BufferedWriter instance to write to
 * @param text the text to write
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,writeFontInfo,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:writeFontInfo(java.io.BufferedWriter,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo)",436,488,"/**
 * Writes font information to a BufferedWriter.
 * @param writer destination for writing font info
 * @param fontInfo font data to write
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getPostScriptNames,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getPostScriptNames(java.lang.String),188,199,"/**
* Generates a set of postscript names.
* @param postScriptName original postscript name
* @return set containing the original and hyphen-free names
*/","* Gets alternative names, as seen in some PDFs, e.g. PDFBOX-142.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,calcLine,"org.apache.pdfbox.pdmodel.graphics.shading.Line:calcLine(int,int,int,int)",66,94,"/**
* Calculates points on a line using Bresenham's algorithm.
* @param x0, y0 starting point coordinates
* @param x1, y1 ending point coordinates
* @return Set of Points representing the line
*/","* Calculate the points of a line with Bresenham's line algorithm
     * <a
     * href=""http://en.wikipedia.org/wiki/Bresenham's_line_algorithm"">Bresenham's
     * line algorithm</a>
     *
     * @param x0 coordinate
     * @param y0 coordinate
     * @param x1 coordinate
     * @param y1 coordinate
     * @return all the points on the rasterized line from (x0, y0) to (x1, y1)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcDeg,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcDeg(java.awt.geom.Point2D[]),101,110,"/**
* Calculates the number of unique points from an array.
* @param p array of Point2D objects
* @return count of unique points after rounding coordinates
*/","* Calculate the degree value of a triangle.
     *
     * @param p 3 vertices coordinates
     * @return number of unique points in the 3 vertices of a triangle, 3, 2 or
     * 1",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toDebugString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:toDebugString(),827,841,"/**
* Generates a debug string with font information.
* @return A formatted string containing font details
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,computeHash,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:computeHash(java.io.InputStream),851,867,"/**
 * Computes CRC32 hash of input stream.
 * @param is input stream to hash
 * @return hexadecimal string representation of the hash
 * @throws IOException if reading from input stream fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,addFont,"org.apache.pdfbox.pdmodel.font.FontCache:addFont(org.apache.pdfbox.pdmodel.font.FontInfo,org.apache.fontbox.FontBoxFont)",41,44,"/**
* Adds a font to the cache.
* @param info font information
* @param font the FontBoxFont object
*/","* Adds the given FontBox font to the cache.
     * 
     * @param info the FontInfo to be used as key
     * @param font the font to be cached",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontCache.java,getFont,org.apache.pdfbox.pdmodel.font.FontCache:getFont(org.apache.pdfbox.pdmodel.font.FontInfo),53,57,"/**
* Retrieves font from cache.
* @param info font information
* @return FontBoxFont object or null if not found
*/","* Returns the FontBox font associated with the given FontInfo.
     * 
     * @param info the FontInfo of the cached font
     * 
     * @return the cached font if available, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontInfo.java,toString,org.apache.pdfbox.pdmodel.font.FontInfo:toString(),140,147,"/**
* Generates a string representation of the font.
* @return formatted string with postscript name, format, mac style, family class, and CID system info
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,toString,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:toString(),159,164,"/**
* Returns a string representation of the TilingPaintParameter.
* @return String containing the parameter's properties
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,compareTo,org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch:compareTo(org.apache.pdfbox.pdmodel.font.FontMapperImpl$FontMatch),725,729,"/**
 * Compares font matches based on their scores.
 * @param match the FontMatch to compare with
 * @return negative if current score is less, positive if greater, zero if equal
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cosine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cosine(double,double)",203,210,"/**
 * Calculates the cosine value.
 * @param dx adjacent side length
 * @param hypot hypotenuse length
 * @return cosine of the angle or 0 if hypotenuse is zero
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,sine,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:sine(double,double)",212,219,"/**
* Computes sine value using opposite side and hypotenuse.
* @param dy length of the opposite side
* @param hypot length of the hypotenuse
* @return sine value or 0 if hypotenuse is zero
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,mapName,org.apache.pdfbox.pdmodel.font.Standard14Fonts:mapName(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),153,156,"/**
 * Maps a font name to its alias.
 * @param baseName the original FontName object
 */","* Adds a standard font name to the map of known aliases, to simplify the logic of finding
     * font metrics by name. We want a single lookup in the map to find the font both by a base name or
     * an alias.
     *
     * @see #getAFM
     * @param baseName the font name of the Standard 14 font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitute,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitute(java.lang.String,java.lang.String)",207,211,"/**
* Adds a substitution pair.
* @param match the string to match (case-insensitive)
* @param replace the replacement string
*/","* Adds a top-priority substitute for the given font.
     *
     * @param match PostScript name of the font to match
     * @param replace PostScript name of the font to use as a replacement",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,addSubstitutes,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:addSubstitutes(java.lang.String,java.util.List)",213,216,"/**
* Adds substitutes for a given match.
* @param match string to be matched (case-insensitive)
* @param replacements list of replacement strings
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",469,485,"/**
 * Retrieves font information by format and PostScript name.
 * @param format the desired font format
 * @param postScriptName the font's PostScript name
 * @return FontInfo object or null if not found
 */",* Finds the named font with the given format.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getSubstitutes,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getSubstitutes(java.lang.String),221,226,"/**
* Retrieves substitutes for a given postscript name.
* @param postScriptName the name of the postscript
* @return list of substitute names or empty list if none found
*/",* Returns the substitutes for a given font.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getName,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getName(int),166,169,"/**
 * Retrieves name associated with a code.
 * @param code unique identifier for the name
 * @return corresponding name or "".notdef"" if not found
 */","* This will take a character code and get the name from the code.
     * 
     * @param code character code
     * @return PostScript glyph name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,printMatches,org.apache.pdfbox.pdmodel.font.FontMapperImpl:printMatches(java.util.PriorityQueue),735,750,"/**
* Prints and returns the highest scoring FontMatch from a priority queue.
* @param queue sorted queue of FontMatch objects
* @return FontMatch with the highest score
*/",* For debugging. Prints all matches and returns the best match.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,findFontOrSubstitute,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:findFontOrSubstitute(),157,183,"/**
* Finds or substitutes a TrueType font.
* @return TrueTypeFont object
* @throws IOException if font mapping fails or returns null
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getType2CharString,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getType2CharString(int),286,300,"/**
* Retrieves Type 2 CharString for CID.
* @param cid character identifier
* @return Type2CharString object or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the Type 2 charstring for the given CID, or null if the substituted font does not contain Type 2
     * charstrings.
     *
     * @param cid CID
     * @return the Type 2 charstring for the given CID or null
     * 
     * @throws IOException if the charstring could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToCID(int),371,375,"/**
 * Converts character code to CID.
 * @param code character code
 * @return CID value
 */","* Returns the CID for the given character code. If not found then CID 0 is returned.
     *
     * @param code character code
     * @return CID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getAverageFontWidth(),461,469,"/**
* Returns the average font width.
* @return average width of characters in pixels
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,subset,org.apache.pdfbox.pdmodel.font.PDType0Font:subset(),297,310,"/**
* Subsets the font, ensuring it is subsettable.
* @throws IOException if an I/O error occurs during subsetting
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToCID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToCID(int),224,240,"/**
 * Converts a character code to its corresponding CID.
 * @param code character code to be converted
 * @return CID value or Unicode code point if no CID mapping exists
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getHeight(int),335,341,"/**
 * Retrieves the height of a font based on its code.
 * @param code font code identifier
 * @return height as a float value in em units
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,encode,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:encode(int),356,407,"/**
 * Encodes a Unicode character to a byte array using the font's cmap.
 * @param unicode Unicode character to encode
 * @return Byte array representing the encoded glyph or throws exception if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toRGB(),192,202,"/**
* Converts color components to RGB integer.
* @return RGB value as an integer
* @throws IOException if conversion fails
*/","* Returns the packed RGB value for this color, if any.
     * @return RGB
     * @throws IOException if the color conversion fails
     * @throws UnsupportedOperationException if this color value is a pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGB(float[]),170,186,"/**
* Converts indexed color value to RGB.
* @param value single-element array with color index
* @return float array of RGB values (0.0 to 1.0)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,backdropRemoval,"org.apache.pdfbox.rendering.GroupGraphics:backdropRemoval(int,int,int,float)",723,729,"/**
* Adjusts color intensity based on backdrop and alpha factor.
* @param groupRGB RGB value of the group
* @param backdropRGB RGB value of the backdrop
* @param shift bit shift for color channel extraction
* @param alphaFactor blending factor
* @return adjusted color intensity, clamped between 0 and 255
*/","* Computes the backdrop removal equation.
     * <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code>",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,multiplyFloat,"org.apache.pdfbox.text.PDFTextStripper:multiplyFloat(float,float)",1689,1694,"/**
* Multiplies two floats and rounds to 3 decimal places.
* @param value1 first float number
* @param value2 second float number
* @return rounded product of the two floats
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,equals,org.apache.pdfbox.pdmodel.font.PDFont:equals(java.lang.Object),654,658,"/**
* Checks equality based on COSObject reference.
* @param other object to compare
* @return true if both objects have the same COSObject, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,hashCode,org.apache.pdfbox.pdmodel.font.PDFont:hashCode(),660,664,"/**
 * Returns the hash code of the underlying COS object.
 * @return Hash code of the COS object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getData,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk:getData(),717,720,"/**
 * Retrieves a subset of bytes from an array.
 * @return byte array containing the specified range of data
 */","* Get the data of this chunk as a byte array
         *
         * @return a byte-array with only the data of the chunk",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanoseClassification.java,toString,org.apache.pdfbox.pdmodel.font.PDPanoseClassification:toString(),95,108,"/**
* Returns a string representation of the font style.
* @return formatted string with font attributes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,getGlyphList,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:getGlyphList(),166,169,"/**
 * Retrieves the Adobe glyph list.
 * @return GlyphList containing Adobe glyphs
 */",* Returns the font's glyph list.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,assignGlyphList,org.apache.pdfbox.pdmodel.font.PDSimpleFont:assignGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),466,477,"/**
* Assigns a glyph list based on the specified font.
* @param fontName the name of the font to determine the glyph list
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphList,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphList(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),309,313,"/**
* Retrieves a GlyphList based on the font name.
* @param baseName the base font name to determine the GlyphList
* @return the appropriate GlyphList for the given font name
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(java.lang.String),502,538,"/**
 * Retrieves the path for a given glyph name or ID.
 * @param name glyph name or GID pseudo-name
 * @return GeneralPath object representing the glyph, or an empty path if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(java.lang.String),581,586,"/**
* Checks if a glyph with the given name exists.
* @param name glyph name to check
* @return true if glyph exists, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,extractCmapTable,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:extractCmapTable(),715,760,"/**
 * Extracts and initializes CMAP tables for different platforms.
 * @throws IOException if an I/O error occurs during extraction
 */","* extract all useful ""cmap"" subtables.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,isVertical,org.apache.pdfbox.pdmodel.font.PDType0Font:isVertical(),461,465,"/**
* Checks if content mode is vertical.
* @return true if content mode is vertical, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readCode,org.apache.pdfbox.pdmodel.font.PDType0Font:readCode(java.io.InputStream),626,634,"/**
* Reads code from input stream using character map.
* @param in input stream to read from
* @return integer representation of the code
* @throws IOException if cmap is null or read fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(java.lang.String),242,246,"/**
 * Checks if the font contains a specific glyph.
 * @param name the name of the glyph to check
 * @return true if the glyph is present, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getAverageFontWidth(),438,446,"/**
 * Returns the average font width.
 * @return average width of characters in the font
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType1Font:getAverageFontWidth(),473,484,"/**
* Returns the average font width.
* Uses standard 14 AFM if available, otherwise falls back to superclass method.
* @return average font width as a float
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,loadMetrics,org.apache.pdfbox.pdmodel.font.Standard14Fonts:loadMetrics(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),129,143,"/**
* Loads font metrics from an AFM file.
* @param fontName the name of the font
* @throws IOException if the resource is not found or parsing fails
*/","* Loads the metrics for the base font specified by name. Metric file must exist in the pdfbox jar under
     * /org/apache/pdfbox/resources/afm/
     *
     * @param fontName one of the standard 14 font names for which to load the metrics.
     * @throws IOException if no metrics exist for that font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowDestinationRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowDestinationRange(java.lang.String,java.lang.String)",214,227,"/**
* Checks if destination range is allowed.
* @param prev previous destination string
* @param next next destination string
* @return true if range is valid, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isEmbeddingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isEmbeddingPermitted(org.apache.fontbox.ttf.TrueTypeFont),140,160,"/**
* Checks if font embedding is permitted.
* @param ttf TrueTypeFont object to check
* @return true if embedding is allowed, false otherwise
*/",* Returns true if the fsType in the OS/2 table permits embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,isSubsettingPermitted,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:isSubsettingPermitted(org.apache.fontbox.ttf.TrueTypeFont),165,177,"/**
* Checks if subsetting is permitted for a TrueType font.
* @param ttf the TrueTypeFont object to check
* @return true if subsetting is allowed, false otherwise
*/",* Returns true if the fsType in the OS/2 table permits subsetting.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,getTag,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:getTag(java.util.Map),371,394,"/**
* Generates a base25 encoded tag from a map of group IDs to counts.
* @param gidToCid mapping of group IDs to their respective counts
* @return 7-character string with base25 encoding and '+' suffix
*/",* Returns an uppercase 6-character unique tag for the given subset.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/UniUtil.java,getUniNameOfCodePoint,org.apache.pdfbox.pdmodel.font.UniUtil:getUniNameOfCodePoint(int),32,46,"/**
 * Converts a Unicode code point to its uniXXXX representation.
 * @param codePoint the Unicode code point value
 * @return String in uniXXXX format
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,getEncodingName,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:getEncodingName(),203,212,"/**
* Returns the encoding name based on base encoding and differences.
* @return String representing the encoding name
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,loadList,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:loadList(java.io.InputStream),121,173,"/**
* Loads a list of glyphs from an input stream.
* @param input stream containing glyph data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,toUnicode,org.apache.pdfbox.pdmodel.font.encoding.GlyphList:toUnicode(java.lang.String),213,264,"/**
 * Converts a name to its corresponding Unicode character.
 * @param name the input string representing a Unicode name or code
 * @return the Unicode character as a String, or null if not found
 */","* Returns the Unicode character sequence for the given glyph name, or null if there isn't any.
     *
     * @param name PostScript glyph name
     * @return Unicode character(s), or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:<init>(org.apache.fontbox.afm.FontMetrics),57,63,"/**
* Initializes encoding with character metrics.
* @param fontMetrics FontMetrics object containing character data
*/","* Creates an encoding from the given AFM font metrics.
     *
     * @param fontMetrics AFM font metrics.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,toString,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:toString(),106,110,"/**
* Returns string representation of PDLineDashPattern.
* @return formatted string with array and phase details
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toString(),228,232,"/**
* Returns string representation of PDColor.
* @return formatted string with components, pattern name, and color space
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:toRGBImage(java.awt.image.WritableRaster),80,103,"/**
* Converts a grayscale raster to an RGB image.
* @param raster the input WritableRaster containing grayscale data
* @return BufferedImage in RGB format
* @throws IOException if an I/O error occurs during conversion
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:toRGBImage(java.awt.image.WritableRaster),76,88,"/**
* Converts a WritableRaster to a TYPE_INT_RGB BufferedImage.
* @param raster the source raster data
* @return a BufferedImage containing the raster data
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRGBImage(java.awt.image.WritableRaster),191,215,"/**
* Converts a WritableRaster to a BufferedImage using an RGB color table.
* @param raster input raster data
* @return BufferedImage representation of the raster
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,convXYZtoRGB,"org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:convXYZtoRGB(float,float,float)",85,106,"/**
* Converts XYZ color space to RGB.
* @param x X component of the color
* @param y Y component of the color
* @param z Z component of the color
* @return RGB values as a float array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,compose,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite$BlendCompositeContext:compose(java.awt.image.Raster,java.awt.image.Raster,java.awt.image.WritableRaster)",110,269,"/**
 * Composes two rasters with a blend mode.
 * @param src source raster
 * @param dstIn destination input raster
 * @param dstOut destination output raster
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,toString,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:toString(),390,394,"/**
* Returns string representation of BlendMode.
* @return formatted string with name and separability status
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage2,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage2(java.awt.image.WritableRaster),200,232,"/**
* Converts a WritableRaster to a BufferedImage in RGB format.
* @param raster input raster data
* @return BufferedImage object representing the raster in RGB color space
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEBasedColorSpace.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDCIEBasedColorSpace:toRGBImage(java.awt.image.WritableRaster),35,73,"/**
 * Converts a WritableRaster to an RGB BufferedImage.
 * @param raster input raster containing color data
 * @return RGB BufferedImage representation of the raster
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,applyColorKeyMask,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:applyColorKeyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage)",706,738,"/**
* Applies a color key mask to an image.
* @param image source image to apply mask on
* @param mask transparency mask
* @return new BufferedImage with applied mask
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(float[],org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",134,149,"/**
* Constructs a PDColor with specified components, pattern name, and color space.
* @param components array of color components
* @param patternName the name of the pattern
* @param colorSpace the color space for the color
*/","* Creates a PDColor containing the given color component values and pattern name.
     * @param components array of color component values
     * @param patternName the name of a pattern in a pattern dictionary
     * @param colorSpace color space in which the pattern/components are defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,create,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:create(org.apache.pdfbox.cos.COSBase),55,58,"/**
 * Creates a PDColorSpace from a COSBase object.
 * @param colorSpace base object representing the color space
 * @return PDColorSpace instance
 * @throws IOException if an error occurs during creation
 */","* Creates a color space given a name or array.
     * @param colorSpace the color space COS object
     * @return a new color space
     * @throws IOException if the color space is unknown or cannot be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRawImage,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRawImage(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",333,338,"/**
 * Converts a WritableRaster to a BufferedImage.
 * @param raster the source raster data
 * @param awtColorSpace the color space for the image
 * @return BufferedImage created from the raster and color space
 */","* Returns the given raster as BufferedImage with the given awtColorSpace using a
     * ComponentColorModel.
     * @param raster the source raster
     * @param awtColorSpace the AWT colorspace
     * @return a BufferedImage in this colorspace",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",347,377,"/**
* Converts a WritableRaster to a BufferedImage in RGB format.
* @param raster the source raster data
* @param colorSpace the color space for conversion
* @return a BufferedImage in RGB format
*/","* Returns the (A)RGB equivalent of the given raster, using the given AWT color space
     * to perform the conversion.
     * @param raster the source raster
     * @param colorSpace the AWT
     * @return an (A)RGB buffered image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,getICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:getICCProfile(),97,114,"/**
* Retrieves the default CMYK ICC profile.
* @return ICC_Profile instance for CGATS001Compat-v2-micro
* @throws IOException if resource not found or read error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImageAWT,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImageAWT(java.awt.image.WritableRaster,java.awt.color.ColorSpace)",162,214,"/**
* Converts CMYK raster to RGB image using AWT.
* @param raster source WritableRaster in CMYK format
* @param colorSpace source ColorSpace
* @return BufferedImage in RGB format
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,equals,org.apache.pdfbox.util.Matrix:equals(java.lang.Object),596,612,"/**
* Checks equality of two Matrix objects.
* @param obj the object to compare with
* @return true if equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setBackground,org.apache.pdfbox.rendering.GroupGraphics:setBackground(java.awt.Color),505,510,"/**
* Sets background color for both group and alpha graphics.
* @param color new background color to set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clearRect,"org.apache.pdfbox.rendering.GroupGraphics:clearRect(int,int,int,int)",90,95,"/**
* Clears a rectangular area in both graphics contexts.
* @param x the x-coordinate of the rectangle's upper-left corner
* @param y the y-coordinate of the rectangle's upper-left corner
* @param width the width of the rectangle
* @param height the height of the rectangle
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),937,943,"/**
* Sets the color space for the image.
* @param cs the new color space to set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,is_sRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:is_sRGB(java.awt.color.ICC_Profile),246,252,"/**
 * Checks if the given ICC profile is sRGB.
 * @param profile ICC profile to check
 * @return true if the profile is sRGB, false otherwise
 */","* Returns true if the given profile represents sRGB.
     * (unreliable on the data of ColorSpace.CS_sRGB in openjdk)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,ensureDisplayProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:ensureDisplayProfile(java.awt.color.ICC_Profile),256,270,"/**
* Ensures the ICC profile is of display class.
* @param profile input ICC profile
* @return modified or original profile as Display class
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,clampColors,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:clampColors(java.awt.color.ICC_ColorSpace,float[])",299,309,"/**
* Clamps color values to the ICC_ColorSpace range.
* @param cs ICC_ColorSpace object defining valid ranges
* @param value array of color component values
* @return array of clamped color component values
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getNumberOfComponents(),334,355,"/**
* Returns the number of color components.
* Uses ICC profile if available to correct inconsistent values.
* @return Number of color components
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getColorSpaceType,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getColorSpaceType(),469,489,"/**
* Returns the color space type.
* @return Color space type identifier or -1 if unknown
*/","* Returns the type of the color space in the ICC profile. If the ICC profile is invalid, the
     * type of the alternate colorspace is returned, which will be one of
     * {@link ColorSpace#TYPE_GRAY TYPE_GRAY}, {@link ColorSpace#TYPE_RGB TYPE_RGB},
     * {@link ColorSpace#TYPE_CMYK TYPE_CMYK}, or -1 if that one is invalid.
     *
     * @return an ICC color space type. See {@link ColorSpace#getType()} and the static values of
     * {@link ColorSpace} for more details.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toRawImage,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toRawImage(java.awt.image.WritableRaster),217,238,"/**
* Converts a WritableRaster to a BufferedImage using an sRGB index colorspace.
* @param raster input image data
* @return BufferedImage object or null if conversion is not possible
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getNumberOfComponents(),51,55,"/**
 * Returns the number of color components.
 * @return integer count of color components
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGB(float[]),121,137,"/**
* Converts CIE LAB color to RGB.
* @param value CIE LAB color values [L*, a*, b*]
* @return RGB color values in range [0, 1]
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,isGrayImage,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:isGrayImage(java.awt.image.BufferedImage),118,133,"/**
* Checks if an image is a grayscale image.
* @param image the BufferedImage to check
* @return true if the image is grayscale, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",229,233,"/**
* Creates an image object from a BufferedImage.
* @param document PDF document to add the image to
* @param image source BufferedImage
* @return PDImageXObject created from the image
* @throws IOException if there is an error processing the image
*/","* Creates a new JPEG PDImageXObject from a BufferedImage.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getAlphaImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getAlphaImage(java.awt.image.BufferedImage),281,302,"/**
 * Extracts alpha channel from an image.
 * @param image input image with alpha channel
 * @return grayscale image representing the alpha channel, or null if not applicable
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorImage,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorImage(java.awt.image.BufferedImage),416,438,"/**
* Converts an image to RGB format without alpha channel.
* @param image input image with potential alpha channel
* @return RGB image without alpha or original if already in RGB
* @throws UnsupportedOperationException if color space is not RGB
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getJPEGImageWriter,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getJPEGImageWriter(),331,349,"/**
* Retrieves an appropriate JPEG ImageWriter.
* @return ImageWriter instance supporting JPEG format
* @throws IOException if no suitable writer is available
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,getColorSpaceFromAWT,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:getColorSpaceFromAWT(java.awt.image.BufferedImage),387,413,"/**
 * Converts AWT BufferedImage color space to PDF color space.
 * @param awtImage input image
 * @return corresponding PDColorSpace or throws exception if unsupported
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",289,335,"/**
* Initializes a PredictorEncoder with a document and image.
* @param document PDDocument to be used
* @param image BufferedImage to encode
*/",* Initialize the encoder and set all final fields,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,pngFilterUp,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:pngFilterUp(int,int)",669,673,"/**
 * Applies PNG filter using previous row.
 * @param x current pixel index
 * @param b byte value of the current pixel
 * @return filtered byte value
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHint,"org.apache.pdfbox.rendering.GroupGraphics:setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)",526,531,"/**
* Sets rendering hints for both graphics contexts.
* @param hintKey key of the hint to be set
* @param hintValue value of the hint to be set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,scaleImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:scaleImage(java.awt.image.BufferedImage,int,int,int,boolean)",762,796,"/**
* Scales an image to a new size with optional interpolation.
* @param image the original BufferedImage to scale
* @param width target width for scaling
* @param height target height for scaling
* @param type image type (e.g., BufferedImage.TYPE_INT_RGB)
* @param interpolate whether to use interpolation during scaling
* @return scaled BufferedImage
*/",* High-quality image scaling.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.image.ImageObserver)",176,182,"/**
 * Draws an image with specified coordinates and dimensions.
 * @param img the Image to be drawn
 * @param dx1, dy1, dx2, dy2 destination rectangle coordinates
 * @param sx1, sy1, sx2, sy2 source rectangle coordinates
 * @param observer for monitoring drawing progress
 * @return true if the image is completely or partially drawn, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImage.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.image.PDImage:getCOSObject(),250,251,"/**
 * Retrieves the underlying COS dictionary.
 * @return COSDictionary representing the object
 */","* Convert this image to a COS object.
     *
     * @return The cos object that matches this image object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,readPNGFloat,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:readPNGFloat(byte[],int)",752,756,"/**
* Reads a float value from PNG data.
* @param bytes byte array containing PNG data
* @param offset starting index in the byte array
* @return float value scaled by dividing an integer by 100000
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,parsePNGChunks,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:parsePNGChunks(byte[]),765,891,"/**
* Parses PNG chunks from image data.
* @param imageData byte array containing PNG data
* @return PNGConverterState object or null if parsing fails
*/","* Parse the PNG structure into the PNGConverterState. If we can't handle
     * something, this method will return null.
     *
     * @param imageData the byte array with the PNG data
     * @return null or the converter state with all relevant chunks",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,getIDATInputStream,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:getIDATInputStream(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),480,489,"/**
* Combines IDAT chunks into a single input stream.
* @param state PNG conversion state containing IDAT chunks
* @return Combined InputStream of all IDAT data
*/","* Build an input stream for the IDAT data. May need to concat multiple IDAT
     * chunks.
     *
     * @param state the converter state.
     * @return a input stream with the IDAT data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,crc,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:crc(byte[],int,int)",933,936,"/**
* Computes CRC checksum.
* @param buf byte array containing data
* @param offset starting index in buffer
* @param len length of data to process
* @return computed CRC value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaint,org.apache.pdfbox.rendering.GroupGraphics:setPaint(java.awt.Paint),519,524,"/**
* Sets the painting attributes for both groups.
* @param paint the Paint object to be used for drawing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRect(int,int,int,int)",254,259,"/**
* Fills a rectangle with the current color on both graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:dispose(),158,163,"/**
 * Releases resources and sets shading type to null.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:dispose(),163,168,"/**
* Releases resources and sets radial shading type to null.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,dispose,org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:dispose(),84,89,"/**
 * Disposes of resources and resets type1ShadingType.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:getRaster(int,int,int,int)",165,251,"/**
* Generates a raster from given coordinates and dimensions.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param w width of the raster
* @param h height of the raster
* @return Raster object containing pixel data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:getRaster(int,int,int,int)",91,157,"/**
* Generates a raster image based on shading.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param w width of the raster
* @param h height of the raster
* @return Raster object representing the shaded area
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getFlag1Edge,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getFlag1Edge(),134,138,"/**
 * Returns a copy of the first flag edge points.
 * @return cloned array of Point2D representing the edge
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,getPoints,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:getPoints(int),58,82,"/**
* Generates points for a cubic Bezier curve.
* @param l level of detail (number of segments)
* @return array of Point2D representing the curve points
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:calcPixelTableArray(java.awt.Rectangle),62,73,"/**
* Calculates pixel table array for the given device bounds.
* @param deviceBounds dimensions of the device
* @return 2D array representing pixel table or null if error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,calcPixelTableArray,org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:calcPixelTableArray(java.awt.Rectangle),60,74,"/**
* Calculates pixel table array for given device bounds.
* @param deviceBounds dimensions of the device
* @return 2D array representing pixel colors or -1 if background is null
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates the bounding rectangle for shaded triangles.
* @param xform affine transformation matrix
* @param matrix additional transformation matrix
* @return bounding Rectangle2D or empty if no triangles
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.Patch:<init>(float[][]),46,49,"/**
 * Sets the corner colors.
 * @param color 2D array of colors to be applied
 */","* Constructor of Patch.
     *
     * @param color 4 corner's colors",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.Patch:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",228,231,"/**
* Checks if two points overlap within a small tolerance.
* @param p0 first point
* @param p1 second point
* @return true if points are within 0.001 units of each other, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,overlaps,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:overlaps(java.awt.geom.Point2D,java.awt.geom.Point2D)",203,206,"/**
* Checks if two points are approximately equal.
* @param p0 first point
* @param p1 second point
* @return true if points overlap within a small tolerance, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,getArea,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:getArea(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)",220,224,"/**
* Calculates the area of a triangle given its three vertices.
* @param a first vertex of the triangle
* @param b second vertex of the triangle
* @param c third vertex of the triangle
* @return area of the triangle as a double
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,removeZeroLengthSegments,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:removeZeroLengthSegments(java.awt.geom.Point2D$Double[]),954,995,"/**
* Removes zero-length segments from a polygon.
* @param polygon array of points defining the polygon
* @return new array with zero-length segments removed
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,clonedPoint2DArray,org.apache.pdfbox.pdmodel.graphics.shading.Patch:clonedPoint2DArray(java.awt.geom.Point2D[]),233,241,"/**
* Clones an array of Point2D objects.
* @param input original array of Point2D
* @return new array containing cloned Point2D objects
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,calcLevel,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:calcLevel(),67,148,"/**
 * Calculates division levels for patch edges.
 * @return Array of two integers representing division levels.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:getRaster(int,int,int,int)",174,201,"/**
* Creates a raster from image data.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param w width of the raster
* @param h height of the raster
* @return Raster object containing pixel data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDTextState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDTextState:clone(),221,233,"/**
* Creates a copy of the current text state.
* @return a new PDTextState object with the same properties
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,"org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Path2D,boolean)",592,605,"/**
 * Intersects the given path with the clipping paths.
 * @param path the Path2D to intersect
 * @param clonePath whether to clone the path before adding
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getCurrentClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getCurrentClippingPath(),622,653,"/**
* Returns the current clipping path as a single Area object.
* @return Combined Area representing all clipping paths or null if none exist
*/","* This will get the current clipping path. Do not modify this Area object!
     *
     * @return The current clipping path.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText$TextAttribute:<init>(java.lang.String),116,119,"/**
* Initializes a TextAttribute with a given name.
* @param name the attribute's name
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.util.List),82,86,"/**
* Constructs a PlainText object from a list of strings.
* @param listValue list of string paragraphs
*/","* Construct the text block from a list of values.
     * 
     * Constructs the text block from a list of values treating each
     * entry as an individual {@link Paragraph}.
     * 
     * @param listValue the text block string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/TextAlign.java,valueOf,org.apache.pdfbox.pdmodel.interactive.TextAlign:valueOf(int),35,45,"/**
* Returns TextAlign enum based on integer alignment.
* @param alignment integer representing text alignment
* @return TextAlign corresponding to the alignment, or LEFT by default
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,hashCode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:hashCode(),221,225,"/**
 * Generates hash code based on dictionary content.
 * @return hash code of the dictionary
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getMatrix(),175,178,"/**
 * Returns an affine transform to translate coordinates.
 * @return AffineTransform object translating by negative bboxMinX and bboxMinY
 */","* Returns the <code>Matrix</code> entry for the appearance stream form XObject.
     *
     * @return Matrix for appearance stream form XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsPolygon,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsPolygon(double,double,double,double,double,double[])",398,423,"/**
* Computes parameters for a polygon segment.
* @param advInterm intermediate advance distance
* @param advCorner corner advance distance
* @param k curvature factor
* @param r radius of the arc
* @param length total length of the segment
* @param array output: [angle, fitting error]
* @return number of intermediate curls or -1 if length is zero
*/","* Computes parameters for a cloudy polygon: n, alpha, and dx.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,computeParamsEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:computeParamsEllipse(java.awt.geom.Point2D$Double,java.awt.geom.Point2D$Double,double,double)",940,952,"/**
* Computes angle for ellipse parameters.
* @param pt current point
* @param ptNext next point
* @param r radius
* @param curlAdv curvature adjustment
* @return computed angle or 0 if out of bounds
*/",* Computes the alpha parameter for an ellipse curl.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getPositivePolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getPositivePolygon(java.awt.geom.Point2D$Double[]),556,562,"/**
 * Ensures polygon vertices are in positive direction.
 * @param points array of polygon vertices
 */","* Makes a polygon whose direction is the same as the positive angle
     * direction in the coordinate system.
     * The polygon must not intersect itself.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,flattenEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:flattenEllipse(double,double,double,double)",705,738,"/**
 * Flattens an ellipse into a series of line segments.
 * @param left x-coordinate of the ellipse's left boundary
 * @param bottom y-coordinate of the ellipse's bottom boundary
 * @param right x-coordinate of the ellipse's right boundary
 * @param top y-coordinate of the ellipse's top boundary
 * @return Array of points representing the flattened ellipse
 */",* Flattens an ellipse into a polygon.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,updateBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:updateBBox(double,double)",1021,1027,"/**
* Updates bounding box coordinates with new point.
* @param x x-coordinate of the point
* @param y y-coordinate of the point
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createShortStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createShortStyles(),434,443,"/**
 * Creates a set of short annotation line styles.
 * @return Set containing predefined line style identifiers
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createInteriorColorStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createInteriorColorStyles(),445,454,"/**
* Creates a set of interior color styles.
* @return Set containing predefined line end styles
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createAngledStyles,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createAngledStyles(),456,466,"/**
* Creates a set of angled line styles.
* @return Set containing various angled annotation line styles
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isRectangular,org.apache.pdfbox.rendering.PageDrawer:isRectangular(java.awt.geom.GeneralPath),888,940,"/**
* Checks if a GeneralPath represents a rectangle.
* @param path the path to check
* @return true if the path forms a rectangle, false otherwise
*/",* Returns true if the given path is rectangular.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(java.io.InputStream,int[])",38,42,"/**
 * Initializes a filtered input stream with specified byte ranges.
 * @param in the underlying input stream
 * @param byteRange array of bytes to filter
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,nextRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:nextRange(),99,120,"/**
* Advances to the next range in the filter stream.
* @return true if successful, false if no more ranges
* @throws IOException if skipping fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,getTemplateHeight,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:getTemplateHeight(),393,396,"/**
 * Returns the height of the template.
 * @return height as a float value
 */","* 
     * @return template height",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAffineTransform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAffineTransform(java.awt.geom.AffineTransform),165,170,"/**
* Sets an affine transform in the PDF structure.
* @param affineTransform the transformation matrix to apply
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createVisualSignature(org.apache.pdfbox.pdmodel.PDDocument),382,387,"/**
* Sets visual signature in PDF document.
* @param template PDDocument to apply the signature to
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,coordinates,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:coordinates(float,float)",300,305,"/**
* Sets sign coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
* @return updated PDVisibleSignDesigner instance
*/","*
     * @param x - x coordinate
     * @param y - y coordinate
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,transform,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:transform(java.awt.geom.AffineTransform),477,481,"/**
* Applies an affine transformation to the sign designer.
* @param affineTransform the transformation to apply
* @return the updated PDVisibleSignDesigner instance
*/","* 
     * @param affineTransform the affine transformation
     * @return Visible Signature Configuration Object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a PDPageFitDestination from a COSArray.
 * @param arr COSArray containing destination information
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Creates a PDPageFitHeightDestination from a COSArray.
 * @param arr array representing the destination
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
* Constructs a PDPageFitRectangleDestination from a COSArray.
* @param arr array containing destination information
*/","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(org.apache.pdfbox.cos.COSArray),55,58,"/**
 * Creates a new PDPageFitWidthDestination from a COSArray.
 * @param arr COSArray containing destination information
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(org.apache.pdfbox.cos.COSArray),53,56,"/**
 * Constructs a PDPageXYZDestination from a COSArray.
 * @param arr array representing the destination
 */","* Constructor from an existing destination array.
     *
     * @param arr The destination array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,requireSingleNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:requireSingleNode(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),105,111,"/**
 * Ensures a node has no siblings.
 * @param node the node to check
 */","* @param node
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,children,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:children(),310,313,"/**
 * Returns an iterator over child outline items.
 * @return Iterable of PDOutlineItem objects
 */",* @return An {@link Iterable} view of the items children,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByValue,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByValue(java.util.List),101,104,"/**
 * Sorts a list of KeyValue pairs by their value.
 * @param pairs List of KeyValue objects to be sorted
 */","* Sort two related lists simultaneously by the elements in the key parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,sortByKey,org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:sortByKey(java.util.List),111,114,"/**
 * Sorts a list of KeyValue pairs by their key.
 * @param pairs List of KeyValue objects to sort
 */","* Sort two related lists simultaneously by the elements in the value parameter.
     * 
     * @param pairs a list of KeyValue elements",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:getValueAsString(),85,89,"/**
 * Returns the value as a string.
 * @return value converted to string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getValueAsString(),251,255,"/**
 * Returns the value as a string.
 * @return the value in string format
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getTransform,org.apache.pdfbox.rendering.GroupGraphics:getTransform(),472,476,"/**
 * Returns the current transformation of the group.
 * @return AffineTransform object representing the transformation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(double,double)",568,573,"/**
* Translates both group and alpha graphics contexts.
* @param tx translation in X-axis
* @param ty translation in Y-axis
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,scale,"org.apache.pdfbox.rendering.GroupGraphics:scale(double,double)",498,503,"/**
* Scales graphics context by given factors.
* @param sx scaling factor for x-axis
* @param sy scaling factor for y-axis
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setTransform,org.apache.pdfbox.rendering.GroupGraphics:setTransform(java.awt.geom.AffineTransform),547,552,"/**
* Sets the transformation matrix for both graphics contexts.
* @param tx AffineTransform object representing the new transformation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,"org.apache.pdfbox.rendering.GroupGraphics:setClip(int,int,int,int)",298,303,"/**
* Sets the clipping area for both graphics contexts.
* @param x top-left corner X coordinate
* @param y top-left corner Y coordinate
* @param width width of the clipping area
* @param height height of the clipping area
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setColor,org.apache.pdfbox.rendering.GroupGraphics:setColor(java.awt.Color),312,317,"/**
* Sets color for both graphics contexts.
* @param c Color to be set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setStroke,org.apache.pdfbox.rendering.GroupGraphics:setStroke(java.awt.Stroke),540,545,"/**
 * Sets stroke for both group and alpha graphics.
 * @param s Stroke object to be applied
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D)",72,79,"/**
* Initializes a GroupGraphics object with images and graphics contexts.
* @param groupImage the main image to be processed
* @param groupGraphics 2D graphics context for drawing on the main image
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,<init>,"org.apache.pdfbox.rendering.GroupGraphics:<init>(java.awt.image.BufferedImage,java.awt.Graphics2D,java.awt.image.BufferedImage,java.awt.Graphics2D)",81,88,"/**
* Initializes GroupGraphics with images and graphics contexts.
* @param groupImage main image for drawing
* @param groupGraphics 2D graphics context for the main image
* @param groupAlphaImage alpha channel image for transparency
* @param alphaGraphics 2D graphics context for the alpha channel
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clipRect,"org.apache.pdfbox.rendering.GroupGraphics:clipRect(int,int,int,int)",97,102,"/**
 * Clips the graphics context to a specified rectangle.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param width rectangle width
 * @param height rectangle height
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,copyArea,"org.apache.pdfbox.rendering.GroupGraphics:copyArea(int,int,int,int,int,int)",104,109,"/**
* Copies a rectangular area to a new position.
* @param x the x coordinate of the source rectangle's upper-left corner
* @param y the y coordinate of the source rectangle's upper-left corner
* @param width the width of the rectangle to copy
* @param height the height of the rectangle to copy
* @param dx the horizontal distance to move the copied area
* @param dy the vertical distance to move the copied area
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawArc,"org.apache.pdfbox.rendering.GroupGraphics:drawArc(int,int,int,int,int,int)",132,137,"/**
* Draws an arc using both group and alpha graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width arc width
* @param height arc height
* @param startAngle starting angle in degrees
* @param arcAngle angular extent of the arc
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,java.awt.Color,java.awt.image.ImageObserver)",139,144,"/**
 * Draws an image with a background color.
 * @param img the image to draw
 * @param x the x coordinate of the top-left corner
 * @param y the y coordinate of the top-left corner
 * @param bgcolor the background color
 * @param observer the image observer
 * @return true if the image is completely loaded and drawn, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",153,159,"/**
* Draws an image with background color and observer.
* @param img the Image to be drawn
* @param x the x-coordinate of the upper-left corner
* @param y the y-coordinate of the upper-left corner
* @param width the width of the image to draw
* @param height the height of the image to draw
* @param bgcolor the background color for drawing
* @param observer the ImageObserver object to be notified as more of the image is converted
* @return true if the operation succeeded, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,java.awt.image.ImageObserver)",161,166,"/**
* Draws an image at specified coordinates with given dimensions.
* @param img the Image to be drawn
* @param x the x-coordinate of the top-left corner
* @param y the y-coordinate of the top-left corner
* @param width the width of the image
* @param height the height of the image
* @param observer the ImageObserver for notification
* @return true if drawing was successful, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,int,int,int,int,int,int,int,int,java.awt.Color,java.awt.image.ImageObserver)",168,174,"/**
* Draws an image with specified dimensions and background color.
* @param img the Image to be drawn
* @param dx1, dy1, dx2, dy2 destination rectangle coordinates
* @param sx1, sy1, sx2, sy2 source rectangle coordinates
* @param bgcolor background color for drawing
* @param observer object to monitor image loading
* @return true if the image is completely loaded and drawn
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawLine,"org.apache.pdfbox.rendering.GroupGraphics:drawLine(int,int,int,int)",184,189,"/**
* Draws a line between two points.
* @param x1 starting x coordinate
* @param y1 starting y coordinate
* @param x2 ending x coordinate
* @param y2 ending y coordinate
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawOval,"org.apache.pdfbox.rendering.GroupGraphics:drawOval(int,int,int,int)",191,196,"/**
* Draws an oval on both graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width width of the oval
* @param height height of the oval
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolygon,"org.apache.pdfbox.rendering.GroupGraphics:drawPolygon(int[],int[],int)",198,203,"/**
* Draws a polygon using two graphics contexts.
* @param xPoints array of x-coordinates for the polygon vertices
* @param yPoints array of y-coordinates for the polygon vertices
* @param nPoints number of vertices in the polygon
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawPolyline,"org.apache.pdfbox.rendering.GroupGraphics:drawPolyline(int[],int[],int)",205,210,"/**
* Draws a polyline using two graphics contexts.
* @param xPoints array of x-coordinates
* @param yPoints array of y-coordinates
* @param nPoints number of points in the polyline
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:drawRoundRect(int,int,int,int,int,int)",212,217,"/**
* Draws a rounded rectangle on both graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @param arcWidth width of the arc at the corners
* @param arcHeight height of the arc at the corners
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,int,int)",219,224,"/**
* Draws attributed string at specified coordinates.
* @param iterator character iterator with attributes
* @param x x-coordinate of the starting point
* @param y y-coordinate of the starting point
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,int,int)",226,231,"/**
* Draws a string at specified coordinates using two graphics contexts.
* @param str the string to be drawn
* @param x the x-coordinate of the starting point
* @param y the y-coordinate of the starting point
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillArc,"org.apache.pdfbox.rendering.GroupGraphics:fillArc(int,int,int,int,int,int)",233,238,"/**
* Fills an arc on both primary and secondary graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width arc width
* @param height arc height
* @param startAngle starting angle in degrees
* @param arcAngle angular extent of the arc
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillOval,"org.apache.pdfbox.rendering.GroupGraphics:fillOval(int,int,int,int)",240,245,"/**
* Fills an oval shape in both groups.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width width of the oval
* @param height height of the oval
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillPolygon,"org.apache.pdfbox.rendering.GroupGraphics:fillPolygon(int[],int[],int)",247,252,"/**
* Fills a polygon on both group and alpha graphics contexts.
* @param xPoints array of x-coordinates for the polygon vertices
* @param yPoints array of y-coordinates for the polygon vertices
* @param nPoints number of points in the polygon
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fillRoundRect,"org.apache.pdfbox.rendering.GroupGraphics:fillRoundRect(int,int,int,int,int,int)",261,266,"/**
* Draws a filled rounded rectangle on both graphics contexts.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @param arcWidth width of the arc at the corners
* @param arcHeight height of the arc at the corners
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClip,org.apache.pdfbox.rendering.GroupGraphics:getClip(),268,272,"/**
 * Returns the current clipping area of the group.
 * @return Shape representing the clipping area or null if none set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getClipBounds,org.apache.pdfbox.rendering.GroupGraphics:getClipBounds(),274,278,"/**
 * Returns the clip bounds of the graphics context.
 * @return Rectangle representing the current clipping area or null if no clipping is set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getColor,org.apache.pdfbox.rendering.GroupGraphics:getColor(),280,284,"/**
 * Retrieves the current color from the graphics context.
 * @return Color object representing the current drawing color
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFont,org.apache.pdfbox.rendering.GroupGraphics:getFont(),286,290,"/**
 * Returns the font used by the graphics context.
 * @return current font of the group's 2D graphics context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontMetrics,org.apache.pdfbox.rendering.GroupGraphics:getFontMetrics(java.awt.Font),292,296,"/**
 * Retrieves font metrics.
 * @param f the font to measure
 * @return FontMetrics object for the given font
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setClip,org.apache.pdfbox.rendering.GroupGraphics:setClip(java.awt.Shape),305,310,"/**
* Sets the clipping shape for both graphics contexts.
* @param clip the shape to be used as a clipping area
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setFont,org.apache.pdfbox.rendering.GroupGraphics:setFont(java.awt.Font),319,324,"/**
* Sets the font for both group and alpha graphics contexts.
* @param font the new Font to be applied
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setPaintMode,org.apache.pdfbox.rendering.GroupGraphics:setPaintMode(),326,331,"/**
* Sets paint mode for both group and alpha graphics contexts.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setXORMode,org.apache.pdfbox.rendering.GroupGraphics:setXORMode(java.awt.Color),333,338,"/**
* Sets XOR mode for both group and alpha graphics contexts.
* @param c1 color to use for XOR operation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,translate,"org.apache.pdfbox.rendering.GroupGraphics:translate(int,int)",340,345,"/**
* Translates the graphics context by specified offset.
* @param x horizontal translation distance
* @param y vertical translation distance
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,addRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:addRenderingHints(java.util.Map),347,352,"/**
 * Adds rendering hints to both group and alpha graphics contexts.
 * @param hints Map containing rendering hints to be applied
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setRenderingHints,org.apache.pdfbox.rendering.PageDrawer:setRenderingHints(),256,259,"/**
 * Applies rendering hints to the graphics context.
 * @param renderingHints collection of rendering hints to apply
 */",* Sets high-quality rendering hints on the current Graphics2D.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,clip,org.apache.pdfbox.rendering.GroupGraphics:clip(java.awt.Shape),354,359,"/**
* Clips the graphics context to the specified shape.
* @param s the shape to clip against
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,draw,org.apache.pdfbox.rendering.GroupGraphics:draw(java.awt.Shape),361,366,"/**
* Draws a shape using both group and alpha graphics.
* @param s the Shape to be drawn
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawGlyphVector,"org.apache.pdfbox.rendering.GroupGraphics:drawGlyphVector(java.awt.font.GlyphVector,float,float)",368,373,"/**
 * Draws a GlyphVector using both group and alpha graphics contexts.
 * @param g the GlyphVector to draw
 * @param x the x-coordinate of the origin
 * @param y the y-coordinate of the origin
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.image.BufferedImage,java.awt.image.BufferedImageOp,int,int)",375,380,"/**
 * Draws an image with specified operation at given coordinates.
 * @param img the image to be drawn
 * @param op optional BufferedImageOp to apply to the image
 * @param x x-coordinate of the image's top-left corner
 * @param y y-coordinate of the image's top-left corner
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawImage,"org.apache.pdfbox.rendering.GroupGraphics:drawImage(java.awt.Image,java.awt.geom.AffineTransform,java.awt.image.ImageObserver)",382,387,"/**
* Draws an image with specified transformation.
* @param img the image to be drawn
* @param xform affine transform for the image
* @param obs observer notified of drawing status
* @return true if fully or partially opaque and successfully drawn
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderableImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)",389,394,"/**
* Draws a renderable image using two graphics contexts.
* @param img the RenderableImage to draw
* @param xform the AffineTransform for positioning and scaling
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawRenderedImage,"org.apache.pdfbox.rendering.GroupGraphics:drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)",396,401,"/**
* Draws a rendered image using both group and alpha graphics contexts.
* @param img the RenderedImage to draw
* @param xform the AffineTransform applied to the image
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.text.AttributedCharacterIterator,float,float)",403,408,"/**
* Draws attributed string at specified coordinates.
* @param iterator text with attributes
* @param x horizontal position
* @param y vertical position
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,drawString,"org.apache.pdfbox.rendering.GroupGraphics:drawString(java.lang.String,float,float)",410,415,"/**
 * Draws a string at specified coordinates on both group and alpha graphics.
 * @param str the string to be drawn
 * @param x the x-coordinate of the starting point
 * @param y the y-coordinate of the starting point
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,fill,org.apache.pdfbox.rendering.GroupGraphics:fill(java.awt.Shape),417,422,"/**
* Fills a shape using both group and alpha graphics contexts.
* @param s the shape to be filled
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getBackground,org.apache.pdfbox.rendering.GroupGraphics:getBackground(),424,428,"/**
 * Returns the background color of the group.
 * @return Color object representing the background
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getComposite,org.apache.pdfbox.rendering.GroupGraphics:getComposite(),430,434,"/**
 * Returns the composite of the group.
 * @return Composite object representing the current composite settings
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getDeviceConfiguration,org.apache.pdfbox.rendering.GroupGraphics:getDeviceConfiguration(),436,440,"/**
 * Retrieves the device configuration.
 * @return GraphicsConfiguration object from groupG2D
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getFontRenderContext,org.apache.pdfbox.rendering.GroupGraphics:getFontRenderContext(),442,446,"/**
 * Returns the font render context of the associated graphics object.
 * @return FontRenderContext instance from the group graphics object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getPaint,org.apache.pdfbox.rendering.GroupGraphics:getPaint(),448,452,"/**
 * Retrieves the current paint used by the group.
 * @return the Paint object set for the group
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHint,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHint(java.awt.RenderingHints$Key),454,458,"/**
* Retrieves rendering hint value.
* @param hintKey key of the rendering hint to retrieve
* @return value associated with the specified hint key
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:getRenderingHints(),460,464,"/**
 * Retrieves rendering hints from the associated graphics object.
 * @return RenderingHints object containing current rendering settings
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,getStroke,org.apache.pdfbox.rendering.GroupGraphics:getStroke(),466,470,"/**
 * Returns the stroke of the associated graphics group.
 * @return Stroke object representing the current stroke settings
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,hit,"org.apache.pdfbox.rendering.GroupGraphics:hit(java.awt.Rectangle,java.awt.Shape,boolean)",478,482,"/**
* Checks if a rectangle hits a shape.
* @param rect bounding rectangle to check
* @param s shape to check against
* @param onStroke whether to check on the stroke
* @return true if they hit, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,org.apache.pdfbox.rendering.GroupGraphics:rotate(double),484,489,"/**
* Rotates the graphics context by a specified angle.
* @param theta rotation angle in radians
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,rotate,"org.apache.pdfbox.rendering.GroupGraphics:rotate(double,double,double)",491,496,"/**
 * Rotates the graphics context by a specified angle around a given point.
 * @param theta rotation angle in radians
 * @param x x-coordinate of the rotation center
 * @param y y-coordinate of the rotation center
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setComposite,org.apache.pdfbox.rendering.GroupGraphics:setComposite(java.awt.Composite),512,517,"/**
* Sets the composite rule for both group and alpha graphics.
* @param comp Composite object defining blending rules
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,setRenderingHints,org.apache.pdfbox.rendering.GroupGraphics:setRenderingHints(java.util.Map),533,538,"/**
* Sets rendering hints for both group and alpha graphics.
* @param hints map containing rendering hints to be applied
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,shear,"org.apache.pdfbox.rendering.GroupGraphics:shear(double,double)",554,559,"/**
 * Applies shearing transformation to both group and alpha graphics.
 * @param shx horizontal shear factor
 * @param shy vertical shear factor
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,transform,org.apache.pdfbox.rendering.GroupGraphics:transform(java.awt.geom.AffineTransform),561,566,"/**
 * Applies an affine transformation to both graphics contexts.
 * @param tx the AffineTransform object to apply
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isBitonal,org.apache.pdfbox.rendering.PDFRenderer:isBitonal(java.awt.Graphics2D),484,502,"/**
* Checks if the graphics device supports bitonal display.
* @return true if bit depth is 1, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,create2ByteGrayAlphaImage,"org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:create2ByteGrayAlphaImage(int,int)",1940,1962,"/**
* Creates a grayscale image with alpha channel.
* @param width image width in pixels
* @param height image height in pixels
* @return BufferedImage object with 2-byte gray and alpha
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showType3Glyph,"org.apache.pdfbox.rendering.PageDrawer:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",577,587,"/**
* Renders a Type 3 glyph if rendering mode is not NEITHER.
* @param textRenderingMatrix transformation matrix for text rendering
* @param font PDType3Font instance
* @param code character code for the glyph
* @param displacement vector for glyph positioning
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustImage,org.apache.pdfbox.rendering.PageDrawer:adjustImage(java.awt.image.BufferedImage),656,679,"/**
 * Adjusts a grayscale image based on transformation and scaling.
 * @param gray input grayscale BufferedImage
 * @return adjusted BufferedImage or original if no changes needed
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endPath,org.apache.pdfbox.rendering.PageDrawer:endPath(),1011,1015,"/**
* Resets the current path.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,curveTo,"org.apache.pdfbox.rendering.PageDrawer:curveTo(float,float,float,float,float,float)",993,997,"/**
* Adds a cubic Bézier curve to the path.
* @param x1,y1 control point 1 coordinates
* @param x2,y2 control point 2 coordinates
* @param x3,y3 end point coordinates
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getCurrentPoint,org.apache.pdfbox.rendering.PageDrawer:getCurrentPoint(),999,1003,"/**
 * Returns the current point of the line path.
 * @return Point2D representing the current position
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,adjustClip,org.apache.pdfbox.rendering.PageDrawer:adjustClip(java.awt.geom.GeneralPath),1030,1072,"/**
* Adjusts clip path based on transformation.
* @param linePath original GeneralPath to adjust
* @return adjusted GeneralPath or original if no change needed
*/","* PDFBOX-5715 / PR#73: This was added to fix a problem with missing fine lines when printing
     * on MacOS. Lines vanish because CPrinterJob sets graphics scale to 1 for Printable so after
     * scaling lines often have a width smaller than 1 after scaling and clipping. This change
     * enlarges the clip bounds to cover at least 1 point plus 0.5 on one and another side in the
     * device space to allow to draw the linePath inside the clip. The linePath can consists from
     * different lines but when its bounds width or height is less than 1.0 it seems safe to use a
     * rectangle as a clip instead of the real path. A more detailed explanation can be read
     * <a href=""https://github.com/apache/pdfbox/pull/173"">here</a>.
     *
     * @param linePath
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getSubsampling,"org.apache.pdfbox.rendering.PageDrawer:getSubsampling(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.geom.AffineTransform)",1273,1294,"/**
* Calculates subsampling factor for an image based on transformation scale.
* @param pdImage the image to process
* @param at the affine transformation applied to the image
* @return calculated subsampling factor, clamped between 1 and 8
*/","* Calculates the subsampling frequency for a given PDImage based on the current transformation
     * and its calculated transform. Extend this method if you want to use your own strategy.
     *
     * @param pdImage PDImage to be drawn
     * @param at Transform that will be applied to the image when drawing
     * @return The rounded-down ratio of image pixels to drawn pixels. Returned value will always be
     * &gt;=1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getInvLookupTable,org.apache.pdfbox.rendering.PageDrawer:getInvLookupTable(),2290,2302,"/**
* Returns the inverse lookup table.
* @return LookupTable for byte inversion
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,getRaster,"org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:getRaster(int,int,int,int)",131,212,"/**
* Retrieves and processes a raster image with optional transfer function.
* @param x1 top-left corner x-coordinate
* @param y1 top-left corner y-coordinate
* @param w width of the raster
* @param h height of the raster
* @return processed WritableRaster object
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,dispose,org.apache.pdfbox.rendering.SoftMask$SoftPaintContext:dispose(),214,218,"/**
 * Releases resources held by the context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,createContext,"org.apache.pdfbox.rendering.SoftMask:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",101,108,"/**
* Creates a soft painting context.
* @param cm color model for the context
* @param deviceBounds bounding rectangle in device space
* @param userBounds bounding rectangle in user space
* @param xform transformation from user to device space
* @param hints rendering hints
* @return SoftPaintContext object
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,ceiling,org.apache.pdfbox.rendering.TilingPaint:ceiling(double),185,190,"/**
* Rounds a double number up to the nearest integer.
* @param num the number to round
* @return the rounded integer value
*/","* Returns the closest integer which is larger than the given number.
     * Uses BigDecimal to avoid floating point error which would cause gaps in the tiling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,equals,org.apache.pdfbox.text.TextPosition:equals(java.lang.Object),901,970,"/**
* Compares TextPosition objects based on various attributes.
* @param o the object to compare with
* @return true if objects are equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,org.apache.pdfbox.rendering.TilingPaintFactory:<init>(org.apache.pdfbox.rendering.PageDrawer),48,51,"/**
 * Initializes a new TilingPaintFactory.
 * @param drawer PageDrawer instance to use for drawing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXRot,org.apache.pdfbox.text.TextPosition:getXRot(float),293,312,"/**
 * Calculates X rotation based on the given rotation angle.
 * @param rotation angle in degrees (0, 90, 180, 270)
 * @return calculated X rotation value or 0 for other angles
 */","* Return the X starting coordinate of the text, adjusted by the given rotation amount.
     * The rotation adjusts where the 0,0 location is relative to the text.
     *
     * @param rotation Rotation to apply (0, 90, 180, or 270).  0 will perform no adjustments.
     * @return X coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYLowerLeftRot,org.apache.pdfbox.text.TextPosition:getYLowerLeftRot(float),356,375,"/**
 * Calculates the Y coordinate of the lower-left corner after rotation.
 * @param rotation angle in degrees (0, 90, 180, 270)
 * @return Y coordinate based on rotation
 */","* This will get the y position of the character with 0,0 in lower left.
     * This will be adjusted by the given rotation.
     *
     * @param rotation Rotation to apply to text to adjust the 0,0 location (0,90,180,270)
     * @return The y coordinate of the text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthRot,org.apache.pdfbox.text.TextPosition:getWidthRot(float),426,436,"/**
 * Calculates width based on rotation.
 * @param rotation angle of rotation in degrees
 * @return calculated width as float
 */","* Get the length or width of the text, based on a given rotation.
     *
     * @param rotation Rotation that was used to determine coordinates (0,90,180,270)
     * @return Width of text in display units",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeCharacters,org.apache.pdfbox.text.PDFTextStripper:writeCharacters(org.apache.pdfbox.text.TextPosition),821,824,"/**
 * Writes characters from TextPosition to output.
 * @param text TextPosition containing characters to write
 * @throws IOException if an I/O error occurs
 */","* Write the string in TextPosition to the output stream.
     *
     * @param text The text to write to the stream.
     * @throws IOException If there is an error when writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,toString,org.apache.pdfbox.text.TextPosition:toString(),840,844,"/**
 * Returns the Unicode representation of the object.
 * @return Unicode string
 */","* Show the string data for this text position.
     *
     * @return A human readable form of this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,getTextForRegion,org.apache.pdfbox.text.PDFTextStripperByArea:getTextForRegion(java.lang.String),101,105,"/**
* Retrieves text for specified region.
* @param regionName name of the region
* @return text associated with the region or empty string if not found
*/","* Get the text for the region, this should be called after extractRegions().
     *
     * @param regionName The name of the region to get the text from.
     * @return The text that was identified in that region.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(boolean),442,445,"/**
 * Writes article start to output.
 * @param isLTR true if text direction is left-to-right
 * @throws IOException if an I/O error occurs
 */","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead).
     * Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @param isLTR true if primary direction of text is left to right.
     * @throws IOException If there is any error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endArticle,org.apache.pdfbox.text.PDFTextStripper:endArticle(),452,455,"/**
 * Writes article termination to output.
 * @throws IOException if writing fails
 */","* End an article. Default implementation is to do nothing. Subclasses may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,overlap,"org.apache.pdfbox.text.PDFTextStripper:overlap(float,float,float,float)",762,766,"/**
* Checks if two rectangles overlap.
* @param y1 top-left y-coordinate of first rectangle
* @param height1 height of first rectangle
* @param y2 top-left y-coordinate of second rectangle
* @param height2 height of second rectangle
* @return true if rectangles overlap, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLineSeparator,org.apache.pdfbox.text.PDFTextStripper:writeLineSeparator(),800,803,"/**
 * Writes a line separator to the output.
 * @throws IOException if an I/O error occurs
 */","* Write the line separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the line separator to the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeWordSeparator,org.apache.pdfbox.text.PDFTextStripper:writeWordSeparator(),810,813,"/**
 * Writes the word separator to the output.
 * @throws IOException if an I/O error occurs
 */","* Write the word separator value to the output stream.
     * 
     * @throws IOException If there is a problem writing out the word separator to the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphEnd,org.apache.pdfbox.text.PDFTextStripper:writeParagraphEnd(),1728,1736,"/**
* Writes paragraph end and updates state.
* @throws IOException if an I/O error occurs
*/","* Write something (if defined) at the end of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageStart,org.apache.pdfbox.text.PDFTextStripper:writePageStart(),1743,1746,"/**
 * Writes the start of an HTML page.
 * @throws IOException if writing fails
 */","* Write something (if defined) at the start of a page.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePageEnd,org.apache.pdfbox.text.PDFTextStripper:writePageEnd(),1753,1756,"/**
 * Writes the end of the page to the output.
 * @throws IOException if an I/O error occurs
 */","* Write something (if defined) at the end of a page.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchPattern,"org.apache.pdfbox.text.PDFTextStripper:matchPattern(java.lang.String,java.util.List)",1839,1849,"/**
* Matches a string against a list of patterns.
* @param string the input string to match
* @param patterns a list of compiled regex patterns
* @return the first matching Pattern or null if no match is found
*/","* iterates over the specified list of Patterns until it finds one that matches the specified string. Then returns
     * the Pattern.
     * <p>
     * Order of the supplied list of patterns is important as most common patterns should come first. Patterns should be
     * strict in general, and all will be used with case sensitivity on.
     * </p>
     * 
     * @param string the string to be searched
     * @param patterns list of patterns
     * @return matching pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleDirection,org.apache.pdfbox.text.PDFTextStripper:handleDirection(java.lang.String),1907,1971,"/**
 * Handles bidirectional text processing.
 * @param word input string to process
 * @return processed string with correct direction and mirroring
 */","* Handles the LTR and RTL direction of the given words. The whole implementation stands and falls with the given
     * word. If the word is a full line, the results will be the best. If the word contains of single words or
     * characters, the order of the characters in a word or words in a line may wrong, due to RTL and LTR marks and
     * characters!
     * 
     * Based on http://www.nesterovsky-bros.com/weblog/2013/07/28/VisualToLogicalConversionInJava.aspx
     * 
     * @param word The word that shall be processed
     * @return new word with the correct direction of the containing characters",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,parseBidiFile,org.apache.pdfbox.text.PDFTextStripper:parseBidiFile(java.io.InputStream),1996,2034,"/**
* Parses a BIDI file and populates MIRRORING_CHAR_MAP.
* @param inputStream input stream of the BIDI data
*/","* This method parses the bidi file provided as inputstream.
     * 
     * @param inputStream - The bidi file as inputstream
     * @throws IOException if any line could not be read by the LineNumberReader",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getVisuallyOrderedUnicode,org.apache.pdfbox.text.TextPosition:getVisuallyOrderedUnicode(),188,208,"/**
* Checks and reverses Unicode string if it contains right-to-left characters.
* @return Reversed string if any right-to-left character is found, otherwise original string
*/","* Same as {@link #getUnicode()} except that returned text is ensured to be
     * visually ordered (i.e. same order you would see them displayed on screen when
     * looking from left to right). This is important for Arabic/Hebrew where several
     * unicode characters can be composed in one glyph with logical order (the order
     * in which it would be normally typed from right to left).
     * 
     * @return The string on the screen in visual order.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripperByArea:processTextPosition(org.apache.pdfbox.text.TextPosition),136,147,"/**
 * Processes text position within defined regions.
 * @param text TextPosition object to process
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,isDiacritic,org.apache.pdfbox.text.TextPosition:isDiacritic(),813,833,"/**
* Checks if a character is a diacritic.
* @return true if the character is a diacritic, false otherwise
*/",* @return True if the current character is a diacritic char.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,formatTZoffset,"org.apache.pdfbox.util.DateConverter:formatTZoffset(long,java.lang.String)",286,292,"/**
* Formats timezone offset.
* @param millis time in milliseconds
* @param sep separator character
* @return formatted timezone string
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTimeField,"org.apache.pdfbox.util.DateConverter:parseTimeField(java.lang.String,java.text.ParsePosition,int,int)",307,337,"/**
* Parses a time field from text.
* @param text input string to parse
* @param where position in the string to start parsing
* @param maxlen maximum length of the field
* @param remedy value to return if parsing fails
* @return parsed integer or remedy value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipOptionals,"org.apache.pdfbox.util.DateConverter:skipOptionals(java.lang.String,java.text.ParsePosition,java.lang.String)",349,360,"/**
 * Skips optional characters in the input text.
 * @param text the input string to parse
 * @param where ParsePosition indicating current index
 * @param optionals string containing all optional characters
 * @return last non-space optional character or space if none found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,skipString,"org.apache.pdfbox.util.DateConverter:skipString(java.lang.String,java.lang.String,java.text.ParsePosition)",370,378,"/**
 * Checks if the text starts with a specified string at a given position.
 * @param text the input string to check
 * @param victim the substring to look for
 * @param where the current parsing position
 * @return true if 'text' starts with 'victim' at 'where', false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,newGreg,org.apache.pdfbox.util.DateConverter:newGreg(),388,394,"/**
* Creates a non-lenient UTC Gregorian calendar with milliseconds set to zero.
* @return GregorianCalendar object configured for UTC and English locale
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,adjustTimeZoneNicely,"org.apache.pdfbox.util.DateConverter:adjustTimeZoneNicely(java.util.GregorianCalendar,java.util.TimeZone)",402,408,"/**
* Adjusts calendar to match timezone without DST offset.
* @param cal GregorianCalendar instance to adjust
* @param tz TimeZone to apply
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,updateZoneId,org.apache.pdfbox.util.DateConverter:updateZoneId(java.util.TimeZone),482,509,"/**
 * Updates the TimeZone ID based on its offset.
 * @param tz TimeZone object to update
 */","* Update the zone ID based on the raw offset. This is either GMT, GMT+hh:mm or GMT-hh:mm, where
     * n is between 1 and 14. The highest negative hour is -14, the highest positive hour is 12.
     * Zones that don't fit in this schema are set to zone ID ""unknown"".
     *
     * @param tz the time zone to update.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte),53,57,"/**
* Converts byte to hexadecimal string.
* @param b input byte
* @return 2-character hex representation
*/","* Returns a hex string of the given byte.
     * 
     * @param b the byte to be converted
     * @return the hex string representing the given byte",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getString,org.apache.pdfbox.util.Hex:getString(byte[]),65,73,"/**
* Converts byte array to hexadecimal string.
* @param bytes input byte array
* @return hexadecimal representation of the byte array
*/","* Returns a hex string of the given byte array.
     * 
     * @param bytes the bytes to be converted
     * @return the hex string representing the given bytes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte),81,84,"/**
* Converts byte to hex bytes array.
* @param b input byte
* @return 2-byte array representing hex values
*/","* Returns the bytes corresponding to the ASCII hex encoding of the given byte.
     * 
     * @param b the byte to be converted
     * @return the ASCII hex encoding of the given byte",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,getBytes,org.apache.pdfbox.util.Hex:getBytes(byte[]),92,101,"/**
 * Converts byte array to ASCII representation.
 * @param bytes input byte array
 * @return ASCII byte array representing input bytes in hexadecimal format
 */","* Returns the bytes corresponding to the ASCII hex encoding of the given bytes.
     * 
     * @param bytes the bytey to be converted
     * @return the ASCII hex encoding of the given bytes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexByte,"org.apache.pdfbox.util.Hex:writeHexByte(byte,java.io.OutputStream)",156,160,"/**
* Writes a byte as two hex characters to an OutputStream.
* @param b the byte to write
* @param output the OutputStream to write to
* @throws IOException if I/O error occurs
*/","* Writes the given byte as hex value to the given output stream.
     * @param b the byte to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,decodeBase64,org.apache.pdfbox.util.Hex:decodeBase64(java.lang.String),207,211,"/**
* Decodes a Base64 encoded string.
* @param base64Value Base64 encoded string with optional spaces
* @return Decoded byte array or empty if input is null
*/","* Decode a base64 String.
     *
     * @param base64Value a base64 encoded String.
     *
     * @return the decoded String as a byte array.
     *
     * @throws IllegalArgumentException if this isn't a base64 encoded string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,merge,"org.apache.pdfbox.util.IterativeMergeSort:merge(java.lang.Object[],java.lang.Object[],int,int,int,java.util.Comparator)",114,146,"/**
* Merges two sorted subarrays into one.
* @param arr the array containing elements to merge
* @param aux auxiliary array for merging
* @param from starting index of the first subarray
* @param mid ending index (exclusive) of the first subarray and start of the second
* @param to ending index (inclusive) of the second subarray
* @param cmp comparator defining element order
*/","* Merges two sorted subarrays arr and aux into the order specified by cmp and places the
     * ordered result back into into arr array.
     *
     * @param <T>
     * @param arr Array containing source data to be sorted and target for destination data
     * @param aux Array containing copy of source data to be sorted
     * @param from Start index of left data run so that Left run is arr[from : mid-1].
     * @param mid End index of left data run and start index of right run data so that Left run is
     * arr[from : mid-1] and Right run is arr[mid : to]
     * @param to End index of right run data so that Right run is arr[mid : to]
     * @param cmp the comparator to determine the order of the list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(java.awt.geom.AffineTransform),122,132,"/**
* Initializes a Matrix from an AffineTransform.
* @param at the AffineTransform to convert
*/","* Creates a matrix with the same elements as the given AffineTransform.
     * @param at matrix elements will be initialize with the values from this affine transformation, as follows:
     *
     *           scaleX shearY 0
     *           shearX scaleY 0
     *           transX transY 1
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(java.awt.geom.Point2D),324,335,"/**
* Transforms a 2D point using an affine transformation matrix.
* @param point the Point2D object to transform
*/","* Transforms the given point by this matrix.
     *
     * @param point point to transform",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toString,org.apache.pdfbox.util.Matrix:toString(),578,588,"/**
* Returns a string representation of the object.
* @return String in format [single[0],single[1],single[3],single[4],single[6],single[7]]
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,hashCode,org.apache.pdfbox.util.Matrix:hashCode(),590,594,"/**
 * Generates hash code based on single array.
 * @return hash code of the array
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/NumberFormatUtil.java,formatFloatFast,"org.apache.pdfbox.util.NumberFormatUtil:formatFloatFast(float,int,byte[])",75,115,"/**
* Formats a float into an ASCII buffer with specified fraction digits.
* @param value the float to format
* @param maxFractionDigits maximum number of fractional digits
* @param asciiBuffer buffer to store formatted string
* @return length of formatted string or -1 if input is invalid
*/","* Fast variant to format a floating point value to a ASCII-string. The format will fail if the
     * value is greater than {@link Long#MAX_VALUE}, smaller or equal to {@link Long#MIN_VALUE}, is
     * {@link Float#NaN}, infinite or the number of requested fraction digits is greater than
     * {@link #MAX_FRACTION_DIGITS}.
     * 
     * When the number contains more fractional digits than {@code maxFractionDigits} the value will
     * be rounded. Rounding is done to the nearest possible value, with the tie breaking rule of 
     * rounding away from zero.
     * 
     * @param value The float value to format
     * @param maxFractionDigits The maximum number of fraction digits used
     * @param asciiBuffer The output buffer to write the formatted value to
     *
     * @return The number of bytes used in the buffer or {@code -1} if formatting failed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/StringUtil.java,splitOnSpace,org.apache.pdfbox.util.StringUtil:splitOnSpace(java.lang.String),25,28,"/**
 * Splits a string into an array of substrings on spaces.
 * @param s input string to be split
 * @return array of substrings
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Version.java,getVersion,org.apache.pdfbox.util.Version:getVersion(),48,62,"/**
* Retrieves the PDFBox version.
* @return Version string or null if unavailable
*/","* Returns the version of PDFBox.
     * 
     * @return the version of PDFBox",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,"org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream,boolean)",69,91,"/**
* Parses XML input stream into a Document.
* @param is input stream containing XML data
* @param nsAware true to enable namespace awareness
* @return parsed Document object
* @throws IOException if parsing fails
*/","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @param nsAware activates namespace awareness of the parser
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,find,org.apache.pdfbox.util.filetypedetector.ByteTrie:find(byte[]),70,88,"/**
* Searches for a value in the trie using byte array.
* @param bytes input byte array key
* @return associated value or default if not found
*/","* Return the most specific value stored for this byte sequence. If not found, returns
     * <code>null</code> or a default values as specified by calling
     * {@link ByteTrie#setDefaultValue}.
     * @param bytes
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
* Initializes a new DrawObject with a PDF stream engine.
* @param context PDFStreamEngine to use for drawing operations
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Initializes color setting in PDF stream engine.
 * @param context PDFStreamEngine instance to operate on
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Constructs a Non-Stroking Color Space processor.
 * @param context PDFStreamEngine to operate on
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes stroking color space in PDF stream engine.
 * @param context PDFStreamEngine instance to operate on
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/GraphicsOperatorProcessor.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.GraphicsOperatorProcessor:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
 * Initializes a new instance of GraphicsOperatorProcessor.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes a new instance with the given PDF stream engine.
 * @param context PDFStreamEngine to be used
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Initializes a new instance of BeginMarkedContentSequenceWithProperties.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),46,49,"/**
 * Initializes a new DrawObject with the given PDF stream engine.
 * @param context the PDF stream engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/EndMarkedContentSequence.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.EndMarkedContentSequence:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
* Initializes a new instance of EndMarkedContentSequence.
* @param context PDF processing context
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes a new MarkedContentPoint.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,<init>,org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of MarkedContentPointWithProperties.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,<init>,org.apache.pdfbox.contentstream.operator.state.Concatenate:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Initializes a new instance of Concatenate with a given PDF stream engine.
 * @param context PDFStreamEngine to be used for processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,<init>,org.apache.pdfbox.contentstream.operator.state.Restore:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Constructs a Restore object with a given PDF stream engine.
 * @param context PDFStreamEngine to be used for restoration
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,<init>,org.apache.pdfbox.contentstream.operator.state.Save:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),34,37,"/**
 * Constructs a Save instance with a given PDF stream engine.
 * @param context PDFStreamEngine to be used for saving operations
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetFlatness:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a new instance of SetFlatness with a PDF stream engine.
 * @param context PDFStreamEngine to be used for processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),42,45,"/**
 * Initializes with a PDF stream engine.
 * @param context PDFStreamEngine instance
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes a new instance of SetLineCapStyle.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
 * Initializes a new instance of SetLineDashPattern with the given PDFStreamEngine.
 * @param context the PDFStreamEngine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes with a PDF stream engine.
 * @param context the PDF stream engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance with the given PDF stream engine.
 * @param context the PDF stream engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetLineWidth:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Sets line width in PDF stream engine.
 * @param context PDFStreamEngine instance to operate on
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetMatrix:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of SetMatrix with the given PDF stream engine.
 * @param context PDFStreamEngine to be used for processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,<init>,org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),39,42,"/**
 * Sets rendering intent in PDF stream engine.
 * @param context PDFStreamEngine instance to set rendering intent on
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,<init>,org.apache.pdfbox.contentstream.operator.text.BeginText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of BeginText.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,<init>,org.apache.pdfbox.contentstream.operator.text.EndText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
 * Initializes an EndText object with a given PDF stream engine.
 * @param context PDFStreamEngine to be used for processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),41,44,"/**
 * Initializes a new instance of MoveText with the given PDFStreamEngine.
 * @param context the PDF processing engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),40,43,"/**
 * Constructs a MoveTextSetLeading object.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.NextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of NextLine with a given PDF stream engine.
 * @param context PDFStreamEngine to be used for processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes SetCharSpacing with given PDFStreamEngine.
 * @param context PDFStreamEngine instance to be used
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),45,48,"/**
 * Initializes font and size settings.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes text horizontal scaling in PDF stream engine.
 * @param context PDFStreamEngine instance to be used
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextLeading:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes text leading settings in PDF stream processing.
 * @param context PDFStreamEngine instance to operate on
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Initializes a new instance of SetTextRenderingMode.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetTextRise:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of SetTextRise.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,<init>,org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),35,38,"/**
* Initializes SetWordSpacing with given PDFStreamEngine.
* @param context PDFStreamEngine instance to operate on
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowText:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Initializes a new instance of ShowText with the given PDFStreamEngine.
* @param context PDF processing context
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes a new instance of ShowTextAdjusted.
 * @param context PDFStreamEngine used for processing text
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLine:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a ShowTextLine instance.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,<init>,org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),38,41,"/**
 * Constructs a new instance of ShowTextLineAndSpace.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSBoolean.java,<init>,org.apache.pdfbox.cos.COSBoolean:<init>(boolean),55,58,"/**
 * Constructs a COSBoolean with the specified boolean value.
 * @param aValue the boolean value to set
 */","* Constructor.
     *
     * @param aValue The boolean value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,<init>,org.apache.pdfbox.cos.COSName:<init>(java.lang.String),716,719,"/**
 * Constructs a new COSName with the specified name.
 * @param aName the string representation of the name
 */","* Private constructor. This will limit the number of COSName objects that are created.
     * 
     * @param aName The name of the COSName object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNull.java,<init>,org.apache.pdfbox.cos.COSNull:<init>(),42,45,"/**
 * Private constructor to restrict instantiation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(byte[],boolean)",76,80,"/**
* Constructs a COSString from byte array.
* @param bytes input byte array
* @param forceHex if true, forces hexadecimal representation
*/","* Creates a new PDF string from a byte array. This method can be used to read a string from an existing PDF file,
     * or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,"org.apache.pdfbox.cos.COSArray:<init>(java.util.ArrayList,boolean)",71,76,"/**
 * Initializes a COSArray with given objects and direct state.
 * @param cosObjects list of COSBase objects
 * @param direct whether the array is in direct form
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(),63,66,"/**
 * Initializes a new COSDictionary with an update state.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase),45,50,"/**
* Initializes a COSObject with a given base object.
* @param object The underlying COSBase object
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.ICOSParser)",72,78,"/**
* Initializes a COSObject with a base object and parser.
* @param object the underlying COSBase object
* @param parser the ICOSParser instance
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param parser The parser to be used to load the object on demand
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.ICOSParser)",87,92,"/**
* Initializes a COSObject with a key and parser.
* @param key object identifier
* @param parser for parsing COS data
*/","* Constructor.
     *
     * @param key The object number of the encapsulated object.
     * @param parser The parser to be used to load the object on demand
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,org.apache.pdfbox.filter.DecodeOptions$FinalDecodeOptions:<init>(boolean),223,226,"/**
 * Sets whether to filter subsampled images.
 * @param filterSubsampled true to filter, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeOptions.java,<init>,"org.apache.pdfbox.filter.DecodeOptions:<init>(int,int,int,int)",69,72,"/**
 * Initializes DecodeOptions with specified dimensions.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param width rectangle width
 * @param height rectangle height
 */","* Constructs an instance specifying the region of the image that should be decoded. The actual
     * region will be clipped to the dimensions of the image.
     *
     * @param x x-coordinate of the top-left corner of the region to be decoded
     * @param y y-coordinate of the top-left corner of the region to be decoded
     * @param width Width of the region to be decoded
     * @param height Height of the region to be decoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from8bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from8bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,java.awt.Rectangle,int,int,int)",461,551,"/**
* Converts a PDImage to a BufferedImage.
* @param pdImage source image
* @param raster target raster for image data
* @param clipped clipping region
* @param subsampling subsampling factor
* @param width desired output width
* @param height desired output height
* @return BufferedImage in RGB format
* @throws IOException if I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,decode,"org.apache.pdfbox.filter.ASCIIHexFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",66,105,"/**
 * Decodes an InputStream using hexadecimal encoding.
 * @param encoded input stream with encoded data
 * @param decoded output stream for decoded data
 * @param parameters COSDictionary containing decoding parameters
 * @param index index of the current decode operation
 * @return DecodeResult object with decoding parameters
 * @throws IOException if an I/O error occurs during decoding
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/IdentityFilter.java,decode,"org.apache.pdfbox.filter.IdentityFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,40,"/**
* Decodes input stream to output stream.
* @param encoded InputStream containing encoded data
* @param decoded OutputStream for decoded data
* @param parameters COSDictionary with decoding parameters
* @param index index of the stream (not used)
* @return DecodeResult object with parameters
* @throws IOException if I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/RunLengthDecodeFilter.java,decode,"org.apache.pdfbox.filter.RunLengthDecodeFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",36,75,"/**
* Decodes input stream using run-length encoding.
* @param encoded input stream containing encoded data
* @param decoded output stream for decoded data
* @param parameters decoding parameters (not used)
* @param index current index in the stream (not used)
* @return DecodeResult object with original parameters
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/FreeXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.FreeXReference:<init>(org.apache.pdfbox.cos.COSObjectKey,long)",41,46,"/**
* Creates a new FreeXReference.
* @param key Object key for the reference
* @param nextFreeObject Next free object identifier
*/","* Sets the given {@link COSObjectKey} as a free reference in a PDF's crossreference stream ({@link PDFXRefStream}).
     *
     * @param key The key, that shall be set as the free reference of the document.
     * @param nextFreeObject The object number of the next free object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/ObjectStreamXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.ObjectStreamXReference:<init>(int,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",46,54,"/**
* Constructs an ObjectStreamXReference.
* @param objectStreamIndex index of the object stream
* @param key unique identifier for the object
* @param object COSBase object reference
* @param parentKey unique identifier for the parent object
*/","* Prepares a object stream entry reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param objectStreamIndex The index of the {@link COSObject} in the containing object stream.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.
     * @param parentKey The {@link COSObjectKey} of the object stream, that is containing the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:<init>(),31,34,"/**
 * Constructs a DefaultResourceCacheCreateImpl with default behavior.
 * @param enableCaching whether to enable caching (default is true)
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDTypedDictionaryWrapper from a COSDictionary.
 * @param dictionary the underlying COSDictionary to wrap
 */","* Creates a new instance with a given COS dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Initializes a new PDAttributeObject with the given COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Creates a new attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject)",50,55,"/**
 * Initializes a PDUserProperty with a COSDictionary and a user attribute object.
 * @param dictionary the COSDictionary to initialize with
 * @param userAttributeObject the user attribute object associated with the property
 */","* Creates a user property with a given dictionary.
     * 
     * @param dictionary the dictionary
     * @param userAttributeObject the user attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDOutlineNode from a COSDictionary.
 * @param dict the dictionary containing outline node data
 */",* @param dict The dictionary storage.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDTransition from a COSDictionary.
 * @param dictionary the COSDictionary containing transition properties
 */","* creates a new transition for an existing dictionary
     * 
     * @param dictionary the dictionary to be used for the new transition",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a new PDDestinationNameTreeNode from a COSDictionary.
 * @param dic dictionary containing destination information
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDEmbeddedFilesNameTreeNode from a dictionary.
 * @param dic dictionary containing node data
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a PDJavascriptNameTreeNode from a dictionary.
 * @param dic the COSDictionary to initialize with
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDStructureElementNameTreeNode from a COSDictionary.
 * @param dic dictionary representing the node structure
 */","* Constructor.
     *
     * @param dic The COS dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),234,237,"/**
 * Creates a child node from a dictionary.
 * @param dic dictionary containing node data
 * @return PDNumberTreeNode instance
 */","* Create a child node object.
     *
     * @param dic The dictionary for the child node object to refer to.
     * @return The new child node object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.cos.COSStream),71,74,"/**
 * Constructs a PDMetadata from a COSStream.
 * @param str the COSStream containing metadata
 */","* Constructor. This will <b>not</b> set up the /Type and /Subtype entries.
     *
     * @param str The stream parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDObjectStream:<init>(org.apache.pdfbox.cos.COSStream),40,43,"/**
 * Constructs a PDObjectStream from a COSStream.
 * @param str the underlying COSStream
 */","* Constructor.
     *
     * @param str The stream parameter.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.cos.COSStream),49,52,"/**
 * Constructs a PDEmbeddedFile from a COSStream.
 * @param str content stream containing embedded file data
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunction:<init>(org.apache.pdfbox.cos.COSBase),53,64,"/**
* Initializes a PDFunction from a COSBase.
* @param function the underlying COSBase object
*/","* Constructor.
     *
     * @param function The function stream.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentStream,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentStream(),71,74,"/**
 * Returns a content stream for the PDF.
 * @return PDStream object containing PDF content
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSName)",98,104,"/**
* Initializes a PDXObject with a given stream and subtype.
* @param stream the underlying COSStream object
* @param subtype the COSName representing the subtype of the XObject
*/","* Creates a new XObject from the given stream and subtype.
     * 
     * @param stream The stream to read.
     * @param subtype the subtype to be used for this XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentStream(),152,155,"/**
 * Returns the content stream associated with this PDF object.
 * @return PDStream containing the content data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentStream,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentStream(),169,172,"/**
 * Retrieves content stream from PDF object.
 * @return PDStream containing content data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs a PDStructureElement from a COSDictionary.
 * @param dic dictionary representing the structure element
 */","* Constructor for an existing structure element.
     *
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
 * Constructs a PDStructureTreeRoot from a COSDictionary.
 * @param dic dictionary representing the structure tree root
 */","* Constructor for an existing structure element.
     * 
     * @param dic The existing dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(),118,120,"/**
* Default constructor for SecurityHandler.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),127,131,"/**
* Initializes security handler with specified policy.
* @param protectionPolicy encryption policy to apply
*/","* Constructor used for encryption.
     *
     * @param protectionPolicy The protection policy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a new FDFAnnotationCaret from a COSDictionary.
 * @param a dictionary containing annotation data
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a circle annotation from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs an FDFAnnotationFileAttachment.
 * @param a COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
 * Constructs a FDFAnnotationFreeText from a COSDictionary.
 * @param a dictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),65,68,"/**
 * Constructs an FDFAnnotationInk from a COSDictionary.
 * @param a dictionary representing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),56,59,"/**
 * Constructs an annotation line from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a new FDF annotation link.
 * @param a COSDictionary representing the annotation data
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a new FDFAnnotationPolygon from a COSDictionary.
 * @param a dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),62,65,"/**
 * Constructs a new FDF annotation polyline from a COS dictionary.
 * @param a COS dictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a sound annotation.
 * @param a COSDictionary containing sound properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),55,58,"/**
 * Constructs an FDF annotation square.
 * @param a COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Constructs an FDF annotation stamp from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs an FDFAnnotationText from a COSDictionary.
 * @param a dictionary containing annotation data
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),45,48,"/**
 * Constructs a text markup annotation from a COS dictionary.
 * @param a COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,<init>,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:<init>(org.apache.pdfbox.pdmodel.PDDocument),27,30,"/**
 * Initializes a new instance of AcroFormDefaultFixup.
 * @param document PDDocument to be processed
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),41,44,"/**
 * Initializes a new AcroFormDefaultsProcessor with the given PDDocument.
 * @param document PDF document to process
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),31,34,"/**
 * Constructs an AcroFormGenerateAppearancesProcessor.
 * @param document PDF document to process
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,<init>,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:<init>(org.apache.pdfbox.pdmodel.PDDocument),55,58,"/**
 * Initializes processor with a PDF document.
 * @param document PDDocument instance to be processed
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:<init>(org.apache.pdfbox.cos.COSName),96,99,"/**
 * Constructs a FontType with specified type and no subtype.
 * @param type the font type as COSName
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:<init>(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String,org.apache.pdfbox.pdmodel.font.CIDSystemInfo,int,int,int,int,int,byte[],org.apache.pdfbox.pdmodel.font.FileSystemFontProvider,java.lang.String,long)",86,105,"/**
* Initializes a FSFontInfo object with font details.
* @param file font file reference
* @param format font format type
* @param postScriptName PostScript name of the font
* @param cidSystemInfo CID system information (may be null)
* @param usWeightClass weight class of the font
* @param sFamilyClass family class of the font
* @param ulCodePageRange1 code page range 1 bitmask
* @param ulCodePageRange2 code page range 2 bitmask
* @param macStyle Macintosh style information
* @param panose PANOSE classification data (may be null)
* @param parent parent FileSystemFontProvider
* @param hash font file hash
* @param lastModified last modified timestamp of the font file
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDPanose.java,getPanose,org.apache.pdfbox.pdmodel.font.PDPanose:getPanose(),63,67,"/**
* Extracts and returns Panose classification from font bytes.
* @return PDPanoseClassification object containing Panose data
*/","* Ten bytes for the PANOSE classification number for the font.
     * 
     * @see <a href=""http://www.monotype.com/services/pan1"">http://www.monotype.com/services/pan1</a>
     * 
     * @return the PANOSE classification number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendComposite.java,getInstance,"org.apache.pdfbox.pdmodel.graphics.blend.BlendComposite:getInstance(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode,float)",51,75,"/**
 * Creates a Composite instance based on blend mode and alpha.
 * @param blendMode the blending mode to apply
 * @param constantAlpha the alpha value (clamped between 0 and 1)
 * @return Composite object for rendering
 */","* Creates a blend composite
     *
     * @param blendMode Desired blend mode
     * @param constantAlpha Constant alpha, must be in the inclusive range
     * [0.0...1.0] or it will be clipped.
     * @return a blend composite.
     * @throws IllegalArgumentException if blendMode is null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getGroup,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getGroup(),128,139,"/**
 * Retrieves transparency group attributes.
 * @return PDTransparencyGroupAttributes object or null if not present
 */","* Returns the transparency group attributes dictionary.
     *
     * @return the transparency group attributes dictionary, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a PDShadingPattern from a COSDictionary.
 * @param resourceDictionary PDF dictionary containing shading pattern details
 */","* Creates a new shading pattern from the given COS dictionary.
     * @param resourceDictionary The COSDictionary for this pattern resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",84,88,"/**
* Initializes a PDTilingPattern with a given dictionary and resource cache.
* @param dictionary PDF dictionary containing pattern information
* @param resourceCache cache for managing resources
*/","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.
     * @param resourceCache The resource cache, may be null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a PDShadingType1 from a COSDictionary.
 * @param shadingDictionary dictionary containing shading details
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:<init>(org.apache.pdfbox.cos.COSDictionary),40,43,"/**
 * Constructs a PDShadingType2 from a dictionary.
 * @param shadingDictionary COSDictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDTriangleBasedShadingType from a COSDictionary.
 * @param shadingDictionary dictionary containing shading details
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,org.apache.pdfbox.util.Matrix)",45,48,"/**
 * Constructs an AxialShadingPaint with specified shading and transformation.
 * @param shadingType2 The axial shading type to use
 * @param matrix The transformation matrix to apply
 */","* Constructor.
     *
     * @param shadingType2 the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,org.apache.pdfbox.util.Matrix)",46,49,"/**
* Constructs a RadialShadingPaint with specified shading and matrix.
* @param shading PDShadingType3 object representing the radial shading
* @param matrix transformation matrix for the paint
*/","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type1ShadingPaint with specified shading and transformation.
 * @param shading PDShadingType1 object representing the shading pattern
 * @param matrix transformation matrix to apply to the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type4ShadingPaint with specified shading and transformation.
 * @param shading PDShadingType4 object defining the shading pattern
 * @param matrix transformation matrix to apply to the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,org.apache.pdfbox.util.Matrix)",44,47,"/**
 * Constructs a Type5ShadingPaint object.
 * @param shading PDShadingType5 instance representing the shading
 * @param matrix transformation matrix to apply
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Constructs a Type6ShadingPaint.
 * @param shading PDShadingType6 object representing the shading
 * @param matrix transformation matrix for the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,org.apache.pdfbox.util.Matrix)",46,49,"/**
 * Creates a new Type7ShadingPaint instance.
 * @param shading PDShadingType7 object representing the shading pattern
 * @param matrix transformation matrix for the shading
 */","* Constructor.
     *
     * @param shading the shading resources
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Creates a new PDExtendedGraphicsState from a COSDictionary.
 * @param dictionary the COSDictionary to use for initialization
 */","* Create a graphics state from an existing dictionary.
     *
     * @param dictionary The existing graphics state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:<init>(org.apache.pdfbox.cos.COSDictionary),106,109,"/**
 * Constructs a PDSoftMask from a COSDictionary.
 * @param dictionary the COSDictionary containing mask properties
 */","* Creates a new soft mask.
     *
     * @param dictionary The soft mask dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,<init>,org.apache.pdfbox.pdmodel.interactive.PlainText:<init>(java.lang.String),51,72,"/**
* Constructs a PlainText object from a given text value.
* @param textValue the input text to be processed
*/","* Construct the text block from a single value.
     * 
     * Constructs the text block from a single value splitting
     * into individual {@link Paragraph} when a new line character is 
     * encountered.
     * 
     * @param textValue the text block string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,build,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:build(),121,124,"/**
 * Constructs and returns a new PlainTextFormatter.
 * @return PlainTextFormatter instance initialized with current settings
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),58,61,"/**
 * Constructs a PDActionEmbeddedGoTo from a COS dictionary.
 * @param a COS dictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
* Constructs a PDActionGoTo from a dictionary.
* @param a the COS dictionary
*/","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a new PDActionHide from a COS dictionary.
 * @param a the COS dictionary representing the action
 */","* Constructor
     *
     * @param a the action dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a PDActionImportData from a COSDictionary.
 * @param a dictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
* Constructs a new PDActionJavaScript from a COSDictionary.
* @param a dictionary containing action details
*/","* Constructor #2.
     *
     *  @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionLaunch from a COSDictionary.
 * @param a dictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDActionMovie from a COSDictionary.
 * @param a dictionary containing action details
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(org.apache.pdfbox.cos.COSDictionary),44,47,"/**
 * Constructs a PDActionNamed from a COSDictionary.
 * @param a COSDictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionRemoteGoTo from a COSDictionary.
 * @param a dictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDActionResetForm from a COSDictionary.
 * @param a dictionary representing the action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionSound from a COSDictionary.
 * @param a dictionary representing the sound action
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs a PDActionSubmitForm from a COSDictionary.
 * @param a dictionary representing the action
 */","* Constructor
     *
     * @param a the action dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a PDActionThread from a COSDictionary.
 * @param a dictionary representing the action thread
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a PDActionURI from a COSDictionary.
 * @param a the COSDictionary containing action data
 */","* Constructor.
     *
     * @param a The action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAppearanceDictionary,"org.apache.pdfbox.pdmodel.PDDocument:assignAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",614,620,"/**
* Assigns appearance dictionary to a widget.
* @param firstWidget the widget to assign the dictionary to
* @param apDict the appearance dictionary to be assigned
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Initializes appearance handler with an annotation.
 * @param annotation PDF annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",44,47,"/**
 * Constructs a PDCaretAppearanceHandler.
 * @param annotation PDF annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Constructs a PDCircleAppearanceHandler.
 * @param annotation PDF annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",43,46,"/**
 * Initializes a new attachment appearance handler.
 * @param annotation PDF annotation associated with the attachment
 * @param document PDF document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",66,69,"/**
 * Constructs a PDF text appearance handler.
 * @param annotation the PDAnnotation object associated with the handler
 * @param document the PDDocument containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",48,51,"/**
 * Initializes a new appearance handler for a PDF highlight annotation.
 * @param annotation the PDF annotation to handle
 * @param document the PDF document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",42,45,"/**
 * Constructs a new PDInkAppearanceHandler.
 * @param annotation the annotation to handle
 * @param document the document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",46,49,"/**
 * Initializes a line appearance handler.
 * @param annotation PDF annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",49,52,"/**
 * Initializes PDLinkAppearanceHandler with an annotation and document.
 * @param annotation PDF annotation associated with the link
 * @param document PDF document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Initializes a new PDPolygonAppearanceHandler.
 * @param annotation PDAnnotation instance to handle
 * @param document PDDocument containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",45,48,"/**
 * Initializes a new polyline appearance handler.
 * @param annotation PDAnnotation instance
 * @param document PDDocument instance
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",28,31,"/**
 * Initializes a new sound appearance handler.
 * @param annotation PDF annotation to handle
 * @param document associated PDF document
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",50,53,"/**
 * Initializes a new PDSquareAppearanceHandler.
 * @param annotation PDAnnotation instance to handle
 * @param document PDDocument containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",52,55,"/**
 * Initializes a new PDSquigglyAppearanceHandler.
 * @param annotation PDAnnotation to handle
 * @param document PDDocument containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Initializes a new strikeout appearance handler.
 * @param annotation PDF annotation to handle
 * @param document associated PDF document
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",76,79,"/**
 * Initializes a text appearance handler for an annotation.
 * @param annotation PDF annotation to handle
 * @param document PDF document containing the annotation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.PDDocument)",41,44,"/**
 * Initializes an underline appearance handler.
 * @param annotation PDF annotation to handle
 * @param document associated PDF document
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,toKeyValueList,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:toKeyValueList(java.util.List,java.util.List)",86,94,"/**
* Converts two lists of keys and values into a list of KeyValue objects.
* @param key list of keys
* @param value list of corresponding values
* @return List of KeyValue objects
*/","* Return two related lists as a single list with key value pairs.
     * 
     * @param key the key elements
     * @param value the value elements
     * @return a sorted list of KeyValue elements.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
 * Constructs a PDNonTerminalField.
 * @param acroForm the form containing this field
 * @param field the dictionary representing this field
 * @param parent the parent terminal field
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
* Constructs a PDTerminalField.
* @param acroForm parent form containing the field
* @param field dictionary representing the field
* @param parent non-terminal parent field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDRectlinearMeasureDictionary from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Constructor.
     * 
     * @param dictionary the corresponding dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMatrix,org.apache.pdfbox.pdmodel.PDPage:getMatrix(),387,392,"/**
 * Returns a new matrix.
 * @return Matrix object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,clone,org.apache.pdfbox.util.Matrix:clone(),443,447,"/**
 * Creates a shallow copy of the matrix.
 * @return A new Matrix instance with cloned single array
 */","* Clones this object.
     * @return cloned matrix as an object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getFontMatrix(),168,203,"/**
* Returns the font matrix.
* @return FontMatrix object or default if not available
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getFontMatrix(),185,194,"/**
 * Returns the font matrix.
 * @return Font matrix with default scale if not set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1CFont:getFontMatrix(),312,341,"/**
* Returns the font matrix.
* @return Matrix representing the font transformation or default if unavailable
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType1Font:getFontMatrix(),662,693,"/**
* Retrieves the font matrix for a Type 1 font.
* @return Matrix object representing the font matrix or default if not available
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getScaleInstance,"org.apache.pdfbox.util.Matrix:getScaleInstance(float,float)",388,391,"/**
* Creates a scaling matrix instance.
* @param x scale factor along X-axis
* @param y scale factor along Y-axis
* @return Matrix representing the scaling transformation
*/","* Convenience method to create a scaled instance.
     *
     * Produces the following matrix:
     * x 0 0
     * 0 y 0
     * 0 0 1
     *
     * @param x The xscale operator.
     * @param y The yscale operator.
     * @return A new matrix with just the x/y scaling",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getTranslateInstance,"org.apache.pdfbox.util.Matrix:getTranslateInstance(float,float)",405,408,"/**
* Creates a translation matrix.
* @param x horizontal translation
* @param y vertical translation
* @return Matrix representing the translation
*/","* Convenience method to create a translating instance.
     *
     * Produces the following matrix:
     * 1 0 0
     * 0 1 0
     * x y 1
     *
     * @param x The x translating operator.
     * @param y The y translating operator.
     * @return A new matrix with just the x/y translating.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,getRotateInstance,"org.apache.pdfbox.util.Matrix:getRotateInstance(double,float,float)",418,424,"/**
 * Creates a rotation matrix with translation.
 * @param theta angle of rotation in radians
 * @param tx horizontal translation
 * @param ty vertical translation
 * @return Matrix representing the rotation and translation
 */","* Convenience method to create a rotated instance.
     *
     * @param theta The angle of rotation measured in radians
     * @param tx The x translation.
     * @param ty The y translation.
     * @return A new matrix with the rotation and the x/y translating.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,transform,org.apache.pdfbox.util.Matrix:transform(org.apache.pdfbox.util.Vector),363,374,"/**
* Transforms a 2D vector using an affine transformation matrix.
* @param vector input 2D vector to be transformed
* @return transformed 2D vector
*/","* Transforms the given vector by this matrix.
     *
     * @param vector 2D vector
     *
     * @return the transformed vector.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Vector.java,scale,org.apache.pdfbox.util.Vector:scale(float),60,63,"/**
 * Scales vector by a factor.
 * @param sxy scaling factor
 * @return new scaled Vector
 */","* Returns a new vector scaled by both x and y.
     *
     * @param sxy x and y scale
     * @return a new vector scaled by both x and y",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/CompressParameters.java,<init>,org.apache.pdfbox.pdfwriter.compress.CompressParameters:<init>(),33,36,"/**
 * Initializes with default object stream size.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldTree,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldTree(),429,432,"/**
 * Returns a field tree for the current document.
 * @return PDFieldTree object representing the document's fields
 */","* Return the field tree representing all form fields
     * 
     * @return the field tree representing all form fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,isEmpty,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:isEmpty(),931,935,"/**
* Checks if the stream is empty.
* @return true if the stream length is zero, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/ByteTrie.java,setDefaultValue,org.apache.pdfbox.util.filetypedetector.ByteTrie:setDefaultValue(java.lang.Object),121,124,"/**
 * Sets default value for the root element.
 * @param defaultValue the default value to be set
 */","* Sets the default value to use in {@link ByteTrie#find(byte[])} when no path matches.
     * @param defaultValue",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getObject(int),66,69,"/**
 * Retrieves an object by its index.
 * @param index position of the object in the list
 * @return the object at the specified index or throws IndexOutOfBoundsException if invalid
 */","* Returns the object at the specified position.
     * 
     * @param index the position
     * @return the object
     * @throws IndexOutOfBoundsException if the index is out of range",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,size,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:size(),115,118,"/**
 * Returns the number of objects in the collection.
 * @return integer count of objects
 */","* Returns the size.
     * 
     * @return the size",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:getRevisionNumber(int),78,81,"/**
 * Retrieves the revision number at the specified index.
 * @param index position of the revision number in the list
 * @return revision number as an integer
 */","* Returns the revision number at the specified position.
     * 
     * @param index the position
     * @return the revision number
     * @throws IndexOutOfBoundsException if the index is out of range",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,addObject,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:addObject(java.lang.Object,int)",89,93,"/**
* Adds an object with its revision number.
* @param object the object to add
* @param revisionNumber the associated revision number
*/","* Adds an object with a specified revision number.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,setRevisionNumber,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:setRevisionNumber(java.lang.Object,int)",101,108,"/**
* Sets the revision number for a given object.
* @param object the object to update
* @param revisionNumber the new revision number
*/","* Sets the revision number of a specified object.
     * 
     * @param object the object
     * @param revisionNumber the revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,isCIDSubtype,org.apache.pdfbox.pdmodel.font.PDFontFactory$FontType:isCIDSubtype(org.apache.pdfbox.cos.COSName),106,113,"/**
* Checks if CID subtype matches.
* @param cidSubtype the CID subtype to check
* @return true if type is TYPE0 and subtype matches, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Encoding.java,getInstance,org.apache.pdfbox.pdmodel.font.encoding.Encoding:getInstance(org.apache.pdfbox.cos.COSName),42,64,"/**
* Returns the appropriate Encoding instance based on the given COSName.
* @param name the COSName representing the encoding type
* @return Encoding instance or null if not supported
*/","* This will get an encoding by name. May return null.
     *
     * @param name The name of the encoding to get.
     * @return The encoding that matches the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,toLongName,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:toLongName(org.apache.pdfbox.cos.COSBase),151,166,"/**
 * Converts color space names to their long device names.
 * @param cs color space name
 * @return corresponding long device name or original if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,"org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.ResourceCache)",62,85,"/**
 * Creates a PDSoftMask from a given COSBase.
 * @param dictionary the COSBase object representing the soft mask
 * @param resourceCache the ResourceCache for resources
 * @return PDSoftMask object or null if invalid
 */","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * @param resourceCache Resource cache, may be null.
     * 
     * @return the newly created instance of PDSoftMask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,getSelectedIndex,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:getSelectedIndex(),94,106,"/**
* Returns the index of the first selected annotation widget.
* @return Index of the selected widget or -1 if none is selected
*/","* This will get the selected index.
     * <p>
     * A RadioButton might have multiple same value options which are not selected jointly if
     * they are not set in unison {@link #isRadiosInUnison()}.</p>
     * 
     * <p>
     * The method will return the first selected index or -1 if no option is selected.</p>
     * 
     * @return the first selected index or -1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,addSource,org.apache.pdfbox.multipdf.PDFMergerUtility:addSource(java.lang.String),296,299,"/**
 * Adds a source file to the system.
 * @param source path to the source file
 * @throws FileNotFoundException if the file does not exist
 */","* Add a source file to the list of files to merge.
     *
     * @param source Full path and file name of source document.
     * 
     * @throws FileNotFoundException If the file doesn't exist",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseTrailer,org.apache.pdfbox.pdfparser.XrefParser:parseTrailer(),206,258,"/**
 * Parses the PDF trailer and updates the XRef resolver.
 * @return true if parsing is successful, false otherwise
 * @throws IOException if an I/O error occurs
 */","* This will parse the trailer from the stream and add it to the state.
     *
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(org.apache.pdfbox.filter.DecodeOptions),302,307,"/**
* Creates an input stream for the image.
* @return InputStream containing the image data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getObject,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getObject(org.apache.pdfbox.cos.COSObjectKey),279,282,"/**
 * Retrieves an object from the pool by its key.
 * @param key unique identifier for the object
 * @return COSBase object or null if not found
 */","* Returns the {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool.
     *
     * @param key The {@link COSObjectKey} a {@link COSBase} is registered for in this compression pool.
     * @return The {@link COSBase}, that is registered for the given {@link COSObjectKey} in this compression pool, if
     * such an object is contained.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequence.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequence:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),80,110,"/**
* Executes a sequence of instructions in the provided context.
* @param context execution environment containing operators and stack
*/","* Executes the instruction sequence.
     * @param context the execution context",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,"org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.cos.ICOSParser)",134,138,"/**
* Initializes COSDocument with a stream cache and parser.
* @param streamCacheCreateFunction function to create stream cache
* @param parser parser for document processing
*/","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     * @param parser Parser to be used to parse the document on demand
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",916,935,"/**
* Processes an operator with given operands.
* @param operator the Operator to process
* @param operands list of COSBase operands
* @throws IOException if processing fails
*/","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextLineMatrix(),1047,1050,"/**
 * Retrieves the current text line matrix.
 * @return Matrix representing the text line transformation
 */",* @return Returns the textLineMatrix.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextLineMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextLineMatrix(org.apache.pdfbox.util.Matrix),1055,1058,"/**
 * Sets the text line matrix.
 * @param value new text line matrix to apply
 */",* @param value The textLineMatrix to set.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:getTextMatrix(),1063,1066,"/**
 * Retrieves the current text matrix.
 * @return TextMatrix object representing the current transformation state
 */",* @return Returns the textMatrix.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setTextMatrix,org.apache.pdfbox.contentstream.PDFStreamEngine:setTextMatrix(org.apache.pdfbox.util.Matrix),1071,1074,"/**
 * Sets the text matrix in the graphics state.
 * @param value new text transformation matrix to apply
 */",* @param value The textMatrix to set.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformWidth,org.apache.pdfbox.contentstream.PDFStreamEngine:transformWidth(float),1138,1144,"/**
* Transforms width using the current transformation matrix.
* @param width original width value
* @return transformed width value
*/","* Transforms a width using the CTM.
     * 
     * @param width the width to be transformed
     * 
     * @return the transformed width",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColor(),40,44,"/**
 * Retrieves the non-stroking color from the graphics state.
 * @return PDColor object representing the non-stroking color
 */","* Returns the non-stroking color.
     * @return The non-stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
* Sets non-stroking color in graphics context.
* @param color PDColor object to set
*/","* Sets the non-stroking color.
     * @param color The new non-stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:getColorSpace(),60,64,"/**
* Retrieves the non-stroking color space from the graphics state.
* @return PDColorSpace object representing the current non-stroking color space
*/","* Returns the non-stroking color space.
     * @return The non-stroking color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColor(),40,44,"/**
 * Retrieves the stroking color from the current graphics state.
 * @return PDColor object representing the stroking color
 */","* Returns the stroking color.
     * @return The stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,setColor,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),50,54,"/**
* Sets the stroking color in the graphics state.
* @param color PDColor object to be set as stroking color
*/","* Sets the stroking color.
     * @param color The new stroking color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,getColorSpace,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:getColorSpace(),60,64,"/**
* Retrieves the stroking color space from the graphics state.
* @return PDColorSpace object representing the current stroking color space
*/","* Returns the stroking color space.
     * @return The stroking color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRise.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRise:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
* Sets the text rise for the graphics context.
* @param operator unused in this method
* @param arguments list containing a single COSNumber representing the rise value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetWordSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetWordSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,54,"/**
 * Sets the word spacing for text.
 * @param operator the PDF operator being processed
 * @param arguments list of operands, expects a single COSNumber
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,74,"/**
* Processes rectangle drawing operation.
* @param operator the operator for the operation
* @param operands list of COSBase operands representing coordinates and dimensions
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,80,"/**
* Processes a curve path operation.
* @param operator the PDF operator
* @param operands list of operands (COSNumber)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,66,"/**
* Processes operands to draw a curve in the PDF.
* @param operator the PDF operator
* @param operands list of operands (COSNumber)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
 * Processes curve drawing operation with given operands.
 * @param operator the PDF operator
 * @param operands list of COSBase operands representing coordinates
 * @throws IOException if processing fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.LineTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,79,"/**
* Processes line drawing operation.
* @param operator the PDF operator
* @param operands list of operands (x and y coordinates)
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,process,"org.apache.pdfbox.contentstream.operator.graphics.MoveTo:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,65,"/**
* Processes operands to move graphics cursor.
* @param operator the operation to be processed
* @param operands list of COSBase operands
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,process,"org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
* Processes shading fill operation.
* @param operator the operator for the shading fill
* @param operands list of operands, must contain at least one COSName
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPoint.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPoint:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
* Processes an operator with operands.
* @param operator the operator to process
* @param operands list of operands for the operator
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetFlatness.java,process,"org.apache.pdfbox.contentstream.operator.state.SetFlatness:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
 * Sets the graphics state's flatness.
 * @param operator the PDF operator being processed
 * @param operands list of COSBase operands
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineCapStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineCapStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,54,"/**
* Sets the line cap style for graphics.
* @param operator PDF operator
* @param arguments list of COSBase arguments
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineJoinStyle.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineJoinStyle:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
* Sets line join style from arguments.
* @param operator the PDF operator
* @param arguments list of COSBase arguments
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineMiterLimit.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineMiterLimit:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,55,"/**
 * Processes operator with arguments to set miter limit.
 * @param operator the PDF operator
 * @param arguments list of COSBase arguments
 * @throws IOException if processing fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineWidth.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineWidth:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,56,"/**
* Sets line width from a list of COSBase arguments.
* @param operator the PDF operator being processed
* @param arguments list containing the line width as a COSNumber
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetRenderingIntent.java,process,"org.apache.pdfbox.contentstream.operator.state.SetRenderingIntent:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,58,"/**
* Processes operator with operands, setting rendering intent.
* @param operator the PDF operator to process
* @param operands list of COSBase operands
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetCharSpacing.java,process,"org.apache.pdfbox.contentstream.operator.text.SetCharSpacing:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,60,"/**
* Processes operator with arguments, setting character spacing.
* @param operator PDF operator to process
* @param arguments list of COSBase arguments
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextHorizontalScaling.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextHorizontalScaling:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,57,"/**
* Processes operator with scaling argument.
* @param operator the PDF operator to process
* @param arguments list of operands, expects a single COSNumber for scaling
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,56,"/**
* Sets text leading based on first argument.
* @param operator the PDF operator
* @param arguments list of operands
* @throws IOException if processing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetTextRenderingMode.java,process,"org.apache.pdfbox.contentstream.operator.text.SetTextRenderingMode:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
 * Processes operator with arguments to set text rendering mode.
 * @param operator the PDF operator
 * @param arguments list of COSBase arguments
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Restore.java,process,"org.apache.pdfbox.contentstream.operator.state.Restore:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,53,"/**
* Processes operator with arguments in PDF context.
* Restores graphics state if stack size is greater than 1.
* @param operator the PDF operator to process
* @param arguments list of COSBase arguments for the operator
* @throws IOException if an I/O error occurs or graphics stack is empty
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawInputStream,org.apache.pdfbox.cos.COSStream:createRawInputStream(),132,156,"/**
 * Creates a raw input stream for reading.
 * @return InputStream for reading data
 * @throws IOException if stream is closed or no data has been written
 */","* Returns a new InputStream which reads the encoded PDF stream data. Experts only!
     * 
     * @return InputStream containing raw, encoded PDF stream data.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createRawOutputStream,org.apache.pdfbox.cos.COSStream:createRawOutputStream(),261,290,"/**
* Creates a raw output stream for writing.
* @return OutputStream for writing data
* @throws IOException if an I/O error occurs
*/","* Returns a new OutputStream for writing encoded PDF data. Experts only!
     * 
     * @return OutputStream for raw PDF stream data.
     * @throws IOException If the output stream could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findImageReader,"org.apache.pdfbox.filter.Filter:findImageReader(java.lang.String,java.lang.String)",159,172,"/**
 * Finds an image reader for a given format.
 * @param formatName the image format name (e.g., ""JPEG"")
 * @param errorCause additional information about the error
 * @return ImageReader instance if found, throws exception otherwise
 * @throws MissingImageReaderException if no suitable reader is available
 */","* Finds a suitable image reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,findRasterReader,"org.apache.pdfbox.filter.Filter:findRasterReader(java.lang.String,java.lang.String)",182,199,"/**
 * Finds a raster image reader for the specified format.
 * @param formatName name of the image format
 * @param errorCause cause of the error if no reader is found
 * @return ImageReader that can read rasters
 * @throws MissingImageReaderException if no suitable reader is available
 */","* Finds a suitable image raster reader for an image format.
     *
     * @param formatName The image format to search for.
     * @param errorCause The probably cause if something goes wrong.
     * @return The image reader for the format.
     * @throws MissingImageReaderException if no image reader is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/Operator.java,getOperator,org.apache.pdfbox.contentstream.operator.Operator:getOperator(java.lang.String),60,85,"/**
* Retrieves or creates an Operator instance.
* @param operator the operator name as a string
* @return Operator object corresponding to the input name
*/","* This is used to create/cache operators in the system.
     *
     * @param operator The operator for the system.
     *
     * @return The operator that matches the operator keyword.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,toString,org.apache.pdfbox.pdmodel.common.COSArrayList:toString(),580,584,"/**
 * Returns string representation of COSArrayList.
 * @return formatted string including underlying array's content
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,isEdgeALine,org.apache.pdfbox.pdmodel.graphics.shading.Patch:isEdgeALine(java.awt.geom.Point2D[]),143,150,"/**
* Checks if an edge is a line.
* @param ctl array of control points
* @return true if edge is approximately a line, false otherwise
*/","* Whether the for control points are on a line.
     *
     * @param ctl an edge's control points, the size of ctl is 4
     * @return true when 4 control points are on a line, otherwise false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
* Creates a new instance of PDArtifactMarkedContent.
* @param properties dictionary containing artifact properties
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftX(),215,218,"/**
 * Retrieves the x-coordinate of the lower-left corner.
 * @return float value representing the x-coordinate
 */","* This will get the lower left x coordinate.
     *
     * @return The lower left x.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:getLowerLeftY(),235,238,"/**
 * Retrieves the y-coordinate of the lower-left corner.
 * @return y-coordinate as a float
 */","* This will get the lower left y coordinate.
     *
     * @return The lower left y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightX(),255,258,"/**
 * Returns the x-coordinate of the upper-right corner.
 * @return x-coordinate as a float
 */","* This will get the upper right x coordinate.
     *
     * @return The upper right x .",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:getUpperRightY(),275,278,"/**
 * Retrieves the upper-right Y coordinate of the rectangle.
 * @return The Y coordinate as a float
 */","* This will get the upper right y coordinate.
     *
     * @return The upper right y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFontSize(),104,108,"/**
* Retrieves font size from settings.
* @return Font size as a float
*/","* This will get the size of the font.
     *
     * @return The size of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,initComponents,org.apache.pdfbox.pdmodel.graphics.color.PDColor:initComponents(org.apache.pdfbox.cos.COSArray),81,95,"/**
 * Initializes color components from an array.
 * @param array COSArray containing color component values
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getR(),79,82,"/**
 * Retrieves the R value from the list of values.
 * @return float representation of the R value
 */","* Returns the r value of the tristimulus.
     * @return the R value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getG(),97,100,"/**
 * Retrieves the second value as a float.
 * @return float representation of the second value
 */","* Returns the g value of the tristimulus.
     * @return the g value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,getB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:getB(),115,118,"/**
 * Retrieves the third value as a float.
 * @return float value of the third element in values list
 */","* Returns the b value of the tristimulus.
     * @return the B value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getX(),82,85,"/**
 * Returns the X coordinate value.
 * @return float representing the X coordinate
 */","* Returns the x value of the tristimulus.
     * @return the X value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getY(),100,103,"/**
 * Retrieves the y-coordinate value.
 * @return The y-coordinate as a float.
 */","* Returns the y value of the tristimulus.
     * @return the Y value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,getZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:getZ(),118,121,"/**
 * Retrieves the z-coordinate value.
 * @return z-coordinate as a float
 */","* Returns the z value of the tristimulus.
     * @return the Z value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,"org.apache.pdfbox.cos.COSArray:getInt(int,int)",318,330,"/**
* Retrieves integer value at specified index, or default if not a COSNumber.
* @param index position in the list
* @param defaultValue value to return if index is out of bounds or not a COSNumber
* @return integer value at index or default
*/","* Get the value of the array as an integer, return the default if it does not exist.
     *
     * @param index The value of the array.
     * @param defaultValue The value to return if the value is null.
     * @return The value at the index or the defaultValue.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,"org.apache.pdfbox.cos.COSArray:getName(int,java.lang.String)",370,382,"/**
* Retrieves name from list at given index.
* @param index position in the list
* @param defaultValue default value if not found
* @return name as String or defaultValue
*/","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOf,org.apache.pdfbox.cos.COSArray:indexOf(org.apache.pdfbox.cos.COSBase),539,557,"/**
 * Returns the index of the first occurrence of the specified object.
 * @param object the COSBase object to search for
 * @return index of the object or -1 if not found
 */","* This will return the index of the entry or -1 if it is not found.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,getFilterList,org.apache.pdfbox.cos.COSStream:getFilterList(),295,324,"/**
* Retrieves list of filters.
* @return List of Filter objects
* @throws IOException if invalid filter type encountered
*/",* Returns the list of filters.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.util.List,org.apache.pdfbox.cos.COSArray)",75,85,"/**
* Initializes COSArrayList with actual list and COSArray.
* @param actualList List of elements
* @param cosArray Underlying COSArray
*/","* Create the COSArrayList specifying the List and the backing COSArray.
     * 
     * <p>User of this constructor need to ensure that the entries in the List and
     * the backing COSArray are matching i.e. the COSObject of the List entry is
     * included in the COSArray.
     *   
     * <p>If the number of entries in the List and the COSArray differ
     * it is assumed that the List has been filtered. In that case the COSArrayList
     * shall only be used for reading purposes and no longer for updating.
     * 
     * @param actualList The list of standard java objects
     * @param cosArray The COS array object to sync to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:eval(float[]),87,102,"/**
* Evaluates input using exponential interpolation.
* @param input array containing the base value for interpolation
* @return interpolated float array clipped to range
*/","* Performs exponential interpolation
     *
     * {@inheritDoc}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(),511,525,"/**
* Reads a byte from the stream.
* Ensures the stream is open, reads data, handles end of stream.
* @return next byte or -1 if end reached
* @throws IOException on I/O error
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,available,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:available(),527,535,"/**
* Checks data availability in the stream.
* Ensures stream is open before checking.
* @return 1 if data available, 0 otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,read,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$MultipleInputStream:read(byte[],int,int)",537,551,"/**
* Reads bytes from the input stream into a buffer.
* @param b destination buffer
* @param off starting offset in the buffer
* @param len number of bytes to read
* @return number of bytes read or -1 if end of stream
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser$ObjectNumbers:<init>(org.apache.pdfbox.cos.COSArray),182,212,"/**
 * Initializes object numbers from an index array.
 * @param indexArray COSArray containing start and size integers
 * @throws IOException if non-integer values are found in the array
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFilters(),238,250,"/**
* Retrieves the list of filters for a stream.
* @return List of COSName objects representing filters, or empty list if none
*/","* This will get the list of filters that are associated with this stream.
     * 
     * @return A (possibly empty) list of all encoding filters to apply to this stream, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:getFileFilters(),358,371,"/**
* Retrieves file filters from a PDF stream.
* @return List of filter names or empty list if none found
*/","* This will get the list of filters that are associated with this stream. The list is empty if there are none.
     * 
     * @return A list of all encoding filters to apply to this stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromBoolean,org.apache.pdfbox.pdfwriter.COSWriter:visitFromBoolean(org.apache.pdfbox.cos.COSBoolean),1180,1184,"/**
* Writes COSBoolean object to PDF output.
* @param obj COSBoolean object to write
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSBoolean,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSBoolean(java.io.OutputStream,org.apache.pdfbox.cos.COSBoolean)",294,298,"/**
 * Writes a COSBoolean to the given OutputStream.
 * @param output the OutputStream to write to
 * @param cosBoolean the COSBoolean object to write
 * @throws IOException if an I/O error occurs
 */","* Write the given {@link COSBoolean} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosBoolean The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromNull,org.apache.pdfbox.pdfwriter.COSWriter:visitFromNull(org.apache.pdfbox.cos.COSNull),1368,1372,"/**
 * Writes a COSNull object to the standard output.
 * @param obj the COSNull object to write
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,write,org.apache.pdfbox.pdmodel.PDAbstractContentStream:write(java.lang.String),1503,1506,"/**
 * Writes text to output stream using ASCII encoding.
 * @param text string to be written
 * @throws IOException if an I/O error occurs
 */","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:potentiallyNotifyChanged(java.lang.Object,java.lang.Object)",161,167,"/**
 * Notifies of property change if entries differ.
 * @param oldEntry previous entry value
 * @param newEntry current entry value
 */","* Notifies the user attribute object if the user property is changed.
     * 
     * @param oldEntry old entry
     * @param newEntry new entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,size,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:size(),60,64,"/**
 * Returns the number of key-value pairs in the map.
 * @return size of the map
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSObject,org.apache.pdfbox.cos.COSDictionary:getCOSObject(org.apache.pdfbox.cos.COSName),535,543,"/**
* Retrieves COSObject by key.
* @param key the key to look up
* @return COSObject associated with the key or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSObject. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,"org.apache.pdfbox.cos.COSDictionary:getItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1204,1212,"/**
* Retrieves item by primary or secondary key.
* @param firstKey primary key to search
* @param secondKey secondary key to search if primary not found
* @return COSBase object or null if both keys are missing
*/","* This is a special case of getItem that takes multiple keys, it will handle the situation
     * where multiple keys could get the same value, ie if either CS or ColorSpace is used to get
     * the colorspace. This will get an object from this dictionary.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientsLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientsLength(),446,450,"/**
* Returns the number of recipients in the COSArray.
* @return size of the recipients array
*/","* Returns the number of recipients contained in the Recipients field of the dictionary.
     *
     * @return the number of recipients contained in the Recipients field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRecipientStringAt,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRecipientStringAt(int),459,463,"/**
 * Retrieves recipient string at specified index.
 * @param i index of the recipient
 * @return COSString object representing the recipient or null if not found
 */","* returns the COSString contained in the Recipients field at position i.
     *
     * @param i the position in the Recipients field array.
     *
     * @return a COSString object containing information about the recipient number i.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDirection(),122,130,"/**
* Retrieves direction value from PDF dictionary.
* @return COSBase object representing direction, or zero if not found
*/","* @return the direction in which the specified transition effect shall move. It can be either a {@link COSInteger}
     * or {@link COSName#NONE}. Default to {@link COSInteger#ZERO}
     * @see PDTransitionDirection",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getMetadataKeys,org.apache.pdfbox.pdmodel.PDDocumentInformation:getMetadataKeys(),262,270,"/**
* Retrieves all metadata keys.
* @return Sorted set of metadata keys
*/","* This will get the keys of all metadata information fields for the document.
     *
     * @return all metadata key strings.
     * @since Apache PDFBox 1.3.0",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeNames(),58,66,"/**
 * Retrieves a list of attribute names from the COS object.
 * Filters out the key 'O' and maps keys to their string names.
 * @return List of attribute names as strings
 */","* Gets the attribute names.
     * 
     * @return the attribute names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,addTrailerInfo,org.apache.pdfbox.pdfparser.PDFXRefStream:addTrailerInfo(org.apache.pdfbox.cos.COSDictionary),123,133,"/**
 * Adds trailer information to the PDF document.
 * @param trailerDict dictionary containing trailer entries
 */","* Copy all Trailer Information to this file.
     * 
     * @param trailerDict dictionary to be added as trailer info",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,<init>,org.apache.pdfbox.cos.COSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),73,77,"/**
 * Constructs a COSDictionary by copying entries from another dictionary.
 * @param dict source dictionary to copy entries from
 */","* Copy Constructor. This will make a shallow copy of this dictionary.
     *
     * @param dict The dictionary to copy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isInfo,org.apache.pdfbox.pdfparser.BruteForceParser:isInfo(org.apache.pdfbox.cos.COSDictionary),743,757,"/**
* Checks if the dictionary represents document info.
* @param dictionary PDF dictionary to check
* @return true if dictionary contains document info keys, false otherwise
*/","* Tell if the dictionary is an info dictionary.
     * 
     * @param dictionary the dictionary to be checked
     * @return true if the given dictionary is an info dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasWidths,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasWidths(),661,664,"/**
* Checks if dictionary contains width information.
* @return true if WIDTHS or MISSING_WIDTH key exists, false otherwise
*/","* Returns true if widths are present in the font descriptor.
     * 
     * @return true if widths are present in the font descriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,hasMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:hasMissingWidth(),671,674,"/**
 * Checks if the dictionary contains the ""MissingWidth"" key.
 * @return true if ""MissingWidth"" is present, false otherwise
 */","* Returns true if the missing widths entry is present in the font descriptor.
     * 
     * @return true if the missing widths entry is present in the font descriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,hasXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:hasXFA(),564,567,"/**
 * Checks if the PDF document contains XFA.
 * @return true if XFA is present, false otherwise
 */","* This will tell if the AcroForm has XFA content.
     *
     * @return true if the AcroForm is an XFA form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getBruteForceParser,org.apache.pdfbox.pdfparser.COSParser:getBruteForceParser(),923,930,"/**
* Returns the BruteForceParser instance.
* Initializes it if not already created.
* @return BruteForceParser object
* @throws IOException if an I/O error occurs during initialization
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,nextXrefObj,"org.apache.pdfbox.pdfparser.XrefTrailerResolver:nextXrefObj(long,org.apache.pdfbox.pdfparser.XrefTrailerResolver$XRefType)",152,157,"/**
 * Initializes a new cross-reference object.
 * @param startBytePos starting byte position for the XRef
 * @param type type of cross-reference
 */","* Signals that a new XRef object (table or stream) starts.
     * @param startBytePos the offset to start at
     * @param type the type of the Xref object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(float[]),361,414,"/**
* Converts color values to RGB with attributes.
* @param value input color values
* @return RGB float array or null if spot color missing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectFromPool,org.apache.pdfbox.pdfparser.BaseParser:getObjectFromPool(org.apache.pdfbox.cos.COSObjectKey),263,271,"/**
* Retrieves an object from the document pool by key.
* @param key unique identifier for the COSObject
* @return COSBase object or throws IOException if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,<init>,org.apache.pdfbox.cos.COSFloat:<init>(java.lang.String),67,112,"/**
* Constructs COSFloat from string representation.
* @param aFloat string to parse as float
* @throws IOException if parsing fails
*/","* Constructor.
     *
     * @param aFloat The primitive float object that this object wraps.
     *
     * @throws IOException If aFloat is not a float.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,toString,org.apache.pdfbox.cos.COSFloat:toString(),194,198,"/**
 * Returns string representation of COSFloat.
 * @return formatted string with float value
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSFloat.java,writePDF,org.apache.pdfbox.cos.COSFloat:writePDF(java.io.OutputStream),234,237,"/**
* Writes formatted string to PDF.
* @param output stream to write PDF data
* @throws IOException if an I/O error occurs
*/","* This will output this string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,toIncrement,org.apache.pdfbox.cos.COSUpdateState:toIncrement(),339,342,"/**
 * Creates and returns a new COSIncrement instance.
 * @return COSIncrement object initialized with updateInfo
 */","* Uses the managed {@link #updateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on the managed {@link #updateInfo}.
     * @see COSUpdateInfo
     * @see COSIncrement",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,<init>,org.apache.pdfbox.multipdf.LayerUtility:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,71,"/**
* Initializes a LayerUtility with a target document.
* @param targetDoc the PDDocument to be manipulated
*/","* Creates a new instance.
     * @param targetDoc the PDF document to modify",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCache.java,<init>,org.apache.pdfbox.pdmodel.DefaultResourceCache:<init>(),91,94,"/**
 * Initializes a new instance with default settings.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/DefaultResourceCacheCreateImpl.java,create,org.apache.pdfbox.pdmodel.DefaultResourceCacheCreateImpl:create(),47,51,"/**
 * Creates a new resource cache.
 * @return ResourceCache instance configured with stable cache enabled
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,isNeedToBeUpdated,org.apache.pdfbox.pdfwriter.COSWriter:isNeedToBeUpdated(org.apache.pdfbox.cos.COSBase),613,620,"/**
* Checks if a PDF object needs to be updated.
* @param base the PDF object to check
* @return true if the object needs updating, false otherwise
*/","* Convenience method, so that we get false for types that can't be updated.
     * 
     * @param base
     * @return",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(int),620,627,"/**
* Appends a kid to the current object.
* @param mcid Media Content Identifier, must be non-negative
*/","* Appends a marked-content sequence kid.
     * 
     * @param mcid the marked-content id (MCID).
     * @throws IllegalArgumentException if the mcid is negative.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransitionDirection.java,getCOSBase,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection:getCOSBase(),69,72,"/**
* Retrieves the COSBase representation of degrees.
* @return COSBase object representing the degrees
*/",* @return the value for this direction,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromInt,org.apache.pdfbox.pdfwriter.COSWriter:visitFromInt(org.apache.pdfbox.cos.COSInteger),1356,1360,"/**
* Writes an integer object to PDF output.
* @param obj COSInteger object to write
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSInteger,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSInteger(java.io.OutputStream,org.apache.pdfbox.cos.COSInteger)",282,286,"/**
 * Writes a COSInteger to an OutputStream.
 * @param output target OutputStream
 * @param cosInteger COSInteger to write
 * @throws IOException if I/O error occurs
 */","* Write the given {@link COSInteger} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosInteger The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:hasExplicitWidth(int),479,483,"/**
 * Checks if the font has an explicit width for a given character code.
 * @param code character code to check
 * @return true if explicit width exists, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addComment(java.lang.String),1422,1431,"/**
* Adds a comment to the output stream.
* @param comment text to add, must not contain newlines
* @throws IOException if writing fails
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDFormContentStream:addComment(java.lang.String),1422,1431,"/**
 * Adds a comment to the output stream.
 * @param comment text of the comment, must not contain newlines
 * @throws IOException if an I/O error occurs
 */","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPageContentStream:addComment(java.lang.String),1422,1431,"/**
* Adds a comment to the output stream.
* @param comment text to add, must not contain newlines
* @throws IOException if an I/O error occurs
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addComment,org.apache.pdfbox.pdmodel.PDPatternContentStream:addComment(java.lang.String),1422,1431,"/**
* Adds a comment to the output stream.
* @param comment text to add, must not contain newlines
* @throws IOException if writing fails
*/","* Write a comment line.
     *
     * @param comment the comment to be added to the content stream
     * 
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the comment contains a newline. This is not allowed, because the next line
     * could be ordinary PDF content.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getObject,org.apache.pdfbox.cos.COSArray:getObject(int),272,284,"/**
* Retrieves an object by index, resolving indirect references.
* @param index the position of the object in the list
* @return resolved COSBase object or null if it's a COSNull
*/","* This will get an object from the array.  This will dereference the object.
     * If the object is COSNull then null will be returned.
     *
     * @param index The index into the array to get the object.
     *
     * @return The object at the requested index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,indexOfObject,org.apache.pdfbox.cos.COSArray:indexOfObject(org.apache.pdfbox.cos.COSBase),566,589,"/**
 * Finds the index of a specific object in the list.
 * @param object the object to search for
 * @return index of the object or -1 if not found
 */","* This will return the index of the entry or -1 if it is not found.
     * This method will also find references to indirect objects.
     *
     * @param object The object to search for.
     * @return The index of the object or -1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSArray:getIndirectObjectKeys(java.util.Collection),807,859,"/**
* Collects indirect object keys recursively.
* @param indirectObjects collection to store keys
*/","* Collects all indirect objects numbers within this COSArray and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsValue,org.apache.pdfbox.cos.COSDictionary:containsValue(java.lang.Object),86,94,"/**
 * Checks if the map contains a specified value.
 * @param value the value to check for
 * @return true if the map contains the value or a COSObject wrapping the value, false otherwise
 */","* @see java.util.Map#containsValue(java.lang.Object)
     *
     * @param value The value to find in the map.
     *
     * @return true if the map contains this value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getKeyForValue,org.apache.pdfbox.cos.COSDictionary:getKeyForValue(java.lang.Object),102,115,"/**
 * Retrieves the key associated with a given value.
 * @param value the value to search for
 * @return COSName key or null if not found
 */","* Search in the map for the value that matches the parameter and return the first key that maps to that value.
     *
     * @param value The value to search for in the map.
     * @return The key for the value in the map or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName),178,190,"/**
* Retrieves object from dictionary by key.
* @param key the dictionary key
* @return the corresponding COSBase object or null if not found
*/","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getLinearizedDictionary,org.apache.pdfbox.cos.COSDocument:getLinearizedDictionary(),207,230,"/**
* Retrieves the linearized dictionary from the PDF.
* @return COSDictionary containing linearization info or null if not found
*/","* Get the dictionary containing the linearization information if the pdf is linearized.
     * 
     * @return the dictionary containing the linearization information",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,close,org.apache.pdfbox.cos.COSDocument:close(),440,486,"/**
* Closes all resources and streams.
* @throws IOException if an I/O error occurs during closing
*/","* This will close all storage and delete the tmp files.
     *
     * @throws IOException If there is an error close resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,accept,org.apache.pdfbox.cos.COSObject:accept(org.apache.pdfbox.cos.ICOSVisitor),160,172,"/**
 * Accepts a visitor to process the PDF object.
 * @param visitor ICOSVisitor instance for processing
 * @throws IOException if an I/O error occurs during visitor execution
 */","* visitor pattern double dispatch method.
     *
     * @param visitor The object to notify when visiting this object.
     * @throws IOException If an error occurs while visiting this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createContentStreamList,org.apache.pdfbox.multipdf.Overlay:createContentStreamList(org.apache.pdfbox.cos.COSBase),360,388,"/**
 * Recursively creates a list of COSStream objects from given PDF content.
 * @param contents PDF content object which can be a stream, array, or object
 * @return List of COSStream objects extracted from the content
 * @throws IOException if an unknown content type is encountered
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,hasSelfReference,"org.apache.pdfbox.multipdf.PDFCloneUtility:hasSelfReference(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",244,258,"/**
* Checks if the given value has a self-reference to its parent.
* @param parent the parent COSBase object
* @param value the COSBase value to check
* @return true if there is a self-reference, false otherwise
*/","* Check whether an element (of an array or a dictionary) points to its parent.
     *
     * @param parent COSArray or COSDictionary
     * @param value an element",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getLength,org.apache.pdfbox.pdfparser.COSParser:getLength(org.apache.pdfbox.cos.COSBase),663,697,"/**
 * Retrieves the length as a COSNumber from the given base object.
 * @param lengthBaseObj the base object containing or referencing the length
 * @return COSNumber representing the length, or null if not found
 * @throws IOException if an error occurs in reading the length
 */",* Returns length value referred to or defined in given object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/NormalXReference.java,<init>,"org.apache.pdfbox.pdfparser.xref.NormalXReference:<init>(long,org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",47,62,"/**
* Constructs a NormalXReference.
* @param byteOffset offset in the PDF file
* @param key unique object identifier
* @param object associated COSBase object
*/","* Prepares a normal reference for the given {@link COSObject} in a PDF's crossreference stream
     * ({@link PDFXRefStream}).
     *
     * @param byteOffset The byte offset of the {@link COSObject} in the PDF file.
     * @param key The {@link COSObjectKey}, that is represented by this entry.
     * @param object The {@link COSObject}, that is represented by this entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,prepareIncrement,org.apache.pdfbox.pdfwriter.COSWriter:prepareIncrement(),319,338,"/**
* Prepares increment by populating object and key mappings.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:getKey(org.apache.pdfbox.cos.COSBase),93,105,"/**
 * Retrieves the COSObjectKey for a given COSBase.
 * @param object the COSBase object to find the key for
 * @return COSObjectKey associated with the object, or from pool if not directly found
 */","* Returns the {@link COSObjectKey} for a given registered {@link COSBase}. Returns null if such an object is not
     * registered.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} shall be determined for.
     * @return key The {@link COSObjectKey}, that matches the registered {@link COSBase}, or null if such an object is
     * not registered.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSObjectPool:contains(org.apache.pdfbox.cos.COSBase),137,142,"/**
 * Checks if the pool contains a given COSBase object.
 * @param object the COSBase object to check
 * @return true if the object is in the pool, false otherwise
 */","* Returns true, if the given {@link COSBase} is a registered object of this pool.
     *
     * @param object The {@link COSBase} that shall be checked.
     * @return True, if such a {@link COSBase} is registered in this pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,prepareStreamObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:prepareStreamObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",81,89,"/**
* Prepares stream objects for processing.
* @param key unique identifier of the COS object
* @param object the COSBase object to be processed
*/","* Prepares the given {@link COSObject} to be written to this object stream, using the given {@link COSObjectKey} as
     * it's ID for indirect references.
     *
     * @param key The {@link COSObjectKey}, that shall be used for indirect references to the {@link COSObject}.
     * @param object The {@link COSObject}, that shall be written to this object stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,createFromCOSObject,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:createFromCOSObject(org.apache.pdfbox.cos.COSObject,org.apache.pdfbox.pdmodel.PDResources)",244,264,"/**
 * Creates a PDColorSpace from a COSObject.
 * @param colorSpace the COSObject representing the color space
 * @param resources the PDResources containing caches
 * @return the created PDColorSpace or null if creation fails
 * @throws IOException if an I/O error occurs during creation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,toDictionary,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:toDictionary(org.apache.pdfbox.cos.COSBase),348,364,"/**
* Converts a COSBase object to a COSDictionary.
* @param o the COSBase object to convert
* @return COSDictionary or null if conversion is not possible
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObjectKey.java,<init>,"org.apache.pdfbox.cos.COSObjectKey:<init>(long,int)",42,45,"/**
 * Constructs a COSObjectKey with a given number and generation.
 * @param num object number
 * @param gen object generation
 */","* Constructor.
     *
     * @param num The object number.
     * @param gen The object generation number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/xref/AbstractXReference.java,compareTo,org.apache.pdfbox.pdfparser.xref.AbstractXReference:compareTo(org.apache.pdfbox.pdfparser.xref.XReferenceEntry),73,86,"/**
 * Compares entries based on referenced key.
 * @param xReferenceEntry entry to compare with
 * @return comparison result: -1, 0, or 1
 */","* Compares this object with the specified object for order. Returns a negative integer, zero, or a positive integer
     * as this object is less than, equal to, or greater than the specified object.
     *
     * @param xReferenceEntry the object to be compared.
     * @return a negative integer, zero, or a positive integer as this object is less than, equal to, or greater than
     * the specified object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,getRaster,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:getRaster(int,int,int,int)",170,302,"/**
* Generates a raster image based on input coordinates and transformation.
* @param x top-left x-coordinate of the raster
* @param y top-left y-coordinate of the raster
* @param w width of the raster
* @param h height of the raster
* @return Raster object representing the generated image
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXScale,org.apache.pdfbox.text.TextPosition:getXScale(),534,537,"/**
 * Retrieves the horizontal scaling factor.
 * @return X-axis scaling factor as a float
 */","* This will get the X scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The X scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYScale,org.apache.pdfbox.text.TextPosition:getYScale(),546,549,"/**
 * Returns the vertical scaling factor.
 * @return Y-axis scaling factor as a float
 */","* This will get the Y scaling factor. This is dependent on the current transformation matrix
     * (set by the ""cm"" operator), the text matrix (set by the ""Tm"" operator) and the font size (set
     * by the ""Tf"" operator).
     *
     * @return The Y scaling factor.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",248,253,"/**
* Initializes a COSWriter with an output stream and compression parameters.
* @param outputStream the destination for writing data
* @param compressParameters configuration for data compression
*/","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.
     * @param compressParameters The configuration for the document's compression.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead)",265,275,"/**
* Initializes a COSWriter for incremental updates.
* @param outputStream destination for final output
* @param inputData source input data
* @throws IOException if an I/O error occurs
*/","* COSWriter constructor for incremental updates. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data
     *
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,write,org.apache.pdfbox.cos.COSOutputStream:write(byte[]),63,67,"/**
 * Writes bytes to the output stream.
 * @param b byte array containing data to be written
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getListOfByteArraysFromCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getListOfByteArraysFromCOSArray(org.apache.pdfbox.cos.COSArray),627,638,"/**
* Converts a COSArray of COSStrings to a list of byte arrays.
* @param array COSArray containing COSString items
* @return List of byte arrays extracted from COSStrings
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(boolean),233,239,"/**
 * Updates the status of an object.
 * @param updated new status indicating whether the object is updated
 */","* Sets the {@link #updated} state of the managed {@link #updateInfo} to the given state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @param updated The state to set for {@link #updated}.
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,getString,org.apache.pdfbox.cos.COSString:getString(),210,229,"/**
 * Converts byte array to string using UTF-16BE or PDFDocEncoding.
 * @return String representation of the byte array
 */","* Returns the content of this string as a PDF <i>text string</i>.
     * 
     * @return the PDF string representation of the COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,"org.apache.pdfbox.cos.COSString:<init>(java.lang.String,boolean)",99,127,"/**
* Constructs a COSString from text.
* @param text string to be encoded
* @param forceHex if true, forces hex encoding
*/","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.
     * @param forceHex forces the hexadecimal presentation of the string if set to true
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDFont:isStandard14(),619,631,"/**
* Checks if the font is part of the Standard 14 fonts.
* @return true if it's a Standard 14 font, false otherwise
*/","* Returns true if this font is one of the ""Standard 14"" fonts and receives special handling.
     * 
     * @return true if this font is one of the ""Standard 14"" fonts",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85InputStream.java,read,"org.apache.pdfbox.filter.ASCII85InputStream:read(byte[],int,int)",179,203,"/**
* Reads bytes from input into buffer.
* @param data byte array to store read data
* @param offset starting position in the data array
* @param len number of bytes to read
* @return actual number of bytes read or -1 if end of stream
*/","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param len The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,decode,"org.apache.pdfbox.filter.ASCII85Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",31,41,"/**
* Decodes an input stream using ASCII85 and writes to output stream.
* @param encoded InputStream containing encoded data
* @param decoded OutputStream for decoded data
* @param parameters COSDictionary with decode parameters
* @param index the filter index in a filter chain
* @return DecodeResult object with decode parameters
* @throws IOException if an I/O error occurs during decoding
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85OutputStream.java,close,org.apache.pdfbox.filter.ASCII85OutputStream:close(),233,245,"/**
 * Closes the stream, flushing any buffered output and releasing resources.
 */","* This will close the stream.
     *
     * @throws IOException If there is an error closing the wrapped stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRun,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRun(org.apache.pdfbox.filter.CCITTFaxDecoderStream$Tree),374,400,"/**
 * Decodes a run-length encoded value from a Huffman tree.
 * @param tree the Huffman tree used for decoding
 * @return decoded integer value or columns if end of segment is reached
 * @throws IOException if an I/O error occurs during bit reading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:close(),1550,1558,"/**
* Closes the output stream.
* Logs a warning if in text mode without calling endText().
* @throws IOException if an I/O error occurs while closing
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDFormContentStream:close(),1550,1558,"/**
* Closes the output stream and logs a warning if text mode was used without ending it.
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPageContentStream:close(),1550,1558,"/**
* Closes the output stream.
* Logs a warning if in text mode without calling endText().
* @throws IOException if an I/O error occurs while closing
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,close,org.apache.pdfbox.pdmodel.PDPatternContentStream:close(),1550,1558,"/**
* Closes the output stream.
* Logs a warning if endText() was not called in text mode.
*/","* Close the content stream.  This must be called when you are done with this object.
     *
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeRun,"org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeRun(int,boolean)",149,165,"/**
* Writes a run of pixels to the output stream.
* @param runLength number of consecutive pixels in the run
* @param white true if the run is white, false if black
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,writeEOL,org.apache.pdfbox.filter.CCITTFaxEncoderStream:writeEOL(),255,257,"/**
 * Writes an end-of-line character.
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,readImageRaster,"org.apache.pdfbox.filter.DCTFilter:readImageRaster(javax.imageio.ImageReader,javax.imageio.ImageReadParam)",136,172,"/**
 * Reads image raster from a given ImageReader.
 * @param reader the ImageReader to use for reading the image
 * @param irp the ImageReadParam specifying read parameters
 * @return Raster object representing the image data
 * @throws IOException if an I/O error occurs during reading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,org.apache.pdfbox.filter.FlateFilterDecoderStream:read(),125,137,"/**
* Reads a byte from the input source.
* @return next byte as an integer or -1 if end of stream is reached
* @throws IOException if an I/O error occurs
*/","* This will read the next byte from the stream.
     *
     * @return The next byte read from the stream.
     *
     * @throws IOException If there is an error reading from the wrapped stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilterDecoderStream.java,read,"org.apache.pdfbox.filter.FlateFilterDecoderStream:read(byte[],int,int)",150,175,"/**
 * Reads data into a byte array.
 * @param data destination buffer
 * @param offset starting position in the buffer
 * @param length number of bytes to read
 * @return number of bytes actually read, -1 if end of stream
 * @throws IOException if an I/O error occurs
 */","* This will read a chunk of data.
     *
     * @param data The buffer to write data to.
     * @param offset The offset into the data stream.
     * @param length The number of byte to attempt to read.
     *
     * @return The number of bytes actually read.
     *
     * @throws IOException If there is an error reading data from the underlying stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,readImageStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:readImageStream(java.io.InputStream),444,448,"/**
 * Reads an image from the input stream and sets it.
 * @param stream the input stream containing image data
 * @throws IOException if an I/O error occurs while reading the image
 */","* Read the image stream of the signature and set height and width.
     *
     * @param stream stream of your visible signature image
     * @throws IOException If we can't read, flush, or close stream of image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,doLZWDecode,"org.apache.pdfbox.filter.LZWFilter:doLZWDecode(java.io.InputStream,java.io.OutputStream,boolean)",74,128,"/**
* Decodes LZW encoded data.
* @param encoded input stream containing encoded data
* @param decoded output stream for decoded data
* @param earlyChange flag to alter chunk size calculation
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,encode,"org.apache.pdfbox.filter.LZWFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,220,"/**
* Encodes input data using a custom encoding scheme.
* @param rawData input stream of raw data to encode
* @param encoded output stream for the encoded data
* @param parameters additional encoding parameters (not used)
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,decodeAndWriteRow,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:decodeAndWriteRow(),329,334,"/**
 * Decodes a predictor row and writes it to output.
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,chooseDataRowToWrite,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:chooseDataRowToWrite(),631,659,"/**
 * Selects the byte array with the highest estimated compression sum.
 * @return selected byte array for writing
 */","* We look which row encoding is the ""best"" one, ie. has the lowest sum. We don't implement
         * anything fancier to choose the right row encoding. This is just the recommend algorithm
         * in the spec. The get the perfect encoding you would need to do a brute force check how
         * all the different encoded rows compress in the zip stream together. You have would have
         * to check 5*image-height permutations...
         *
         * @return the ""best"" row encoding of the row encodings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,reset,org.apache.pdfbox.pdfparser.XrefTrailerResolver:reset(),362,370,"/**
* Resets all XrefTrailerObjs and clears current references.
*/","* Reset all data so that it can be used to rebuild the trailer.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addElements,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addElements(java.util.Iterator),193,224,"/**
 * Adds elements to the structure, handling arrays and objects.
 * @param elements iterator of COSBase elements to process
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,<init>,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:<init>(),44,53,"/**
* Registers security handlers for standard and public key filters.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,close,org.apache.pdfbox.multipdf.Overlay:close(),170,203,"/**
* Closes all open overlays and documents.
*/","* Close all input documents which were used for the overlay and opened by this class.
     *
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,closeTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:closeTemplate(org.apache.pdfbox.pdmodel.PDDocument),401,406,"/**
* Closes the given PDF document and its associated template.
* @param template PDDocument to be closed
* @throws IOException if an I/O error occurs during closing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItemIterator.java,next,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItemIterator:next(),53,69,"/**
* Returns the next outline item.
* @throws NoSuchElementException if no more items are available
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream),67,71,"/**
 * Constructs a PDF form object from a given stream.
 * @param stream the PDF stream containing the form data
 */","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(org.apache.pdfbox.contentstream.PDContentStream),58,61,"/**
* Initializes a new PDFStreamParser.
* @param pdContentstream content stream to parse
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param pdContentstream The content stream to parse.
     * @throws IOException If there is an error initializing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFStreamParser:<init>(byte[]),68,71,"/**
 * Initializes a PDFStreamParser with byte array data.
 * @param bytes PDF content as a byte array
 */","* Constructor.
     *
     * @param bytes the bytes to parse.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseObject,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseObject(long),83,112,"/**
 * Parses a COSBase object by its number.
 * @param objectNumber the object number to parse
 * @return COSBase object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Search for/parse the object with the given object number. The stream is closed after parsing the object with the
     * given number.
     * 
     * @param objectNumber the number of the object to b e parsed
     * @return the parsed object or null if the object with the given number can't be found
     * @throws IOException if there is an error while parsing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,readObjectNumbers,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:readObjectNumbers(),220,233,"/**
* Reads object numbers from a source.
* @return Map of object IDs to their counts
* @throws IOException if an I/O error occurs
*/","* Read all object numbers from the compressed object stream. The stream is closed after reading the object numbers.
     * 
     * @return a map off all object numbers and the corresponding offset within the object stream.
     * @throws IOException if there is an error while parsing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/BuiltInEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.BuiltInEncoding:<init>(java.util.Map),35,38,"/**
* Initializes encoding map from provided code to name mappings.
* @param codeToName map of integer codes to their corresponding names
*/","* Constructor.
     *
     * @param codeToName the given code to name mapping",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/Type1Encoding.java,fromFontBox,org.apache.pdfbox.pdmodel.font.encoding.Type1Encoding:fromFontBox(org.apache.fontbox.encoding.Encoding),36,43,"/**
* Converts FontBox Encoding to Type1Encoding.
* @param encoding FontBox Encoding object
* @return Type1Encoding object
*/","* Creates an encoding from the given FontBox encoding.
     *
     * @param encoding FontBox encoding
     * @return the encoding created from the given FontBox encoding",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipWhiteSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipWhiteSpaces(),409,425,"/**
* Skips leading whitespaces and optional line breaks in the input stream.
*/","* Skip the upcoming CRLF or LF which are supposed to follow a stream. Trailing spaces are removed as well.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipLinebreak,org.apache.pdfbox.pdfparser.BaseParser:skipLinebreak(),434,443,"/**
 * Checks and skips a line break in the input.
 * @return true if a line break is skipped, false otherwise
 */","* Skip one line break, such as CR, LF or CRLF.
     * 
     * @return true if a line break was found and removed.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLine,org.apache.pdfbox.pdfparser.BaseParser:readLine(),1162,1188,"/**
 * Reads a line from the input source.
 * @return the next line as a String, or throws IOException if end-of-file is reached
 * @throws IOException if an I/O error occurs or end-of-file is encountered
 */","* This will read bytes until the first end of line marker occurs.
     * NOTE: The EOL marker may consists of 1 (CR or LF) or 2 (CR and CL) bytes
     * which is an important detail if one wants to unread the line.
     *
     * @return The characters between the current position and the end of the line.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,skipSpaces,org.apache.pdfbox.pdfparser.BaseParser:skipSpaces(),1319,1343,"/**
* Skips whitespace and comments in the input source.
*/","* This will skip all spaces and comments that are present.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getNumberOfColorComponents(),115,124,"/**
 * Retrieves the number of color components.
 * @return number of color components or throws IOException if an error occurs
 */","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getNumberOfColorComponents,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getNumberOfColorComponents(),115,124,"/**
* Returns the number of color components.
* @return number of color components, or -1 if not yet determined
* @throws IOException if an I/O error occurs
*/","* The number of color components of this shading.
     *
     * @return number of color components of this shading
     * 
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForXRef,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForXRef(long),227,269,"/**
 * Searches for the nearest XRef offset.
 * @param xrefOffset target offset to search for
 * @return nearest offset found, or -1 if none is found
 */","* Search for the offset of the given xref table/stream among those found by a brute force search.
     * 
     * @param xrefOffset the given offset to be searched for
     * 
     * @return the offset of the xref entry
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parsePDFHeader,org.apache.pdfbox.pdfparser.COSParser:parsePDFHeader(),1058,1061,"/**
 * Parses PDF header to verify version.
 * @return true if header is valid, false otherwise
 * @throws IOException on I/O errors during parsing
 */","* Parse the header of a pdf.
     * 
     * @return true if a PDF header was found
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFDFHeader,org.apache.pdfbox.pdfparser.COSParser:parseFDFHeader(),1069,1072,"/**
* Parses FDF header.
* @return true if parsing successful, false otherwise
* @throws IOException on I/O errors
*/","* Parse the header of a fdf.
     * 
     * @return true if a FDF header was found
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,parseAllObjects,org.apache.pdfbox.pdfparser.PDFObjectStreamParser:parseAllObjects(),120,172,"/**
* Parses all objects in a PDF document.
* @return Map of COSObjectKey to COSBase representing parsed objects
* @throws IOException if an I/O error occurs during parsing
*/","* Parse all compressed objects. The stream is closed after parsing.
     * 
     * @return a map containing all parsed objects using the object number as key
     * @throws IOException if there is an error while parsing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,writeStreamData,"org.apache.pdfbox.pdfparser.PDFXRefStream:writeStreamData(java.io.OutputStream,int[])",236,250,"/**
 * Writes sorted stream data to an output stream.
 * @param os the output stream to write to
 * @param w column widths for formatting
 * @throws IOException if I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeXrefRange,"org.apache.pdfbox.pdfwriter.COSWriter:writeXrefRange(long,long)",987,993,"/**
* Writes a range of numbers to the standard output.
* @param x start of the range
* @param y end of the range
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,next,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:next(),91,100,"/**
* Returns the next field in the iteration.
* Throws NoSuchElementException if no more fields are available.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,calcFinalKey,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:calcFinalKey(long,long)",247,273,"/**
* Calculates the final encryption key.
* @param objectNumber PDF object number
* @param genNumber generation number
* @return derived encryption key
*/","* Calculate the key to be used for RC4 and AES-128.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @return the calculated key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev234(byte[],byte[],int,byte[],boolean,int,int)",737,778,"/**
* Computes encrypted key using MD5 hash.
* @param password user password bytes
* @param o additional security parameter bytes
* @param permissions document access permissions
* @param id unique identifier bytes
* @param encryptMetadata flag to encrypt metadata
* @param length desired output key length
* @param encRevision encryption revision number
* @return encrypted key bytes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRC4key,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRC4key(byte[],int,int)",948,966,"/**
* Computes RC4 key from owner password.
* @param ownerPassword user-defined owner password
* @param encRevision PDF encryption revision
* @param length desired key length in bytes
* @return computed RC4 key as byte array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeSHA256,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeSHA256(byte[],byte[],byte[])",1199,1205,"/**
* Computes SHA-256 hash of input combined with password and adjusted user key.
* @param input data to hash
* @param password user's password
* @param userKey unique user key
* @return SHA-256 hash as byte array
* @throws IOException if hashing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",71,74,"/**
 * Initializes a new content stream for PDF appearance.
 * @param appearance PDF appearance stream to use
 * @param outputStream output stream to write to
 */","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to add to.
     * @param outputStream
     *            The appearances output stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",221,224,"/**
* Initializes a content stream for an appearance.
* @param doc PDF document containing the appearance
* @param appearance appearance stream to write to
* @param outputStream output stream for the content
*/","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the appearance is part of.
     * @param appearance The appearance stream to add to.
     * @param outputStream The appearances output stream to write to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,transformedPoint,"org.apache.pdfbox.contentstream.PDFStreamEngine:transformedPoint(float,float)",1123,1129,"/**
* Transforms a point using the current transformation matrix.
* @param x original x-coordinate
* @param y original y-coordinate
* @return transformed Point2D.Float object
*/","* Transforms a point using the CTM.
     * 
     * @param x the x-coordinate of the point to be transformed
     * @param y the y-coordinate of the point to be transformed
     * 
     * @return the transformed point",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,createContext,"org.apache.pdfbox.rendering.TilingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",109,122,"/**
 * Creates a PaintContext for the pattern.
 * @param cm ColorModel to be used
 * @param deviceBounds bounding box of the device space
 * @param userBounds bounding box of the user space
 * @param xform transformation from user space to device space
 * @param hints rendering hints
 * @return PaintContext object for the pattern
 */","* Not called in TexturePaint subclasses, which is why we wrap TexturePaint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix),227,230,"/**
 * Concatenates two matrices by multiplying their single arrays.
 * @param matrix second matrix to concatenate with
 */","* Concatenates (premultiplies) the given matrix to this matrix.
     *
     * @param matrix The matrix to concatenate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,"org.apache.pdfbox.util.Matrix:translate(float,float)",248,254,"/**
* Translates matrix by given offsets.
* @param tx horizontal translation offset
* @param ty vertical translation offset
*/","* Translates this matrix by the given amount.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,scale,"org.apache.pdfbox.util.Matrix:scale(float,float)",262,271,"/**
* Scales the matrix by given factors.
* @param sx scale factor for x-axis
* @param sy scale factor for y-axis
*/","* Scales this matrix by the given factors.
     *
     * @param sx x-scale
     * @param sy y-scale",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,multiply,org.apache.pdfbox.util.Matrix:multiply(org.apache.pdfbox.util.Matrix),290,293,"/**
 * Multiplies this matrix with another matrix.
 * @param other the matrix to multiply with
 * @return a new Matrix object representing the result of the multiplication
 */","* This method multiplies this Matrix with the specified other Matrix, storing the product in a 
     * new instance. It is allowed to have (other == this).
     *
     * @param other the second operand Matrix in the multiplication; required
     * @return the product of the two matrices.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,encodeForGsub,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:encodeForGsub(org.apache.fontbox.ttf.gsub.GsubWorker,java.util.Set,org.apache.pdfbox.pdmodel.font.PDType0Font,java.lang.String)",1683,1700,"/**
* Encodes text for GSUB rules.
* @param gsubWorker worker for applying GSUB rules
* @param glyphIds set to collect used glyph IDs
* @param font PDType0Font to encode text
* @param text input string to be encoded
* @return byte array of encoded text
*/","* Retrieve the encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules. The glyph IDs used are also added to the specified glyph ID set.
     *
     * @param gsubWorker The GSUB worker which defines the GSUB transformations to apply.
     * @param glyphIds The set of glyph IDs which is to be populated with the glyph IDs found in the
     * text.
     * @param font The font whose cmap table will be used to map characters to glyph IDs.
     * @param text The text which is being converted from characters to glyph IDs.
     * @return The encoded glyph IDs for the characters in the specified text, after applying any
     * relevant GSUB rules.
     * @throws IOException If there is an error during encoding.
     * @throws IllegalStateException If we cannot find a glyph ID for any characters in the
     * specified text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,createDocument,org.apache.pdfbox.pdfparser.PDFParser:createDocument(),194,197,"/**
* Creates a new PDF document.
* @return PDDocument object
* @throws IOException if an I/O error occurs
*/","* Create the resulting document. Maybe overwritten if the parser uses another class as document.
     * 
     * @return the resulting document
     * @throws IOException if the method is called before parsing the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,"org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument,org.apache.pdfbox.io.RandomAccessRead)",213,216,"/**
 * Constructs a PDDocument from a COSDocument and source.
 * @param doc The COSDocument to use
 * @param source The RandomAccessRead source of the document
 */","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.
     * @param source input representing the pdf",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Eq:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,44,"/**
* Compares top two stack elements for equality and pushes result.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/RelationalOperators.java,isEqual,"org.apache.pdfbox.pdmodel.common.function.type4.RelationalOperators$Ne:isEqual(java.lang.Object,java.lang.Object)",135,140,"/**
* Checks if two objects are not equal.
* @param op1 first object to compare
* @param op2 second object to compare
* @return true if objects are not equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForPolicy,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForPolicy(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),84,95,"/**
* Creates a SecurityHandler for a given ProtectionPolicy.
* @param policy the ProtectionPolicy to handle
* @return SecurityHandler instance or null if no handler is found
*/","* Returns a new security handler for the given protection policy, or null none is available.
     * @param policy the protection policy for which to create a security handler
     * @return a new SecurityHandler instance, or null if none is available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandlerFactory.java,newSecurityHandlerForFilter,org.apache.pdfbox.pdmodel.encryption.SecurityHandlerFactory:newSecurityHandlerForFilter(java.lang.String),102,113,"/**
 * Creates a new security handler for a given filter name.
 * @param name the name of the filter
 * @return SecurityHandler instance or null if not found
 */","* Returns a new security handler for the given Filter name, or null none is available.
     * @param name the Filter name from the PDF encryption dictionary
     * @return a new SecurityHandler instance, or null if none is available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getNumber,"org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:getNumber(int,java.lang.String)",343,365,"/**
* Generates a page label based on style and index.
* @param pageIndex zero-based page index
* @param style label style (e.g., decimal, letters, roman)
* @return formatted page label string
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getDashArray,org.apache.pdfbox.rendering.PageDrawer:getDashArray(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),758,791,"/**
 * Retrieves and validates the dash array from a line dash pattern.
 * @param dashPattern the line dash pattern object
 * @return validated dash array or null if invalid
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:<init>(),54,56,"/**
 * Constructs a new PDDeviceCMYK instance.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceGray:<init>(),38,40,"/**
* Constructs a new instance of PDDeviceGray.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceRGB:<init>(),39,41,"/**
 * Constructs a new instance of PDDeviceRGB.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),88,100,"/**
* Sets the stroking color using a PDF color.
* @param color PDColor object to be used for stroking
* @return true if color is successfully set, false otherwise
* @throws IOException if an I/O error occurs
*/","* Set the stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setStrokingColor(PDColor)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setNonStrokingColorOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColorOnDemand(org.apache.pdfbox.pdmodel.graphics.color.PDColor),148,160,"/**
* Sets non-stroking color using the given PDColor.
* @param color PDColor object to be used for coloring
* @return true if color is successfully set, false otherwise
*/","* Set the non stroking color.
     * 
     * <p>
     * The command is only emitted if the color is not null and the number of components is &gt; 0.
     * 
     * @param color The colorspace to write.
     * @return true if the non stroking color was set successfully
     * 
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setNonStrokingColor(PDColor)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getPatchCoordinatesColor,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getPatchCoordinatesColor(org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve,org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve)",167,216,"/**
* Generates coordinate-color pairs for a Bezier patch.
* @param c1,c2,d1,d2 cubic Bezier curves defining the patch boundaries
* @return 2D array of CoordinateColorPair objects representing patch coordinates and colors
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getPatchCoordinatesColor,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getPatchCoordinatesColor(),212,255,"/**
* Generates patch coordinates and colors.
* @return 2D array of CoordinateColorPair objects representing patch surface points and their colors
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getSaturationRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getSaturationRGB(float[],float[],float[])",286,350,"/**
* Adjusts RGB values based on saturation and destination colors.
* @param srcValues source RGB values (0-1)
* @param dstValues destination RGB values (0-1)
* @param result adjusted RGB values (0-1)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getLuminosityRGB,"org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getLuminosityRGB(float[],float[],float[])",352,388,"/**
 * Adjusts RGB values for luminosity.
 * @param srcValues source RGB color values (0-1)
 * @param dstValues destination RGB color values (0-1)
 * @param result adjusted RGB color values (0-1)
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Abs:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,48,"/**
* Executes absolute value operation on top of stack.
* @param context execution context containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Add:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),55,77,"/**
* Adds two numbers from the execution context stack.
* Handles integer overflow by pushing a float result.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ceiling:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),103,115,"/**
* Executes operation by rounding up a number.
* @param context execution context containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvi:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),135,140,"/**
* Pops a number from execution context and pushes its integer value onto the stack.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cvr:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),147,152,"/**
* Converts and pushes the top number from the stack to float.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Div:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),159,165,"/**
* Divides two numbers from the execution context stack.
* @param context execution environment containing numbers to divide
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Exp:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),172,179,"/**
* Computes base raised to the power of exponent.
* @param context execution environment containing numbers
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Floor:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),186,198,"/**
* Executes operation: pushes floored number onto stack.
* @param context execution context containing the stack and numbers
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Ln:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),218,223,"/**
* Computes natural logarithm of top number in stack.
* Pops a number from the execution context, computes its log, and pushes result back.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Log:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),230,235,"/**
* Computes base-10 logarithm of a number from execution context.
* @param context contains the number to compute log for
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mul:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),255,277,"/**
* Multiplies two numbers from the execution context stack.
* Handles both integer and floating-point multiplication.
* Pushes the result back onto the stack.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Neg:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),284,304,"/**
* Negates the top number in the execution context stack.
* Handles both Integer and Float types, preserving precision.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Round:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),311,323,"/**
* Converts popped number to integer or rounded float and pushes back.
* @param context execution environment with stack operations
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sub:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),359,382,"/**
* Subtracts top two numbers from execution context stack.
* Handles integer and floating-point operations.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Truncate:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),389,401,"/**
* Converts and pushes a number from the execution context stack.
* @param context execution environment containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$IDiv:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),205,211,"/**
* Divides two integers from the stack and pushes result.
* @param context execution context with integer values on stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Mod:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),242,248,"/**
 * Executes modulo operation on top two integers in context stack.
 * Pops two integers, pushes result of int1 % int2 back onto stack.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Atan:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),84,96,"/**
* Computes the arctangent of two values and pushes result in degrees.
* @param context execution context containing operands
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Cos:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),122,128,"/**
* Computes cosine of an angle.
* @param context execution context containing the angle on top of stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sin:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),330,336,"/**
* Computes sine of an angle in degrees and pushes result to stack.
* @param context execution context containing the angle
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ArithmeticOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ArithmeticOperators$Sqrt:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),343,352,"/**
* Computes the square root of a non-negative number.
* @param context execution context containing the stack with input number
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.String),75,105,"/**
* Processes a token to update the instruction sequence.
* @param token string representation of the token
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextChar,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextChar(),148,159,"/**
* Advances to and returns the next character in the input.
* @return the next character or EOT if no more characters are available
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,nextState,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:nextState(),173,195,"/**
* Determines the next state based on current character.
* @return updated State object
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/MacOSRomanEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.MacOSRomanEncoding:<init>(),60,68,"/**
* Initializes MacOS Roman encoding with custom entries.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,xobject,org.apache.pdfbox.text.PDFMarkedContentExtractor:xobject(org.apache.pdfbox.pdmodel.graphics.PDXObject),141,147,"/**
 * Adds an XObject to the current marked content.
 * @param xobject the PDXObject to be added
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,getOwnerAccessPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:getOwnerAccessPermission(),153,165,"/**
 * Creates an AccessPermission object with full owner permissions.
 * @return AccessPermission object with all permissions enabled
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,isOwnerPermission,org.apache.pdfbox.pdmodel.encryption.AccessPermission:isOwnerPermission(),134,145,"/**
* Checks if user has full owner permissions.
* @return true if all owner permissions are granted, false otherwise
*/","* This will tell if the access permission corresponds to owner
     * access permission (no restriction).
     *
     * @return true if the access permission does not restrict the use of the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java,hasAnyRevision3PermissionSet,org.apache.pdfbox.pdmodel.encryption.AccessPermission:hasAnyRevision3PermissionSet(),448,463,"/**
* Checks if any revision 3 permissions are granted.
* @return true if any of the revision 3 permissions are set, false otherwise
*/","* Indicates if any revision 3 access permission is set or not.
     * 
     * @return true if any revision 3 access permission is set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,prepareAESInitializationVector,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)",403,428,"/**
* Prepares AES initialization vector.
* @param decrypt true if decrypting, false if encrypting
* @param iv byte array for IV
* @param data input stream (read from if decrypting)
* @param output output stream (written to if encrypting)
* @return true if successful, false if decryption fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],java.io.OutputStream)",123,129,"/**
* Writes byte array to an OutputStream.
* @param data byte array to write
* @param output OutputStream to write to
* @throws IOException if I/O error occurs
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(byte[],int,int,java.io.OutputStream)",159,165,"/**
 * Writes a portion of a byte array to an output stream.
 * @param data the byte array containing the data
 * @param offset the starting index in the data array
 * @param len the number of bytes to write
 * @param output the OutputStream to write to
 * @throws IOException if an I/O error occurs
 */","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param offset The offset into the array to start reading data from.
     * @param len The number of bytes to attempt to read.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,insertDiacritic,"org.apache.pdfbox.text.TextPosition:insertDiacritic(int,org.apache.pdfbox.text.TextPosition)",754,785,"/**
* Inserts a diacritic at a specified position in the text.
* @param i index where diacritic should be inserted
* @param diacritic TextPosition object representing the diacritic
*/","* Inserts the diacritic TextPosition to the str of this TextPosition and updates the widths
     * array to include the extra character width.
     *
     * @param i current character
     * @param diacritic The diacritic TextPosition",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrep,"org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrep(java.lang.String,boolean)",71,138,"/**
 * Prepares a string for SASL by applying SASLPrep rules.
 * @param str input string to process
 * @param allowUnassigned if true, unassigned characters are allowed
 * @return SASL-prepared string or throws exception on invalid input
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientInfo,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientInfo(java.security.cert.X509Certificate,byte[])",523,556,"/**
 * Computes recipient info for encryption.
 * @param x509certificate X.509 certificate of the recipient
 * @param abyte0 data to encrypt
 * @return KeyTransRecipientInfo object
 * @throws IOException, CertificateEncodingException, InvalidKeyException, BadPaddingException, IllegalBlockSizeException if an error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2B,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2B(byte[],byte[],byte[])",1125,1197,"/**
* Computes a hash using AES encryption and SHA-256.
* @param input initial data for hashing
* @param password used in encryption
* @param userKey optional additional key
* @return 32-byte hash result
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeString,"org.apache.pdfbox.text.PDFTextStripper:writeString(java.lang.String,java.util.List)",834,837,"/**
 * Writes string with associated positions.
 * @param text The string to write
 * @param textPositions List of TextPosition objects
 * @throws IOException if an I/O error occurs
 */","* Write a Java string to the output stream. The default implementation will ignore the <code>textPositions</code>
     * and just calls {@link #writeString(String)}.
     *
     * @param text The text to write to the stream.
     * @param textPositions The TextPositions belonging to the text.
     * @throws IOException If there is an error when writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getTrueTypeFont(java.lang.String,java.io.File)",201,214,"/**
* Loads TrueTypeFont from a file.
* @param postScriptName name of the font
* @param file file containing the font data
* @return TrueTypeFont object or null if loading fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getDiskCacheFile,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:getDiskCacheFile(),388,400,"/**
* Retrieves the disk cache file for PDFBox.
* Checks system properties and defaults to temp directory if necessary.
* @return File object representing the cache file location
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,createFontInfoByName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:createFontInfoByName(java.util.List),172,183,"/**
 * Creates a map of FontInfo by postscript names.
 * @param fontInfoList list of FontInfo objects
 * @return map with lowercase postscript names as keys
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Line.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Line:<init>(java.awt.Point,java.awt.Point,float[],float[])",45,52,"/**
* Initializes a Line with two points and their corresponding colors.
* @param p0 first endpoint of the line
* @param p1 second endpoint of the line
* @param c0 color array for the first point
* @param c1 color array for the second point
*/","* Constructor of class Line.
     *
     * @param p0 one end of a line
     * @param p1 the other end of the line
     * @param c0 color of point p0
     * @param c1 color of point p1",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,toString,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:toString(),195,199,"/**
* Returns string representation of the object.
* Includes superclass string, file name, hash, and last modified date.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,<init>,org.apache.pdfbox.pdmodel.font.FontMapperImpl:<init>(),59,134,"/**
 * Initializes font mappings and loads fallback fonts.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getStandard14Width,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getStandard14Width(int),339,368,"/**
 * Retrieves the standard 14 width for a given character code.
 * @param code character code to look up
 * @return width of the character in PDF units
 * @throws IllegalStateException if no AFM data is available
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPathFromOutlines(int),571,579,"/**
* Retrieves GeneralPath from font outlines.
* @param code character encoding code
* @return GeneralPath object or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1CFont:codeToName(int),278,281,"/**
 * Converts an encoding code to its corresponding name.
 * @param code the encoding code
 * @return the name of the encoding or null if invalid
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(int),656,660,"/**
* Checks if a glyph exists for a given character code.
* @param code character encoding code
* @return true if glyph exists, false otherwise
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:codeToGID(int),377,392,"/**
* Converts code to Glyph ID.
* @param code character code
* @return Glyph ID corresponding to the code
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getHeight,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getHeight(int),443,459,"/**
 * Retrieves the height of a glyph by its code.
 * @param code unique identifier for the glyph
 * @return height of the glyph as a float
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/SoftMask.java,<init>,"org.apache.pdfbox.rendering.SoftMask:<init>(java.awt.Paint,java.awt.image.BufferedImage,java.awt.geom.Rectangle2D,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.common.function.PDFunction)",72,99,"/**
* Initializes a SoftMask with specified parameters.
* @param paint the paint object for rendering
* @param mask the BufferedImage representing the mask
* @param bboxDevice the device space bounding box
* @param backdropColor the background color, may be null
* @param transferFunction the transfer function, identity functions are ignored
*/","* Creates a new soft mask paint.
     *
     * @param paint underlying paint.
     * @param mask soft mask
     * @param bboxDevice bbox of the soft mask in the underlying Graphics2D device space
     * @param backdropColor the color to be used outside the transparency group’s bounding box; if
     * null, black will be used.
     * @param transferFunction the transfer function, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,equals,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:equals(java.lang.Object),95,145,"/**
* Checks equality of TilingPaintParameter objects.
* @param obj the object to compare with
* @return true if objects are equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,removeBackdrop,"org.apache.pdfbox.rendering.GroupGraphics:removeBackdrop(java.awt.image.BufferedImage,int,int)",600,717,"/**
 * Removes a backdrop from an image by adjusting pixel colors.
 * @param backdrop the image to be removed
 * @param offsetX horizontal offset for backdrop positioning
 * @param offsetY vertical offset for backdrop positioning
 */","* Computes backdrop removal.
     * The backdrop removal equation is given in section 11.4.4 in the PDF 32000-1:2008
     * standard. It returns the final color <code>C</code> for each pixel in the group:<br>
     *     <code>C = Cn + (Cn - C0) * (alpha0 / alphagn - alpha0)</code><br>
     * where<br>
     *     <code>Cn</code> is the group color including backdrop (read from <code>groupImage</code>),<br>
     *     <code>C0</code> is the backdrop color,<br>
     *     <code>alpha0</code> is the backdrop alpha,<br>
     *     <code>alphagn</code> is the group alpha excluding backdrop (read the
     *           alpha channel from <code>groupAlphaImage</code>)<br>
     * <p>
     * The alpha of the result is equal to <code>alphagn</code>, i.e., the alpha
     * channel of <code>groupAlphaImage</code>.
     * <p>
     * The <code>backdrop</code> image may be much larger than <code>groupImage</code> if,
     * for example, the current page is used as the backdrop. Only a specific rectangular
     * region of <code>backdrop</code> is used in the backdrop removal: upper-left corner
     * is at <code>(offsetX, offsetY)</code>; width and height are equal to those of
     * <code>groupImage</code>.
     *
     * @param backdrop group backdrop
     * @param offsetX backdrop left X coordinate
     * @param offsetY backdrop upper Y coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,hasFontOrSizeChanged,"org.apache.pdfbox.text.PDFTextStripper:hasFontOrSizeChanged(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",730,760,"/**
* Checks if font or size has changed between two TextPositions.
* @param current the current TextPosition
* @param last the previous TextPosition
* @return true if font or size has changed, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(java.lang.String),158,179,"/**
 * Retrieves the path for a given glyph name.
 * @param name glyph name to retrieve path for
 * @return GeneralPath object representing the glyph, or empty path if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getAFM,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getAFM(java.lang.String),178,205,"/**
* Retrieves FontMetrics for a given font name.
* @param fontName name of the font
* @return FontMetrics object or null if not found
*/","* Returns the metrics for font specified by fontName. Loads the font metrics if not already
     * loaded.
     *
     * @param fontName name of font; either a base name or alias
     * @return the font metrics or null if the name is not one of the known names
     * @throws IllegalArgumentException if no metrics exist for that font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,allowCIDToUnicodeRange,"org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:allowCIDToUnicodeRange(java.util.Map$Entry,java.util.Map$Entry)",186,195,"/**
* Checks if CID to Unicode range is allowed.
* @param prev previous entry in the map
* @param next next entry in the map
* @return true if both code and destination ranges are allowed, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,subset,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:subset(),300,352,"/**
* Subsets a TrueType font, ensuring required tables are included.
* Throws IOException if subsetting is not permitted or disabled.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(java.io.InputStream,int)",100,105,"/**
* Initializes glyph list from input stream.
* @param input stream containing glyph data
* @param numberOfEntries number of entries to expect
* @throws IOException if reading fails
*/","* Creates a new GlyphList from a glyph list file.
     *
     * @param numberOfEntries number of expected values used to preallocate the correct amount of memory
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:<init>(org.apache.pdfbox.pdmodel.font.encoding.GlyphList,java.io.InputStream)",114,119,"/**
* Creates a GlyphList by copying another and loading from an InputStream.
* @param glyphList existing GlyphList to copy mappings from
* @param input stream containing glyph data
* @throws IOException if there is an error reading the input stream
*/","* Creates a new GlyphList from multiple glyph list files.
     *
     * @param glyphList an existing glyph list to be copied
     * @param input glyph list in Adobe format
     * @throws IOException if the glyph list could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:codeToGID(int),607,710,"/**
 * Converts character code to glyph ID.
 * @param code character encoding code
 * @return glyph ID or 0 if not found
 * @throws IOException if I/O error occurs
 */","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID (glyph index)
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNameInFont(java.lang.String),469,489,"/**
 * Retrieves the name of a character in the font.
 * @param name character name to check
 * @return font-specific name or "".notdef"" if not found
 * @throws IOException if an I/O error occurs
 */","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNameInFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getNameInFont(java.lang.String),571,614,"/**
* Retrieves font name for a given glyph.
* @param name glyph name to find in font
* @return font name or "".notdef"" if not found
* @throws IOException if an I/O error occurs
*/","* Maps a PostScript glyph name to the name in the underlying font, for example when
     * using a TTF font we might map ""W"" to ""uni0057"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,init,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:init(),63,95,"/**
* Initializes CMYK color space and profile.
* Throws IOException if default profile cannot be loaded.
*/","* Lazy load the ICC profile, because it's slow.
     * 
     * @throws IOException if the ICC profile could not be initialized",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toRGB(float[]),280,297,"/**
* Converts color values to RGB.
* @param value input color values
* @return RGB color values
* @throws IOException if conversion fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getDefaultDecode(int),357,375,"/**
* Returns default decode array for color space.
* @param bitsPerComponent number of bits per component
* @return float array with min and max values for each component
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:toString(),547,551,"/**
* Returns string representation of the object.
* Includes name and number of components.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDJPXColorSpace.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDJPXColorSpace:getDefaultDecode(int),57,68,"/**
* Generates default decode array for color components.
* @param bitsPerComponent bits per color component
* @return float array with min and max values for each component
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,encodeImageToJPEGStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:encodeImageToJPEGStream(java.awt.image.BufferedImage,float,int)",351,384,"/**
* Encodes a BufferedImage to a JPEG byte array.
* @param image the BufferedImage to encode
* @param quality JPEG compression quality (0.0f to 1.0f)
* @param dpi DPI setting for the JPEG metadata
* @return byte array containing encoded JPEG data
* @throws IOException if an I/O error occurs during encoding
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,applyMask,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:applyMask(java.awt.image.BufferedImage,java.awt.image.BufferedImage,boolean,boolean,float[])",613,723,"/**
* Applies mask to image.
* @param image source image to be masked
* @param mask alpha mask to apply
* @param interpolateMask true if interpolation is used for scaling mask
* @param isSoft true if soft mask effect is applied
* @param matte color correction array, null if none
* @return modified image with mask applied
*/","* @param image The image to apply the mask to as alpha channel.
     * @param mask A mask image in 8 bit Gray. Even for a stencil mask image due to
     * {@link #getOpaqueImage()} and {@link SampledImageReader}'s {@code from1Bit()} special
     * handling of DeviceGray.
     * @param interpolateMask interpolation flag of the mask image.
     * @param isSoft {@code true} if a soft mask. If not stencil mask, then alpha will be inverted
     * by this method.
     * @param matte an optional RGB matte if a soft mask.
     * @return an ARGB image (can be the altered original image)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkChunkSane,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkChunkSane(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk),654,681,"/**
* Validates a chunk's integrity.
* @param chunk the chunk to validate
* @return true if valid, false otherwise
*/","* Check if the chunk is sane, i.e. CRC matches and offsets and lengths in the
     * byte array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CubicBezierCurve.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CubicBezierCurve:<init>(java.awt.geom.Point2D[],int)",40,45,"/**
* Initializes a cubic Bezier curve.
* @param ctrlPnts array of control points
* @param l recursion level for curve generation
*/","* Constructor of CubicBezierCurve
     *
     * @param ctrlPnts 4 control points [p0, p1, p2, p3]
     * @param l dividing level, if l = 0, one cubic Bezier curve is divided
     * into 2^0 = 1 segments, if l = n, one cubic Bezier curve is divided into
     * 2^n segments",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates bounding rectangle for transformed shaded triangles.
* @param xform affine transformation matrix
* @param matrix additional transformation matrix
* @return bounding Rectangle2D or empty if no triangles
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",240,261,"/**
* Calculates the bounding rectangle for shaded triangles.
* @param xform affine transformation applied to triangles
* @param matrix additional transformation matrix
* @return bounding Rectangle2D or empty rectangle if no triangles
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,contains,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:contains(java.awt.geom.Point2D),156,197,"/**
* Checks if a point is inside a polygon.
* @param p the Point2D to check
* @return true if the point is inside or on the boundary of the polygon, false otherwise
*/","* Whether a point is contained in this ShadedTriangle.
     *
     * @param p the target point
     * @return false if p is outside of this triangle, otherwise true",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,calcColor,org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:calcColor(java.awt.geom.Point2D),232,265,"/**
* Calculates interpolated color based on point and degree.
* @param p input point for color calculation
* @return float array representing the calculated color
*/","* Calculate the color of a point.
     *
     * @param p the target point
     * @return an array denotes the point's color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.GeneralPath),587,590,"/**
* Intersects current clipping path with another path.
* @param path the path to intersect with
*/","* Modify the current clipping path by intersecting it with the given path.
     * @param path path to intersect with the clipping path",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,intersectClippingPath,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:intersectClippingPath(java.awt.geom.Area),612,615,"/**
* Intersects current clipping path with another area.
* @param area the Area to intersect with
*/","* Modify the current clipping path by intersecting it with the given path.
     *
     * @param area area to intersect with the clipping path",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,transferClip,org.apache.pdfbox.rendering.PageDrawer:transferClip(java.awt.Graphics2D),434,447,"/**
 * Transfers the current clipping path to the provided Graphics2D object.
 * @param graphics the target Graphics2D object for setting the clip
 */","* Transfer clip to the destination device. Override this if you want to avoid to do slow
     * intersecting operations but want the destination device to do this (e.g. SVG). You can get
     * the individual clippings via {@link PDGraphicsState#getCurrentClippingPaths()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5258"">PDFBOX-5258</a> for sample code.
     *
     * @param graphics graphics device",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,textAlign,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter$Builder:textAlign(int),95,99,"/**
* Sets text alignment.
* @param alignment integer representing text alignment
* @return Builder instance for chaining
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:<init>(byte[],int[])",44,47,"/**
 * Constructs a COSFilterInputStream from a byte array and a byte range.
 * @param in input byte array
 * @param byteRange array specifying the start and end of the range to filter
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(),49,59,"/**
* Reads the next byte from the input stream.
* @return the next byte as an integer, or -1 if end of file is reached
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[],int,int)",67,77,"/**
 * Reads bytes from the current range.
 * @param b byte array to store read data
 * @param off offset in the byte array
 * @param len number of bytes to read
 * @return number of bytes read or -1 if end of file is reached
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GroupGraphics.java,create,org.apache.pdfbox.rendering.GroupGraphics:create(),111,123,"/**
* Creates and returns a new GroupGraphics instance.
* @return GroupGraphics object or throws exception if unsupported
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawTilingPattern,"org.apache.pdfbox.rendering.PageDrawer:drawTilingPattern(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.util.Matrix)",306,334,"/**
 * Draws a tiling pattern using the specified parameters.
 * @param g Graphics2D context to draw on
 * @param pattern PDTilingPattern to render
 * @param colorSpace PDColorSpace for coloring
 * @param color PDColor to apply
 * @param patternMatrix transformation matrix for the pattern
 * @throws IOException if an I/O error occurs
 */","* Draws the pattern stream to the requested context.
     *
     * @param g The graphics context to draw onto.
     * @param pattern The tiling pattern to be used.
     * @param colorSpace color space for this tiling.
     * @param color color for this tiling.
     * @param patternMatrix the pattern matrix
     * @throws IOException If there is an IO error while drawing the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createDefaultRenderingHints,org.apache.pdfbox.rendering.PDFRenderer:createDefaultRenderingHints(java.awt.Graphics2D),504,516,"/**
* Creates default rendering hints for a Graphics2D object.
* @param graphics the Graphics2D object to configure
* @return configured RenderingHints object
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getXDirAdj,org.apache.pdfbox.text.TextPosition:getXDirAdj(),344,347,"/**
 * Returns adjusted X direction based on current rotation.
 * @return Adjusted X direction value as a float
 */","* This will get the text direction adjusted x position of the character.
     * This is adjusted based on text direction so that the first character
     * in that direction is in the upper left at 0,0.
     * This method ignores the page rotation but takes the text rotation (see
     * {@link #getDir() getDir()}) and adjusts the coordinates to awt. This is useful when doing
     * text extraction, to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The x coordinate of the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,<init>,"org.apache.pdfbox.text.TextPosition:<init>(int,float,float,org.apache.pdfbox.util.Matrix,float,float,float,float,float,java.lang.String,int[],org.apache.pdfbox.pdmodel.font.PDFont,float,int)",85,118,"/**
* Initializes a TextPosition object with text metrics and font details.
* @param pageRotation rotation of the page in degrees
* @param pageWidth width of the page
* @param pageHeight height of the page
* @param textMatrix transformation matrix for text
* @param endX x-coordinate of the end position
* @param endY y-coordinate of the end position
* @param maxHeight maximum height of the text
* @param individualWidth width of a single character
* @param spaceWidth width of a space character
* @param unicode Unicode string of the text
* @param charCodes array of character codes
* @param font PDFont object representing the font
* @param fontSize size of the font in user space units
* @param fontSizeInPt size of the font in points
*/","* Constructor.
     *
     * @param pageRotation rotation of the page that the text is located in
     * @param pageWidth width of the page that the text is located in
     * @param pageHeight height of the page that the text is located in
     * @param textMatrix text rendering matrix for start of text (in display units)
     * @param endX x coordinate of the end position
     * @param endY y coordinate of the end position
     * @param maxHeight Maximum height of text (in display units)
     * @param individualWidth The width of the given character/string. (in text units)
     * @param spaceWidth The width of the space character. (in display units)
     * @param unicode The string of Unicode characters to be displayed.
     * @param charCodes An array of the internal PDF character codes for the glyphs in this text.
     * @param font The current font for this text position.
     * @param fontSize The new font size.
     * @param fontSizeInPt The font size in pt units (see {@link #getFontSizeInPt()} for details).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getYDirAdj,org.apache.pdfbox.text.TextPosition:getYDirAdj(),406,418,"/**
* Adjusts Y direction based on rotation.
* @return adjusted Y coordinate
*/","* This will get the y position of the text, adjusted so that 0,0 is upper left and it is
     * adjusted based on the text direction.
     * This method ignores the page rotation but takes the
     * text rotation and adjusts the coordinates to awt. This is useful when doing text extraction,
     * to compare the glyph positions when imagining these to be horizontal. See also
     * <a href=""https://stackoverflow.com/questions/57067372/"">this answer by Michael Klink</a> for
     * further details and
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4597"">PDFBOX-4597</a> for a sample
     * file.
     *
     * @return The adjusted y coordinate of the character.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidth,org.apache.pdfbox.text.TextPosition:getWidth(),443,446,"/**
 * Retrieves width adjusted by rotation.
 * @param rotation current rotation angle
 * @return adjusted width based on rotation
 */","* This will get the width of the string when page rotation adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,getWidthDirAdj,org.apache.pdfbox.text.TextPosition:getWidthDirAdj(),453,456,"/**
 * Returns adjusted width based on direction.
 * @return Adjusted width as float
 */","* This will get the width of the string when text direction adjusted coordinates are used.
     *
     * @return The width of the text in display units.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,startArticle,org.apache.pdfbox.text.PDFTextStripper:startArticle(),430,433,"/**
 * Starts article processing.
 * @throws IOException if an I/O error occurs
 */","* Start a new article, which is typically defined as a column on a single page (also referred to as a bead). This
     * assumes that the primary direction of text is left to right. Default implementation is to do nothing. Subclasses
     * may provide additional information.
     *
     * @throws IOException If there is any error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphStart,org.apache.pdfbox.text.PDFTextStripper:writeParagraphStart(),1712,1721,"/**
* Starts a new paragraph, ensuring proper closure of any existing one.
* @throws IOException if an I/O error occurs during writing
*/","* Write something (if defined) at the start of a paragraph.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,matchListItemPattern,org.apache.pdfbox.text.PDFTextStripper:matchListItemPattern(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper),1767,1772,"/**
 * Matches list item pattern in text position.
 * @param pw PositionWrapper containing text position
 * @return Pattern matched or null if no match
 */","* returns the list item Pattern object that matches the text at the specified PositionWrapper or null if the text
     * does not match such a pattern. The list of Patterns tested against is given by the {@link #getListItemPatterns()}
     * method. To add to the list, simply override that method (if sub-classing) or explicitly supply your own list
     * using {@link #setListItemPatterns(List)}.
     * 
     * @param pw position
     * @return the matching pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeWord,org.apache.pdfbox.text.PDFTextStripper:normalizeWord(java.lang.String),2051,2108,"/**
 * Normalizes a word by handling specific Unicode ranges and font quirks.
 * @param word the input string to normalize
 * @return normalized string with direction handled
 */","* Normalize certain Unicode characters. For example, convert the single ""fi"" ligature to ""f"" and ""i"". Also
     * normalises Arabic and Hebrew presentation forms.
     *
     * @param word Word to normalize
     * @return Normalized word",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toString,org.apache.pdfbox.util.DateConverter:toString(java.util.Calendar),165,179,"/**
 * Converts Calendar to formatted date string.
 * @param cal Calendar object to convert
 * @return Formatted date string or null if Calendar is null
 */","* Converts a Calendar to a string formatted as:
     *     D:yyyyMMddHHmmss#hh'mm'  where # is Z, +, or -.
     * 
     * @param cal The date to convert to a string. May be null.
     * The DST_OFFSET is included when computing the output time zone.
     *
     * @return The date as a String to be used in a PDF document, 
     *      or null if the cal value is null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toISO8601,org.apache.pdfbox.util.DateConverter:toISO8601(java.util.Calendar),190,202,"/**
 * Converts Calendar to ISO 8601 formatted string.
 * @param cal Calendar instance to convert
 * @return ISO 8601 formatted date-time string
 */","* Converts the date to ISO 8601 string format:
     *     yyyy-mm-ddThh:MM:ss#hh:mm    (where '#"" is '+' or '-').
     *
     * @param cal The date to convert.  Must not be null.
     * The DST_OFFSET is included in the output value.
     * 
     * @return The date represented as an ISO 8601 string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseBigEndianDate,"org.apache.pdfbox.util.DateConverter:parseBigEndianDate(java.lang.String,java.text.ParsePosition)",526,568,"/**
 * Parses a Big Endian date string.
 * @param text the date string to parse
 * @param initialWhere starting position in the string
 * @return GregorianCalendar object or null if parsing fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseSimpleDate,"org.apache.pdfbox.util.DateConverter:parseSimpleDate(java.lang.String,java.lang.String[],java.text.ParsePosition)",584,601,"/**
* Parses date string using multiple formats.
* @param text date string to parse
* @param fmts array of date formats
* @param initialWhere starting position for parsing
* @return GregorianCalendar object or null if parsing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseTZoffset,"org.apache.pdfbox.util.DateConverter:parseTZoffset(java.lang.String,java.util.GregorianCalendar,java.text.ParsePosition)",429,473,"/**
* Parses timezone offset or name from text.
* @param text input string to parse
* @param cal calendar object to update with parsed timezone
* @param initialWhere position in text where parsing starts
* @return true if timezone is successfully parsed, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toHexString,org.apache.pdfbox.cos.COSString:toHexString(),257,260,"/**
 * Converts byte array to hexadecimal string.
 * @return Hexadecimal representation of bytes
 */","* This will take this string and create a hex representation of the bytes that make the string.
     *
     * @return A hex string representing the bytes in this string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeExternalSignature,org.apache.pdfbox.pdfwriter.COSWriter:writeExternalSignature(byte[]),958,985,"/**
* Writes CMS signature to PDF.
* @param cmsSignature byte array of the CMS signature
* @throws IOException if I/O error occurs or not enough space
*/","* Write externally created signature of PDF data obtained via {@link #getDataToSign()} method.
     *
     * @param cmsSignature CMS signature byte array
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if source data stream is closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,writePDF,org.apache.pdfbox.cos.COSName:writePDF(java.io.OutputStream),776,805,"/**
* Writes the name as a PDF object to the given OutputStream.
* @param output stream where the PDF name is written
* @throws IOException if an I/O error occurs
*/","* This will output this string as a PDF object.
     * 
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCIIHexFilter.java,encode,"org.apache.pdfbox.filter.ASCIIHexFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",135,145,"/**
* Encodes input stream to hexadecimal output.
* @param input source InputStream to encode
* @param encoded OutputStream for the hex-encoded data
* @param parameters encoding parameters (not used)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Hex.java,writeHexBytes,"org.apache.pdfbox.util.Hex:writeHexBytes(byte[],java.io.OutputStream)",168,174,"/**
* Writes byte array as hex values to an OutputStream.
* @param bytes the byte array to convert
* @param output the OutputStream to write to
* @throws IOException if writing fails
*/","* Writes the given byte array as hex value to the given output stream.
     * @param bytes the byte array to be written
     * @param output the output stream to be written to
     * @throws IOException exception if anything went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,iterativeMergeSort,"org.apache.pdfbox.util.IterativeMergeSort:iterativeMergeSort(java.lang.Object[],java.util.Comparator)",87,99,"/**
 * Sorts an array using iterative merge sort.
 * @param arr array to be sorted
 * @param cmp comparator for element comparison
 */","* Sorts the array using iterative (bottom-up) merge sort.
     *
     * @param <T> the class of the objects in the list
     * @param arr the array of objects to be sorted.
     * @param cmp the comparator to determine the order of the list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,hashCode,org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:hashCode(),147,157,"/**
* Generates a hash code based on the object's fields.
* @return computed hash code value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,hashCode,org.apache.pdfbox.text.TextPosition:hashCode(),972,990,"/**
* Generates hash code based on object's fields.
* Uses prime multiplication for combining field hashes.
* @return computed hash code
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/XMLUtil.java,parse,org.apache.pdfbox.util.XMLUtil:parse(java.io.InputStream),56,59,"/**
 * Parses an InputStream into a Document.
 * @param is input stream containing XML data
 * @return parsed Document object
 * @throws IOException if an I/O error occurs
 */","* This will parse an XML stream and create a DOM document.
     *
     * @param is The stream to get the XML from.
     * @return The DOM document.
     * @throws IOException It there is an error creating the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(java.io.BufferedInputStream),89,112,"/**
 * Detects the file type by reading initial bytes from the stream.
 * @param inputStream input stream to read file data from
 * @return FileType enum representing detected file type or null if undetermined
 * @throws IOException if stream does not support mark/reset or ends prematurely
 */","* Examines the a file's first bytes and estimates the file's type.
     * <p>
     * Requires a {@link BufferedInputStream} in order to mark and reset the stream to the position
     * at which it was provided to this method once completed.
     * <p>
     * Requires the stream to contain at least eight bytes.
     *
     * @param inputStream a buffered input stream of the file to examine.
     * @return the file type.
     * @throws IOException if an IO error occurred or the input stream ended unexpectedly.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/filetypedetector/FileTypeDetector.java,detectFileType,org.apache.pdfbox.util.filetypedetector.FileTypeDetector:detectFileType(byte[]),114,117,"/**
 * Detects file type from byte array.
 * @param fileBytes content of the file as bytes
 * @return FileType enum representing detected file type or null if undetermined
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Sets non-stroking color in PDF.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes stroking color settings.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/AppendRectangleToPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.AppendRectangleToPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),39,42,"/**
* Initializes with a PDF graphics stream engine.
* @param context the PDF graphics stream engine to use
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a new instance of BeginInlineImage.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of ClipEvenOddRule.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClipNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClipNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of ClipNonZeroRule.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a new instance of CloseAndStrokePath.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes with a PDF graphics stream engine.
 * @param context the PDF graphics stream engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Initializes a new instance of CloseFillNonZeroAndStrokePath.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ClosePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ClosePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a ClosePath object.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a new CurveTo operation.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateFinalPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateFinalPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Initializes a new instance with the given PDF graphics stream engine.
 * @param context PDF graphics stream engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CurveToReplicateInitialPoint.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.CurveToReplicateInitialPoint:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Initializes a new instance of CurveToReplicateInitialPoint.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.DrawObject:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),46,49,"/**
 * Initializes a new DrawObject.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/EndPath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.EndPath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),34,37,"/**
 * Initializes an EndPath instance.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of FillEvenOddAndStrokePath.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillEvenOddRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillEvenOddRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes a new instance of FillEvenOddRule.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroAndStrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroAndStrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),37,40,"/**
* Initializes a new instance with the given context.
* @param context PDF graphics stream engine context
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/FillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.FillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
 * Initializes FillNonZeroRule with given PDF graphics stream engine.
 * @param context PDFGraphicsStreamEngine instance to be used
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LineTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LineTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),41,44,"/**
 * Constructs a new LineTo operator.
 * @param context PDF graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/MoveTo.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.MoveTo:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),38,41,"/**
 * Constructs a new MoveTo operation.
 * @param context the graphics stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/ShadingFill.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.ShadingFill:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),36,39,"/**
 * Constructs a ShadingFill with the given PDF graphics stream engine.
 * @param context the PDF graphics stream engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/StrokePath.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.StrokePath:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),35,38,"/**
* Initializes a new StrokePath instance.
* @param context PDF graphics stream engine context
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,<init>,org.apache.pdfbox.text.LegacyPDFStreamEngine:<init>(),106,130,"/**
* Initializes LegacyPDFStreamEngine with various text and graphics operators.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSName.java,getPDFName,org.apache.pdfbox.cos.COSName:getPDFName(java.lang.String),685,709,"/**
 * Retrieves or creates a PDF name from the cache.
 * @param aName the name to retrieve or create
 * @return COSName object associated with the given name
 */","* This will get a COSName object with that name.
     * 
     * @param aName The name of the object.
     * 
     * @return A COSName with the specified name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(byte[]),63,66,"/**
 * Constructs a COSString from byte array.
 * @param bytes byte array representing string data
 */","* Creates a new PDF string from a byte array. This method can be used to read a string from
     * an existing PDF file, or to create a new byte string.
     *
     * @param bytes The raw bytes of the PDF text string or byte string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(),51,54,"/**
 * Constructs an empty COSArray with default capacity and auto-grow enabled.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,<init>,org.apache.pdfbox.cos.COSArray:<init>(java.util.List),61,69,"/**
* Constructs a COSArray from a list of COSObjectable objects.
* @param cosObjectables List of COSObjectable objects to convert
*/","* Use the given list to initialize the COSArray.
     * 
     * @param cosObjectables the initial list of COSObjectables",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache),79,83,"/**
* Initializes a COSStream with a given cache.
* @param streamCache cache to store stream data
*/","* Creates a new stream with an empty dictionary. Data is stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/UnmodifiableCOSDictionary.java,<init>,org.apache.pdfbox.cos.UnmodifiableCOSDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),31,35,"/**
 * Creates an unmodifiable dictionary from another COSDictionary.
 * @param dict the source dictionary to wrap
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DecodeResult.java,createDefault,org.apache.pdfbox.filter.DecodeResult:createDefault(),52,55,"/**
 * Creates a default decode result with an empty dictionary.
 * @return DecodeResult object initialized with a new COSDictionary
 */","* Return a default DecodeResult.
     *
     * @return a default instance of DecodeResult",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentInformation:<init>(),44,47,"/**
* Initializes a new PDDocumentInformation with an empty dictionary.
*/",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,<init>,org.apache.pdfbox.pdmodel.PDResources:<init>(),62,67,"/**
* Initializes PDResources with an empty dictionary and caches.
*/",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convert,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convert(java.util.Map),211,220,"/**
* Converts a Map to a COSDictionary.
* @param someMap map with String keys and COSObjectable values
* @return COSDictionary representation of the input map
*/","* This will take a map&lt;java.lang.String,org.apache.pdfbox.pdmodel.COSObjectable&gt;
     * and convert it into a COSDictionary.
     *
     * @param someMap A map containing COSObjectables
     *
     * @return A proper COSDictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDDictionaryWrapper:<init>(),35,38,"/**
* Initializes a new PDDictionaryWrapper with an empty COSDictionary.
*/",* Default constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:<init>(),52,55,"/**
* Initializes a new instance of PDNameTreeNode.
* Constructs an empty COSDictionary for the node.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,<init>,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:<init>(java.lang.Class),54,58,"/**
* Initializes a PDNumberTreeNode with a specific value class.
* @param valueClass the class of objects stored in the tree nodes
*/","* Constructor.
     *
     * @param valueClass The PD Model type of object that is the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:<init>(),72,75,"/**
 * Constructs a new PDPageLabelRange using an empty dictionary.
 */",* Creates a new empty page label range object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:<init>(),36,39,"/**
* Initializes a new instance with an empty dictionary.
* @param none
* @return void
*/","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:<init>(),61,64,"/**
* Initializes a new instance of PDPropertyList with an empty dictionary.
*/",* Constructor for subclasses.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:<init>(),53,56,"/**
 * Initializes a new PDBoxStyle with an empty COSDictionary.
 */","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:<init>(),43,46,"/**
* Initializes a new instance of PDCryptFilterDictionary.
* Creates and sets up an empty COSDictionary.
*/",* creates a new empty crypt filter dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(),84,87,"/**
* Initializes a new PDEncryption with an empty COSDictionary.
*/",* creates a new empty encryption dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(),40,43,"/**
 * Initializes a new FDFCatalog with an empty dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(),54,57,"/**
 * Constructs an FDFDictionary with a new COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(),54,57,"/**
* Constructs a new FDFField with an empty dictionary.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:<init>(),63,66,"/**
 * Initializes a new FDFIconFit with an empty COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:<init>(),44,47,"/**
 * Initializes a new FDFJavaScript with an empty dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:<init>(),38,41,"/**
* Initializes a new instance of FDFNamedPageReference.
* Sets up the underlying COSDictionary for reference.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPage:<init>(),40,43,"/**
 * Constructs a new FDFPage instance.
 * Initializes the page with a COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPageInfo.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFPageInfo:<init>(),35,38,"/**
 * Initializes a new instance of FDFPageInfo with an empty COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:<init>(),40,43,"/**
* Initializes a new FDFTemplate with an empty COSDictionary.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:<init>(),51,54,"/**
 * Initializes a new instance of PDDeviceNAttributes.
 * Constructs a COSDictionary for storing attributes.
 */",* Creates a new DeviceN colour space attributes dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:<init>(),48,51,"/**
 * Initializes a new PDDeviceNProcess with an empty dictionary.
 */",* Creates a new DeviceN Process Dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:<init>(),84,87,"/**
 * Initializes a new PDShading instance with an empty COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:<init>(),35,38,"/**
 * Initializes a new instance of PDAdditionalActions with an empty COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDAnnotationAdditionalActions.
 * Sets up an empty COSDictionary for storing annotation actions.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDDocumentCatalogAdditionalActions.
 * Sets up an empty dictionary for storing additional actions.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDFormFieldAdditionalActions.
 * Creates an empty COSDictionary for storing field action mappings.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:<init>(),37,40,"/**
 * Initializes a new instance of PDPageAdditionalActions with an empty dictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:<init>(),40,43,"/**
 * Initializes a new PDTargetDirectory with an empty dictionary.
 */","* Default constructor, creates target directory.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:<init>(),35,38,"/**
 * Initializes a new PDURIDictionary with an empty COSDictionary.
 */","* Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:<init>(),48,51,"/**
* Initializes PDWindowsLaunchParams with a new COSDictionary.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:<init>(),50,53,"/**
 * Constructs a new PDBorderEffectDictionary with an empty COSDictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:<init>(),69,72,"/**
 * Initializes a new PDBorderStyleDictionary with an empty COSDictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:<init>(),41,45,"/**
* Initializes a PDPropBuild with a direct COSDictionary.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:<init>(),37,42,"/**
* Initializes a new PDPropBuildDataDict with an empty COSDictionary.
* Sets the dictionary to use direct objects as per the specification.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:<init>(),35,39,"/**
 * Initializes a new instance of PDSeedValueMDP with an empty direct COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:<init>(),35,39,"/**
 * Initializes a PDSeedValueTimeStamp with an empty direct COSDictionary.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Constructs a PDField with an empty dictionary.
 * @param acroForm parent form containing the field
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:<init>(),42,45,"/**
 * Initializes a new PDViewportDictionary with an empty COSDictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,<init>,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:<init>(),136,139,"/**
 * Initializes a PDViewerPreferences with an empty dictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,<init>,"org.apache.pdfbox.cos.COSObject:<init>(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSObjectKey)",58,63,"/**
* Initializes a COSObject with a given base object and key.
* @param object the underlying COSBase object
* @param objectKey unique identifier for the COSObject
*/","* Constructor.
     *
     * @param object The object that this encapsulates.
     * @param objectKey The COSObjectKey of the encapsulated object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
* Constructs a PDDefaultAttributeObject from a COSDictionary.
* @param dictionary the underlying COSDictionary
*/","* Creates a default attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
* Constructs a PDUserAttributeObject from a COSDictionary.
* @param dictionary the COSDictionary containing user attributes
*/","* Constructor
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Initializes a standard attribute object from a COS dictionary.
 * @param dictionary the COS dictionary containing attributes
 */","* Creates a new standard attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(org.apache.pdfbox.cos.COSDictionary),63,66,"/**
* Constructs a PDOutlineItem from a dictionary.
* @param dic the COSDictionary containing outline item data
*/","* Constructor for an existing outline item.
     *
     * @param dic The storage dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),71,75,"/**
* Creates a child node from a dictionary.
* @param dic PDF dictionary containing destination data
* @return PDNameTreeNode with page destinations
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),59,63,"/**
* Creates a child node for embedded files.
* @param dic dictionary containing file specifications
* @return PDEmbeddedFilesNameTreeNode instance
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),60,64,"/**
 * Creates a child node from a dictionary.
 * @param dic dictionary containing action data
 * @return PDJavascriptNameTreeNode instance
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,createChildNode,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:createChildNode(org.apache.pdfbox.cos.COSDictionary),61,65,"/**
* Creates a child node for structure elements.
* @param dic dictionary containing structure element data
* @return PDStructureElementNameTreeNode instance
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getMetadata,org.apache.pdfbox.pdmodel.common.PDStream:getMetadata(),416,434,"/**
* Retrieves metadata from the PDF stream.
* @return PDMetadata object or null if not found
*/","* Get the metadata that is part of the document catalog. This will return
     * null if there is no meta data for this object.
     * 
     * @return The metadata for this object.
     * @throws IllegalStateException if the value of the metadata entry is different from a stream
     *                               or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMetadata,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMetadata(),416,424,"/**
* Retrieves metadata from the PDF document.
* @return PDMetadata object or null if no metadata is found
*/","* Returns the metadata associated with this XObject, or null if there is none.
     * @return the metadata associated with this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,getExtends,org.apache.pdfbox.pdmodel.common.PDObjectStream:getExtends(),115,119,"/**
* Retrieves the extends object stream.
* @return PDObjectStream object or null if not found
*/","* A reference to an object stream, of which the current object stream is
     * considered an extension.
     *
     * @return The object that this stream is an extension.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:<init>(org.apache.pdfbox.cos.COSBase),75,78,"/**
 * Constructs a Type 0 PDF function.
 * @param function COSBase object representing the function
 */","* Constructor.
     *
     * @param function The function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:<init>(org.apache.pdfbox.cos.COSBase),44,47,"/**
 * Constructs a Type 3 PDF function.
 * @param functionStream stream containing the function data
 */","* Constructor.
     *
     * @param functionStream The function .",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionTypeIdentity.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionTypeIdentity:<init>(org.apache.pdfbox.cos.COSBase),31,35,"/**
* Constructs a PDFunctionTypeIdentity with a given COSBase.
* @param function underlying COS object for the identity function
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDPostScriptXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDPostScriptXObject:<init>(org.apache.pdfbox.cos.COSStream),34,37,"/**
* Constructs a PDPostScriptXObject from a COSStream.
* @param stream the PostScript content stream
*/","* Creates a PostScript XObject.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream),77,81,"/**
 * Constructs a PDFormXObject from a COSStream.
 * @param stream the underlying COSStream
 */","* Creates a Form XObject for reading.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",89,93,"/**
* Constructs a PDFormXObject from a COSStream.
* @param stream the underlying COSStream
* @param cache resource cache for form objects
*/","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,59,"/**
* Converts COSBase to PDStructureElement.
* @param base COSBase object to convert
* @return PDStructureElement created from COSBase
* @throws IOException if base is not a COSDictionary
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(),91,93,"/**
* Constructs a new instance of PublicKeySecurityHandler.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(),86,88,"/**
* Initializes a new instance of StandardSecurityHandler.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy),100,103,"/**
 * Initializes a new PublicKeySecurityHandler.
 * @param publicKeyProtectionPolicy policy for public key protection
 */","* Constructor used for encryption.
     *
     * @param publicKeyProtectionPolicy The protection policy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,<init>,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:<init>(org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy),95,98,"/**
 * Initializes a new instance of StandardSecurityHandler.
 * @param standardProtectionPolicy policy to be applied
 */","* Constructor used for encryption.
     *
     * @param standardProtectionPolicy The protection policy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a new highlight annotation.
 * @param a COSDictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a new FDFAnnotationSquiggly from a COSDictionary.
 * @param a dictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs a new FDFAnnotationStrikeOut from a COSDictionary.
 * @param a COSDictionary representing the annotation
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),51,54,"/**
 * Constructs an underline annotation.
 * @param a COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param a An existing FDF Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,createFSIgnored,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:createFSIgnored(java.io.File,org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",306,318,"/**
* Creates a Font Info object with checksum.
* @param file font file
* @param format font format
* @param postScriptName PostScript name of the font
* @return FSFontInfo object initialized with file details and checksum
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getStrokingJavaComposite(),665,668,"/**
* Retrieves a Composite object for stroking with specified blend mode and alpha.
* @return Composite instance configured for blending
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,getNonStrokingJavaComposite,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:getNonStrokingJavaComposite(),670,673,"/**
 * Returns a composite for non-stroking operations.
 * @return Composite object configured with blend mode and alpha constant
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDTilingPattern from a COSDictionary.
 * @param dictionary the COSDictionary to use for initialization
 */","* Creates a new tiling pattern from the given COS dictionary.
     * @param dictionary The COSDictionary for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:<init>(org.apache.pdfbox.cos.COSDictionary),34,37,"/**
 * Constructs a PDShadingType3 from a COSDictionary.
 * @param shadingDictionary dictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a new PDShadingType4 from a COSDictionary.
 * @param shadingDictionary dictionary representing the shading type 4
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:<init>(org.apache.pdfbox.cos.COSDictionary),48,51,"/**
 * Constructs a PDShadingType5 from a COSDictionary.
 * @param shadingDictionary dictionary containing shading details
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:toPaint(org.apache.pdfbox.util.Matrix),126,130,"/**
 * Converts the gradient to a paint object.
 * @param matrix transformation matrix for shading
 * @return AxialShadingPaint object representing the gradient
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType3.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3:toPaint(org.apache.pdfbox.util.Matrix),45,49,"/**
 * Converts this shading pattern to a paint object.
 * @param matrix transformation matrix for scaling and positioning
 * @return Paint object representing the radial shading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:toPaint(org.apache.pdfbox.util.Matrix),103,107,"/**
 * Converts the current shading to a Paint object.
 * @param matrix transformation matrix to apply
 * @return Paint object representing the shading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:toPaint(org.apache.pdfbox.util.Matrix),84,88,"/**
 * Converts the current shading to a Paint object.
 * @param matrix transformation matrix to apply
 * @return Paint object representing the shading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:toPaint(org.apache.pdfbox.util.Matrix),80,84,"/**
 * Converts the current shading to a paint object.
 * @param matrix transformation matrix to apply
 * @return Paint object representing the shading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
 * Converts the current shading to a Paint object.
 * @param matrix transformation matrix to apply
 * @return Paint object representing the shading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,toPaint,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:toPaint(org.apache.pdfbox.util.Matrix),49,53,"/**
 * Converts the current shading to a Paint object.
 * @param matrix transformation matrix to apply
 * @return Paint object representing the shading
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),39,42,"/**
 * Initializes a new instance of PDCaretAppearanceHandler.
 * @param annotation PDAnnotation object to handle caret appearance
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Initializes a new PDCircleAppearanceHandler.
 * @param annotation the PDAnnotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),38,41,"/**
 * Constructs a new PDFileAttachmentAppearanceHandler.
 * @param annotation the attachment annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),61,64,"/**
 * Initializes a new instance of PDFreeTextAppearanceHandler.
 * @param annotation the PDAnnotation to be handled
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),43,46,"/**
 * Constructs a highlight appearance handler for a PDF annotation.
 * @param annotation the annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),37,40,"/**
 * Constructs a new PDInkAppearanceHandler.
 * @param annotation the annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),41,44,"/**
* Initializes line appearance handler with given annotation.
* @param annotation PDF annotation to handle
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),44,47,"/**
 * Constructs a PDLinkAppearanceHandler.
 * @param annotation the annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Initializes a new PDPolygonAppearanceHandler.
 * @param annotation the PDAnnotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),40,43,"/**
 * Initializes appearance handler for a polyline annotation.
 * @param annotation PDAnnotation object representing the polyline
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSoundAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSoundAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),23,26,"/**
 * Initializes a new sound appearance handler.
 * @param annotation the PDF annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),45,48,"/**
 * Initializes a new PDSquareAppearanceHandler.
 * @param annotation the PDAnnotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),47,50,"/**
 * Constructs a new appearance handler for a PDF annotation.
 * @param annotation the PDF annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Constructs a new PDStrikeoutAppearanceHandler.
 * @param annotation the annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),71,74,"/**
 * Initializes text appearance handler for a PDF annotation.
 * @param annotation PDF annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),36,39,"/**
 * Initializes an underline appearance handler.
 * @param annotation PDF annotation to handle
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),114,126,"/**
* Constructs appearances for a PDF document.
* @param document the PDF document to process
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),67,79,"/**
* Constructs appearances for the document.
* Uses default or custom handler based on configuration.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),135,147,"/**
* Constructs appearances for file attachments in a PDF document.
* @param document the PDF document to process
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),301,313,"/**
* Constructs appearances for a document.
* @param document PDDocument to apply appearances to
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Constructs highlight appearances for a PDF document.
* Uses either the default or custom handler based on availability.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),125,137,"/**
* Constructs ink appearances for a PDF document.
* Uses either the default handler or a custom one if provided.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),421,433,"/**
* Constructs appearances for a PDF document.
* Uses a custom handler if available, otherwise defaults to PDLineAppearanceHandler.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),233,245,"/**
* Constructs link appearances in the PDF document.
* Uses a custom handler if available; otherwise, defaults to standard handling.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),175,187,"/**
* Constructs appearances for a PDF document.
* @param document the PDF document to process
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),191,203,"/**
* Constructs appearances for a PDF document.
* Uses a custom handler if available; otherwise, defaults to PDPolylineAppearanceHandler.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
* Constructs appearance streams for the document.
* Uses default handler if no custom handler is set.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),68,80,"/**
* Constructs field appearances in a PDF document.
* Uses a default handler if no custom handler is provided.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Constructs PDF annotation appearances.
* Uses custom handler if available, otherwise defaults to squiggly handler.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Constructs annotation appearances in the PDF document.
* Uses a custom handler if provided, otherwise defaults to PDStrikeoutAppearanceHandler.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),239,251,"/**
* Constructs PDF text appearances.
* Uses custom handler if available; otherwise, defaults to standard handler.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(org.apache.pdfbox.pdmodel.PDDocument),71,83,"/**
* Constructs appearance streams for the document.
* Uses a default handler if no custom handler is set.
* @param document PDDocument to process
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
* Constructs a PDButton.
* @param acroForm the form containing this button
* @param field the dictionary representing the button
* @param parent the parent field of this button
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",63,66,"/**
* Constructs a PDSignatureField.
* @param acroForm The form containing the signature field.
* @param field The dictionary representing the field.
* @param parent The parent non-terminal field.
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node to be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",59,62,"/**
* Constructs a PDVariableText instance.
* @param acroForm the form containing this field
* @param field the dictionary representing the field
* @param parent the parent field if any
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,clone,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:clone(),478,501,"/**
 * Clones the graphics state.
 * @return a deep copy of the PDGraphicsState object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,<init>,"org.apache.pdfbox.rendering.TilingPaintFactory$TilingPaintParameter:<init>(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",83,91,"/**
* Initializes a TilingPaintParameter with given properties.
* @param matrix transformation matrix for the tiling pattern
* @param patternDict dictionary containing pattern attributes
* @param colorSpace color space used for painting
* @param color paint color
* @param xform additional affine transform applied to the pattern
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,generatePartialName,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:generatePartialName(),73,84,"/**
* Generates a unique partial field name for ""Signature"".
* @return Unique partial name string
*/","* Generate a unique name for the signature.
     * 
     * @return the signature's unique name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/Revisions.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions:toString(),123,132,"/**
* Generates a string representation of the object list and revision numbers.
* @return Formatted string with objects and their revision numbers
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,create,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:create(org.apache.pdfbox.cos.COSBase),49,52,"/**
 * Creates a PDSoftMask from a COSBase dictionary.
 * @param dictionary the COSBase dictionary to use
 * @return PDSoftMask object or null if creation fails
 */","* Creates a new soft mask.
     *
     * @param dictionary SMask
     * 
     * @return the newly created instance of PDSoftMask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$If:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),36,46,"/**
* Executes an instruction sequence if a condition is true.
* @param context execution environment containing the stack
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/ConditionalOperators.java,execute,org.apache.pdfbox.pdmodel.common.function.type4.ConditionalOperators$IfElse:execute(org.apache.pdfbox.pdmodel.common.function.type4.ExecutionContext),53,68,"/**
* Executes one of two instruction sequences based on a condition.
* @param context execution context containing the stack and instructions
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.cos.ICOSParser),111,114,"/**
 * Constructs a COSDocument with a memory-only stream cache.
 * @param parser ICOSParser instance used to parse the document
 */","* Constructor. Uses main memory to buffer PDF streams.
     * 
     * @param parser Parser to be used to parse the document on demand",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),122,125,"/**
 * Constructs a COSDocument with a specified StreamCacheCreateFunction.
 * @param streamCacheCreateFunction function to create cache for streams
 */","* Constructor that will use the provided function to create a stream cache for the storage of the PDF streams.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,init,org.apache.pdfbox.pdfparser.COSParser:init(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),193,210,"/**
* Initializes the document with a stream cache function.
* @param streamCacheCreateFunction factory for creating stream caches
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetMatrix.java,process,"org.apache.pdfbox.contentstream.operator.state.SetMatrix:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,66,"/**
* Processes operator with 6 number arguments to set text matrix.
* @param operator the operator being processed
* @param arguments list of COSBase arguments, must contain at least 6 numbers
* @throws MissingOperandException if fewer than 6 arguments are provided
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/BeginText.java,process,"org.apache.pdfbox.contentstream.operator.text.BeginText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,49,"/**
* Processes operator with arguments in a PDF stream.
* @param operator the PDF operator to process
* @param arguments list of COSBase arguments for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/EndText.java,process,"org.apache.pdfbox.contentstream.operator.text.EndText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,47,"/**
* Processes PDF operators by resetting text matrices and ending text.
* @param operator the PDF operator to process
* @param arguments list of COSBase arguments for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryString,"org.apache.pdfbox.cos.COSDictionary:getDictionaryString(org.apache.pdfbox.cos.COSBase,java.util.List)",1357,1412,"/**
 * Converts a COSBase object to a string representation.
 * @param base the COSBase object to convert
 * @param objs list of objects to track for recursion avoidance
 * @return string representation of the COSBase object
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,retrieveDimensions,org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:retrieveDimensions(java.io.ByteArrayInputStream),148,185,"/**
 * Retrieves image dimensions from a JPEG input stream.
 * @param stream the input stream containing the JPEG image data
 * @return Dimensions object with width, height, and number of components
 * @throws IOException if an I/O error occurs while reading the image
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processOperator,"org.apache.pdfbox.contentstream.PDFStreamEngine:processOperator(java.lang.String,java.util.List)",903,907,"/**
* Processes an operator with given arguments.
* @param operation operator name as a string
* @param arguments list of COSBase arguments for the operator
* @throws IOException if processing fails
*/","* This is used to handle an operation.
     * 
     * @param operation The operation to perform.
     * @param arguments The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,create,"org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:create(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",43,50,"/**
* Creates a PDMarkedContent object based on the tag.
* @param tag the COSName tag for the marked content
* @param properties dictionary of properties for the marked content
* @return PDArtifactMarkedContent if tag is ARTIFACT, else PDMarkedContent
*/","* Creates a marked-content sequence.
     * 
     * @param tag the tag
     * @param properties the properties
     * @return the marked-content sequence",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getWidth,org.apache.pdfbox.pdmodel.common.PDRectangle:getWidth(),296,299,"/**
 * Returns the width of the rectangle.
 * @return width as a float value
 */","* This will get the width of this rectangle as calculated by
     * upperRightX - lowerLeftX.
     *
     * @return The width of this rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,contains,"org.apache.pdfbox.pdmodel.common.PDRectangle:contains(float,float)",173,181,"/**
* Checks if a point is within the bounding box.
* @param x x-coordinate of the point
* @param y y-coordinate of the point
* @return true if the point is inside the bounding box, false otherwise
*/","* Method to determine if the x/y point is inside this rectangle.
     * @param x The x-coordinate to test.
     * @param y The y-coordinate to test.
     * @return True if the point is inside this rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,getHeight,org.apache.pdfbox.pdmodel.common.PDRectangle:getHeight(),307,310,"/**
 * Calculates the height of the bounding box.
 * @return Height as a floating-point number
 */","* This will get the height of this rectangle as calculated by
     * upperRightY - lowerLeftY.
     *
     * @return The height of this rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,transform,org.apache.pdfbox.pdmodel.common.PDRectangle:transform(org.apache.pdfbox.util.Matrix),319,338,"/**
* Transforms the shape using a matrix.
* @param matrix transformation matrix to apply
* @return GeneralPath representing transformed shape
*/","* Returns a path which represents this rectangle having been transformed by the given matrix. Note that the
     * resulting path need not be rectangular.
     * 
     * @param matrix the matrix to be used for the transformation
     * @return the transformed rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toGeneralPath,org.apache.pdfbox.pdmodel.common.PDRectangle:toGeneralPath(),357,370,"/**
* Converts rectangle bounds to a GeneralPath.
* @return GeneralPath representing the rectangle
*/","* Returns a general path equivalent to this rectangle. This method avoids the problems caused by Rectangle2D not
     * working well with -ve rectangles.
     * 
     * @return a general path equivalent to this rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,toString,org.apache.pdfbox.pdmodel.common.PDRectangle:toString(),377,382,"/**
* Returns a string representation of the rectangle.
* Format: [lowerLeftX, lowerLeftY, upperRightX, upperRightY]
*/","* This will return a string representation of this rectangle.
     *
     * @return This object as a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isNonZeroBoundingBox,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isNonZeroBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),395,403,"/**
* Checks if a bounding box has non-zero coordinates.
* @param bbox PDRectangle object representing the bounding box
* @return true if any coordinate is non-zero, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateMatrix,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateMatrix(org.apache.pdfbox.pdmodel.common.PDRectangle,int)",655,679,"/**
* Calculates transformation matrix for rotation.
* @param bbox bounding box dimensions
* @param rotation angle in degrees
* @return AffineTransform object representing the rotation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,fillWhitepointCache,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:fillWhitepointCache(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),78,83,"/**
* Updates cached whitepoint values.
* @param whitepoint PDTristimulus object containing new whitepoint data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getInt,org.apache.pdfbox.cos.COSArray:getInt(int),306,309,"/**
 * Retrieves an integer value at the specified index.
 * @param index position of the integer in the list
 * @return integer value or -1 if not found
 */","* Get the value of the array as an integer.
     *
     * @param index The index into the list.
     *
     * @return The value at that index or -1 if does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getName,org.apache.pdfbox.cos.COSArray:getName(int),359,362,"/**
 * Retrieves name at specified index.
 * @param index position in the list
 * @return name as a String or null if not found
 */","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The name converted to a string or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(org.apache.pdfbox.cos.COSBase),217,253,"/**
 * Creates an output stream for writing data with optional filters.
 * @param filters filter configuration for the stream
 * @return OutputStream for writing data
 * @throws IOException if an I/O error occurs
 */","* Returns a new OutputStream for writing stream data, using and the given filters.
     * 
     * @param filters COSArray or COSName of filters to be used.
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",140,149,"/**
* Initializes a PDImageXObject with a given stream and resources.
* @param stream the image data stream
* @param resources associated resources for the image
*/","* Creates an Image XObject with the given stream as its contents and current color spaces. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param stream the XObject stream to read
     * @param resources the current resources",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSuffix(),1011,1047,"/**
* Determines image file suffix based on stream filters.
* @return file extension or null if unknown filter
*/","* This will get the suffix for this image type, e.g. jpg/png.
     * @return The image suffix or null if not available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(float),1441,1459,"/**
* Writes a float operand to the output stream.
* @param real the float value to write
* @throws IOException if an I/O error occurs
*/","* Writes a real number to the content stream.
     * 
     * @param real the real number to be added to the content stream
     * 
     * @throws IOException If the underlying stream has a problem being written to.
     * @throws IllegalArgumentException if the parameter is not a finite number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(int),1467,1471,"/**
 * Writes an integer operand to the output stream.
 * @param integer the integer value to write
 * @throws IOException if an I/O error occurs
 */","* Writes an integer number to the content stream.
     * 
     * @param integer the integer to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperator,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperator(java.lang.String),1491,1495,"/**
 * Writes text followed by a new line.
 * @param text the string to be written
 * @throws IOException if an I/O error occurs
 */","* Writes a string to the content stream as ASCII.
     * 
     * @param text the text to be added to the content stream followed by a newline
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,isEmpty,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:isEmpty(),69,73,"/**
 * Checks if the collection is empty.
 * @return true if the collection has no elements, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGB(float[]),348,359,"/**
* Converts color value to RGB.
* @param value input color value
* @return RGB float array
* @throws IOException if conversion fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSNumber.java,get,org.apache.pdfbox.cos.COSNumber:get(java.lang.String),58,95,"/**
* Parses a string to a COSNumber.
* @param number the string representation of the number
* @return COSNumber object representing the parsed number
* @throws IOException if the string is not a valid number
*/","* This factory method will get the appropriate number object.
     *
     * @param number The string representation of the number.
     *
     * @return A number object, either float or int.
     *
     * @throws IOException If the string is not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromFloat,org.apache.pdfbox.pdfwriter.COSWriter:visitFromFloat(org.apache.pdfbox.cos.COSFloat),1350,1354,"/**
* Writes PDF representation of COSFloat to standard output.
* @param obj COSFloat object to be written
* @throws IOException if an I/O error occurs during writing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSFloat,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSFloat(java.io.OutputStream,org.apache.pdfbox.cos.COSFloat)",270,274,"/**
* Writes a COSFloat to the OutputStream.
* @param output the OutputStream to write to
* @param cosFloat the COSFloat to write
* @throws IOException if an I/O error occurs
*/","* Write the given {@link COSFloat} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosFloat The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,toIncrement,org.apache.pdfbox.cos.COSUpdateInfo:toIncrement(),52,55,"/**
 * Converts update state to an increment.
 * @return COSIncrement object representing the increment
 */","* Uses this {@link COSUpdateInfo} as the base object of a new {@link COSIncrement}.
     *
     * @return A {@link COSIncrement} based on this {@link COSUpdateInfo}.
     * @see COSIncrement",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,addObjectToWrite,org.apache.pdfbox.pdfwriter.COSWriter:addObjectToWrite(org.apache.pdfbox.cos.COSBase),535,573,"/**
* Adds an object to the write queue.
* @param object COSBase object to be added
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toFloatArray,org.apache.pdfbox.cos.COSArray:toFloatArray(),639,648,"/**
* Converts the list of COSBase objects to a float array.
* @return float array containing numeric values from COSBase objects
*/","* This will take an COSArray of numbers and convert it to a float[].
     *
     * @return This COSArray as an array of float numbers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberFloatList,org.apache.pdfbox.cos.COSArray:toCOSNumberFloatList(),703,719,"/**
 * Converts COSBase objects to a list of Floats.
 * @return List of Floats, null for non-COSNumber objects
 */","* This will return a list of float values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of float values of the COSArray of COSNumbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,toCOSNumberIntegerList,org.apache.pdfbox.cos.COSArray:toCOSNumberIntegerList(),726,742,"/**
* Converts COSNumber objects to a list of integers.
* @return List of Integer values or null for non-COSNumber entries
*/","* This will return a list of int values if the COSArray consists of COSNumbers only.
     * 
     * @return the list of int values of the COSArray of COSNumbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,hasMCIDs,org.apache.pdfbox.multipdf.Splitter$KCloner:hasMCIDs(org.apache.pdfbox.cos.COSBase),535,553,"/**
* Checks if the given PDF object contains MCIDs.
* @param kid a PDF object that may contain MCIDs
* @return true if MCIDs are present, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMin,org.apache.pdfbox.pdmodel.common.PDRange:getMin(),96,100,"/**
 * Retrieves the minimum value from a range array.
 * @return The minimum value as a float.
 */","* This will get the minimum value of the range.
     *
     * @return The min value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,getMax,org.apache.pdfbox.pdmodel.common.PDRange:getMax(),117,121,"/**
 * Retrieves the maximum value from a range array.
 * @return the maximum value as a float
 */","* This will get the maximum value of the range.
     *
     * @return The max value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getColourByIndex,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getColourByIndex(int),158,167,"/**
* Retrieves PDGamma by index from array.
* @param index position in the array
* @return PDGamma object or null if not a COSArray
*/","* Gets the colour by edge index.
     * 
     * @param index edge index
     * @return the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getDocumentIDBytes,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getDocumentIDBytes(org.apache.pdfbox.cos.COSArray),299,314,"/**
* Retrieves document ID bytes from an array.
* @param documentIDArray PDF document ID array
* @return Byte array of document ID or empty if not present
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/blend/BlendMode.java,getInstance,org.apache.pdfbox.pdmodel.graphics.blend.BlendMode:getInstance(org.apache.pdfbox.cos.COSBase),255,279,"/**
* Retrieves a BlendMode instance from a PDF blend mode object.
* @param cosBlendMode PDF blend mode object
* @return corresponding BlendMode or NORMAL if not found
*/","* Determines the blend mode from the BM entry in the COS ExtGState.
     *
     * @param cosBlendMode name or array
     * @return blending mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getColorantNames(),476,479,"/**
* Retrieves colorant names from the COSArray.
* @return List of colorant names as strings
*/","* Returns the list of colorants.
     * @return the list of colorants",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getAlternateColorSpace(),531,538,"/**
 * Retrieves the alternate color space.
 * @return PDColorSpace object or throws IOException if creation fails
 */","* This will get the alternate color space for this separation.
     *
     * @return The alternate color space.
     *
     * @throws IOException If there is an error getting the alternate color
     * space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,checkArray,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:checkArray(org.apache.pdfbox.cos.COSArray),134,144,"/**
* Validates ICCBased colorspace array.
* @param iccArray the array to validate
* @throws IOException if array is invalid
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,getHival,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:getHival(),250,253,"/**
 * Retrieves the integer value at index 2 of the array.
 * @return Integer value from the COSArray
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,getColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:getColorantName(),264,268,"/**
* Retrieves the colorant name from an array.
* @return the colorant name as a string
*/","* Returns the colorant name.
     * @return the name of the colorant",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDDestination.java,create,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination:create(org.apache.pdfbox.cos.COSBase),46,97,"/**
* Creates a PDDestination from a COSBase object.
* @param base the COSBase object representing the destination
* @return a PDDestination object or null if input is null
* @throws IOException if the base cannot be converted to a Destination
*/","* This will create a new destination depending on the type of COSBase
     * that is passed in.
     *
     * @param base The base level object.
     *
     * @return A new destination.
     *
     * @throws IOException If the base cannot be converted to a Destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPage(),66,78,"/**
 * Retrieves the first page from a PDF document.
 * @return PDPage object or null if no pages are present
 */","* This will get the page for this destination. A page destination can either reference a page
     * (for a local destination) or a page number (when doing a remote destination to another PDF).
     * If this object is referencing by page number then this method will return null and
     * {@link #getPageNumber()} should be used.
     *
     * @return The page for this destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:getPageNumber(),98,110,"/**
* Retrieves the first page number from an array.
* @return page number as integer, or -1 if not found
*/","* This will get the page number for this destination. A page destination can either reference a
     * page (for a local destination) or a page number (when doing a remote destination to another
     * PDF). If this object is referencing by page number then this method will return that number,
     * otherwise -1 will be returned.
     *
     * @return The zero-based page number for this destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getZoom(),122,130,"/**
* Retrieves zoom level from a PDF array.
* @return zoom value as float, or -1 if not found
*/","* Get the zoom value.  Return values of 0 or -1 imply that the current zoom
     * will be used.
     *
     * @return The zoom value for the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,<init>,org.apache.pdfbox.util.Matrix:<init>(org.apache.pdfbox.cos.COSArray),67,77,"/**
* Initializes a Matrix from a COSArray.
* @param array COSArray containing matrix elements
*/","* Creates a matrix from a 6-element (a b c d e f) COS array.
     *
     * @param array source array, elements must be or extend COSNumber",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getIndirectObjectKeys,org.apache.pdfbox.cos.COSDictionary:getIndirectObjectKeys(java.util.Collection),1435,1485,"/**
 * Collects keys of all indirect objects.
 * @param indirectObjects collection to store object keys
 */","* Collects all indirect objects numbers within this dictionary and all included dictionaries. It is used to avoid
     * mixed up object numbers when importing an existing page to another pdf.
     * 
     * Expert use only. You might run into an endless recursion if choosing a wrong starting point.
     * 
     * @param indirectObjects a collection of already found indirect objects.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,"org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",160,168,"/**
 * Retrieves an object from the dictionary using keys.
 * @param firstKey primary key to search
 * @param secondKey secondary key to search if first key is not found
 * @return COSBase object or null if neither key is present
 */","* This is a special case of getDictionaryObject that takes multiple keys, it will handle the situation where
     * multiple keys could get the same value, ie if either CS or ColorSpace is used to get the colorspace. This will
     * get an object from this dictionary. If the object is a reference then it will dereference it and get it from the
     * document. If the object is COSNull then null will be returned.
     *
     * @param firstKey The first key to try.
     * @param secondKey The second key to try.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName),518,526,"/**
 * Retrieves a COSName from the dictionary using a given key.
 * @param key the key to look up in the dictionary
 * @return the COSName associated with the key or null if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be a name. Null is returned
     * if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COS name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName),552,560,"/**
 * Retrieves a COSDictionary by key.
 * @param key the key to search for in the dictionary
 * @return COSDictionary object or null if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSDictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSStream,org.apache.pdfbox.cos.COSDictionary:getCOSStream(org.apache.pdfbox.cos.COSName),587,595,"/**
* Retrieves a COSStream by key.
* @param key the dictionary key
* @return COSStream object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSStream. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSStream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSArray,org.apache.pdfbox.cos.COSDictionary:getCOSArray(org.apache.pdfbox.cos.COSName),604,612,"/**
* Retrieves a COSArray by key.
* @param key the dictionary key
* @return COSArray object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSArray. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The COSArray.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSName,"org.apache.pdfbox.cos.COSDictionary:getCOSName(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",622,630,"/**
 * Retrieves a COSName from the dictionary using a given key.
 * @param key the key to look up in the dictionary
 * @param defaultValue the default value to return if the key is not found or not a COSName
 * @return the COSName associated with the key, or the default value if not applicable
 */","* This is a convenience method that will get the dictionary object that is expected to be a name. Default is
     * returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The COS name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName,long)",1078,1087,"/**
* Retrieves a long value by key with a default.
* @param key the dictionary key
* @param defaultValue the value to return if key not found
* @return the long value or default if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName,float)",1134,1143,"/**
* Retrieves a float value by key from the dictionary.
* @param key the COSName key to look up
* @param defaultValue default float value if key not found
* @return float value associated with the key or default value
*/","* This is a convenience method that will get the dictionary object that is expected to be an float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentStreams,org.apache.pdfbox.pdmodel.PDPage:getContentStreams(),194,212,"/**
 * Retrieves content streams from a PDF page.
 * @return Iterator of PDStream objects representing content streams
 */","* Returns the content streams which make up this page.
     * 
     * @return content stream iterator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,hasContents,org.apache.pdfbox.pdmodel.PDPage:hasContents(),309,321,"/**
* Checks if the page has content.
* @return true if page contains data, false otherwise
*/","* Returns true if this page has one or more content streams.
     * 
     * @return true if the page has a non empty content stream, otherwise false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getClassNames(),328,361,"/**
* Retrieves class names from PDF dictionary.
* @return Revisions object containing class names and their revision numbers
*/","* Returns the class names together with their revision numbers (C).
     * 
     * @return the class names as a list, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getK(),78,81,"/**
 * Retrieves the ""K"" dictionary object from the COS base.
 * @return COSBase object associated with key ""K""
 */","* Returns the K entry. This can be a dictionary representing a structure element, or an array
     * of them. To get it as a list of PDStructureElement objects, use {@link #getKids()} instead.
     *
     * @return the K entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getValue(),84,87,"/**
 * Retrieves the value associated with key ""V"" from the COS object.
 * @return COSBase object representing the value or null if not found
 */","* Returns the property value.
     * 
     * @return the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:isEncryptMetaData(),117,127,"/**
* Checks if metadata encryption is enabled.
* @return true if metadata encryption is enabled, false otherwise
*/","* Will get the EncryptMetaData dictionary info.
     *
     * @return true if EncryptMetaData is explicitly set (the default is true)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerEncryptionKey(),351,360,"/**
* Retrieves the owner encryption key.
* @return byte array containing the owner encryption key or null if not found
* @throws IOException if an I/O error occurs while accessing the dictionary
*/","* This will get the OE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserEncryptionKey(),381,390,"/**
 * Retrieves the user encryption key.
 * @return byte array containing the encryption key or null if not found
 * @throws IOException if an I/O error occurs
 */","* This will get the UE entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPerms(),610,619,"/**
* Retrieves permissions from a dictionary.
* @return byte array of permissions or null if not found
*/","* Get the Perms entry in the encryption dictionary.
     *
     * @return A 16 byte array or null if there is no Perms entry.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getPage(),421,430,"/**
* Retrieves the page number associated with an annotation.
* @return Integer representing the page number or null if not set
*/","* This will get the page number or null if it does not exist.
     *
     * @return The page number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getCOSValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getCOSValue(),269,284,"/**
 * Retrieves the COS value of a field.
 * @return COSBase object or null if not found
 * @throws IOException if an unknown type is encountered
 */","* Returns the COS value of this field.
     *
     * @return The COS value of the field, maybe <code>null</code>.
     * @throws IOException If there is an error getting the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getFieldFlags(),331,340,"/**
 * Retrieves field flags from a PDF form field.
 * @return Integer representing field flags or null if not set
 */","* This will get the 'Ff' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetFieldFlags(),375,384,"/**
* Retrieves field flags for a PDF form.
* @return Integer representing field flags or null if not set
*/","* This will get the 'SetFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearFieldFlags(),419,428,"/**
* Retrieves clear field flags from a PDF form field.
* @return Integer value of clear field flags or null if not set
*/","* This will get the 'ClrFf' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getWidgetFieldFlags(),463,472,"/**
 * Retrieves widget field flags.
 * @return Integer representing field flags or null if not set
 */","* This will get the 'F' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getSetWidgetFieldFlags(),507,516,"/**
 * Retrieves the set widget field flags.
 * @param none
 * @return Integer value of SET_F flag or null if not found
 */","* This will get the 'SetF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:getClearWidgetFieldFlags(),551,560,"/**
 * Retrieves clear widget field flags.
 * @return Integer value of clear flags or null if not set
 */","* This will get the 'ClrF' entry of the FDF field dictionary.
     * If it is not present then this method will return null.
     *
     * @return The widget field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultWidth(),245,260,"/**
* Retrieves the default width, initializing from PDF dictionary if not set.
* @return default width as a float
*/","* This will get the default width. The default value for the default width is 1000.
     *
     * @return The default width for the glyphs in this font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getColorSpace(),76,84,"/**
 * Retrieves the color space from the PDF dictionary.
 * @return PDColorSpace object or null if not found
 * @throws IOException if an error occurs during creation
 */","* Returns the process color space
     * @return the process color space
     * @throws IOException if the color space cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(org.apache.pdfbox.pdmodel.PDResources),79,86,"/**
 * Retrieves the color space for a resource.
 * @param resources PDF resources object
 * @return PDColorSpace object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the group color space or null if it isn't defined.
     *
     * @param resources useful for its cache. Can be null.
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(org.apache.pdfbox.cos.COSDictionary),43,51,"/**
* Constructs a PDOptionalContentGroup from a COSDictionary.
* @param dict the COSDictionary representing the optional content group
* @throws IllegalArgumentException if the dictionary is not of type 'OCG'
*/","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(org.apache.pdfbox.cos.COSDictionary),47,55,"/**
* Initializes a PDOptionalContentMembershipDictionary from a COSDictionary.
* @param dict the underlying COSDictionary with OCMD type
* @throws IllegalArgumentException if dict is not of OCMD type
*/","* Creates a new instance based on a given {@link COSDictionary}.
     * @param dict the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getOverprintMode(),403,413,"/**
* Retrieves the overprint mode from a dictionary.
* @return Integer representing the overprint mode or null if not set
*/","* This will get the overprint control mode.
     *
     * @return The overprint control mode or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSoftMask(),602,606,"/**
 * Retrieves the soft mask from the dictionary.
 * @return PDSoftMask object or null if not found
 */","* Returns the soft mask stored in the COS dictionary
     *
     * @return the soft mask or null if there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFloatItem,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFloatItem(org.apache.pdfbox.cos.COSName),637,648,"/**
* Retrieves a float value from the dictionary for a given key.
* @param key the dictionary key
* @return Float value or null if not found or not a number
*/","* This will get a float item from the dictionary.
     *
     * @param key The key to the item.
     *
     * @return The value for that item.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer(),676,684,"/**
* Retrieves transfer information from a dictionary.
* @return COSBase object or null if invalid
*/","* This will get the transfer function of the /TR dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTransfer2(),708,716,"/**
* Retrieves the transfer function for color conversion.
* @return COSBase object representing the transfer function or null if invalid
*/","* This will get the transfer function of the /TR2 dictionary.
     *
     * @return The transfer function. According to the PDF specification, this is either a single
     * function (which applies to all process colorants) or an array of four functions (which apply
     * to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getBackdropColor,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getBackdropColor(),172,179,"/**
 * Retrieves the backdrop color as a COSArray.
 * @return the COSArray representing the backdrop color, or null if not set
 */","* Returns the backdrop color.
     * 
     * @return the backdrop color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getOpenInNewWindow(),129,137,"/**
 * Determines the open mode for a document.
 * @return OpenMode indicating how to open the document (NEW_WINDOW, SAME_WINDOW, USER_PREFERENCE)
 */","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getT(),60,64,"/**
* Retrieves the ""T"" entry from the action dictionary.
* @return COSBase object representing the ""T"" entry or null if not found
*/","* The annotation or annotations to be hidden or shown
     *
     * @return The T entry of the specific thread action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getOpenInNewWindow(),212,220,"/**
* Determines the open mode for a document.
* @return OpenMode indicating how to open the document (NEW_WINDOW, SAME_WINDOW, or USER_PREFERENCE)
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getD(),92,95,"/**
 * Retrieves the ""D"" entry from the action dictionary.
 * @return COSBase object associated with key ""D""
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getOpenInNewWindow(),119,127,"/**
* Determines the open mode for a document.
* @return OpenMode enum indicating NEW_WINDOW, SAME_WINDOW, or USER_PREFERENCE
*/","* This will specify whether to open the destination document in a new window, in the same
     * window, or behave in accordance with the current user preference.
     *
     * @return A flag specifying how to open the destination document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getD(),63,66,"/**
 * Retrieves the ""D"" entry from the action dictionary.
 * @return The COSBase object associated with key ""D"", or null if not present.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getB(),101,104,"/**
 * Retrieves the 'B' dictionary object from the action.
 * @return COSBase object associated with key 'B'
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getNamedDestination(),178,186,"/**
* Retrieves a named destination from the dictionary.
* @return PDNamedDestination object or null if not found
*/","* If the value in the /P entry is a string, this will get a named destination in the current
     * document that provides the page number of the file attachment annotation.
     *
     * @return a named destination or null if the /P entry value is missing or not a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(),319,327,"/**
* Retrieves the contents as a byte array.
* @return byte array of contents or empty array if not available
*/","* Returns the /Contents string as a byte array, i.e. the embedded signature between the
     * byterange gap.
     *
     * @return a byte array containing the signature, or an empty array if there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getXFA(),584,588,"/**
* Retrieves XFA resource from the PDF dictionary.
* @return PDXFAResource object or null if not found
*/","* Get the XFA resource, the XFA resource is only used for PDF 1.5+ forms.
     *
     * @return The xfa resource or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getInheritableAttribute,org.apache.pdfbox.pdmodel.interactive.form.PDField:getInheritableAttribute(org.apache.pdfbox.cos.COSName),88,102,"/**
 * Retrieves inheritable attribute from dictionary or parent.
 * @param key the attribute key to retrieve
 * @return COSBase object of the attribute, or null if not found
 */","* Returns the given attribute, inheriting from parent nodes if necessary.
     *
     * @param key the key to look up
     * @return COS value for the given key",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValue(),187,190,"/**
 * Retrieves the value associated with the key ""V"".
 * @return COSBase object representing the value or null if not found
 */","* Returns the COSBase value of the ""V"" entry.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the COSBase value of the ""V"" entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getValueAsString(),198,203,"/**
 * Retrieves field value as string.
 * @return Field value as string or empty if null
 */","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getDefaultValue(),244,247,"/**
 * Retrieves default value from COS dictionary.
 * @return COSBase object representing the default value or null if not found
 */","* Returns the default value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @return the new default value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,close,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:close(),156,173,"/**
* Closes resources: visualSignature and pdfSource.
* @throws IOException if an I/O error occurs while closing resources
*/","* Closes the visual signature COSDocument, if any. Do not call this before you're saved your
     * signed PDF document, or saving will fail because COSStream objects held both by the
     * COSDocument and by the signed document would no longer be available.
     *
     * @throws IOException if the document could not be closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,"org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",583,605,"/**
* Writes a COSBase object to the output stream.
* @param key unique identifier for the COSObject
* @param obj the COSBase object to write
* @throws IOException if an I/O error occurs
*/","* This will write a COS object for a predefined key.
     *
     * @param key The key of the object to write.
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,getKey,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:getKey(org.apache.pdfbox.cos.COSBase),267,270,"/**
 * Retrieves key from pool for given COSBase object.
 * @param object COSBase object to get key for
 * @return COSObjectKey associated with the object
 */","* Returns the {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool.
     *
     * @param object The {@link COSBase} a {@link COSObjectKey} is registered for in this compression pool.
     * @return The {@link COSObjectKey}, that is registered for the given {@link COSBase} in this compression pool, if
     * such an object is contained.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,contains,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:contains(org.apache.pdfbox.cos.COSBase),255,258,"/**
* Checks if the pool contains the specified COSBase object.
* @param object the COSBase object to check
* @return true if the object is in the pool, false otherwise
*/","* Returns true, if the given {@link COSBase} is a registered object of this compression pool.
     *
     * @param object The object, that shall be checked.
     * @return True, if the given {@link COSBase} is a registered object of this compression pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,createObjectStreams,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:createObjectStreams(),302,317,"/**
* Creates object streams for COS objects.
* @return List of COSWriterObjectStream objects
*/","* Creates {@link COSWriterObjectStream}s for all currently registered objects of this pool, that have been marked
     * as fit for being compressed in this manner. Such object streams may be added to a PDF document and shall be
     * declared in a document's {@link PDFXRefStream} accordingly. The objects contained in such a stream must not be
     * added to the document separately.
     *
     * @return The created {@link COSWriterObjectStream}s for all currently registered compressible objects.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,getObjectKey,"org.apache.pdfbox.pdfparser.BaseParser:getObjectKey(long,int)",194,213,"/**
* Retrieves COSObjectKey using num and gen.
* @param num object number
* @param gen generation number
* @return COSObjectKey from cache or newly created if not found
*/","* Returns the object key for the given combination of object and generation number. The object key from the cross
     * reference table/stream will be reused if available. Otherwise a newly created object will be returned.
     * 
     * @param num the given object number
     * @param gen the given generation number
     * 
     * @return the COS object key",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjects,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjects(),132,217,"/**
 * Searches for PDF objects using a breadth-first approach.
 * @throws IOException if an I/O error occurs
 */","* Brute force search for every object in the pdf.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreamOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreamOffsets(),568,634,"/**
* Searches for object stream offsets using backward search.
* @return Map of offsets to COSObjectKey or empty map if none found
*/","* Search for all offsets of object streams within the given pdf
     * 
     * @return a map of all offsets for object streams
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:parse(org.apache.pdfbox.pdfparser.XrefTrailerResolver),119,152,"/**
* Parses XRef trailer and resolves object references.
* @param resolver object for resolving cross-reference entries
* @throws IOException if an I/O error occurs
*/","* Parses through the unfiltered stream and populates the xrefTable HashMap.
     * 
     * @param resolver resolver to read the xref/trailer information
     * @throws IOException If there is an error while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,findObjectKey,"org.apache.pdfbox.pdfparser.XrefParser:findObjectKey(org.apache.pdfbox.cos.COSObjectKey,long,java.util.Map)",475,549,"/**
 * Finds and validates an object key in a PDF file.
 * @param objectKey initial object key to search for
 * @param offset starting position in the file
 * @param xrefOffset map of object keys to their offsets
 * @return validated COSObjectKey or null if not found
 * @throws IOException if an I/O error occurs
 */","* Check if the given object can be found at the given offset. Returns the provided object key if everything is ok.
     * If the generation number differs it will be fixed and a new object key is returned.
     * 
     * @param objectKey the key of object we are looking for
     * @param offset the offset where to look
     * @param xrefOffset a map with with all known xref entries
     * @return returns the found/fixed object key
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefTable,org.apache.pdfbox.pdfparser.XrefParser:parseXrefTable(long),577,691,"/**
 * Parses an XRef table from the PDF source.
 * @param startByteOffset starting byte offset of the XRef table
 * @return true if parsing is successful, false otherwise
 */","* This will parse the xref table from the stream and add it to the state
     * The XrefTable contents are ignored.
     * @param startByteOffset the offset to start at
     * @return false on parsing error
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,fillGapsWithFreeEntries,org.apache.pdfbox.pdfwriter.COSWriter:fillGapsWithFreeEntries(),801,844,"/**
 * Fills gaps in XRef entries with free entries.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getObjectKey,org.apache.pdfbox.pdfwriter.COSWriter:getObjectKey(org.apache.pdfbox.cos.COSBase),1067,1106,"/**
* Retrieves or assigns a unique object key for a given PDF object.
* @param obj the PDF object to process
* @return the COSObjectKey associated with the object
*/","* This will get the object key for the object.
     *
     * @param obj The object to get the key for.
     *
     * @return The object key for the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSObjectPool.java,put,"org.apache.pdfbox.pdfwriter.compress.COSObjectPool:put(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",59,83,"/**
* Adds a COSBase object to the pool with a specified or generated key.
* @param key desired key for the object, may be null
* @param object COSBase object to add
* @return actual key used for the object, or null if not added
*/","* Update the key and object maps.
     *
     * @param key The key, that shall be added.
     * @param object The object, that shall be added.
     * @return The actual key, the object has been added for.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream),237,240,"/**
 * Initializes a COSWriter with an OutputStream and default compression parameters.
 * @param outputStream destination for writing COS data
 */","* COSWriter constructor.
     *
     * @param outputStream The output stream to write the PDF.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,<init>,"org.apache.pdfbox.pdfwriter.COSWriter:<init>(java.io.OutputStream,org.apache.pdfbox.io.RandomAccessRead,java.util.Set)",289,307,"/**
* Initializes a new COSWriter with specified output stream and input data.
* @param outputStream target stream to write PDF content
* @param inputData source of PDF data
* @param objectsToWrite set of COSDictionary objects to be written
* @throws IOException if an I/O error occurs
*/","* Constructor for incremental updates with a list of objects to write. This allows to
     * include objects even if there is no path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only
     * dictionaries are supported; if you need to update other objects classes, then add their
     * parent dictionary.
     *
     * @param outputStream output stream where the new PDF data will be written.
     * @param inputData random access read containing source PDF data.
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateInfo.java,setNeedToBeUpdated,org.apache.pdfbox.cos.COSUpdateInfo:setNeedToBeUpdated(boolean),41,44,"/**
 * Sets the update state flag.
 * @param flag indicates whether an update is needed
 */","* Set the update state of the dictionary for the COSWriter. This indicates whether an object is
     * to be written when there is an incremental save.
     *
     * @param flag the update state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(),219,222,"/**
 * Calls update with default fullUpdate flag.
 */","* Calls {@link #update(boolean)} with {@code true} as the new update state.<br>
     * This shall only then have an effect, if {@link #isAcceptingUpdates()} returns {@code true}.
     *
     * @see #update(boolean)
     * @see #updated
     * @see #isAcceptingUpdates()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,"org.apache.pdfbox.cos.COSArray:getString(int,java.lang.String)",418,430,"/**
 * Retrieves a string from the list at the specified index.
 * @param index position in the list
 * @param defaultValue value to return if index is out of bounds or object is not a COSString
 * @return string at the index or default value
 */","* Get an entry in the array that is expected to be a COSName.
     * @param index The index into the array.
     * @param defaultValue The value to return if it is null.
     * @return The value at the index or defaultValue if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName),651,664,"/**
 * Retrieves the string value of a dictionary object by key.
 * @param key the key to look up in the dictionary
 * @return the string representation of the value or null if not applicable
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName),716,725,"/**
 * Retrieves string value for a given key.
 * @param key the key to look up in the dictionary
 * @return the string value or null if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,equals,org.apache.pdfbox.cos.COSString:equals(java.lang.Object),274,284,"/**
* Checks equality with another COSString.
* @param obj object to compare
* @return true if equal, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,toString,org.apache.pdfbox.cos.COSString:toString(),293,297,"/**
 * Returns string representation of COSString.
 * @return Formatted string with enclosed content
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,convertBasicTypesToMap,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:convertBasicTypesToMap(org.apache.pdfbox.cos.COSDictionary),230,270,"/**
* Converts basic COS types in a dictionary to Java objects.
* @param map input COSDictionary with basic types
* @return COSDictionaryMap with converted Java objects or null if input is null
* @throws IOException for unknown object types
*/","* This will take a COS dictionary and convert it into COSDictionaryMap.  All cos
     * objects will be converted to their primitive form.
     *
     * @param map The COS mappings.
     * @return A standard java map.
     * @throws IOException If there is an error during the conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:getFile(),55,59,"/**
 * Retrieves the file content as a string.
 * @return The content of the file as a string.
 */","* This will get the file name.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getOption(),81,84,"/**
 * Retrieves the string value of the first option.
 * @return The string representation of the first option or null if not applicable.
 */","* This will get the string of one of the available options. A required element.
     *
     * @return An available option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:getDefaultAppearanceString(),101,104,"/**
 * Retrieves default appearance string.
 * @return default appearance as a string
 */","* This will get the string of default appearance string. A required element.
     *
     * @return A default appearance string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,getNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:getNamedDestination(),88,101,"/**
 * Retrieves the string value of a named destination.
 * @return The name as a string, or null if not applicable
 */","* This will get the name of the destination.
     *
     * @return The name of the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/FieldUtils.java,getPairableItems,"org.apache.pdfbox.pdmodel.interactive.form.FieldUtils:getPairableItems(org.apache.pdfbox.cos.COSBase,int)",133,167,"/**
* Extracts strings from a PDF item based on index.
* @param items COSBase object containing the data
* @param pairIdx index to access within nested arrays (0 or 1)
* @return List of extracted strings
*/","* Return either one of a list which can have two-element arrays entries.
     * <p>
     * Some entries in a dictionary can either be an array of elements
     * or an array of two-element arrays. This method will either return
     * the elements in the array or in case of two-element arrays, the element
     * designated by the pair index
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the items contain
     * two-element arrays and the index is not 0 or 1.
     * </p>
     * 
     * @param items the array of elements or two-element arrays
     * @param pairIdx the index into the two-element array
     * @return a List of single elements",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getExportValues(),249,262,"/**
 * Retrieves export values from PDF attributes.
 * @return List of export values as strings
 */","* This will get the (optional) export values.
     * 
     * <p>The export values are defined in the field dictionaries /Opt key.</p>
     * 
     * <p>The option values are used to define the export values
     * for the field to 
     * <ul>
     *  <li>hold values in non-Latin writing systems as name objects, which represent the field value, are limited
     *      to PDFDocEncoding
     *  </li>
     *  <li>allow radio buttons having the same export value to be handled independently
     *  </li>
     * </ul>
     * 
     * @return List containing all possible export values. If there is no /Opt entry an empty list will be returned.
     * 
     * @see #getOnValues()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueFor,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueFor(org.apache.pdfbox.cos.COSName),451,463,"/**
 * Retrieves values associated with a given COSName.
 * @param name the COSName key to search for
 * @return List of strings corresponding to the key, or empty list if not found
 */","* Returns the selected values, or an empty List, for the given key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearance(),74,84,"/**
* Retrieves the default appearance string.
* @return default appearance as a String or null if not found
*/","* Get the default appearance.
     * 
     * This is an inheritable attribute.
     * 
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     * 
     * @return the DA element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,<init>,org.apache.pdfbox.cos.COSString:<init>(java.lang.String),87,90,"/**
 * Constructs a COSString with given text.
 * @param text string content to be stored
 */","* Creates a new <i>text string</i> from a Java String.
     *
     * @param text The string value of the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isStandard14,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isStandard14(),370,393,"/**
* Checks if the font is a standard 14 font based on Acrobat's behavior.
* @return true if it is a standard 14 font, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/ASCII85Filter.java,encode,"org.apache.pdfbox.filter.ASCII85Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",43,52,"/**
* Encodes data using ASCII85 encoding.
* @param input stream containing data to encode
* @param encoded output stream for the encoded data
* @param parameters additional encoding parameters (unused)
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode1D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode1D(),152,173,"/**
 * Decodes 1D barcode data.
 * @throws IOException if an I/O error occurs during decoding
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decode2D,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decode2D(),175,242,"/**
 * Decodes a 2D pattern using Huffman coding.
 * Swaps reference and current row data structures.
 * Reads encoded values to reconstruct the pattern.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encode2D,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encode2D(),167,220,"/**
* Encodes a 2D image using specific modes.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",58,134,"/**
 * Decodes JPEG image data.
 * @param encoded input stream containing encoded JPEG data
 * @param decoded output stream for decoded image data
 * @param parameters COSDictionary with decoding parameters
 * @param index index of the image to decode
 * @param options DecodeOptions with additional settings
 * @return DecodeResult object with parameters
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.io.InputStream),162,166,"/**
* Initializes a new PDVisibleSignDesigner with an image.
* @param imageStream InputStream containing the signature image
* @throws IOException if there is an issue reading the input stream
*/","* Constructor usable for signing existing signature fields.
     *
     * @param imageStream image as a stream
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,signatureImage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:signatureImage(java.lang.String),270,277,"/**
 * Sets signature image from file path.
 * @param path file path to the signature image
 * @return PDVisibleSignDesigner instance for method chaining
 * @throws IOException if file cannot be read
 */","* Set the image for the signature.
     *
     * @param path Path of the image file.
     * @return Visible Signature Configuration Object
     * @throws IOException if the image for the signature could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,"org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[],int,int)",297,327,"/**
* Writes byte array with PNG predictor handling.
* @param bytes source byte array
* @param off offset in the source byte array
* @param len number of bytes to write
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,flush,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:flush(),349,359,"/**
* Completes the last row with zeros and flushes data.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.common.PDStream),36,39,"/**
 * Constructs a PDTransparencyGroup from a given stream.
 * @param stream the source stream containing transparency group data
 */","* Creates a Transparency Group for reading.
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",222,233,"/**
* Creates a holder form with specified resources and dimensions.
* @param holderFormResources PDF resources for the form
* @param holderFormStream stream containing form data
* @param bbox bounding box defining form area
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle)",269,279,"/**
* Creates an inner form with specified resources, stream, and bounding box.
* @param innerFormResources resources for the inner form
* @param innerFormStream stream containing form data
* @param bbox bounding box defining form area
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:readEncodingFromFont(),283,304,"/**
* Reads encoding from font, preferring AFM if available.
* @return Encoding object based on font type
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:readEncodingFromFont(),492,513,"/**
 * Reads encoding from font.
 * @return Encoding object based on font type
 * @throws IOException if reading fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(),1052,1067,"/**
 * Reads a string from the input source.
 * @return The read string or an empty string if no valid characters are found.
 * @throws IOException if an I/O error occurs
 */","* This will read the next string from the stream.
     *
     * @return The string that was read from the stream, never null.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readExpectedString,"org.apache.pdfbox.pdfparser.BaseParser:readExpectedString(char[],boolean)",1076,1089,"/**
 * Reads and verifies an expected string from the input source.
 * @param expectedString the string to be read
 * @param skipSpaces flag to skip spaces before and after reading
 * @throws IOException if the expected string does not match or an I/O error occurs
 */","* Reads given pattern from {@link #source}. Skipping whitespace at start and end if wanted.
     * 
     * @param expectedString pattern to be skipped
     * @param skipSpaces if set to true spaces before and after the string will be skipped
     * @throws IOException if pattern could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readString,org.apache.pdfbox.pdfparser.BaseParser:readString(int),1117,1140,"/**
 * Reads a string of specified length from the input source.
 * @param length maximum number of characters to read
 * @return the read string or an empty string if no valid characters are found
 * @throws IOException if an I/O error occurs
 */","* This will read the next string from the stream up to a certain length.
     *
     * @param length The length to stop reading at.
     *
     * @return The string that was read from the stream of length 0 to length.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readInt,org.apache.pdfbox.pdfparser.BaseParser:readInt(),1387,1406,"/**
 * Reads and parses an integer from the input.
 * @return parsed integer value
 * @throws IOException if parsing fails or unexpected data is encountered
 */","* This will read an integer from the stream.
     *
     * @return The integer that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readLong,org.apache.pdfbox.pdfparser.BaseParser:readLong(),1416,1434,"/**
 * Reads and parses a long integer from the input source.
 * @return parsed long value
 * @throws IOException if parsing fails or invalid data is encountered
 */","* This will read an long from the stream.
     *
     * @return The long that was read from the stream.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,calculateXRefFixedOffset,org.apache.pdfbox.pdfparser.XrefParser:calculateXRefFixedOffset(long),326,343,"/**
 * Calculates fixed offset for XRef table/stream.
 * @param objectOffset initial offset of the object
 * @return fixed offset or 0 if not found
 * @throws IOException if an I/O error occurs
 */","* Try to find a fixed offset for the given xref table/stream.
     * 
     * @param objectOffset the given offset where to look at
     * @return the fixed offset
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeUserPassword(byte[],byte[],int,byte[],int,int,boolean)",854,900,"/**
* Computes user password encryption.
* @param password user's password bytes
* @param owner document owner bytes
* @param permissions access permissions
* @param id unique identifier bytes
* @param encRevision encryption revision
* @param keyLengthInBytes length of encryption key in bytes
* @param encryptMetadata flag to encrypt metadata
* @return encrypted password bytes or empty array for unsupported revisions
* @throws IOException if an I/O error occurs
*/","* This will compute the user password hash.
     *
     * @param password The plain text password.
     * @param owner The owner password hash.
     * @param permissions The document permissions.
     * @param id The document id.
     * @param encRevision The revision of the encryption.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return The user password.
     *
     * @throws IOException if the password could not be computed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword234(byte[],byte[],int,int)",671,701,"/**
* Computes and returns the encrypted user password.
* @param ownerPassword owner's password bytes
* @param owner user identifier bytes
* @param encRevision encryption revision level
* @param length key length
* @return encrypted password bytes
* @throws IOException if encryption fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeOwnerPassword(byte[],byte[],int,int)",914,945,"/**
 * Computes the owner password for encryption.
 * @param ownerPassword the owner's password
 * @param userPassword the user's password
 * @param encRevision the encryption revision
 * @param length the expected length of the key
 * @return the computed owner password as a byte array
 * @throws IOException if there is an error during computation
 */","* Compute the owner entry in the encryption dictionary.
     *
     * @param ownerPassword The plaintext owner password.
     * @param userPassword The plaintext user password.
     * @param encRevision The revision number of the encryption algorithm.
     * @param length The length of the encryption key.
     *
     * @return The o entry of the encryption dictionary.
     *
     * @throws IOException if the owner password could not be computed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Concatenate.java,process,"org.apache.pdfbox.contentstream.operator.state.Concatenate:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,68,"/**
* Concatenates a transformation matrix to the current graphics state.
* @param operator the operator object
* @param arguments list of COSBase arguments representing matrix elements
* @throws IOException if an I/O error occurs or argument count is less than 6
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveText.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,77,"/**
* Processes operator with two numeric arguments to update text line matrix.
* @param operator the PDF operator being processed
* @param arguments list of COSBase arguments, must contain at least two numbers
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,rotate,org.apache.pdfbox.util.Matrix:rotate(double),278,281,"/**
 * Rotates the current matrix by a given angle.
 * @param theta angle in radians to rotate
 */","* Rotates this matrix by the given factors.
     *
     * @param theta The angle of rotation measured in radians",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,applyTextAdjustment,"org.apache.pdfbox.contentstream.PDFStreamEngine:applyTextAdjustment(float,float)",722,726,"/**
 * Applies a translation to the current text position.
 * @param tx horizontal translation
 * @param ty vertical translation
 */","* Applies a text position adjustment from the TJ operator. May be overridden in subclasses.
     *
     * @param tx x-translation
     * @param ty y-translation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,translate,org.apache.pdfbox.util.Matrix:translate(org.apache.pdfbox.util.Vector),237,240,"/**
 * Translates the object by the vector's x and y components.
 * @param vector translation vector specifying x and y displacements
 */","* Translates this matrix by the given vector.
     *
     * @param vector 2D vector",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,concatenate,"org.apache.pdfbox.util.Matrix:concatenate(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.util.Matrix)",434,437,"/**
 * Concatenates two matrices by multiplying them in reverse order.
 * @param a first matrix
 * @param b second matrix
 * @return result of b multiplied by a
 */","* Produces a copy of the first matrix, with the second matrix concatenated.
     *
     * @param a The matrix to copy.
     * @param b The matrix to concatenate.
     * 
     * @return a copy of the first matrix with the second matrix concatenated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.cos.COSDocument),202,205,"/**
 * Constructs a new PDDocument from a COSDocument.
 * @param doc the underlying COSDocument
 */","* Constructor that uses an existing document. The COSDocument that is passed in must be valid.
     * 
     * @param doc The COSDocument that this document wraps.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStroke,org.apache.pdfbox.rendering.PageDrawer:getStroke(),705,740,"/**
 * Creates a Stroke object based on current graphics state.
 * @return A Stroke object configured with line width, cap, join, and dash settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:getTriangles(),167,171,"/**
* Generates shaded triangles from patch coordinates and colors.
* @return List of ShadedTriangle objects
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,token,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:token(java.lang.CharSequence),68,73,"/**
 * Processes a character sequence as a token.
 * @param text the input character sequence to process
 */",{@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanNewLine,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanNewLine(),220,232,"/**
* Scans and processes a new line character(s).
* Handles CRLF as one newline.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanWhitespace,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanWhitespace(),234,254,"/**
* Scans and appends whitespace characters to the buffer.
* @param state current parsing state, expected to be WHITESPACE
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanComment,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanComment(),256,276,"/**
* Scans and appends comment characters to buffer until newline or EOF.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,scanToken,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:scanToken(),278,315,"/**
* Scans and processes a token.
* Handles special characters and appends to buffer.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getCurrentAccessPermission,org.apache.pdfbox.pdmodel.PDDocument:getCurrentAccessPermission(),1355,1362,"/**
 * Returns current access permission.
 * Initializes to owner permissions if not set.
 * @return AccessPermission object
 */","* Returns the access permissions granted when the document was decrypted. If the document was not decrypted this
     * method returns the access permission for a document owner (ie can do everything). The returned object is in read
     * only mode so that permissions cannot be changed. Methods providing access to content should rely on this object
     * to verify if the current user is allowed to proceed.
     * 
     * @return the access permissions for the current user on the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeRevisionNumber,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeRevisionNumber(int),109,131,"/**
 * Computes the appropriate revision number based on version and permissions.
 * @param version current document version
 * @return computed revision number
 */","* Computes the revision version of the StandardSecurityHandler to
     * use regarding the version number and the permissions bits set.
     * See PDF Spec 1.6 p98
     * 
     * @param version The version number.
     *
     * @return The computed revision number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAESother,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAESother(byte[],java.io.InputStream,java.io.OutputStream,boolean)",317,346,"/**
* Encrypts or decrypts data using AES.
* @param finalKey encryption key
* @param data input stream containing the data to process
* @param output output stream for processed data
* @param decrypt true if decrypting, false if encrypting
* @throws IOException on I/O errors or security issues
*/","* Encrypt or decrypt data with AES with key length other than 256 bits.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataAES256,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataAES256(java.io.InputStream,java.io.OutputStream,boolean)",357,390,"/**
 * Encrypts or decrypts data using AES-256.
 * @param data input stream containing the data to process
 * @param output output stream for the processed data
 * @param decrypt true to decrypt, false to encrypt
 * @throws IOException if an I/O error occurs
 */","* Encrypt or decrypt data with AES256.
     *
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],byte[],java.io.OutputStream)",300,304,"/**
* Encrypts data using RC4 algorithm.
* @param finalKey encryption key
* @param input data to encrypt
* @param output stream for encrypted data
* @throws IOException on I/O error
*/","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/RC4Cipher.java,write,"org.apache.pdfbox.pdmodel.encryption.RC4Cipher:write(java.io.InputStream,java.io.OutputStream)",139,147,"/**
* Writes data from InputStream to OutputStream.
* @param data input stream containing the data to be written
* @param output output stream where data will be written
* @throws IOException if an I/O error occurs
*/","* This will encrypt and write the data.
     *
     * @param data The data to encrypt.
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing to the output stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepQuery,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepQuery(java.lang.String),48,51,"/**
 * Prepares string for SASL using default options.
 * @param str input string to prepare
 * @return prepared string suitable for SASL
 */","* Return the {@code SASLPrep}-canonicalised version of the given {@code str} for use as a query
     * string. This implements the {@code SASLPrep} algorithm defined in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a query string is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SaslPrep.java,saslPrepStored,org.apache.pdfbox.pdmodel.encryption.SaslPrep:saslPrepStored(java.lang.String),66,69,"/**
 * Prepares string using SASLprep without allowing unmapped characters.
 * @param str input string to prepare
 * @return prepared string or original if preparation fails
 */","* Return the {@code SASLPrep}-canonicalised version of the given
     * @code str} for use as a stored string. This implements the {@code SASLPrep} algorithm defined
     * in
     * <a href=""https://tools.ietf.org/html/rfc4013"">RFC 4013</a>.
     *
     * @param str The string to canonicalise.
     * @return The canonicalised string.
     * @throws IllegalArgumentException if the string contained prohibited codepoints, or broke the
     * requirements for bidirectional character handling.
     * @see <a href=""https://tools.ietf.org/html/rfc3454#section-7"">RFC 3454, Section 7</a> for
     * discussion of what a stored string is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,createDERForRecipient,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:createDERForRecipient(byte[],java.security.cert.X509Certificate)",471,521,"/**
* Encrypts data using RC2_CBC algorithm and creates a DER-encoded EnvelopedData structure.
* @param in input data to encrypt
* @param cert recipient's X509 certificate
* @return ASN1Primitive representing the encrypted content info
* @throws IOException if encryption fails or provider issues occur
* @throws GeneralSecurityException for cryptographic errors
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeHash2A,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeHash2A(byte[],byte[],byte[])",1116,1122,"/**
 * Computes hash using specified parameters.
 * @param password user's password bytes
 * @param salt unique salt bytes
 * @param u additional user-specific bytes
 * @return computed hash bytes
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeLine,org.apache.pdfbox.text.PDFTextStripper:writeLine(java.util.List),1857,1870,"/**
 * Writes a line of text with positions.
 * @param line list of words with text positions
 */","* Write a list of string containing a whole line of a document.
     * 
     * @param line a list with the words of the given line
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,getFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider$FSFontInfo:getFont(),131,157,"/**
* Retrieves or loads a FontBoxFont.
* @return loaded FontBoxFont or null if not found
*/","* {@inheritDoc}
         * <p>
         * The method returns null if there is there was an error opening the font.
         *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,saveDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:saveDiskCache(),410,434,"/**
* Saves font information to disk cache.
* Handles exceptions during file writing and security issues.
*/",* Saves the font metadata cache to disk.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,loadDiskCache,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:loadDiskCache(java.util.List),493,652,"/**
 * Loads font information from disk cache.
 * @param files list of font files to check
 * @return list of FSFontInfo objects or null if cache is invalid
 */",* Loads the font metadata cache from disk.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,setProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:setProvider(org.apache.pdfbox.pdmodel.font.FontProvider),145,149,"/**
* Sets the font provider and updates font information.
* @param fontProvider new FontProvider instance
*/",* Sets the font service provider.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadedTriangle.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadedTriangle:<init>(java.awt.geom.Point2D[],float[][])",58,92,"/**
* Initializes a shaded triangle with vertices and colors.
* @param p array of three Point2D representing the triangle's corners
* @param c 2D float array of colors for each corner
*/","* Constructor.
     *
     * @param p an array of the 3 vertices of a triangle
     * @param c an array of color corresponding the vertex array p",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1CFont:getHeight(int),367,387,"/**
 * Retrieves the height of a glyph by its code.
 * @param code glyph identifier
 * @return height of the glyph or 0 if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/ToUnicodeWriter.java,writeTo,org.apache.pdfbox.pdmodel.font.ToUnicodeWriter:writeTo(java.io.OutputStream),91,176,"/**
 * Writes a CMap file for CID to Unicode mapping.
 * @param out OutputStream to write the CMap data
 * @throws IOException if an I/O error occurs
 */","* Writes the CMap as ASCII to the given output stream.
     *
     * @param out ASCII output stream
     * @throws IOException if the stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/GlyphList.java,load,"org.apache.pdfbox.pdmodel.font.encoding.GlyphList:load(java.lang.String,int)",48,64,"/**
* Loads glyph list from a specified resource file.
* @param filename name of the glyph list file
* @param numberOfEntries expected number of entries in the glyph list
* @return GlyphList object containing parsed data
* @throws RuntimeException if an I/O error occurs
*/",* Loads a glyph list from disk.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getWidthFromFont(int),368,379,"/**
* Retrieves the width of a character from the font.
* @param code character code point
* @return width in standard units (typically 1000 per em)
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getHeight,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getHeight(int),381,391,"/**
* Retrieves the height of a glyph by its code.
* @param code unique glyph identifier
* @return height of the glyph or 0 if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getGIDToCode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getGIDToCode(),452,465,"/**
* Returns a map of GIDs to codes.
* @return Map with GIDs as keys and corresponding codes as values
* @throws IOException if an I/O error occurs
*/","* Inverts the font's code -&gt; GID mapping. Any duplicate (GID -&gt; code) mappings will be lost.
     * 
     * @return the GID for the given code
     * 
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:hasGlyph(int),594,598,"/**
* Checks if a glyph exists for a given Unicode code point.
* @param code Unicode code point to check
* @return true if glyph exists, false otherwise
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1CFont:hasGlyph(int),181,195,"/**
 * Checks if a glyph exists for the given character code.
 * @param code character code to check
 * @return true if the glyph exists, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getPath(int),197,215,"/**
 * Retrieves a path for a given character code.
 * @param code character encoding code
 * @return GeneralPath object representing the glyph, or empty path if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1CFont:getNormalizedPath(int),217,240,"/**
* Retrieves normalized glyph path for a character code.
* @param code character encoding code
* @return GeneralPath object representing the glyph or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getWidthFromFont(int),349,359,"/**
* Retrieves character width from font.
* @param code character code
* @return transformed character width
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,codeToName,org.apache.pdfbox.pdmodel.font.PDType1Font:codeToName(int),561,565,"/**
* Converts encoding code to font name.
* @param code character encoding code
* @return font name or "".notdef"" if not found
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(java.lang.String),616,629,"/**
* Retrieves the path for a given glyph name.
* @param name glyph name to retrieve path for
* @return GeneralPath object representing the glyph's path or an empty path if not embedded and name is "".notdef""
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType1Font:hasGlyph(java.lang.String),650,654,"/**
* Checks if font contains specified glyph.
* @param name glyph name to check
* @return true if glyph exists, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGB(float[]),140,145,"/**
* Converts color values from current space to RGB.
* @param value color values in current color space
* @return RGB color values as a float array
* @throws IOException if an I/O error occurs during initialization
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceCMYK.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceCMYK:toRGBImage(java.awt.image.WritableRaster),155,160,"/**
 * Converts a writable raster to an RGB image.
 * @param raster input raster data
 * @return BufferedImage in RGB format
 * @throws IOException if conversion fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,checkConverterState,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:checkConverterState(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState),591,648,"/**
* Validates PNG converter state.
* @param state PNGConverterState object to validate
* @return true if valid, false otherwise
*/","* Check if the converter state is sane.
     *
     * @param state the parsed converter state
     * @return true if the state seems plausible",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,getTriangles,org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:getTriangles(),123,132,"/**
* Generates shaded triangles from Bezier curves.
* @return List of ShadedTriangle objects representing the surface
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endTextClip,org.apache.pdfbox.rendering.PageDrawer:endTextClip(),474,493,"/**
* Ends text clipping by intersecting current clip with buffered text shapes.
*/","* End buffering the text clipping path, if any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,clip,org.apache.pdfbox.rendering.PageDrawer:clip(int),958,979,"/**
 * Sets the clipping path for subsequent drawing operations.
 * @param windingRule rule to determine how paths are filled
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,setClip,org.apache.pdfbox.rendering.PageDrawer:setClip(),411,424,"/**
 * Sets the current graphics clip.
 * @param graphics the Graphics2D object to set the clip on
 */","* Sets the clipping path using caching for performance. We track lastClip manually because
     * {@link Graphics2D#getClip()} returns a new object instead of the same one passed to
     * {@link Graphics2D#setClip(java.awt.Shape) setClip()}. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,getDataToSign,org.apache.pdfbox.pdfwriter.COSWriter:getDataToSign(),931,949,"/**
* Retrieves data to be signed for a PDF.
* @return InputStream containing the data range to sign
* @throws IOException if an I/O error occurs
*/","* Return the stream of PDF data to be signed. Clients should use this method only to create
     * signatures externally. {@link #write(PDDocument)} method should have been called prior. The
     * created signature should be set using {@link #writeExternalSignature(byte[])}.
     * <p>
     * When {@link SignatureInterface} instance is used, COSWriter obtains and writes the signature
     * itself.
     * </p>
     *
     * @return data stream to be signed
     * @throws IllegalStateException if PDF is not prepared for external signing
     * @throws IOException if input data is closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/COSFilterInputStream.java,read,org.apache.pdfbox.pdmodel.interactive.digitalsignature.COSFilterInputStream:read(byte[]),61,65,"/**
* Reads data into byte array.
* @param b destination buffer
* @return number of bytes read or -1 if end of stream
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,mergeDiacritic,org.apache.pdfbox.text.TextPosition:mergeDiacritic(org.apache.pdfbox.text.TextPosition),667,745,"/**
 * Merges a diacritic into the text position.
 * @param diacritic the diacritic to merge
 */","* Merge a single character TextPosition into the current object. This is to be used only for
     * cases where we have a diacritic that overlaps an existing TextPosition. In a graphical
     * display, we could overlay them, but for text extraction we need to merge them. Use the
     * contains() method to test if two objects overlap.
     *
     * @param diacritic TextPosition to merge into the current TextPosition.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPositionComparator.java,compare,"org.apache.pdfbox.text.TextPositionComparator:compare(org.apache.pdfbox.text.TextPosition,org.apache.pdfbox.text.TextPosition)",31,69,"/**
* Compares two TextPosition objects based on direction and adjusted coordinates.
* @param pos1 first TextPosition object
* @param pos2 second TextPosition object
* @return negative if pos1 is before pos2, positive if after, zero if equal
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,contains,org.apache.pdfbox.text.TextPosition:contains(org.apache.pdfbox.text.TextPosition),568,608,"/**
* Checks if the current TextPosition overlaps with another by at least 15% in width.
* @param tp2 the other TextPosition to compare
* @return true if there is significant overlap, false otherwise
*/","* Determine if this TextPosition logically contains another (i.e. they overlap and should be
     * rendered on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained in the bounding box of this text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/TextPosition.java,completelyContains,org.apache.pdfbox.text.TextPosition:completelyContains(org.apache.pdfbox.text.TextPosition),618,657,"/**
* Checks if the current TextPosition completely contains another.
* @param tp2 the other TextPosition to check
* @return true if this TextPosition fully encloses tp2, false otherwise
*/","* Determine if this TextPosition perfectly contains another (i.e. the other TextPosition
     * overlaps 100% with this one and fits entirely inside its bounding box when they are rendered
     * on top of each other).
     *
     * @param tp2 The other TestPosition to compare against
     * @return True if tp2 is contained completely inside the bounding box of this text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeParagraphSeparator,org.apache.pdfbox.text.PDFTextStripper:writeParagraphSeparator(),1701,1705,"/**
 * Writes a paragraph separator by ending and starting a new paragraph.
 * @throws IOException if an I/O error occurs during writing
 */","* writes the paragraph separator string to the output.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,isParagraphSeparation,"org.apache.pdfbox.text.PDFTextStripper:isParagraphSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1615,1687,"/**
* Determines if a paragraph separation is needed.
* @param position current text position
* @param lastPosition previous text position
* @param lastLineStartPosition start of the last line
* @param maxHeightForLine maximum height for a line
*/","* tests the relationship between the last text position, the current text position and the last text position that
     * followed a line separator to decide if the gap represents a paragraph separation. This should <i>only</i> be
     * called for consecutive text positions that first pass the line separation test.
     * <p>
     * This base implementation tests to see if the lastLineStartPosition is null OR if the current vertical position
     * has dropped below the last text vertical position by at least 2.5 times the current text height OR if the current
     * horizontal position is indented by at least 2 times the current width of a space character.
     * </p>
     * <p>
     * This also attempts to identify text that is indented under a hanging indent.
     * </p>
     * <p>
     * This method sets the isParagraphStart and isHangingIndent flags on the current position object.
     * </p>
     *
     * @param position the current text position. This may have its isParagraphStart or isHangingIndent flags set upon
     * return.
     * @param lastPosition the previous text position (should not be null).
     * @param lastLineStartPosition the last text position that followed a line separator, or null.
     * @param maxHeightForLine max height for text positions since lasLineStartPosition.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,createWord,"org.apache.pdfbox.text.PDFTextStripper:createWord(java.lang.String,java.util.List)",2039,2042,"/**
* Creates a WordWithTextPositions object.
* @param word raw word text
* @param wordPositions list of TextPosition objects
* @return WordWithTextPositions with normalized word and positions
*/",* Used within {@link #normalize(List)} to create a single {@link WordWithTextPositions} entry.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,parseDate,"org.apache.pdfbox.util.DateConverter:parseDate(java.lang.String,java.text.ParsePosition)",621,690,"/**
 * Parses a date string into a Calendar object.
 * @param text the date string to parse
 * @param initialWhere starting position for parsing
 * @return Calendar object if parsed successfully, null otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,setSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:setSignature(byte[]),45,49,"/**
 * Sets the document's external signature.
 * @param signature byte array containing the signature data
 * @throws IOException if an I/O error occurs during writing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromName,org.apache.pdfbox.pdfwriter.COSWriter:visitFromName(org.apache.pdfbox.cos.COSName),1362,1366,"/**
 * Visits and writes a COSName object to PDF output.
 * @param obj COSName object to be written
 * @throws IOException if writing fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSName,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSName(java.io.OutputStream,org.apache.pdfbox.cos.COSName)",306,310,"/**
 * Writes a COSName to an OutputStream.
 * @param output stream to write to
 * @throws IOException if writing fails
 */","* Write the given {@link COSName} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosName The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeOperand,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeOperand(org.apache.pdfbox.cos.COSName),1479,1483,"/**
 * Writes a COSName operand to the output stream.
 * @param name the COSName to write
 * @throws IOException if an I/O error occurs
 */","* Writes a COSName to the content stream.
     * 
     * @param name the name to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],boolean,java.io.OutputStream)",1644,1696,"/**
* Writes a byte array as a string to an OutputStream.
* @param bytes the byte array to write
* @param forceHex if true, forces writing in hexadecimal format
* @param output the OutputStream to write to
* @throws IOException if an I/O error occurs
*/","* This will output the given text/byte string as a PDF object.
     *
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/IterativeMergeSort.java,sort,"org.apache.pdfbox.util.IterativeMergeSort:sort(java.util.List,java.util.Comparator)",61,78,"/**
* Sorts a list using iterative merge sort.
* @param list the list to be sorted
* @param cmp comparator defining the sort order
*/","* Sorts this list according to the order induced by the specified
     * {@link Comparator}.
     * 
     * @param  <T> the class of the objects in the list
     * @param  list the list to be sorted.
     * @param  cmp the comparator to determine the order of the list.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Constructs a SetNonStrokingColorN operation.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a PDF stream engine for setting non-stroking device CMYK color.
 * @param context the PDF stream engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Initializes non-stroking device gray color in PDF.
 * @param context PDF processing context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
 * Constructs a new instance with the given PDF stream engine.
 * @param context the PDF stream engine to use
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorN.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingColorN:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),31,34,"/**
 * Initializes stroking color setting in PDF stream engine.
 * @param context PDFStreamEngine instance to operate on
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Initializes StrokingDeviceCMYKColor with a PDFStreamEngine.
 * @param context PDF processing engine context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),37,40,"/**
* Sets stroking device gray color.
* @param context PDF processing context
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,<init>,org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:<init>(org.apache.pdfbox.contentstream.PDFStreamEngine),36,39,"/**
 * Constructs a new instance of SetStrokingDeviceRGBColor.
 * @param context PDF rendering context
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/LegacyFillNonZeroRule.java,<init>,org.apache.pdfbox.contentstream.operator.graphics.LegacyFillNonZeroRule:<init>(org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine),30,33,"/**
* Initializes a new instance of LegacyFillNonZeroRule.
* @param context PDF graphics stream engine context
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(java.lang.String),62,70,"/**
* Initializes PDF marked content extraction with specified encoding.
* @param encoding character encoding for text extraction
*/","* Constructor. Will apply encoding-specific conversions to the output text.
     *
     * @param encoding The encoding that the output will be written in.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,<init>,org.apache.pdfbox.text.PDFTextStripper:<init>(),196,201,"/**
* Initializes PDFTextStripper with content operators.
*/",* Instantiate a new PDFTextStripper object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDictionaryObject,org.apache.pdfbox.cos.COSDictionary:getDictionaryObject(java.lang.String),144,147,"/**
 * Retrieves an object from the dictionary using a string key.
 * @param key the dictionary key as a string
 * @return the corresponding COSBase object or null if not found
 */","* This will get an object from this dictionary. If the object is a reference then it will dereference it and get it
     * from the document. If the object is COSNull then null will be returned.
     *
     * @param key The key to the object that we are getting.
     *
     * @return The object that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getItem,org.apache.pdfbox.cos.COSDictionary:getItem(java.lang.String),1189,1192,"/**
 * Retrieves item by key from PDF dictionary.
 * @param key item identifier as a string
 * @return COSBase object associated with the key
 */","* This will do a lookup into the dictionary.
     * 
     * @param key The key to the object.
     *
     * @return The item that matches the key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,containsKey,org.apache.pdfbox.cos.COSDictionary:containsKey(java.lang.String),1299,1302,"/**
 * Checks if a key exists in the map.
 * @param name key to check as a string
 * @return true if the key exists, false otherwise
 */","* @see java.util.Map#containsKey(Object)
     *
     * @param name The key to find in the map.
     * @return true if the map contains this key.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FilterFactory.java,getFilter,org.apache.pdfbox.filter.FilterFactory:getFilter(java.lang.String),77,80,"/**
* Retrieves a filter by name.
* @param filterName name of the filter
* @return Filter object or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns a filter instance given its name as a string.
     * @param filterName the name of the filter to retrieve
     * @return the filter that matches the name
     * @throws IOException if the filter name was invalid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSName,org.apache.pdfbox.pdfparser.BaseParser:parseCOSName(),861,918,"/**
 * Parses a PDF name from the input source.
 * @return COSName object representing the parsed name
 * @throws IOException if an I/O error occurs or parsing fails
 */","* This will parse a PDF name from the stream.
     *
     * @return The parsed PDF name.
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/SymbolEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.SymbolEncoding:getCOSObject(),238,242,"/**
 * Returns the COS object for SymbolEncoding.
 * @return COSBase object representing SymbolEncoding
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/ZapfDingbatsEncoding.java,getCOSObject,org.apache.pdfbox.pdmodel.font.encoding.ZapfDingbatsEncoding:getCOSObject(),237,241,"/**
 * Returns the COS object for ZapfDingbats encoding.
 * @return COSBase object representing ZapfDingbats encoding
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDColor:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",51,79,"/**
* Constructs a PDColor from a COSArray and color space.
* @param array PDF array containing color components and optional pattern name
* @param colorSpace the color space associated with the color
*/","* Creates a PDColor containing the given color value.
     * @param array a COS array containing the color value
     * @param colorSpace color space in which the color value is defined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceColorSpace.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceColorSpace:getCOSObject(),35,39,"/**
 * Returns the PDF name as a COSBase object.
 * @return COSBase representation of the name
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSString.java,parseHex,org.apache.pdfbox.cos.COSString:parseHex(java.lang.String),136,193,"/**
* Parses a hexadecimal string into a COSString.
* @param hex the input hexadecimal string
* @return COSString representing parsed bytes
* @throws IOException if the hex string is invalid
*/","* This will create a COS string from a string of hex characters.
     *
     * @param hex A hex string.
     * @return A cos string with the hex characters converted to their actual bytes.
     * @throws IOException If there is an error with the hex string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSIntegers,org.apache.pdfbox.cos.COSArray:ofCOSIntegers(java.util.List),751,756,"/**
* Converts a list of integers to a COSArray.
* @param integer List of integers to convert
* @return COSArray containing COSIntegers
*/","* This will take a list of integer objects and return a COSArray of COSInteger objects.
     *
     * @param integer A list of integers
     *
     * @return An array of COSInteger objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSNames,org.apache.pdfbox.cos.COSArray:ofCOSNames(java.util.List),765,770,"/**
* Converts a list of strings to a COSArray of COSNames.
* @param strings list of string names
* @return COSArray containing COSName objects
*/","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,ofCOSStrings,org.apache.pdfbox.cos.COSArray:ofCOSStrings(java.util.List),779,784,"/**
* Converts a list of strings to a COSArray of COSStrings.
* @param strings list of input strings
* @return COSArray containing COSString objects
*/","* This will take a list of string objects and return a COSArray of COSName objects.
     *
     * @param strings A list of strings
     *
     * @return An array of COSName objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(),55,59,"/**
* Initializes a new COSArrayList with empty underlying structures.
* @param none
* @return none
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",95,101,"/**
* Initializes a COSArrayList with a dictionary and key.
* @param dictionary the parent COSDictionary
* @param dictionaryKey the key for the list in the dictionary
*/","* This constructor is to be used if the array doesn't exist, but is to be created and added to
     * the parent dictionary as soon as the first element is added to the array.
     *
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is
     * added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,convertListOfByteArraysToCOSArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:convertListOfByteArraysToCOSArray(java.util.List),640,645,"/**
 * Converts a list of byte arrays to a COSArray.
 * @param strings list of byte arrays to convert
 * @return COSArray containing COSString objects
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:<init>(),43,46,"/**
 * Initializes a new PDPageDestination with an empty COSArray.
 */","* Constructor to create empty page destination.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float,float,float)",117,125,"/**
* Initializes a PDRectangle with specified dimensions.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
*/","* Constructor.
     *
     * @param x the x coordinate of the rectangle
     * @param y the y coordinate of the rectangle
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.fontbox.util.BoundingBox),132,140,"/**
* Constructs a PDRectangle from a BoundingBox.
* @param box bounding box defining rectangle corners
*/","* Constructor.
     *
     * @param box the bounding box to be used for the rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFilters(java.util.List),257,260,"/**
* Sets the list of filters for the stream.
* @param filters list of COSName filter identifiers
*/","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(),37,45,"/**
 * Initializes a PDFourColours object with four null values.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setAlternateColorSpaces,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setAlternateColorSpaces(java.util.List),496,504,"/**
* Sets alternate color spaces.
* @param list of PDColorSpace objects
*/","* Sets the list of alternateColorSpace color spaces.
     *
     * @param list the list of color space objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,org.apache.pdfbox.cos.COSDocument:createCOSStream(),172,180,"/**
* Creates a new COSStream and adds it to the document's collection.
* @return the newly created COSStream
*/","* Creates a new COSStream using the current configuration for scratch files.
     * 
     * @return the new COSStream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,org.apache.pdfbox.cos.COSStream:<init>(),69,72,"/**
 * Constructs a new COSStream with no initial filter.
 */","* Creates a new stream with an empty dictionary.
     * <p>
     * Try to avoid using this constructor because it creates a new scratch file in memory. Instead,
     * use {@link COSDocument#createCOSStream() document.getDocument().createCOSStream()} which will
     * use the existing scratch file (in memory or in temp file) of the document.
     * </p>",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,<init>,"org.apache.pdfbox.cos.COSStream:<init>(org.apache.pdfbox.io.RandomAccessStreamCache,org.apache.pdfbox.io.RandomAccessReadView)",93,99,"/**
* Initializes COSStream with cache and read view.
* @param streamCache cache for stream data
* @param randomAccessReadView read view for stream content
* @throws IOException if an I/O error occurs
*/","* Creates a new stream with an empty dictionary. Data is read from the given random accessview. Written data is
     * stored in the given scratch file.
     *
     * @param streamCache Stream cache for writing stream data.
     * @param randomAccessReadView source for the data to be read
     * @throws IOException if the length of the random access view isn't available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,asUnmodifiableDictionary,org.apache.pdfbox.cos.COSDictionary:asUnmodifiableDictionary(),1335,1338,"/**
 * Returns an unmodifiable view of this dictionary.
 * @return UnmodifiableCOSDictionary instance
 */","* Returns an unmodifiable view of this dictionary.
     * 
     * @return an unmodifiable view of this dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,getDecodeResult,org.apache.pdfbox.cos.COSInputStream:getDecodeResult(),96,106,"/**
* Returns the most recent decode result.
* @return DecodeResult object or default if none available
*/","* Returns the result of the last filter, for use by repair mechanisms.
     * 
     * @return the result of the last filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getResources,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getResources(),174,190,"/**
 * Retrieves resources from the COS object.
 * @return PDResources object or null if not found
 */","* This will get the resources for this Form XObject.
     * This will return null if no resources are available.
     * 
     * @return The resources for this Form XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormResources(),213,220,"/**
* Creates and sets PDF holder form resources.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormResource,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormResource(),260,267,"/**
* Creates resources for an inner form within a PDF structure.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormResources,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormResources(),298,304,"/**
* Creates and sets image form resources for PDF.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:<init>(),43,45,"/**
 * Default constructor for PDAttributeObject.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:<init>(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject),39,42,"/**
 * Constructs a PDUserProperty with a given user attribute object.
 * @param userAttributeObject the user attribute object to initialize with
 */","* Creates a new user property.
     * 
     * @param userAttributeObject the user attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:<init>(),38,40,"/**
 * Default constructor for PDOutlineNode.
 */",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:<init>(),37,39,"/**
* Constructs a new instance of PDDestinationNameTreeNode.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:<init>(),35,37,"/**
 * Constructs a new PDEmbeddedFilesNameTreeNode instance.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:<init>(),36,38,"/**
 * Constructs an empty PDJavascriptNameTreeNode instance.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDStructureElementNameTreeNode.java,<init>,org.apache.pdfbox.pdmodel.PDStructureElementNameTreeNode:<init>(),36,39,"/**
 * Constructs a new PDStructureElementNameTreeNode.
 * Initializes with default settings by calling superclass constructor.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),51,54,"/**
 * Initializes a new PDNonTerminalField instance.
 * @param acroForm the parent PDAcroForm object
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,47,"/**
 * Constructs a PDTerminalField with an associated PDAcroForm.
 * @param acroForm the PDAcroForm to associate with this field
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),365,368,"/**
 * Constructs a PDLayoutAttributeObject from a COSDictionary.
 * @param dictionary the underlying COSDictionary to use
 */","* Creates a new Layout attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),88,91,"/**
 * Constructs a PDListAttributeObject from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Creates a new List attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Constructs a PDPrintFieldAttributeObject from a COSDictionary.
 * @param dictionary underlying COSDictionary
 */","* Creates a new PrintField attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),67,70,"/**
 * Constructs a PDTableAttributeObject from a COSDictionary.
 * @param dictionary the underlying COSDictionary
 */","* Creates a new Table attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.cos.COSStream),38,41,"/**
 * Constructs a PDAppearanceStream from a COSStream.
 * @param stream the underlying COSStream to use
 */","* Creates a Form XObject for reading.
     * 
     * @param stream The XObject stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,"org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.pdmodel.ResourceCache)",47,50,"/**
 * Constructs a PDTransparencyGroup from a COSStream and ResourceCache.
 * @param stream PDF stream containing transparency group data
 * @param cache resource cache for managing resources
 */","* Creates a Transparency Group for reading.
     * 
     * @param stream The XObject stream
     * @param cache the cache to be used for the resources",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeCollection,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeCollection(java.io.File),657,670,"/**
 * Adds TrueType collection from a file.
 * @param ttcFile the TrueType collection file to process
 */","* Adds a TTC or OTC to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFontImpl,"org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFontImpl(org.apache.fontbox.ttf.FontHeaders,java.io.File,java.lang.String)",705,791,"/**
 * Adds a TrueType font to the list.
 * @param fontHeaders headers containing font information
 * @param file font file
 * @param hash unique identifier for the font
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addType1Font,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addType1Font(java.io.File),796,825,"/**
 * Adds a Type 1 font from a PFB file.
 * @param pfbFile the PFB file containing the font data
 */","* Adds a Type 1 font to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Initializes a new PDMeshBasedShadingType with a given dictionary.
 * @param shadingDictionary COSDictionary containing shading details
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:constructAppearances(),108,112,"/**
 * Constructs appearances with default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:constructAppearances(),61,65,"/**
 * Constructs appearances with default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:constructAppearances(),129,133,"/**
 * Constructs appearances without specific parameters.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:constructAppearances(),295,299,"/**
 * Constructs appearances with no specific configuration.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:constructAppearances(),65,69,"/**
 * Constructs appearances with default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:constructAppearances(),119,123,"/**
 * Constructs appearances with no specific context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:constructAppearances(),415,419,"/**
 * Constructs appearances with default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:constructAppearances(),227,231,"/**
* Constructs appearances with default settings.
* Calls overloaded method with null parameter.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:constructAppearances(),169,173,"/**
 * Constructs appearances with default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:constructAppearances(),185,189,"/**
 * Constructs appearances without additional parameters.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:constructAppearances(),62,66,"/**
 * Constructs appearances without specific parameters.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:constructAppearances(),62,66,"/**
 * Constructs appearances with default parameters.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:constructAppearances(),65,69,"/**
 * Constructs appearances with no specific context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:constructAppearances(),65,69,"/**
 * Constructs appearances with no specific context.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:constructAppearances(),233,237,"/**
 * Constructs appearances with default settings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:constructAppearances(),65,69,"/**
 * Constructs appearances with optional parameters.
 * Calls overloaded method with null as default.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Constructs a PDCheckBox.
* @param acroForm form containing the checkbox
* @param field dictionary representing the checkbox field
* @param parent parent non-terminal field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
* Constructs a new PDPushButton.
* @param acroForm the form containing this button
* @param field the dictionary representing the button
* @param parent the parent field of this button
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",56,59,"/**
* Constructs a PDRadioButton.
* @param acroForm the form containing the radio button
* @param field the dictionary representing the radio button
* @param parent the parent non-terminal field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",65,68,"/**
* Initializes a PDChoice object.
* @param acroForm the form containing the field
* @param field the dictionary representing the choice field
* @param parent the parent non-terminal field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",57,60,"/**
* Constructs a PDTextField.
* @param acroForm the form containing this field
* @param field the dictionary representing this field
* @param parent the parent field, if any
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsState,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsState(),991,994,"/**
 * Saves the current graphics state by cloning and pushing onto stack.
 */",* Pushes the current graphics state to the stack.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,saveGraphicsStack,org.apache.pdfbox.contentstream.PDFStreamEngine:saveGraphicsStack(),1009,1015,"/**
* Saves the current graphics stack and resets it with a clone of the top state.
* @return The original graphics stack before reset
*/","* Saves the entire graphics stack.
     * 
     * @return the saved graphics state stack.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,<init>,org.apache.pdfbox.cos.COSDocument:<init>(),101,104,"/**
 * Initializes a new COSDocument with an in-memory cache.
 */",* Constructor. Uses main memory to buffer PDF streams.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",182,191,"/**
* Initializes a COSParser with encryption details.
* @param source input stream for PDF parsing
* @param password decryption password
* @param keyStore InputStream for keystore
* @param keyAlias alias of the key in the keystore
* @param streamCacheCreateFunction function to create cache streams
* @throws IOException if initialization fails
*/","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException if the source data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,toString,org.apache.pdfbox.cos.COSDictionary:toString(),1343,1355,"/**
* Converts dictionary to string representation.
* @return String representation of the dictionary or error message if an exception occurs
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Processes path closure and stroke operations.
* @param operator the operator being processed
* @param arguments list of COSBase arguments for the operation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillEvenOddAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillEvenOddAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",40,46,"/**
* Processes path operations for filling and stroking.
* @param operator the operation to process
* @param operands list of operands for the operation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/CloseFillNonZeroAndStrokePath.java,process,"org.apache.pdfbox.contentstream.operator.graphics.CloseFillNonZeroAndStrokePath:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
* Processes PDF operators for closing path and filling/stroking.
* @param operator the operator to process
* @param operands list of operands for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/MoveTextSetLeading.java,process,"org.apache.pdfbox.contentstream.operator.text.MoveTextSetLeading:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,66,"/**
 * Processes text leading and position.
 * @param operator the operator to process
 * @param arguments list of COSBase arguments
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/NextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.NextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,54,"/**
* Moves text cursor to start of next line.
* @param operator PDF operator (not used)
* @param arguments list of COSBase arguments (not used)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLine.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLine:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,47,"/**
 * Processes text display in a PDF document.
 * @param operator the operator for processing
 * @param arguments list of COSBase objects representing text data
 * @throws IOException if an I/O error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextLineAndSpace.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextLineAndSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,54,"/**
 * Processes text spacing and display for PDF operators.
 * @param operator the PDF operator to process
 * @param arguments list of COSBase arguments for the operator
 * @throws IOException if an I/O error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFMarkedContentExtractor:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",105,123,"/**
* Begins a new marked content sequence.
* @param tag the tag for the marked content
* @param properties dictionary of properties for the marked content
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:constructAppearances(),193,213,"/**
 * Constructs appearances for a signature field.
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,transform,"org.apache.pdfbox.rendering.PDFRenderer:transform(java.awt.Graphics2D,int,org.apache.pdfbox.pdmodel.common.PDRectangle,float,float)",455,482,"/**
 * Applies scaling and rotation transformations to the graphics context.
 * @param graphics Graphics2D object to transform
 * @param rotationAngle angle in degrees to rotate the graphics
 * @param cropBox bounding box for cropping
 * @param scaleX scale factor along X-axis
 * @param scaleY scale factor along Y-axis
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getBounds,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:getBounds(),1995,2022,"/**
 * Returns the bounds of the rectangle after applying transformations.
 * @return Adjusted Rectangle2D bounds considering flips and scaling factors.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,clipToRect,org.apache.pdfbox.contentstream.PDFStreamEngine:clipToRect(org.apache.pdfbox.pdmodel.common.PDRectangle),616,624,"/**
 * Clips the current graphics state to a specified rectangle.
 * @param rectangle the boundary rectangle for clipping
 */","* Transforms the given rectangle using the CTM and then intersects it with the current
     * clipping area.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getTransformedAppearanceBBox,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getTransformedAppearanceBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),755,761,"/**
* Transforms and returns the bounding box of an appearance stream.
* @param appearanceStream PDF appearance stream to process
* @return Transformed bounding box as Rectangle2D
*/","* Calculate the transformed appearance box.
     * 
     * Apply the Matrix (or an identity transform) to the BBox of
     * the appearance stream
     * 
     * @param appearanceStream
     * @return the transformed rectangle",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),85,88,"/**
 * Initializes graphics state with page boundaries.
 * @param page page dimensions and coordinates
 */","* Constructor with a given page size to initialize the clipping path.
     * @param page the size of the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:getLeft(),65,68,"/**
 * Retrieves the integer value at index 2 of the array.
 * @return Integer value stored at index 2
 */","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getLeft(),61,64,"/**
 * Retrieves the integer value at index 2 of the array.
 * @return integer value from the array
 */","* Get the left x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getBottom(),90,93,"/**
 * Retrieves the integer value at index 3 of the array.
 * @return integer value at index 3
 */","* Get the bottom y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The bottom y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getRight(),119,122,"/**
 * Retrieves the right value from an array.
 * @return integer value at index 4 of the array
 */","* Get the right x coordinate.  A return value of -1 implies that the current x-coordinate
     * will be used.
     *
     * @return The right x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:getTop(),149,152,"/**
* Retrieves the top element from the array.
* @return integer value at index 5 of the array
*/","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:getTop(),67,70,"/**
 * Retrieves the third element from an array.
 * @return The integer value at index 2 of the array
 */","* Get the top y coordinate.  A return value of -1 implies that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getLeft(),64,67,"/**
* Retrieves the left value from an array.
* @return integer value at index 2 of the array
*/","* Get the left x coordinate.  Return values of 0 or -1 imply that the current x-coordinate
     * will be used.
     *
     * @return The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,getTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:getTop(),93,96,"/**
 * Retrieves the top element from the array.
 * @return integer value at index 3 of the array
 */","* Get the top y coordinate.  Return values of 0 or -1 imply that the current y-coordinate
     * will be used.
     *
     * @return The top y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:fitBoundingBox(),64,67,"/**
 * Checks if the array name at index 1 is ""TYPE_BOUNDED"".
 * @return true if array name matches, false otherwise
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:fitBoundingBox(),93,96,"/**
 * Checks if the bounding box fits.
 * @return true if bounding box is fitted, false otherwise
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,fitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:fitBoundingBox(),95,98,"/**
 * Checks if the bounding box fits.
 * @return true if bounding box is fitted, false otherwise
 */","* A flag indicating if this page destination should just fit bounding box of the PDF.
     *
     * @return true If the destination should fit just the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createOutputStream,org.apache.pdfbox.cos.COSStream:createOutputStream(),205,208,"/**
 * Creates an output stream with no specific encoding.
 * @return OutputStream instance
 * @throws IOException if an I/O error occurs
 */","* Returns a new OutputStream for writing stream data, using the current filters.
     *
     * @return OutputStream for un-encoded stream data.
     * @throws IOException If the output stream could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(org.apache.pdfbox.cos.COSName),170,173,"/**
 * Creates an output stream with specified filter.
 * @param filter compression or encoding filter
 * @return OutputStream for writing data
 * @throws IOException if I/O error occurs
 */","* This will get a stream that can be written to, with the given filter.
     *
     * @param filter the filter to be used.
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createThumbnail,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createThumbnail(org.apache.pdfbox.cos.COSStream),156,161,"/**
* Creates a thumbnail image from a COS stream.
* @param cosStream the input COS stream
* @return PDImageXObject representing the thumbnail
*/","* Creates a thumbnail Image XObject from the given COSBase and name.
     * @param cosStream the COS stream
     * @return an XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getMask(),803,821,"/**
* Retrieves the mask image for this object.
* @return PDImageXObject representing the mask or null if none exists
*/","* Returns the Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return Mask Image XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getSoftMask,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getSoftMask(),837,846,"/**
 * Retrieves the soft mask image.
 * @return PDImageXObject of the soft mask or null if none exists
 */","* Returns the Soft Mask Image XObject associated with this image, or null if there is none.
     * 
     * @return the SMask Image XObject, or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,writeAffineTransform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:writeAffineTransform(java.awt.geom.AffineTransform),1535,1543,"/**
* Writes affine transformation matrix to output.
* @param transform the AffineTransform object to write
*/","* Writes an AffineTransform to the content stream as an array.
     * 
     * @param transform AffineTransfrom to be added to the content stream
     * @throws IOException If the underlying stream has a problem being written to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginText(),134,142,"/**
 * Starts text mode for PDF document.
 * Throws exception if already in text mode.
 */","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endText(),151,159,"/**
* Ends text mode and writes the END_TEXT operator.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLeading(float),333,337,"/**
* Sets text leading.
* @param leading line spacing value
* @throws IOException if I/O error occurs
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLine(),345,352,"/**
* Writes a newline in text mode.
* Throws IllegalStateException if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:newLineAtOffset(float,float)",363,372,"/**
 * Moves text cursor to a new line at specified offset.
 * @param tx horizontal offset
 * @param ty vertical offset
 * @throws IOException if an I/O error occurs
 */","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:saveGraphicsState(),589,609,"/**
 * Saves the current graphics state.
 * Throws IllegalStateException if in text mode.
 */","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAbstractContentStream:restoreGraphicsState(),615,635,"/**
 * Restores the graphics state.
 * Throws IllegalStateException if called within text mode.
 */","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets the stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets the stroking color using CMYK values.
* @param c cyan component (0.0 to 1.0)
* @param m magenta component (0.0 to 1.0)
* @param y yellow component (0.0 to 1.0)
* @param k black component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(float),759,768,"/**
 * Sets the stroking color to grayscale.
 * @param g grayscale value (0.0 to 1.0)
 * @throws IOException if an I/O error occurs
 */","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets non-stroking color using CMYK values.
* @param c cyan component (0.0 to 1.0)
* @param m magenta component (0.0 to 1.0)
* @param y yellow component (0.0 to 1.0)
* @param k black component (0.0 to 1.0)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(float),877,886,"/**
* Sets non-stroking color to grayscale.
* @param g grayscale value (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the document.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @throws IOException if an I/O error occurs
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a cubic Bézier curve.
 * @param x1,y1 control point 1 coordinates
 * @param x2,y2 control point 2 coordinates
 * @param x3,y3 endpoint coordinates
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Adds a quadratic Bézier curve to the path.
* @param x2 control point x-coordinate
* @param y2 control point y-coordinate
* @param x3 end point x-coordinate
* @param y3 end point y-coordinate
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a cubic Bézier curve with a replicated final point.
 * @param x1 the x-coordinate of the first control point
 * @param y1 the y-coordinate of the first control point
 * @param x3 the x-coordinate of the third control point (final point)
 * @param y3 the y-coordinate of the third control point (final point)
 * @throws IOException if an I/O error occurs while writing to the output stream
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:moveTo(float,float)",995,1004,"/**
* Moves the graphics cursor to specified coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
* @throws IOException if an I/O error occurs
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to the specified coordinates.
* @param x target X coordinate
* @param y target Y coordinate
* @throws IOException if an I/O error occurs
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:stroke(),1031,1038,"/**
* Strokes the current path.
* Throws exception if called in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws an exception if called within a text block.
* @throws IOException if an I/O error occurs
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fill(),1061,1068,"/**
* Fills the current path using non-zero winding rule.
* Throws IllegalStateException if called in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillEvenOdd(),1076,1083,"/**
 * Fills the shape using even-odd rule.
 * Throws IllegalStateException if called in text mode.
 */","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStroke(),1093,1100,"/**
 * Fills and strokes the current path.
 * Throws exception if called in text mode.
 */","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Fills and strokes path using even-odd rule.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStroke(),1127,1134,"/**
 * Closes path, fills it using non-zero winding rule, and strokes it.
 * Throws exception if called in text mode.
 */","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Closes path, fills using even-odd rule, and strokes it.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAbstractContentStream:closePath(),1177,1184,"/**
* Closes the current path.
* Throws IllegalStateException if called within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clip(),1192,1202,"/**
* Clips the current path.
* Throws IOException if an I/O error occurs.
* Throws IllegalStateException if called within a text block.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAbstractContentStream:clipEvenOdd(),1210,1220,"/**
* Clips the current path using even-odd rule.
* Throws IllegalStateException if called in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width for graphics operations.
* @param lineWidth the desired line width
* @throws IOException if an I/O error occurs
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle join style (0, 1, or 2)
* @throws IOException if I/O error occurs
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle valid values are 0, 1, or 2
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern.
* @param pattern array of dash lengths
* @param phase starting point of the pattern
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit.
* @param miterLimit the miter limit value, must be greater than 0
* @throws IOException if an I/O error occurs while writing
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:endMarkedContent(),1370,1373,"/**
* Ends marked content in PDF.
* @throws IOException if an I/O error occurs
*/","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Sets character spacing in the document.
 * @param spacing the amount of space between characters
 * @throws IOException if an I/O error occurs
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing in PDF.
* @param spacing the amount of space between words
* @throws IOException if an I/O error occurs
*/","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setHorizontalScaling(float),1635,1639,"/**
* Sets horizontal scaling for text.
* @param scale scaling factor to apply
* @throws IOException if I/O error occurs
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm rendering mode to apply
* @throws IOException if I/O error occurs
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise value.
* @param rise amount of text rise
* @throws IOException if I/O error occurs
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSNumber,org.apache.pdfbox.pdfparser.BaseParser:parseCOSNumber(),1018,1043,"/**
 * Parses a COSNumber from the input source.
 * @return parsed COSNumber object
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(org.apache.pdfbox.cos.COSArray),147,165,"/**
* Constructs a PDRectangle from a COSArray.
* @param array COSArray containing rectangle coordinates
*/","* Constructor.
     *
     * @param array An array of numbers as specified in the PDF Reference for a rectangle type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:<init>(org.apache.pdfbox.cos.COSArray,int)",52,76,"/**
* Initializes a line dash pattern with an array and phase.
* @param array COSArray representing the dash pattern
* @param phase offset for starting the dash pattern
*/","* Creates a new line dash pattern from a dash array and phase.
     * @param array the dash array
     * @param phase the phase",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getDecodeArray,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getDecodeArray(org.apache.pdfbox.pdmodel.graphics.image.PDImage),741,784,"/**
 * Retrieves the decode array for an image.
 * @param pdImage the PDF image object
 * @return float array representing the decode values or default if invalid
 * @throws IOException if reading fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,checkFontMatrixValues,org.apache.pdfbox.pdmodel.font.PDType3Font:checkFontMatrixValues(org.apache.pdfbox.cos.COSArray),266,270,"/**
* Validates font matrix dimensions and content.
* @param matrix COSArray representing the font matrix
* @return true if matrix is valid, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,toString,org.apache.pdfbox.pdmodel.common.PDRange:toString(),136,140,"/**
* Returns string representation of PDRange.
* @return formatted string with min and max values
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:eval(float[]),68,103,"/**
* Evaluates input through a Type 4 function.
* @param input float array of input values
* @return float array of evaluated output values
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,readPatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:readPatch(javax.imageio.stream.ImageInputStream,boolean,java.awt.geom.Point2D[],float[][],long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform,int)",175,232,"/**
 * Reads and processes patch data from input stream.
 * @param input source image input stream
 * @param isFree flag indicating if edge points are implicit
 * @param implicitEdge predefined edge points array
 * @param implicitCornerColor predefined corner colors array
 * @param maxSrcCoord maximum source coordinate value
 * @param maxSrcColor maximum source color value
 * @param rangeX X-axis coordinate range
 * @param rangeY Y-axis coordinate range
 * @param colRange color component ranges
 * @param matrix transformation matrix
 * @param xform additional affine transform
 * @param controlPoints number of control points
 * @return Patch object or null if EOF encountered
 * @throws IOException if reading fails
 */","* Read a single patch from a data stream, a patch contains information of its coordinates and color parameters.
     *
     * @param input the image source data stream
     * @param isFree whether this is a free patch
     * @param implicitEdge implicit edge when a patch is not free, otherwise it's not used
     * @param implicitCornerColor implicit colors when a patch is not free, otherwise it's not used
     * @param maxSrcCoord the maximum coordinate value calculated from source data
     * @param maxSrcColor the maximum color value calculated from source data
     * @param rangeX range for coordinate x
     * @param rangeY range for coordinate y
     * @param colRange range for color
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform transformation for user to device space
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return a single patch
     * @throws IOException when something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,readVertex,"org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:readVertex(javax.imageio.stream.ImageInputStream,long,long,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange,org.apache.pdfbox.pdmodel.common.PDRange[],org.apache.pdfbox.util.Matrix,java.awt.geom.AffineTransform)",196,236,"/**
 * Reads a vertex from an image input stream.
 * @param input the image input stream to read from
 * @param maxSrcCoord maximum source coordinate value
 * @param maxSrcColor maximum source color value
 * @param rangeX X coordinate range
 * @param rangeY Y coordinate range
 * @param colRangeTab color component ranges
 * @param matrix transformation matrix
 * @param xform additional affine transform
 * @return Vertex object with transformed coordinates and colors
 * @throws IOException if an I/O error occurs
 */","* Read a vertex from the bit input stream performs interpolations.
     *
     * @param input bit input stream
     * @param maxSrcCoord max value for source coordinate (2^bits-1)
     * @param maxSrcColor max value for source color (2^bits-1)
     * @param rangeX dest range for X
     * @param rangeY dest range for Y
     * @param colRangeTab dest range array for colors
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param xform the affine transformation
     * @return a new vertex with the flag and the interpolated values
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getBeforeColour(),66,69,"/**
 * Retrieves the color at index 0.
 * @return PDGamma object representing the color
 */","* Gets the colour for the before edge.
     * 
     * @return the colour for the before edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getAfterColour(),86,89,"/**
 * Retrieves the after color.
 * @return PDGamma object representing the after color
 */","* Gets the colour for the after edge.
     * 
     * @return the colour for the after edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getStartColour(),106,109,"/**
 * Retrieves the start color.
 * @return PDGamma representing the start color
 */","* Gets the colour for the start edge.
     * 
     * @return the colour for the start edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,getEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:getEndColour(),126,129,"/**
 * Retrieves the end color of the gradient.
 * @return PDGamma representing the end color
 */","* Gets the colour for the end edge.
     * 
     * @return the colour for the end edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getBlendMode(),582,585,"/**
 * Retrieves the blend mode from dictionary.
 * @return BlendMode instance or null if not found
 */","* Returns the blending mode stored in the COS dictionary
     *
     * @return the blending mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithTintTransform(java.awt.image.WritableRaster),286,346,"/**
* Converts raster to RGB using tint transform.
* @param raster input image data
* @return BufferedImage in RGB format
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getNumberOfComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getNumberOfComponents(),448,452,"/**
 * Returns the number of colorants.
 * @return count of colorant names
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toString(),584,605,"/**
* Returns a string representation of the color space.
* @return formatted string with name, colorants, alternate space, transform, and attributes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:toString(),327,333,"/**
* Returns a string representation of the Indexed object.
* @return String containing base color space, high value, and lookup table size
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toString(),304,311,"/**
 * Returns a string representation of the color profile.
 * @return formatted string with name, colorant name, alternate color space, and tint transform
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDestinationNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),51,69,"/**
* Converts COSBase to PDPageDestination.
* @param base the COSBase object to convert
* @return PDPageDestination or null if conversion fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getDestination(),70,73,"/**
* Retrieves the destination from the PDF object.
* @return PDDestination object or null if not found
* @throws IOException if an I/O error occurs
*/","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,getDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:getDestination(),66,69,"/**
 * Retrieves the destination object.
 * @return PDDestination object or null if not found
 * @throws IOException if an error occurs during retrieval
 */","* This will get the destination to jump to.
     *
     * @return The D entry of the specific go-to action dictionary.
     *
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getDestination(),140,143,"/**
 * Retrieves the destination from a PDF object.
 * @return PDDestination object representing the destination
 * @throws IOException if an I/O error occurs
 */","* Get the destination to be displayed when the annotation is activated. Either this or the
     * action entry should be set, but not both.
     *
     * @return The destination for this annotation.
     *
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getDestination(),186,189,"/**
* Retrieves destination from COS object.
* @return PDDestination object or null if not found
* @throws IOException if an I/O error occurs
*/","* Get the page destination of this node.
     *
     * @return The page destination of this node.
     * @throws IOException If there is an error creating the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,createMatrix,org.apache.pdfbox.util.Matrix:createMatrix(org.apache.pdfbox.cos.COSBase),143,162,"/**
 * Creates a matrix from a COSBase object.
 * @param base the base object to create the matrix from
 * @return a new Matrix object, or an empty Matrix if input is invalid
 */","* Convenience method to be used when creating a matrix from unverified data. If the parameter
     * is a COSArray with at least six numbers, a Matrix object is created from the first six
     * numbers and returned. If not, then the identity Matrix is returned.
     *
     * @param base a COS object, preferably a COSArray with six numbers.
     *
     * @return a Matrix object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setHighestImportedObjectNumber,org.apache.pdfbox.pdmodel.PDDocument:setHighestImportedObjectNumber(org.apache.pdfbox.pdmodel.PDPage),723,731,"/**
* Updates document's highest XRef object number based on imported page.
* @param importedPage the page to be processed
*/","* Determine the highest object number from the imported page to avoid mixed up numbers when saving the new pdf.
     * 
     * @param importedPage the imported page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getCOSDictionary,"org.apache.pdfbox.cos.COSDictionary:getCOSDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",570,578,"/**
* Retrieves a COSDictionary using two keys.
* @param firstKey the primary key to access the dictionary
* @param secondKey the secondary key within the nested dictionary
* @return COSDictionary object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSDictionary. Null is
     * returned if the entry does not exist in the dictionary.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The COSDictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,boolean)",910,919,"/**
* Retrieves a boolean value from a dictionary.
* @param firstKey primary key in the dictionary
* @param secondKey secondary key in the dictionary
* @param defaultValue default boolean value if not found
* @return boolean value associated with the keys or default if missing
*/","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",1021,1030,"/**
* Retrieves integer value from nested dictionary.
* @param firstKey primary key for the dictionary
* @param secondKey secondary key within the nested dictionary
* @param defaultValue default value to return if not found
* @return integer value or default if missing
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,getDecodeParams,"org.apache.pdfbox.filter.Filter:getDecodeParams(org.apache.pdfbox.cos.COSDictionary,int)",120,149,"/**
 * Retrieves decode parameters from a PDF dictionary.
 * @param dictionary the source dictionary containing filter and decode params
 * @param index the index of the filter if multiple filters are present
 * @return COSDictionary with decode parameters or an empty dictionary if none found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getFilters(),246,259,"/**
 * Retrieves filter names from PDF parameters.
 * @return List of filter names or empty list if none found
 */","* Returns A list of filters applied to this stream.
     *
     * @return A (possibly empty) list of filters applied to this stream, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getDecode(),278,282,"/**
* Retrieves the decode array from PDF parameters.
* @return COSArray containing decode information or null if not present
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getColorSpace(),239,247,"/**
* Retrieves the color space.
* @return PDColorSpace object representing the color space
* @throws IOException if an I/O error occurs
*/","* This will get the color space or null if none exists.
     *
     * @return the color space for the shading
     * @throws IOException if there is an error getting the color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(java.util.List,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",267,284,"/**
 * Retrieves COS objects by specified types.
 * @param keys list of COSObjectKey to check
 * @param type1 first type to match
 * @param type2 second optional type to match
 * @return list of COSObjects matching the types
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,decode,"org.apache.pdfbox.filter.CryptFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",32,45,"/**
 * Decodes input stream using specified parameters.
 * @param encoded input stream to decode
 * @param decoded output stream for decoded data
 * @param parameters decryption parameters
 * @param index filter index
 * @return DecodeResult object
 * @throws IOException if unsupported crypt filter is used
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CryptFilter.java,encode,"org.apache.pdfbox.filter.CryptFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",47,62,"/**
* Encodes input stream using specified parameters.
* @param input source InputStream to encode
* @param encoded OutputStream for encoded data
* @param parameters COSDictionary containing encoding parameters
* @throws IOException if unsupported encryption name or I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,hasOnlyDocumentsOrParts,org.apache.pdfbox.multipdf.PDFMergerUtility:hasOnlyDocumentsOrParts(org.apache.pdfbox.cos.COSArray),1041,1058,"/**
 * Checks if array contains only COSDictionary entries with S as DOCUMENT or PART.
 * @param kLevelOneArray the array to check
 * @return true if all entries are valid, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,isCatalog,org.apache.pdfbox.pdfparser.BruteForceParser:isCatalog(org.apache.pdfbox.cos.COSDictionary),765,769,"/**
* Checks if a dictionary represents a PDF catalog.
* @param dictionary the COSDictionary to check
* @return true if the dictionary is a catalog, false otherwise
*/","* Tell if the dictionary is a PDF or FDF catalog.
     * 
     * @param dictionary the dictionary to be tested
     * @return true if the given dictionary is a root dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,isPageTreeNode,org.apache.pdfbox.pdmodel.PDPageTree:isPageTreeNode(org.apache.pdfbox.cos.COSDictionary),371,378,"/**
 * Checks if a dictionary represents a page tree node.
 * @param node the COSDictionary to check
 * @return true if the node is a page tree node, false otherwise
 */",* Returns true if the node is a page tree node (i.e. and intermediate).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getCryptFilterMethod(),107,110,"/**
 * Retrieves the cryptographic filter method from the dictionary.
 * @return COSName representing the cryptographic filter method or null if not set
 */","* This will return the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @return the name of the crypt filter method.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStreamFilterName(),553,557,"/**
* Retrieves stream filter name from dictionary.
* @return COSName of the stream filter or IDENTITY if not set
*/","* Returns the name of the filter which is used for de/encrypting streams.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStringFilterName(),575,579,"/**
* Retrieves string filter name from dictionary.
* @return COSName of the string filter or IDENTITY if not set
*/","* Returns the name of the filter which is used for de/encrypting strings.
     * Default value is ""Identity"".
     * 
     * @return the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptDictionary,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptDictionary(org.apache.pdfbox.cos.COSDictionary,long,long)",594,621,"/**
* Decrypts PDF dictionary entries.
* @param dictionary the COSDictionary to decrypt
* @param objNum object number of the dictionary
* @param genNum generation number of the dictionary
*/","* This will decrypt a dictionary.
     *
     * @param dictionary The dictionary to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error creating a new string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int),459,498,"/**
 * Converts a character code to its Unicode representation using ToUnicode CMap or encoding.
 * @param code character code to convert
 * @return Unicode string or null if conversion fails
 */","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @return Unicode character(s)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getSubType,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getSubType(),134,141,"/**
 * Retrieves the subtype of a PDF object.
 * @return COSName representing the subtype or null if not set
 */","* Returns the subtype of the soft mask (Alpha, Luminosity) - S entry
     * 
     * @return the subtype of the soft mask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getRelationship(),74,77,"/**
 * Retrieves the relationship name from the dictionary.
 * @return COSName object representing the relationship or null if not found
 */","* Get the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @return the relationship as a name. Valid values are P (the target is the parent of the
     * current document) and C (the target is a child of the current document). Invalid values or
     * null are also returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearanceState(),324,327,"/**
 * Retrieves the appearance state of the PDF object.
 * @return COSName representing the appearance state or null if not set
 */","* Returns the annotations appearance state, which selects the applicable appearance stream from an appearance
     * subdictionary.
     * 
     * @return the annotations appearance state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,isEncrypted,org.apache.pdfbox.cos.COSDocument:isEncrypted(),329,332,"/**
* Checks if the document is encrypted.
* @return true if encrypted, false otherwise
*/","* This will tell if this is an encrypted document.
     *
     * @return true If this document is encrypted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:getEncryptionDictionary(),340,343,"/**
 * Retrieves the encryption dictionary from the trailer.
 * @return COSDictionary containing encryption details or null if not present
 */","* This will get the encryption dictionary if the document is encrypted or null if the document
     * is not encrypted.
     *
     * @return The encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,initialParse,org.apache.pdfbox.pdfparser.FDFParser:initialParse(),48,58,"/**
* Parses PDF trailer and retrieves root dictionary.
* Throws IOException if root is missing.
*/","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(org.apache.pdfbox.pdmodel.fixup.PDDocumentFixup),128,146,"/**
 * Retrieves or creates an AcroForm with optional fixes.
 * @param acroFormFixup fix to apply to the AcroForm
 * @return PDAcroForm object or null if not found
 */","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * Dependent on setting <code>acroFormFixup</code> some fixing/changes will be done to the AcroForm.
     * If you need to ensure that there are no fixes applied call <code>getAcroForm</code> with <code>null</code>.
     * 
     * Using <code>getAcroForm(PDDocumentFixup acroFormFixup)</code> might change the original content and
     * subsequent calls with <code>getAcroForm(null)</code> will return the changed content.
     * 
     * @param acroFormFixup the fix up action or null
     * @return The document's AcroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getViewerPreferences(),175,179,"/**
 * Retrieves viewer preferences from the PDF document.
 * @return PDViewerPreferences object or null if not found
 */","* Get the viewer preferences associated with this document or null if they do not exist.
     *
     * @return The document's viewer preferences.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getNames(),327,331,"/**
* Retrieves document name dictionary.
* @return PDDocumentNameDictionary object or null if not found
*/",* @return The names dictionary for this document or null if none exist.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDests(),336,340,"/**
* Retrieves destination dictionary from the document.
* @return PDDocumentNameDestinationDictionary object or null if not found
*/",* @return The named destinations dictionary for this document or null if none exists.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMarkInfo(),390,394,"/**
* Retrieves mark info from PDF document.
* @return PDMarkInfo object or null if not found
*/","* Get info about doc's usage of tagged features. This will return null if there is no
     * information.
     *
     * @return The new mark info.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getURI(),537,541,"/**
 * Retrieves URI dictionary from the PDF document.
 * @return PDURIDictionary object or null if not found
 */","* Returns the document-level URI.
     * 
     * @return the document level URI if present, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getStructureTreeRoot(),558,562,"/**
* Retrieves the structure tree root from the PDF document.
* @return PDStructureTreeRoot object or null if not found
*/","* Get the document's structure tree root, or null if none exists.
     * 
     * @return the structure tree root if present, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOCProperties(),641,645,"/**
* Retrieves optional content properties.
* @return PDOptionalContentProperties object or null if not found
*/","* Get the optional content properties dictionary associated with this document.
     *
     * @return the optional properties dictionary or null if it is not present",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getDests(),79,89,"/**
* Retrieves destination names from the document's name dictionary or catalog.
* @return PDDestinationNameTreeNode containing destinations or null if none found
*/","* Get the destination named tree node. The values in this name tree will be
     * PDPageDestination objects.
     *
     * @return The destination name tree node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getEmbeddedFiles(),113,117,"/**
 * Retrieves the embedded files node from the document.
 * @return PDEmbeddedFilesNameTreeNode representing embedded files or null if none exist
 */","* Get the embedded files named tree node. The values in this name tree will
     * be PDComplexFileSpecification objects.
     *
     * @return The embedded files name tree node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:getJavaScript(),136,140,"/**
 * Retrieves JavaScript dictionary node.
 * @return PDJavascriptNameTreeNode object or null if not found
 */","* Get the document level JavaScript name tree. When the document is opened, all the JavaScript
     * actions in it shall be executed, defining JavaScript functions for use by other scripts in
     * the document.
     *
     * @return The document level JavaScript name tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getIndirectResourceObjects,"org.apache.pdfbox.pdmodel.PDPage:getIndirectResourceObjects(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",164,176,"/**
* Retrieves indirect resource objects of a specified kind from page resources.
* @param pageResources dictionary containing all resources for a PDF page
* @param kind type of resource to retrieve (e.g., ""XObject"", ""Font"")
* @return list of COSObject instances representing the resources
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTransition,org.apache.pdfbox.pdmodel.PDPage:getTransition(),717,721,"/**
* Retrieves the transition effect for the page.
* @return PDTransition object or null if no transition is defined
*/",* @return The page transition associated with this page or null if no transition is defined,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getIndirect,"org.apache.pdfbox.pdmodel.PDResources:getIndirect(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",485,499,"/**
 * Retrieves an indirect COSObject from resources by kind and name.
 * @param kind type of resource dictionary
 * @param name key for the resource item
 * @return COSObject if found, otherwise null
 */","* Returns the resource with the given name and kind as an indirect object, or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,get,"org.apache.pdfbox.pdmodel.PDResources:get(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",504,508,"/**
 * Retrieves an object from the resources dictionary.
 * @param kind type of resource dictionary
 * @param name key for the object in the dictionary
 * @return COSBase object or null if not found
 */","* Returns the resource with the given name and kind, or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getNames,org.apache.pdfbox.pdmodel.PDResources:getNames(org.apache.pdfbox.cos.COSName),583,587,"/**
 * Retrieves names of resources by type.
 * @param kind type of resource to retrieve
 * @return iterable set of resource names or empty set if not found
 */",* Returns the resource names of the given kind.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEFDictionary(),73,80,"/**
 * Retrieves or creates the EF dictionary.
 * @return COSDictionary representing the EF dictionary
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getPage(),68,72,"/**
* Retrieves a page from the document.
* @return PDPage object or null if not found
*/","* Gets the page.
     * 
     * @return the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getPage(),155,163,"/**
 * Retrieves a PDF page.
 * @return PDPage object or null if not found
 */","* Get the page on which the object shall be rendered.
     *
     * @return the referenced page or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getPage(),139,143,"/**
* Retrieves a page from the PDF document.
* @return PDPage object or null if not found
*/","* Returns the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * 
     * @return the page on which some or all of the content items designated by
     *  the K entry shall be rendered",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getIDTree(),98,102,"/**
 * Retrieves the ID tree node.
 * @return PDNameTreeNode containing structure elements or null if not found
 */","* Returns the ID tree.
     * 
     * @return the ID tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTree(),125,129,"/**
 * Retrieves the parent tree node.
 * @return PDNumberTreeNode representing the parent tree or null if not present
 */","* Returns the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     *
     * @return the parent tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getClassMap(),211,245,"/**
 * Retrieves and processes the class map from a PDF document.
 * @return A map of class names to their corresponding attribute objects or lists of attribute objects.
 */","* Sets the ClassMap.
     * 
     * @return the ClassMap, never null. The elements are either {@link PDAttributeObject} or lists
     * of it.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getCryptFilterDictionary(org.apache.pdfbox.cos.COSName),492,505,"/**
* Retrieves a cryptographic filter dictionary by name.
* @param cryptFilterName the name of the cryptographic filter
* @return PDCryptFilterDictionary object or null if not found
*/","* Returns the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * 
     * @return the crypt filter with the given name if available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderStyle(),898,902,"/**
* Retrieves the border style dictionary of the annotation.
* @return PDBorderStyleDictionary object or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the
     * annotation.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getBorderEffect(),922,926,"/**
 * Retrieves border effect dictionary from annotation.
 * @return PDBorderEffectDictionary or null if not present
 */","* This will retrieve the border style dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @return the border effect dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getSignature(),147,151,"/**
* Retrieves the signature from the PDF document.
* @return PDSignature object or null if no signature exists
*/","* This will get the signature or null if there is none.
     *
     * @return The signature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getJavaScript(),544,548,"/**
* Retrieves JavaScript associated with the FDF document.
* @return FDFJavaScript object or null if none exists
*/","* This will get the java script entry.
     *
     * @return The java script entry describing javascript commands.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceDictionary(),594,598,"/**
* Retrieves the appearance dictionary of the field.
* @return PDAppearanceDictionary object or null if not found
*/","* This will get the appearance dictionary that specifies the appearance of a pushbutton field.
     *
     * @return The AP entry of this dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:getAppearanceStreamReference(),615,619,"/**
* Retrieves appearance stream reference for a form field.
* @return FDFNamedPageReference object or null if not found
*/","* This will get named page references.
     *
     * @return The named page references or <code>null</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:getIconFit(),636,640,"/**
* Retrieves icon fit settings from a field.
* @return FDFIconFit object or null if not found
*/","* This will get the icon fit that is associated with this field.
     *
     * @return The 'IF' entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:getAdditionalActions(),722,726,"/**
* Retrieves additional actions from a PDF field.
* @return PDAdditionalActions object or null if not found
*/","* This will get a list of additional actions that will get executed based on events.
     *
     * @return The 'AA' entry in this FDF field dictionary or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:getPageInfo(),101,110,"/**
* Retrieves page info from PDF.
* @return FDFPageInfo object or null if not available
*/","* This will get the FDF page info object.
     *
     * @return The Page info.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getTemplateReference(),71,75,"/**
* Retrieves template reference from dictionary.
* @return FDFNamedPageReference object or null if not found
*/","* This is the template reference.
     *
     * @return The template reference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDFont:getFontDescriptor(),216,228,"/**
 * Retrieves the font descriptor for the font.
 * @return PDFontDescriptor object or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getCIDSystemInfo,org.apache.pdfbox.pdmodel.font.PDCIDFont:getCIDSystemInfo(),362,366,"/**
* Retrieves CID system information.
* @return PDCIDSystemInfo object or null if not found
*/","* Returns the CIDSystemInfo, or null if it is missing (which isn't allowed but could happen).
     * 
     * @return the CIDSystemInfo, or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getPanose,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getPanose(),810,823,"/**
* Retrieves Panose classification from font dictionary.
* @return PDPanose object or null if not available
*/","* Returns the Panose entry of the Style dictionary, if any.
     *
     * @return A Panose wrapper object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3Font:getResources(),290,301,"/**
* Retrieves PDF resources.
* @return PDResources object or null if not found
*/","* Returns the optional resources of the type3 stream.
     *
     * @return the resources bound to be used when parsing the type3 stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProcs,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProcs(),380,387,"/**
* Retrieves character procedures dictionary.
* @return COSDictionary containing character procedures or null if not present
*/","* Returns the dictionary containing all streams to be used to render the glyphs.
     * 
     * @return the dictionary containing all glyph streams.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getProcess,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getProcess(),104,112,"/**
 * Retrieves the DeviceN color process from the dictionary.
 * @return PDDeviceNProcess object or null if not found
 */","* Returns the DeviceN Process Dictionary, or null if it is missing.
     * @return the DeviceN Process Dictionary, or null if it is missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getRenderState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getRenderState(org.apache.pdfbox.rendering.RenderDestination),120,144,"/**
* Retrieves render state for a given destination.
* @param destination target rendering destination (PRINT, VIEW)
* @return RenderState object or null if not found
*/","* @param destination to be rendered
     * @return state or null if undefined",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getExtendedGraphicsState(),62,73,"/**
 * Retrieves the extended graphics state.
 * @return PDExtendedGraphicsState object or null if not found
 */","* This will get the external graphics state for this pattern.
     * @return The extended graphics state for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getResources(),198,203,"/**
* Retrieves resources from a PDF object.
* @return PDResources object or null if not found
*/","* This will get the resources for this pattern.
     * This will return null if no resources are available at this level.
     * @return The resources for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getTargetDirectory(),173,177,"/**
 * Retrieves the target directory from the PDF document.
 * @return PDTargetDirectory object or null if not found
 */","* Get the target directory.
     *
     * @return the target directory or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getWinLaunchParams(),94,98,"/**
 * Retrieves Windows-specific launch parameters.
 * @return PDWindowsLaunchParams object or null if not available
 */","* This will get a dictionary containing Windows-specific launch parameters.
     *
     * @return The Win entry of of the specific launch action dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getTargetDirectory(),126,130,"/**
 * Retrieves the target directory from a dictionary.
 * @return PDTargetDirectory object or null if not found
 */","* Get the target directory. If this entry is absent, the current document is the target file
     * containing the destination.
     *
     * @return the target directory or null if the current document is the target file containing
     * the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAppearance(),344,348,"/**
* Retrieves the appearance dictionary.
* @return PDAppearanceDictionary object or null if not present
*/","* This will get the appearance dictionary associated with this annotation. This may return null.
     * 
     * @return This annotations appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getPage(),843,847,"/**
* Retrieves the first page of the PDF document.
* @return PDPage object representing the first page or null if not found
*/","* This will retrieve the corresponding page of this annotation. See also
     * <a href=""https://stackoverflow.com/a/36894982/535646"">this answer</a> about what to do if
     * the page isn't available.
     *
     * @return The corresponding page or null if not available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getBorderEffect(),253,257,"/**
* Retrieves the border effect dictionary.
* @return PDBorderEffectDictionary object or null if not found
*/","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getBorderStyle(),126,130,"/**
* Retrieves border style dictionary.
* @return PDBorderStyleDictionary object or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in
     * drawing the line.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getPreviousURI(),190,194,"/**
* Retrieves the previous URI action.
* @return PDActionURI object or null if not found
*/","* This will set the previous URI action, in case it's needed.
     *
     * @return The previous URI.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getExternalData(),274,278,"/**
* Retrieves external data dictionary.
* @return PDExternalDataDictionary object or null if not present
*/","* This will return the external data dictionary.
     * 
     * @return the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getBorderStyle(),306,310,"/**
* Retrieves the border style dictionary.
* @return PDBorderStyleDictionary object or null if not present
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getBorderEffect(),99,103,"/**
* Retrieves border effect dictionary.
* @return PDBorderEffectDictionary object or null if not found
*/","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getBorderEffect(),96,100,"/**
 * Retrieves the border effect dictionary.
 * @return PDBorderEffectDictionary object or null if not present
 */","* This will retrieve the border effect dictionary, specifying effects to be applied used in
     * drawing the line.
     *
     * @return The border effect dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAppearanceCharacteristics(),120,124,"/**
* Retrieves appearance characteristics dictionary.
* @return PDAppearanceCharacteristicsDictionary object or null if not found
*/","* Returns the appearance characteristics dictionary.
     * 
     * @return the appearance characteristics dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getActions(),164,168,"/**
* Retrieves additional actions for the annotation.
* @return PDAnnotationAdditionalActions object or null if not present
*/","* Get the additional actions for this field. This will return null if there are no additional actions for this
     * field. As of PDF 1.6 this is only used for Widget Annotations.
     *
     * @return The actions of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getBorderStyle(),196,200,"/**
* Retrieves border style dictionary.
* @return PDBorderStyleDictionary object or null if not found
*/","* This will retrieve the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @return the border style dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getNormalAppearance(),65,69,"/**
* Retrieves normal appearance settings.
* @return PDAppearanceEntry object or null if not found
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"".
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getFilter(),75,84,"/**
* Retrieves the filter data dictionary.
* @return PDPropBuildDataDict object or null if not found
*/","* A build data dictionary for the signature handler that was
     * used to create the parent signature.
     *
     * @return the Filter as PDPropBuildFilter object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getPubSec(),103,112,"/**
* Retrieves public security settings.
* @return PDPropBuildDataDict object or null if not found
*/","* A build data dictionary for the PubSec software module
     * that was used to create the parent signature.
     *
     * @return the PubSec as PDPropBuildPubSec object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,getApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:getApp(),130,139,"/**
* Retrieves the application properties dictionary.
* @return PDPropBuildDataDict object or null if not found
*/","* A build data dictionary for the viewing application software
     * module that was used to create the parent signature.
     *
     * @return the App as PDPropBuildApp object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getMDP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getMDP(),408,412,"/**
* Retrieves MDP seed value from dictionary.
* @return PDSeedValueMDP object or null if not found
*/","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @return the mdp dictionary as PDSeedValueMDP",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSeedValueCertificate(),441,445,"/**
* Retrieves seed value certificate from dictionary.
* @return PDSeedValueCertificate object or null if not found
*/","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @return dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getTimeStamp(),465,469,"/**
 * Retrieves the timestamp from the dictionary.
 * @return PDSeedValueTimeStamp object or null if not found
 */","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @return the timestamp dictionary as PDSeedValueTimeStamp",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getPropBuild(),444,453,"/**
 * Retrieves the property build from the PDF dictionary.
 * @return PDPropBuild object or null if not found
 */","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @return the pdf signature build dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getStructureElement(),301,305,"/**
 * Retrieves structure element from the PDF object.
 * @return PDStructureElement or null if not found
 */","* Get the structure element of this node.
     *
     * @return The structure element of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,hasChildren,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:hasChildren(),170,173,"/**
 * Checks if the PDF object has child objects.
 * @return true if there are child objects, false otherwise
 */",* @return true if the node has at least one child,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOutlineItem,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOutlineItem(org.apache.pdfbox.cos.COSName),175,179,"/**
* Retrieves an outline item by name.
* @param name the COSName of the outline item
* @return PDOutlineItem object or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultResources(),542,547,"/**
* Retrieves default resources from the PDF document.
* @return PDResources object or null if not found
*/","* This will get the default resources for the AcroForm.
     *
     * @return The default resources or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getActions,org.apache.pdfbox.pdmodel.interactive.form.PDField:getActions(),224,228,"/**
* Retrieves additional actions associated with a form field.
* @return PDFormFieldAdditionalActions object or null if none exist
*/","* Get the additional actions for this field. This will return null if there
     * are no additional actions for this field.
     *
     * @return The actions of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValue(),141,145,"/**
* Retrieves the signature from the PDF document.
* @return PDSignature object or null if not present
*/","* Returns the signature contained in this field.
     * 
     * @return A signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getDefaultValue(),152,156,"/**
* Retrieves default signature.
* @return PDSignature object or null if not present
*/","* Returns the default value, if any.
     *
     * @return A signature dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSeedValue(),172,176,"/**
* Retrieves seed value from dictionary.
* @return PDSeedValue object or null if not found
*/","* <p>(Optional; PDF 1.5) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @return the seed value dictionary as PDSeedValue",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getMeasure(),125,129,"/**
* Retrieves measure dictionary from PDF.
* @return PDMeasureDictionary object or null if not present
*/","* This will retrieve the measure dictionary.
     * 
     * @return the measure dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getThreadInfo(),71,75,"/**
* Retrieves document information from the thread.
* @return PDDocumentInformation object or null if not found
*/","* Get info about the thread, or null if there is nothing.
     *
     * @return The thread information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,getFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:getFirstBead(),93,97,"/**
 * Retrieves the first thread bead.
 * @return PDThreadBead object or null if not found
 */","* Get the first bead in the thread, or null if it has not been set yet.  This
     * is a required field for this object.
     *
     * @return The first bead in the thread.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getThread(),77,81,"/**
 * Retrieves thread information from bead.
 * @return PDThread object or null if not found
 */","* This will get the thread that this bead is part of.  This is only required
     * for the first bead in a thread, so other beads 'may' return null.
     *
     * @return The thread that this bead is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getNextBead(),100,103,"/**
* Retrieves the next bead in the thread.
* @return PDThreadBead object representing the next bead or null if not found
*/","* This will get the next bead.  If this bead is the last bead in the list then this
     * will return the first bead.
     *
     * @return The next bead in the list or the first bead if this is the last bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPreviousBead(),121,124,"/**
* Retrieves the previous bead in the thread.
* @return PDThreadBead object representing the previous bead
*/","* This will get the previous bead.  If this bead is the first bead in the list then this
     * will return the last bead.
     *
     * @return The previous bead in the list or the last bead if this is the first bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getPage(),156,160,"/**
* Retrieves a page from the current bead.
* @return PDPage object or null if not found
*/","* Get the page that this bead is part of.
     *
     * @return The page that this bead is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getMetadata(),252,256,"/**
* Retrieves PDF metadata.
* @return PDMetadata object or null if not found
*/","* Get the metadata that is part of the document catalog. This will return null if there is no
     * meta data for this object.
     *
     * @return The metadata for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMetadata,org.apache.pdfbox.pdmodel.PDPage:getMetadata(),672,676,"/**
* Retrieves PDF metadata.
* @return PDMetadata object or null if not available
*/","* Get the metadata that is part of the document catalog. This will return null if there is
     * no meta data for this object.
     * 
     * @return The metadata for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getDifferences(),469,472,"/**
 * Retrieves differences stream from FDF document.
 * @return COSStream containing differences or null if not found
 */","* This will get the incremental updates since the PDF was last opened.
     *
     * @return The differences entry of the FDF dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile(),726,730,"/**
* Retrieves font file as a PDStream.
* @return PDStream containing font data or null if not found
*/","* A stream containing a Type 1 font program.
     *
     * @return A stream containing a Type 1 font program.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile2(),747,751,"/**
 * Retrieves font file stream.
 * @return PDStream object for font file or null if not found
 */","* A stream containing a true type font program.
     *
     * @return A stream containing a true type font program.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFile3(),768,772,"/**
* Retrieves the font file stream.
* @return PDStream containing font data or null if not present
*/","* A stream containing a font program that is not true type or type 1.
     *
     * @return A stream containing a font program.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCIDSet(),789,793,"/**
* Retrieves CID set stream from dictionary.
* @return PDStream of CID set or null if not found
*/","* Get the CIDSet stream.
     *
     * @return A stream containing a CIDSet.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getDestOutputIntent,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getDestOutputIntent(),63,66,"/**
 * Retrieves the destination output intent stream.
 * @return COSStream representing the destination output profile or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSound(),71,74,"/**
 * Retrieves the sound stream from an action.
 * @return COSStream containing sound data or null if not present
 */","* Gets the sound object.
     * 
     * @return The sound object defining the sound that shall be played.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalIcon(),186,190,"/**
 * Retrieves the normal icon from the form object.
 * @return PDFormXObject representing the normal icon or null if not present
 */","* This will retrieve the normal icon.
     * 
     * @return the normal icon.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverIcon(),197,201,"/**
* Retrieves rollover icon from the form.
* @return PDFormXObject representing the rollover icon, or null if not present
*/","* This will retrieve the rollover icon.
     * 
     * @return the rollover icon",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateIcon,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateIcon(),208,212,"/**
* Retrieves the alternate icon.
* @return PDFormXObject representing the alternate icon or null if not present
*/","* This will retrieve the alternate icon.
     * 
     * @return the alternate icon.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getDocumentID,org.apache.pdfbox.cos.COSDocument:getDocumentID(),361,364,"/**
 * Retrieves the document ID from the trailer.
 * @return COSArray containing the document ID or null if not found
 */","* This will get the document ID.
     *
     * @return The document id.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,detectPossibleSignature,org.apache.pdfbox.pdfwriter.COSWriter:detectPossibleSignature(org.apache.pdfbox.cos.COSDictionary),1267,1291,"/**
 * Detects possible signature in PDF dictionary.
 * @param obj PDF dictionary to check
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOutputIntents(),411,428,"/**
 * Retrieves output intents from the document.
 * @return List of PDOutputIntent objects representing output intents
 */","* Get the list of OutputIntents defined in the document.
     *
     * @return The list of PDOutputIntent, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getThreadBeads,org.apache.pdfbox.pdmodel.PDPage:getThreadBeads(),634,654,"/**
* Retrieves thread beads from a PDF page.
* @return List of PDThreadBead objects representing the beads on the page
*/","* This will get a list of PDThreadBead objects, which are article threads in the document. This
     * will return an empty list if there are no thread beads.
     *
     * @return A list of article threads on this page, never null. The returned list is backed by
     * the beads COSArray, so any adding or deleting in this list will change the document too.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getViewports,org.apache.pdfbox.pdmodel.PDPage:getViewports(),832,853,"/**
* Retrieves viewport dictionaries from the page.
* @return List of PDViewportDictionary objects or null if none exist
*/","* Get the viewports.
     *
     * @return a list of viewports or null if there is no /VP entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getKids(),114,129,"/**
* Retrieves child nodes.
* @return List of PDNameTreeNode objects or null if no children exist
*/","* Return the children of this node.  This list will contain PDNameTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getNames(),253,280,"/**
 * Retrieves a map of names and their corresponding values.
 * @return Unmodifiable map with string keys and generic type T values, or null if not available
 * @throws IOException if an I/O error occurs during processing
 */","* This will return a map of names on this level. The key will be a string,
     * and the value will depend on where this class is being used.
     *
     * @return ordered map of COS objects or <code>null</code> if the dictionary
     * contains no 'Names' entry on this level.
     *
     * @throws IOException If there is an error while creating the sub types.
     * @see #getKids()",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getKids(),88,103,"/**
 * Retrieves child nodes of the current node.
 * @return List of PDNumberTreeNode objects representing children
 */","* Return the children of this node.  This list will contain PDNumberTreeNode objects.
     *
     * @return The list of children or null if there are no children.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getNumbers(),177,204,"/**
* Retrieves a map of page label numbers.
* @return Map of integers to COSObjectable or null if not found
* @throws IOException if an I/O error occurs
*/","* This will return a map of numbers on this level. The key will be a java.lang.Integer, the
     * value will depend on where this class is being used.
     *
     * @return A map of COS objects.
     *
     * @throws IOException If there is a problem creating the values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getUpperLimit(),281,290,"/**
* Retrieves the upper limit from a COSArray.
* @return Integer representing the upper limit or null if not found
*/","* Get the highest value for a key in the number map.
     *
     * @return The highest value for a key in the map or null if missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getLowerLimit(),322,331,"/**
* Retrieves the lower limit value from a COSArray.
* @return Integer representing the lower limit or null if not found
*/","* Get the lowest value for a key in the number map.
     *
     * @return The lowest value for a key in the map or null if missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeValues(),264,271,"/**
 * Retrieves the range values as a COSArray.
 * @return COSArray containing range values or null if not set
 */","* Returns all ranges for the output values as COSArray .
     * Required for type 0 and type 4 functions
     * @return the ranges array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainValues(),278,285,"/**
* Retrieves or initializes the domain values.
* @return COSArray containing domain values
*/","* Returns all domains for the input values as COSArray.
     * Required for all function types.
     * @return the domains array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSize,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getSize(),95,102,"/**
* Returns the SIZE array from the COS object.
* @return COSArray representing the size or null if not found
*/","* The ""Size"" entry, which is the number of samples in each input dimension
     * of the sample table.
     *
     * @return A List of java.lang.Integer objects.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeValues(),170,182,"/**
 * Retrieves or creates decode array.
 * @return COSArray containing decode values or defaults
 */","* Returns all decode values as COSArray.
     * 
     * @return the decode array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getFunctions,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getFunctions(),133,140,"/**
 * Retrieves the array of functions.
 * @return COSArray containing functions or null if not set
 */","* Returns all functions values as COSArray.
     * 
     * @return the functions array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getBounds,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getBounds(),147,154,"/**
* Retrieves or initializes the bounds array.
* @return COSArray representing the bounds
*/","* Returns all bounds values as COSArray.
     * 
     * @return the bounds array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncode,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncode(),161,168,"/**
* Retrieves the encode array from the COS object.
* @return COSArray containing encode information or null if not present
*/","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,getOwnerUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:getOwnerUserProperties(),64,74,"/**
 * Retrieves owner user properties.
 * @return List of PDUserProperty objects representing user properties
 */","* Returns the user properties.
     * 
     * @return the user properties",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isAttached(java.lang.String),123,137,"/**
* Checks if an edge is attached.
* @param edge the edge to check
* @return true if edge is attached, false otherwise
*/","* Is the artifact attached to the given edge?
     * 
     * @param edge the edge
     * @return <code>true</code> if the artifact is attached to the given edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getColor(),447,460,"/**
 * Retrieves the color from an annotation.
 * @return Color object or null if not available
 */","* Get the annotation color.
     *
     * @return The annotation color, or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getInteriorColor(),120,133,"/**
 * Retrieves the interior color of an annotation.
 * @return Color object representing the interior color or null if not set
 */","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getCallout(),157,161,"/**
 * Retrieves callout coordinates from annotation.
 * @return Array of floats representing callout points or null if not available
 */","* This will get the coordinates of the callout line.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:getInkList(),139,155,"/**
* Retrieves ink list from annotation.
* @return List of float arrays representing ink data or null if not found
*/","* Get the paths making up the freehand ""scribble"".
     *
     * @see #setInkList(List)
     * @return the List of arrays representing the paths.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLine(),172,176,"/**
* Retrieves line coordinates from annotation.
* @return float array of line coordinates or null if not present
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getStartPointEndingStyle(),206,210,"/**
 * Retrieves the ending style of a line annotation.
 * @return The name of the ending style or LE_NONE if not set.
 */","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getEndPointEndingStyle(),240,244,"/**
* Retrieves the endpoint style of a line annotation.
* @return endpoint style as a string, default is LE_NONE if not set
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getInteriorColor(),266,279,"/**
* Retrieves the interior color of an annotation.
* @return Color object or null if not available
*/","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionHorizontalOffset(),405,409,"/**
* Retrieves horizontal offset of annotation caption.
* @return horizontal offset value or 0 if not set
*/","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionVerticalOffset(),434,438,"/**
* Retrieves vertical offset of annotation caption.
* @return vertical offset value or 0 if not set
*/","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getVertices(),126,130,"/**
* Retrieves vertices of an annotation.
* @return Array of vertex coordinates or null if not available
*/","* This will get the coordinates of the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:getInteriorColor(),152,165,"/**
* Retrieves the interior color of an annotation.
* @return Color object representing the interior color or null if not set
*/","* This will get interior color of the drawn area.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getVertices(),143,147,"/**
 * Retrieves vertices of an annotation.
 * @return array of vertex coordinates or null if not available
 */","* This will get the coordinates of the the vertices.
     *
     * @return array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getStartPointEndingStyle(),176,180,"/**
 * Retrieves the starting point ending style of an annotation.
 * @return The name of the starting point ending style or LE_NONE if not set.
 */","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getEndPointEndingStyle(),209,213,"/**
* Retrieves the endpoint style of a line annotation.
* @return endpoint style name or LE_NONE if not set
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:getInteriorColor(),235,248,"/**
* Retrieves the interior color of an annotation.
* @return Color object representing the interior color or null if not specified
*/","* This will retrieve the interior color of the line endings defined in the LE entry.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getInteriorColor(),121,134,"/**
 * Retrieves the interior color of an annotation.
 * @return Color object representing the interior color or null if not set
 */","* This will retrieve the interior color of the drawn area.
     *
     * @return object representing the color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,getCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:getCoords(),98,109,"/**
* Retrieves annotation coordinates.
* @return float array of coordinates or null if missing
*/","* Get the coordinates of individual words or group of words.
     * 
     * @see #setCoords(float[])
     * @return the array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getID(),305,308,"/**
 * Retrieves the ID array from the FDF document.
 * @return COSArray containing the document ID or null if not present
 */","* This is the FDF id.
     *
     * @return The FDF ID.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFields(),325,339,"/**
 * Retrieves all FDF fields.
 * @return List of FDFField objects or null if no fields are present
 */","* This will get the list of FDF Fields. This will return a list of FDFField objects.
     *
     * @return A list of FDF fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getPages(),376,390,"/**
 * Retrieves a list of FDF pages.
 * @return List of FDFPage objects or null if no pages are found
 */","* This will get the list of FDF Pages. This will return a list of FDFPage objects.
     *
     * @return A list of FDF pages.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getKids,org.apache.pdfbox.pdmodel.fdf.FDFField:getKids(),177,190,"/**
* Retrieves child fields of the current field.
* @return List of FDFField objects or null if no children exist
*/","* This will get the list of kids. This will return a list of FDFField objects.
     * This will return null if the underlying list is null.
     *
     * @return The list of kids.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:getOptions(),661,683,"/**
* Retrieves options from a field.
* @return List of option values or null if none exist
*/","* This will return a list of options for a choice field.
     * The values in the list will be 1 of 2 types:<ul>
     *     <li><code>String</code> </li>
     *     <li>{@link FDFOptionElement}</li>
     * </ul>
     *
     * @return A list of all options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,getTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:getTemplates(),71,84,"/**
* Retrieves templates from a PDF page.
* @return List of FDFTemplate objects or null if no templates exist
*/","* This will get a list of FDFTemplage objects that describe the named pages that serve as templates.
     *
     * @return A list of templates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,getFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:getFields(),92,105,"/**
* Retrieves form fields from a PDF template.
* @return List of FDFField objects or null if no fields are present
*/","* This will get a list of fields that are part of this template.
     *
     * @return A list of fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readWidths,org.apache.pdfbox.pdmodel.font.PDCIDFont:readWidths(),74,139,"/**
 * Reads glyph widths from a CIDFont dictionary.
 * Populates the 'widths' map with character code to width mappings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readVerticalDisplacements,org.apache.pdfbox.pdmodel.font.PDCIDFont:readVerticalDisplacements(),141,192,"/**
 * Reads vertical displacements and positions from PDF dictionary.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDFont:getAverageFontWidth(),388,430,"/**
* Calculates the average font width.
* @return The calculated average font width or 0 if no valid widths are found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidths,org.apache.pdfbox.pdmodel.font.PDFont:getWidths(),525,540,"/**
* Retrieves the list of character widths.
* @return List of Float representing character widths or empty list if not available
*/","* The widths of the characters. This will be null for the standard 14 fonts.
     *
     * @return The widths of the characters.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getDescendantFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:getDescendantFont(org.apache.pdfbox.cos.COSDictionary),310,322,"/**
 * Retrieves the first descendant font from a dictionary.
 * @param dictionary PDF dictionary containing font information
 * @return COSDictionary of the first descendant font or null if none found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,applyDifferences,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:applyDifferences(),151,175,"/**
 * Applies character encoding differences from a COSArray.
 * Updates internal map with new encodings.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getMatrix(),140,151,"/**
* Retrieves the transformation matrix.
* @return a 9-element float array representing the matrix or identity if none exists
*/","* Returns the linear interpretation matrix, which is an array of nine numbers.
     * If the underlying dictionary contains null then the identity matrix will be returned.
     * @return the linear interpretation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,getComponents,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:getComponents(),90,103,"/**
* Retrieves a list of component names from the dictionary.
* @return List of component names or an empty list if none found
*/","* Returns the names of the color components.
     * @return the names of the color components",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBackground(),153,160,"/**
 * Retrieves the background array from the dictionary.
 * @return COSArray representing the background or null if not set
 */","* This will return the background.
     *
     * @return the background",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getDomain(),83,90,"/**
 * Retrieves the domain array from the PDF object.
 * @return COSArray containing domain information or null if not set
 */","* This will get the optional Domain values of a function based shading.
     *
     * @return the domain values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getExtend(),56,63,"/**
* Returns the EXTEND array from the COS object.
* @return COSArray representing EXTEND or null if not present
*/","* This will get the optional Extend values for this shading.
     *
     * @return the extend values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getDomain(),81,88,"/**
* Retrieves the domain array from the PDF document.
* @return COSArray containing domain information or null if not set
*/","* This will get the optional Domain values for this shading.
     *
     * @return the domain values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,getCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:getCoords(),106,113,"/**
* Retrieves or initializes the coordinates array.
* @return COSArray containing coordinate data
*/","* This will get the Coords values for this shading.
     *
     * @return the coordinate values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeValues(),131,138,"/**
* Retrieves decode values as a COSArray.
* @return COSArray containing decode values or null if not present
*/","* Returns all decode values as COSArray.
     *
     * @return the decode array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFontSetting(),437,441,"/**
 * Retrieves font settings from a dictionary.
 * @return PDFontSetting object or null if no font array is found
 */","* This will get the font setting of the graphics state.
     *
     * @return The font setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFields(),59,62,"/**
 * Retrieves an array of form fields.
 * @return COSArray containing form field data
 */","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFields(),85,88,"/**
 * Retrieves the fields array from the action.
 * @return COSArray containing form fields or null if not present
 */","* An array identifying which fields to include in the submission or which to exclude, depending
     * on the setting of the Include/Exclude flag in the Flags entry
     *
     * @return the array of fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:getRectDifferences(),92,96,"/**
* Retrieves rectangle differences as a float array.
* @return Array of floats representing rectangle differences or empty if none
*/","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the boundaries of the underlying caret.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifferences(),179,183,"/**
 * Retrieves rectangle differences from a PDF object.
 * @return Array of floats representing the rectangle differences, or an empty array if none found.
 */","* This will get the margin between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getCallout(),208,212,"/**
* Retrieves callout array from PDF object.
* @return float array representing callout or null if not present
*/","* This will get the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @return An array of four or six numbers specifying a callout line attached to the free text
     * annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and ending
     * coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent the
     * starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,getInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:getInkList(),86,107,"/**
 * Retrieves the ink list from a PDF object.
 * @return 2D array of floats representing the ink list, or an empty array if not found
 */","* Get one or more disjoint paths that make this annotation.
     *
     * @return An array of arrays, each representing a stroked path. Each array shall be a series of
     * alternating horizontal and vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLine(),145,149,"/**
* Retrieves line coordinates.
* @return array of floats representing line coordinates or null if not found
*/","* This will retrieve the start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @return array of floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getStartPointEndingStyle(),178,186,"/**
 * Retrieves the starting point ending style.
 * @return String representing the ending style or default if not set
 */","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getEndPointEndingStyle(),215,223,"/**
* Retrieves the endpoint style from a PDF object.
* @return endpoint style as a string or default value if not found
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionHorizontalOffset(),370,374,"/**
 * Retrieves horizontal offset of caption.
 * @return Horizontal offset as a float, default is 0.0 if not set
 */","* This will retrieve the horizontal offset of the caption.
     * 
     * @return the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionVerticalOffset(),399,403,"/**
* Retrieves vertical offset of caption.
* @return float value representing the vertical offset
*/","* This will retrieve the vertical offset of the caption.
     * 
     * @return the vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getQuadPoints(),211,215,"/**
* Retrieves quadrilateral points from a PDF annotation.
* @return Array of quad points or null if not present
*/","* This will retrieve the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @return An array of floats representing the quad points.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getVertices(),111,115,"/**
* Retrieves vertex coordinates.
* @return array of vertex floats or null if not present
*/","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,getPath,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:getPath(),136,157,"/**
* Retrieves the path data from a PDF object.
* @return 2D array of floats representing the path or null if not found
*/","* PDF 2.0: This will retrieve the arrays that shall represent the alternating horizontal
     * and vertical coordinates for path building.
     *
     * @return An array of float arrays, each supplying the operands for a path building operator
     * (m, l or c). The first array should have 2 elements, the others should have 2 or 6 elements.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getStartPointEndingStyle(),84,92,"/**
 * Retrieves the ending style of a line annotation's starting point.
 * @return String representing the ending style or LE_NONE if not specified
 */","* This will retrieve the line ending style for the start point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the start point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getEndPointEndingStyle(),121,129,"/**
* Retrieves the ending style of the line annotation.
* @return String representing the line ending style or LE_NONE if not set
*/","* This will retrieve the line ending style for the end point, possible values shown in the LE_ constants section.
     *
     * @return The ending style for the end point, LE_NONE if missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,getVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:getVertices(),157,161,"/**
* Retrieves vertex coordinates.
* @return array of vertex floats or null if not available
*/","* This will retrieve the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @return An array of floats representing the alternating horizontal and vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifferences(),168,172,"/**
* Retrieves rectangle differences array.
* @return Array of floats representing rectangle differences or empty if none
*/","* This will get the differences between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @return the differences. If the entry hasn't been set am empty array is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,getQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:getQuadPoints(),69,73,"/**
 * Retrieves quadrilateral points from a PDF annotation.
 * @return array of float values representing the quad points, or null if not available
 */","* This will retrieve the set of quadpoints which encompass the areas of this annotation.
     *
     * @return An array of floats representing the quad points.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getSubFilter(),279,283,"/**
* Retrieves subfilters from a PDF dictionary.
* @return List of subfilter names or empty list if none found
*/","* If <b>SubFilter</b> is not null and the {@link #isSubFilterRequired()} indicates this
     * entry is a required constraint, then the first matching encodings shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isSubFilterRequired()}
     * indicates that this is an optional constraint, then the first matching encoding shall
     * be used if it is available. If it is not available, a different encoding may be used
     * instead.
     *
     * @return the subfilter that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getDigestMethod(),305,309,"/**
* Retrieves digest methods from dictionary.
* @return List of digest method names or empty list if none found
*/","* An array of names indicating acceptable digest algorithms to use when
     * signing. The value shall be one of <b>SHA1</b>, <b>SHA256</b>, <b>SHA384</b>,
     * <b>SHA512</b>, <b>RIPEMD160</b>. The default value is implementation-specific.
     *
     * @return the digest method that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getReasons(),377,381,"/**
* Retrieves a list of reasons from the document.
* @return List of reason strings or empty list if none present
*/","* If the Reasons array is provided and {@link #isReasonRequired()} indicates that
     * Reasons is a required constraint, one of the reasons in the array shall be used
     * for the signature dictionary; otherwise signing shall not take place. If the
     * {@link #isReasonRequired()} indicates Reasons is an optional constraint, one of
     * the reasons in the array may be chose or a custom reason can be provided.
     *
     * @return the reasons that should be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getLegalAttestation(),492,496,"/**
 * Retrieves legal attestation fields from the document.
 * @return List of legal attestation field names or empty list if none found
 */","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @return the reasons that should be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubject(),219,223,"/**
 * Retrieves subject byte arrays from the document.
 * @return List of byte arrays representing the subject or null if not found
 */","* Returns list of byte arrays that contains DER-encoded X.509v3 certificates
     * 
     * @return list of byte arrays containing DER-encoded X.509v3 certificates",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getKeyUsage(),339,355,"/**
* Retrieves key usage extensions from a dictionary.
* @return List of key usage strings or null if not found
*/","* Returns list of key usages of certificate strings where each string is 9 characters long and each character is
     * one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't care. each index in the string
     * represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     * 
     * @return list of key usages of certificate strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getIssuer(),458,462,"/**
* Retrieves issuer information from a PDF document.
* @return List of byte arrays representing the issuer or null if not present
*/","* Returns list of array of bytes of DER-encoded X.509v3 certificates
     * 
     * @return list of array of bytes of DER-encoded X.509v3 certificates",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getOID(),514,518,"/**
* Retrieves OID list from dictionary.
* @return List of byte arrays representing OIDs or null if not found
*/","* Returns A list of array of bytes that contain Object Identifiers (OIDs) of the certificate policies that must be
     * present in the signing certificate
     * 
     * @return list of array of bytes that contain Object Identifiers of the certificate policies",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getByteRange(),298,311,"/**
* Retrieves byte range from dictionary.
* @return array of integers representing byte ranges or empty if none found
*/","* Read out the byterange from the file.
     *
     * @return an integer array with the byterange, or an empty array if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getCalcOrder(),696,720,"/**
* Retrieves calculation order of form fields.
* @return List of PDField objects in calculation order
*/","* Return the calculation order in which field values should be recalculated when the value of
     * any field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @return field list. Note these objects may not be identical to PDField objects retrieved from
     * other methods (depending on cache setting). The best strategy is to call
     * {@link #getCOSObject()} to check for identity. The list is not backed by the /CO COSArray in
     * the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getSelectedOptionsIndex(),225,229,"/**
* Retrieves selected options' indices.
* @return List of selected option indices or empty list if none
*/","* This will get the indices of the selected options - the 'I' key.
     * <p>
     * This is only needed if a choice field allows multiple selections and
     * two different items have the same export value or more than one values
     * is selected.
     * </p>
     * <p>The indices are zero-based</p>
     *
     * @return List containing the indices of all selected options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeXs(),78,93,"/**
 * Retrieves the number format dictionaries for changes.
 * @return Array of PDNumberFormatDictionary objects or null if not found
 */","* This will return the changes along the x-axis.
     * 
     * @return changes along the x-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getChangeYs(),115,130,"/**
 * Retrieves number format dictionaries for Y-axis changes.
 * @return Array of PDNumberFormatDictionary objects or null if not found
 */","* This will return the changes along the y-axis.
     * 
     * @return changes along the y-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getDistances(),152,167,"/**
 * Retrieves distances as number format dictionaries.
 * @return array of PDNumberFormatDictionary or null if not found
 */","* This will return the distances.
     * 
     * @return distances",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAreas(),189,204,"/**
 * Retrieves number format dictionaries from the PDF.
 * @return array of PDNumberFormatDictionary objects or null if none found
 */","* This will return the areas.
     * 
     * @return areas",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getAngles(),226,241,"/**
* Retrieves angle format dictionaries.
* @return array of PDNumberFormatDictionary or null if not available
*/","* This will return the angles.
     * 
     * @return angles",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getLineSloaps(),263,278,"/**
 * Retrieves line slope dictionaries.
 * @return Array of PDNumberFormatDictionary objects or null if not available
 */","* This will return the sloaps of a line.
     * 
     * @return the sloaps of a line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCoordSystemOrigin(),300,304,"/**
* Retrieves coordinate system origin.
* @return array of floats representing the origin or null if not found
*/","* This will return the origin of the coordinate system.
     * 
     * @return the origin",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getVisibilityPolicy(),108,111,"/**
* Retrieves the visibility policy.
* @return COSName representing the visibility policy or ANY_ON if not specified
*/","* Get the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     *
     * @return the visibility policy, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String),1040,1043,"/**
 * Retrieves a long value by key.
 * @param key the key to look up
 * @return the long value associated with the key, or -1 if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     *
     * @return The long value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,org.apache.pdfbox.cos.COSDictionary:getLong(org.apache.pdfbox.cos.COSName),1052,1055,"/**
 * Retrieves a long value by key with a default.
 * @param key the COSName key to look up
 * @return the long value if found, otherwise -1
 */","* This is a convenience method that will get the dictionary object that is expected to be an long. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The long value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getLong,"org.apache.pdfbox.cos.COSDictionary:getLong(java.lang.String,long)",1065,1068,"/**
* Retrieves a long value by key with a default.
* @param key the configuration key as a String
* @param defaultValue the default long value if key not found
* @return the long value associated with the key or default
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,decode,"org.apache.pdfbox.filter.Filter:decode(java.io.InputStream,java.util.List,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.filter.DecodeOptions,java.util.List)",231,299,"/**
* Decodes an input stream using a list of filters.
* @param encoded the input stream to decode
* @param filterList list of filters for decoding
* @param parameters dictionary containing decode parameters
* @param options decode options
* @param results optional list to store decode results
* @return decoded RandomAccessRead object
* @throws IOException if an I/O error occurs
*/","* Decodes data, with optional DecodeOptions. Not all filters support all options, and so callers should check the
     * options' <code>honored</code> flag to test if they were applied.
     *
     * @param encoded the input stream holding the encoded data
     * @param filterList list of filters to be used for decoding
     * @param parameters the parameters used for decoding
     * @param options additional options for decoding
     * @param results list of optional decoding results for each filter
     * @return the decoded stream data
     * @throws IOException if the stream cannot be decoded
     * @throws IllegalArgumentException if filterList is empty",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefTrailerResolver.java,setStartxref,org.apache.pdfbox.pdfparser.XrefTrailerResolver:setStartxref(long),233,302,"/**
* Sets the startxref byte position and resolves XRef trailers.
* @param startxrefBytePosValue the byte position of the startxref entry
*/","* Sets the byte position of the first XRef
     * (has to be called after very last startxref was read).
     * This is used to resolve chain of active XRef/trailer.
     *
     * In case startxref position is not found we output a
     * warning and use all XRef/trailer objects combined
     * in byte position order.
     * Thus for incomplete PDF documents with missing
     * startxref one could call this method with parameter value -1.
     * 
     * @param startxrefBytePosValue starting position of the first XRef
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String),1096,1099,"/**
 * Retrieves a float value by key.
 * @param key the key associated with the float value
 * @return the float value or -1 if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,org.apache.pdfbox.cos.COSDictionary:getFloat(org.apache.pdfbox.cos.COSName),1108,1111,"/**
 * Retrieves a float value by key.
 * @param key the COSName key to search for
 * @return the float value or -1 if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be an float. -1 is returned
     * if there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFloat,"org.apache.pdfbox.cos.COSDictionary:getFloat(java.lang.String,float)",1121,1124,"/**
* Retrieves a float value by key with a default.
* @param key PDF key as string
* @param defaultValue fallback value if not found
* @return float value or default
*/","* This is a convenience method that will get the dictionary object that is expected to be a float. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The float value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getUserUnit,org.apache.pdfbox.pdmodel.PDPage:getUserUnit(),877,881,"/**
* Retrieves user unit from PDF page.
* @return User unit value or default 1.0 if invalid
*/","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch, or 1 if it hasn't been set. This is supported by PDF 1.6
     * and higher.
     *
     * @return the user unit.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineWidth(),122,125,"/**
 * Retrieves the guideline width.
 * @return float value representing the guideline width, default is 1 if not set
 */","* Get the width of the of the guideline in default user space units.
     * The default is 1.
     *
     * @return The width of the guideline.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getOpacity(),815,819,"/**
 * Retrieves the opacity of an annotation.
 * @return opacity value as a float, defaulting to 1.0 if not set
 */","* Get the opacity value.
     *
     * @return The opacity of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontWeight(),337,340,"/**
 * Retrieves the font weight.
 * @return font weight as a float, defaulting to 0 if not found
 */","* The weight of the font.  According to the PDF spec ""possible values are
     * 100, 200, 300, 400, 500, 600, 700, 800 or 900""  Where a higher number is
     * more weight and appears to be more bold.
     *
     * @return The font weight.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getItalicAngle(),442,445,"/**
* Retrieves the italic angle of the font.
* @return italic angle as a float value
*/","* This will get the italic angle for the font.
     *
     * @return The italic angle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAscent(),462,465,"/**
 * Retrieves the ascent value from the dictionary.
 * @return the ascent value as a float, defaulting to 0 if not found
 */","* This will get the ascent for the font.
     *
     * @return The ascent.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getDescent(),482,485,"/**
 * Retrieves the descent value.
 * @return Descent value as a float, defaulting to 0 if not found
 */","* This will get the descent for the font.
     *
     * @return The descent.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getLeading(),502,505,"/**
 * Retrieves leading value from dictionary.
 * @return leading value as float or 0 if not found
 */","* This will get the leading for the font.
     *
     * @return The leading.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCapHeight(),522,533,"/**
* Returns the font's cap height.
* @return cap height value, adjusted for negative values
*/","* This will get the CapHeight for the font.
     *
     * @return The cap height.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getXHeight(),552,563,"/**
* Retrieves X height of font.
* @return Absolute X height value
*/","* This will get the x height for the font.
     *
     * @return The x height.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemV(),581,584,"/**
 * Retrieves the vertical stem width.
 * @return vertical stem width as a float, defaulting to 0 if not specified
 */","* This will get the stemV for the font.
     *
     * @return The stem v value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getStemH(),601,604,"/**
 * Retrieves the stem height value.
 * @return stem height as a float, defaulting to 0 if not set
 */","* This will get the stemH for the font.
     *
     * @return The stem h value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getAverageWidth(),621,624,"/**
 * Retrieves the average width of characters.
 * @return average width as a float, defaulting to 0 if not set
 */","* This will get the average width for the font.
     *
     * @return The average width value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMaxWidth(),641,644,"/**
 * Retrieves the maximum width value.
 * @return maximum width as a float, defaulting to 0 if not set
 */","* This will get the max width for the font.
     *
     * @return The max width value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getMissingWidth(),681,684,"/**
 * Retrieves the missing width from the dictionary.
 * @return the missing width as a float, defaulting to 0 if not found
 */","* This will get the missing width for the font from the /MissingWidth dictionary entry.
     *
     * @return The missing width value, or 0 if there is no such dictionary entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:getGamma(),113,116,"/**
 * Retrieves the gamma value from the dictionary.
 * @return gamma value as a float, defaulting to 1.0 if not found
 */","* This will get the gamma value. If none is present then the default of 1
     * will be returned.
     *
     * @return The gamma value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getXStep(),146,149,"/**
 * Retrieves the X step value from the COS object.
 * @return the X step as a float, defaulting to 0 if not set
 */","* This will return the XStep value.
     * @return The XStep value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getYStep(),164,167,"/**
 * Retrieves the Y step value from the COS object.
 * @return the Y step as a float, defaulting to 0 if not set
 */","* This will return the YStep value.
     * @return The YStep value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getVolume(),97,101,"/**
* Retrieves the volume level.
* @return Volume as a float between -1 and 1, defaulting to 1 if out of range
*/","* Sets the volume.
     *
     * @return The volume at which to play the sound, in the range −1.0 to 1.0. Default value: 1.0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineLength(),272,275,"/**
* Retrieves leader line length from COS object.
* @return float value representing leader line length or default of 0
*/","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineExtensionLength(),292,295,"/**
 * Retrieves the leader line extension length.
 * @return The extension length as a float value.
 */","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getLeaderLineOffsetLength(),312,315,"/**
* Retrieves leader line offset length.
* @return float value of leader line offset or 0 if not set
*/","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getConstantOpacity(),114,117,"/**
 * Retrieves constant opacity value.
 * @return opacity as float, default is 1 if not set
 */","* This will retrieve the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @return the constant opacity value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getWidth(),124,133,"/**
* Returns the width value.
* @return float representing the width or 0 if COSName is found
*/","* This will retrieve the border width in points, 0 = no border.
     *
     * @return The width of the border in points.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDuration(),147,150,"/**
 * Retrieves the duration value.
 * @return duration as a float, defaulting to 1 if not found
 */",* @return The duration in seconds of the transition effect or the default 1 if no duration is found.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getFlyScale(),164,167,"/**
 * Retrieves the fly scale value.
 * @return float representing the fly scale
 */","* @return The starting or ending scale at which the changes shall be drawn or the default 1 if no scale is found.
     * Only for {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,extractRegions,org.apache.pdfbox.text.PDFTextStripperByArea:extractRegions(org.apache.pdfbox.pdmodel.PDPage),113,130,"/**
* Extracts text regions from a PDF page.
* @param page the PDF page to process
*/","* Process the page to extract the region text.
     *
     * @param page The page to extract the regions from.
     * @throws IOException If there is an error while extracting text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,validatePerms,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:validatePerms(org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,boolean)",318,356,"/**
 * Validates PDF encryption permissions.
 * @param encryption PDEncryption object containing encrypted data
 * @param dicPermissions expected user permissions as an integer
 * @param encryptMetadata flag indicating if metadata should be encrypted
 * @throws IOException if decryption fails or validation fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidthForCID,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidthForCID(int),272,280,"/**
 * Retrieves width for character ID.
 * @param cid character identifier
 * @return width value, default if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getAverageFontWidth(),326,355,"/**
* Calculates the average font width.
* @return average width of glyphs or default width if calculation fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:getColorSpace(),67,70,"/**
 * Retrieves the color space.
 * @throws IOException if an I/O error occurs
 * @return PDColorSpace object
 */","* Returns the group color space or null if it isn't defined.
     *
     * @return the group color space.
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDPropertyList.java,create,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList:create(org.apache.pdfbox.cos.COSDictionary),40,56,"/**
* Creates a PDPropertyList from a COSDictionary.
* @param dict dictionary containing PDF properties
* @return PDPropertyList or subclass based on dictionary type
*/","* Creates a property list from the given dictionary.
     * 
     * @param dict COS dictionary
     * @return a new instance of a PDPropertyList using the given dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineWidth(),222,225,"/**
 * Retrieves line width from PDF dictionary.
 * @return line width as a float or null if not set
 */","* This will get the line width.  This will return null if there is no line width
     *
     * @return null or the LW value of the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getMiterLimit(),283,286,"/**
 * Retrieves the miter limit value.
 * @return float representing the miter limit or null if not set
 */","* This will get the miter limit.
     *
     * @return null or the ML value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getFlatnessTolerance(),458,461,"/**
 * Retrieves flatness tolerance value.
 * @return float representing flatness tolerance or null if not set
 */","* This will get the flatness tolerance.
     *
     * @return The flatness tolerance or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getSmoothnessTolerance(),478,481,"/**
 * Retrieves the smoothness tolerance value.
 * @return the smoothness tolerance as a Float
 */","* This will get the smothness tolerance.
     *
     * @return The smothness tolerance or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingAlphaConstant(),518,521,"/**
 * Retrieves the stroking alpha constant.
 * @return Float value representing the stroking alpha constant or null if not found
 */","* This will get the stroking alpha constant.
     *
     * @return The stroking alpha constant or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingAlphaConstant(),538,541,"/**
 * Retrieves the non-stroking alpha constant.
 * @return float value representing the non-stroking alpha constant
 */","* This will get the non stroking alpha constant.
     *
     * @return The non stroking alpha constant or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryValue,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryValue(),222,261,"/**
* Parses a COS dictionary value from the source.
* @return Parsed COSBase object or null if invalid
*/","* This will parse a PDF dictionary value.
     *
     * @return The parsed Dictionary object.
     *
     * @throws IOException If there is an error parsing the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,getBFCOSObjectOffsets,org.apache.pdfbox.pdfparser.BruteForceParser:getBFCOSObjectOffsets(),117,125,"/**
* Retrieves COS object offsets.
* @return Map of COSObjectKey to Long representing offsets or null if not found
*/","* Returns all found objects of a brute force search.
     * 
     * @return map containing all found objects of a brute force search
     * 
     * @throws IOException if something went wrong
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,validateXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:validateXrefOffsets(java.util.Map),392,441,"/**
* Validates and corrects XRef offsets in a PDF document.
* @param xrefOffset map of object keys to their offsets
* @return true if validation is successful, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefTable,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefTable(),753,799,"/**
 * Writes cross-reference table to output.
 * Handles incremental updates and sorts entries.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObject,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObject(org.apache.pdfbox.cos.COSBase),629,635,"/**
* Writes an object to output.
* @param obj the COSBase object to write
* @throws IOException if writing fails
*/","* This will write a COS object.
     *
     * @param obj The object to write.
     *
     * @throws IOException if the output cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeReference,org.apache.pdfbox.pdfwriter.COSWriter:writeReference(org.apache.pdfbox.cos.COSBase),1381,1389,"/**
 * Writes object reference to output.
 * @param obj COSBase object to write
 * @throws IOException if I/O error occurs
 */","* visitFromObjRef method comment.
     *
     * @param obj The object that is being visited.
     *
     * @throws IOException If there is an exception while visiting this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.OutputStream),201,205,"/**
* Saves the current object to an OutputStream.
* @param output stream to write the object data
* @throws IOException if an I/O error occurs during writing
*/","* This will save the document to an output stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,clear,org.apache.pdfbox.cos.COSArray:clear(),140,144,"/**
 * Clears all objects and updates state.
 */",* This will remove all of the objects in the collection.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeAll,org.apache.pdfbox.cos.COSArray:removeAll(java.util.Collection),151,155,"/**
* Removes all specified objects from the collection and updates state.
* @param objectsList list of COSBase objects to remove
*/","* This will remove all of the objects in the collection.
     *
     * @param objectsList The list of objects to remove from the collection.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,retainAll,org.apache.pdfbox.cos.COSArray:retainAll(java.util.Collection),162,168,"/**
* Retains only elements in objects that are also in objectsList.
* @param objectsList collection of COSBase objects to retain
*/","* This will retain all of the objects in the collection.
     *
     * @param objectsList The list of objects to retain from the collection.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,int)",242,246,"/**
* Sets an integer value at a specified index.
* @param index position in the list to update
* @param intVal integer value to set
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param intVal The object to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(int),459,464,"/**
* Removes and returns an element at a specific index.
* @param i index of the element to remove
* @return the removed COSBase object or null if out of bounds
*/","* This will remove an element from the array.
     *
     * @param i The index of the object to remove.
     *
     * @return The object that was removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,remove,org.apache.pdfbox.cos.COSArray:remove(org.apache.pdfbox.cos.COSBase),474,482,"/**
* Removes an object from the collection.
* @param o the object to be removed
* @return true if the object was successfully removed, false otherwise
*/","* This will remove an element from the array.
     *
     * @param o The object to remove.
     *
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,clear,org.apache.pdfbox.cos.COSDictionary:clear(),130,134,"/**
 * Clears all items and updates the state.
 */",* This will clear all items in the map.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,removeItem,org.apache.pdfbox.cos.COSDictionary:removeItem(org.apache.pdfbox.cos.COSName),1164,1168,"/**
 * Removes an item by key from the collection.
 * @param key unique identifier of the item to remove
 */","* This will remove an item for the dictionary. This will do nothing of the object does not exist.
     *
     * @param key The key to the item to remove from the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,updateDifferentOrigin,org.apache.pdfbox.cos.COSIncrement:updateDifferentOrigin(org.apache.pdfbox.cos.COSUpdateState),258,265,"/**
 * Updates the state if origins differ.
 * @param updateState state to be updated
 */","* Check whether the given {@link COSUpdateState}´s {@link COSDocumentState} differs from the {@link COSIncrement}´s
     * known {@link #incrementOrigin}.<br>
     * Should that be the case, the {@link COSUpdateState} originates from another {@link COSDocument} and must be added
     * to the {@link COSIncrement}, hence call {@link COSUpdateState#update()}.
     *
     * @param updateState The {@link COSUpdateState} that shall be updated, if it's originating from another
     *                    {@link COSDocument}.
     * @see #incrementOrigin",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSObject.java,setToNull,org.apache.pdfbox.cos.COSObject:setToNull(),135,143,"/**
* Sets baseObject to null and updates state.
* @param none
* @return none
*/",* Sets the referenced object to COSNull and removes the initially assigned parser.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,"org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState,boolean)",118,164,"/**
 * Sets the origin document state.
 * @param originDocumentState new document state to set
 * @param dereferencing flag indicating if dereferencing is needed
 */","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     * <p>
     * Additionally to {@link #setOriginDocumentState(COSDocumentState)}, this shall also deny changing
     * {@link #updated}, should the flag {@code dereferencing} indicate, that this is caused by dereferencing a
     * {@link COSObject}.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @param dereferencing       {@code true}, if this update of the {@link COSDocumentState} is caused by
     *                            dereferencing a {@link COSObject}.
     * @see #originDocumentState
     * @see #updated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,getString,org.apache.pdfbox.cos.COSArray:getString(int),407,410,"/**
 * Retrieves a string at the specified index.
 * @param index position of the string to retrieve
 * @return string at the given index or default if not found
 */","* Get the value of the array as a string.
     *
     * @param index The index into the array.
     * @return The string or null if it does not exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String),639,642,"/**
 * Retrieves name as string from PDF name.
 * @param key key to fetch the name
 * @return name in string format
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(org.apache.pdfbox.cos.COSName,java.lang.String)",687,695,"/**
 * Retrieves name as string from COSName with a default value.
 * @param key the COSName key to look up
 * @param defaultValue the default value to return if not found
 * @return the name as a string, or default value if null
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefStreamOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefStreamOffset(long),352,390,"/**
* Checks if the given offset points to a valid XRef stream.
* @param startXRefOffset starting offset for XRef check
* @return true if valid XRef stream, false otherwise
*/","* Check if the cross reference stream can be found at the current offset.
     * 
     * @param startXRefOffset the expected start offset of the XRef stream
     * @return the revised offset
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageMode(),468,487,"/**
* Retrieves the page mode from the root dictionary.
* @return PageMode enum value, defaulting to USE_NONE if invalid or not found
*/","* Returns the page display mode.
     * 
     * @return the PageMode of the document, if not present PageMode.USE_NONE is returned",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLayout(),504,520,"/**
* Retrieves the page layout from a PDF document.
* @return PageLayout enum or SINGLE_PAGE if invalid or not set
*/","* Returns the page layout.
     * 
     * @return the PageLayout of the document, if not present PageLayout.SINGLE_PAGE is returned",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getVersion(),599,602,"/**
 * Retrieves the version string from the root element.
 * @return Version string or null if not found
 */","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. ""1.4"")",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTrapped(),251,254,"/**
 * Retrieves trapped status from document information.
 * @return Trapped status as a string or null if not set
 */","* This will get the trapped value for the document.
     * This will return null if one is not found.
     *
     * @return The trapped value for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStyle(),104,107,"/**
 * Retrieves the style name.
 * @return Style name as a string
 */","* Returns the numbering style for this page range.
     * 
     * @return one of the STYLE_* constants",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,getType,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:getType(),58,61,"/**
 * Retrieves the type of the COS object.
 * @return The string representation of the type or null if not set.
 */","* Gets the type.
     * 
     * @return the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,getOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:getOwner(),122,125,"/**
 * Retrieves the owner's name from the COS object.
 * @return Owner's name as a string or null if not found
 */","* Returns the owner of the attributes.
     * 
     * @return the owner of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureType(),76,79,"/**
 * Retrieves the structure type from the COS object.
 * @return the structure type as a string or null if not found
 */","* Returns the structure type (S).
     * 
     * @return the structure type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:create(org.apache.pdfbox.cos.COSDictionary),68,80,"/**
* Creates a PDStructureNode from a COSDictionary.
* @param node the COSDictionary representing the structure node
* @return PDStructureNode instance based on the Type entry
* @throws IllegalArgumentException if Type is invalid
*/","* Creates a node in the structure tree. Can be either a structure tree root,
     *  or a structure element.
     * 
     * @param node the node dictionary
     * @return the structure node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getType(),99,102,"/**
 * Retrieves the type of the COS object.
 * @return Type as a string or null if not found
 */","* Returns the type.
     * 
     * @return the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObjectFromDic,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObjectFromDic(org.apache.pdfbox.cos.COSDictionary),392,414,"/**
* Creates a COSObjectable from a COSDictionary.
* @param kidDic dictionary representing the structure element
* @return COSObjectable instance based on the dictionary type or null if unknown
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getName(),63,66,"/**
* Retrieves the name from the COS object.
* @return The name as a String or null if not found
*/","* Returns the property name.
     * 
     * @return the property name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getLanguage(),108,112,"/**
* Retrieves language property.
* @return language as string or null if not set
*/","* Gets the language (Lang).
     * 
     * @return the language",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getType,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getType(),45,48,"/**
 * Returns the type of the PDF object.
 * @return Type as a string
 */","* Gets the type (Type).
     * 
     * @return the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getSubtype,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getSubtype(),110,113,"/**
 * Retrieves the subtype property as a string.
 * @return The value of the SUBTYPE property or null if not found.
 */","* Gets the subtype (Subtype).
     * 
     * @return the subtype",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getFilter(),159,162,"/**
 * Retrieves the filter name from the dictionary.
 * @return the filter name as a string or null if not present
 */","* Get the name of the filter.
     *
     * @return The filter name contained in this encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSubFilter(),169,172,"/**
 * Retrieves the sub-filter name from the dictionary.
 * @return The sub-filter name as a string or null if not found
 */","* Get the name of the subfilter.
     *
     * @return The subfilter name contained in this encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,create,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:create(org.apache.pdfbox.cos.COSDictionary),323,403,"/**
* Creates an FDFAnnotation based on the given dictionary.
* @param fdfDic COSDictionary containing annotation details
* @return Specific FDFAnnotation instance or null if unsupported
*/","* Create the correct FDFAnnotation.
     *
     * @param fdfDic The FDF dictionary.
     *
     * @return A newly created FDFAnnotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getIntent(),856,859,"/**
 * Retrieves the intent of the annotation.
 * @return The intent as a string or null if not set.
 */","* Get the intent of the annotation.
     * 
     * @return The intent of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getLineEndingStyle(),292,295,"/**
 * Retrieves the line ending style.
 * @return Line ending style as a string
 */","* This will retrieve the line ending style.
     *
     * @return The ending style for the start point.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getVersion(),96,99,"/**
 * Retrieves the version name from the catalog.
 * @return version string or empty if not set
 */","* This will get the version that was specified in the catalog dictionary.
     *
     * @return The FDF version.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEncoding(),408,417,"/**
 * Retrieves the encoding name from FDF document.
 * Returns ""PDFDocEncoding"" if no specific encoding is found.
 * @return Encoding string
 */","* The encoding to be used for a FDF field. The default is PDFDocEncoding and this method will never return null.
     *
     * @return The encoding value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleOption(),95,103,"/**
* Retrieves scale option.
* @return Scale option as string, defaulting to ""Always"" if null
*/","* This will get the scale option. See the SCALE_OPTION_XXX constants. This is guaranteed to never return null.
     * Default: Always
     *
     * @return The scale option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getScaleType(),121,129,"/**
* Retrieves scale type, defaulting to proportional.
* @return scale type as string
*/","* This will get the scale type. See the SCALE_TYPE_XXX constants. This is guaranteed to never return null. Default:
     * Proportional
     *
     * @return The scale type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDCIDFont:getBaseFont(),205,208,"/**
 * Retrieves the base font name.
 * @return Base font name as a string
 */","* The PostScript name of the font.
     *
     * @return The postscript name of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getRegistry,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getRegistry(),47,50,"/**
 * Retrieves the registry name from the dictionary.
 * @return the registry name as a string or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getOrdering,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getOrdering(),52,55,"/**
 * Retrieves the ordering value from the dictionary.
 * @return the ordering as a string or null if not present
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getType,org.apache.pdfbox.pdmodel.font.PDFont:getType(),505,508,"/**
 * Retrieves the type name from the dictionary.
 * @return Type name as a string or null if not found
 */","* This will always return ""Font"" for fonts.
     * 
     * @return The type of object that this is.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSubType,org.apache.pdfbox.pdmodel.font.PDFont:getSubType(),515,518,"/**
 * Retrieves the subtype as a string.
 * @return The subtype name or null if not found
 */","* This will get the subtype of font.
     * 
     * @return the subtype",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontName(),285,288,"/**
 * Retrieves the font name from the dictionary.
 * @return The font name as a string or null if not found.
 */","* Get the font name.
     *
     * @return The name of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontStretch(),361,364,"/**
 * Retrieves the font stretch value.
 * @return font stretch as string or null if not set
 */","* A string representing the preferred font stretch.
     * According to the PDF Spec:
     * The font stretch value; it must be one of the following (ordered from
     * narrowest to widest): UltraCondensed, ExtraCondensed, Condensed, SemiCondensed,
     * Normal, SemiExpanded, Expanded, ExtraExpanded or UltraExpanded.
     *
     * @return The stretch of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBaseFont(),258,261,"/**
 * Retrieves the base font name.
 * @return Base font name as a string
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType0Font:getBaseFont(),414,417,"/**
 * Retrieves the base font name.
 * @return base font name as a string or null if not found
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBaseFont(),153,156,"/**
 * Retrieves the base font name.
 * @return Base font name as a string or null if not found
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBaseFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getBaseFont(),371,374,"/**
 * Retrieves the base font name.
 * @return base font name as a string or null if not found
 */","* Returns the PostScript name of the font.
     * 
     * @return the PostScript name of the font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType3Font:getName(),89,93,"/**
 * Retrieves the name from the dictionary.
 * @return the name as a string or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:isNChannel(),118,121,"/**
 * Checks if the dictionary represents an NChannel.
 * @return true if the subtype is ""NChannel"", false otherwise
 */","* Returns true if this is an NChannel (PDF 1.6) color space.
     * @return true if this is an NChannel color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getType(),83,86,"/**
 * Retrieves the type of the action.
 * @return String representing the action type
 */","* This will get the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @return The Type of PDF object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getSubType(),104,107,"/**
 * Retrieves the subtype of the action.
 * @return Subtype as a string or null if not found
 */","* This will get the type of action that the actions dictionary describes.
     *
     * @return The S entry of actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionFactory.java,createAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionFactory:createAction(org.apache.pdfbox.cos.COSDictionary),46,104,"/**
* Creates a PDAction based on the action type.
* @param action COSDictionary containing action details
* @return PDAction object or null if unsupported type
*/","* This will create the correct type of action based on the type specified
     * in the dictionary.
     *
     * @param action An action dictionary.
     *
     * @return An action of the correct type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getSubtype(),244,247,"/**
 * Retrieves the subtype of the current object.
 * @return The subtype as a string, or null if not set.
 */","* This will retrieve the subtype of the annotation.
     *
     * @return The subtype of this annotation, see the SUB_TYPE_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,getCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:getCaptionPositioning(),332,335,"/**
 * Retrieves caption positioning.
 * @return Caption positioning as a string or null if not set
 */","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getIntent(),253,256,"/**
 * Retrieves the intent of the COSObject.
 * @return The intent as a string or null if not found.
 */","* This will retrieve the intent of the annotation The values and meanings are specific to the actual annotation See
     * the IT_* constants for the annotation classes.
     *
     * @return the intent",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getSubtype(),77,80,"/**
 * Retrieves the subtype of the current object.
 * @return Subtype as a string or null if not available
 */","* returns the subtype of the external data dictionary.
     * 
     * @return the subtype of the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getName(),71,74,"/**
 * Retrieves the name as a string from the dictionary.
 * @return The name in string format or null if not found.
 */","* The name of the software module that was used to create the signature.
     * @return the name of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getFilter(),254,257,"/**
 * Retrieves the filter name from the dictionary.
 * @return The filter name as a string or null if not found.
 */","* If <b>Filter</b> is not null and the {@link #isFilterRequired()} indicates this entry is a
     * required constraint, then the signature handler specified by this entry shall be used when
     * signing; otherwise, signing shall not take place. If {@link #isFilterRequired()} indicates
     * that this is an optional constraint, this handler may be used if it is available. If it is
     * not available, a different handler may be used instead.
     *
     * @return the filter that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURLType(),597,600,"/**
 * Retrieves the URL type from the dictionary.
 * @return The URL type as a string or null if not found.
 */","* A name indicating the usage of the URL entry. There are standard uses and there can be
     * implementation-specific use for this URL. The following value specifies a valid standard
     * usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     *
     * @return string of URL type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getFilter(),204,207,"/**
 * Retrieves the filter name from the dictionary.
 * @return filter name as a string or null if not found
 */","* Returns the filter.
     * @return the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSubFilter(),214,217,"/**
 * Retrieves the sub-filter name.
 * @return Sub-filter name as a string or null if not found
 */","* Returns the subfilter.
     *
     * @return the subfilter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldType(),172,176,"/**
 * Retrieves the field type from the COS object.
 * @return Field type as a string or null if not found
 */","* {@inheritDoc}
     *
     * <p><b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns
     * the local value, without inheritance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getName(),105,108,"/**
 * Retrieves the name from the COSObject.
 * @return the name as a String
 */","* This will retrieve the name of the viewport.
     * 
     * @return the name of the viewport",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getDuplex(),408,411,"/**
 * Retrieves duplex setting from preferences.
 * @return duplex setting as string or null if not found
 */","* Get the Duplex preference.  See DUPLEX enumeration.
     *
     * @return the Duplex preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String),704,707,"/**
 * Retrieves string value by key.
 * @param key unique identifier for the string
 * @return string value associated with the key
 */","* This is a convenience method that will get the dictionary object that is expected to be a
     * string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(org.apache.pdfbox.cos.COSName,java.lang.String)",748,756,"/**
* Retrieves string value by key with a default.
* @param key the COSName key to search for
* @param defaultValue the default value if key is not found
* @return the string value or default if key is null
*/","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getLanguage(),579,582,"/**
 * Retrieves the language setting from the PDF document.
 * @return Language string or null if not set
 */","* Returns the language for the document, or null.
     * 
     * @return the language of the document if present, otherwise null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:getTitle(),90,93,"/**
 * Retrieves the title from document information.
 * @return Title as a string or null if not set
 */","* This will get the title of the document.  This will return null if no title exists.
     *
     * @return The title of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:getAuthor(),110,113,"/**
 * Retrieves the author from document information.
 * @return Author as a String or null if not set
 */","* This will get the author of the document.  This will return null if no author exists.
     *
     * @return The author of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:getSubject(),130,133,"/**
 * Retrieves the subject from document info.
 * @return Subject string or null if not set
 */","* This will get the subject of the document.  This will return null if no subject exists.
     *
     * @return The subject of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:getKeywords(),150,153,"/**
 * Retrieves keywords from document metadata.
 * @return String containing keywords or empty string if none
 */","* This will get the keywords of the document.  This will return null if no keywords exists.
     *
     * @return The keywords of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreator(),170,173,"/**
 * Retrieves the creator of the document.
 * @return The name of the creator as a String.
 */","* This will get the creator of the document.  This will return null if no creator exists.
     *
     * @return The creator of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:getProducer(),190,193,"/**
 * Retrieves the producer information from document metadata.
 * @return Producer name as a string or null if not available
 */","* This will get the producer of the document.  This will return null if no producer exists.
     *
     * @return The producer of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getPrefix(),162,165,"/**
 * Retrieves the prefix string from the root.
 * @return the prefix value as a String
 */","* Returns the page label prefix for this page range.
     * 
     * @return the page label prefix for this page range, or {@code null} if no
     *         prefix has been defined.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnicode(),128,131,"/**
 * Retrieves the Unicode file name.
 * @return The Unicode string representing the file name.
 */","* This will get the unicode file name.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFile(),150,154,"/**
 * Retrieves file name from PDF document.
 * @return File name as a string or null if not present
 */","* This will get the file name.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDos(),174,177,"/**
 * Retrieves DOS file system information.
 * @return String containing DOS file system details or null if not available
 */","* This will get the name representing a Dos file.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileMac(),184,187,"/**
 * Retrieves the MAC (Message Authentication Code) from the file.
 * @return MAC value as a string or null if not available
 */","* This will get the name representing a Mac file.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileUnix(),194,197,"/**
 * Retrieves the Unix file name.
 * @return the Unix file name as a String
 */","* This will get the name representing a Unix file.
     *
     * @return The file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFileDescription(),353,356,"/**
 * Retrieves file description from metadata.
 * @return Description of the file as a string
 */","* This will get the description.
     *
     * @return The file description.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getElementIdentifier(),117,120,"/**
 * Retrieves the element identifier.
 * @return The string value of the ID or null if not present.
 */","* Returns the element identifier (ID).
     * 
     * @return the element identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getTitle(),502,505,"/**
 * Retrieves the title from the COSObject.
 * @return The title as a String or null if not present
 */","* Returns the title (T).
     * 
     * @return the title",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getLanguage(),522,525,"/**
 * Retrieves the language of the document.
 * @return Language string or null if not set
 */","* Returns the language (Lang).
     * 
     * @return the language",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAlternateDescription(),542,545,"/**
 * Retrieves alternate description from COS object.
 * @return Alternate description as a string or null if not present
 */","* Returns the alternate description (Alt).
     * 
     * @return the alternate description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getExpandedForm(),562,565,"/**
 * Retrieves the expanded form of the PDF object.
 * @return The expanded form as a string or null if not available.
 */","* Returns the expanded form (E).
     * 
     * @return the expanded form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getActualText(),582,585,"/**
 * Retrieves the actual text from the COS object.
 * @return The actual text as a String or null if not present
 */","* Returns the actual text (ActualText).
     * 
     * @return the actual text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,getFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:getFormattedValue(),105,108,"/**
 * Retrieves formatted value from COS object.
 * @return Formatted string value or null if not found
 */","* Returns the string for the property value.
     * 
     * @return the string for the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getActualText,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getActualText(),119,123,"/**
 * Retrieves actual text from properties.
 * @return Actual text as a string or null if not available
 */","* Gets the actual text (ActualText).
     * 
     * @return the actual text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getAlternateDescription(),130,134,"/**
* Retrieves alternate description from properties.
* @return alternate description string or null if not available
*/","* Gets the alternate description (Alt).
     * 
     * @return the alternate description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getExpandedForm(),141,145,"/**
 * Retrieves expanded form property.
 * @return Expanded form string or null if properties are null
 */","* Gets the expanded form (E).
     * 
     * @return the expanded form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getDate(),482,485,"/**
 * Retrieves the date string from an annotation.
 * @return Date string or null if not present
 */","* Modification date.
     *
     * @return The date as a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getName(),712,715,"/**
 * Retrieves the name from an annotation.
 * @return The name as a String or null if not present.
 */","* Get the annotation name.
     *
     * @return The unique name of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getContents(),753,756,"/**
 * Retrieves the contents of an annotation.
 * @return The string content of the annotation or null if not set.
 */","* Get the text, or a description, of the annotation.
     *
     * @return The text, or a description, of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getTitle(),773,776,"/**
 * Retrieves the title from an annotation.
 * @return The title as a string or null if not present
 */","* Get the annotation title.
     *
     * @return The title of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getSubject(),836,839,"/**
 * Retrieves the subject of an annotation.
 * @return The subject string or null if not set.
 */","* Get the description of the annotation.
     *
     * @return The subject of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getSymbol(),141,144,"/**
 * Retrieves the symbol from the annotation.
 * @return The symbol string or null if not present.
 */","* This will retrieve the symbol that shall be associated with the caret.
     * 
     * @return the symbol",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getRotation(),207,210,"/**
 * Retrieves the rotation value of an annotation.
 * @return String representing the rotation angle or null if not set
 */","* This will get the clockwise rotation in degrees.
     * 
     * @return The number of degrees of clockwise rotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultAppearance(),227,231,"/**
 * Retrieves the default appearance string.
 * @return The default appearance string or null if not found.
 */","* Get the default appearance string.
     *
     * @return The default appearance of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getDefaultStyle(),248,251,"/**
 * Retrieves the default style from annotations.
 * @return default style as a string or null if not found
 */","* Get the default style string.
     *
     * @return The default style of the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaptionStyle(),366,369,"/**
 * Retrieves the caption style from annotations.
 * @return the caption style as a string
 */","* This will retrieve the caption positioning.
     * 
     * @return the caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getState(),113,116,"/**
 * Retrieves the state value from an annotation.
 * @return the state as a String or null if not present
 */","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getStateModel(),133,136,"/**
 * Retrieves the state model value.
 * @return the state model as a string
 */","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getStatus(),356,359,"/**
 * Retrieves the status string from the PDF document.
 * @return The status as a String or null if not found.
 */","* This will get the status string to be displayed as the result of an action.
     *
     * @return The status.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getTarget(),489,492,"/**
 * Retrieves the target string from the PDF document.
 * @return The target string or null if not found
 */","* This will get the target frame in the browser to open this document.
     *
     * @return The target frame.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:getPartialFieldName(),211,214,"/**
 * Retrieves partial field name from COSName.
 * @return Partial field name as a string
 */","* This will get the ""T"" entry in the field dictionary. A partial field name.
     * Where the fully qualified field name is a concatenation of the parent's fully qualified
     * field name and ""."" as a separator. For example<br>
     * Address.State<br>
     * Address.City<br>
     *
     * @return The partial field name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getName(),69,72,"/**
 * Retrieves the name from a COSString reference.
 * @return The name as a String.
 */","* This will get the name of the referenced page. A required parameter.
     *
     * @return The name of the referenced page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontFamily(),310,313,"/**
 * Retrieves the font family name.
 * @return Font family as a string or null if not found
 */","* A string representing the preferred font family.
     *
     * @return The font family.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getCharSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getCharSet(),701,704,"/**
 * Retrieves the character set from the dictionary.
 * @return character set as a string or null if not present
 */","* This will get the character set for the font.
     *
     * @return The character set value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getInfo(),68,71,"/**
 * Retrieves info string from dictionary.
 * @return Info string or null if not present
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputCondition(),78,81,"/**
 * Retrieves the output condition from the dictionary.
 * @return The output condition as a string or null if not found.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getOutputConditionIdentifier(),88,91,"/**
 * Retrieves the output condition identifier from the dictionary.
 * @return the output condition identifier as a string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,getRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:getRegistryName(),98,101,"/**
 * Retrieves the registry name from the dictionary.
 * @return The registry name as a String, or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,getName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:getName(),101,104,"/**
 * Retrieves the name from the dictionary.
 * @return The name as a string or null if not found
 */","* Returns the name of the optional content group.
     * @return the name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroupNames,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroupNames(),228,251,"/**
* Retrieves group names from a PDF dictionary.
* @return array of group names or empty array if none found
*/","* Lists all optional content group names.
     * @return an array of all names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getF(),118,121,"/**
 * Retrieves the value of the ""F"" key from the COS dictionary.
 * @return String value associated with the ""F"" key or null if not found
 */","* This will get the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @return The F entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getD(),141,144,"/**
 * Retrieves the 'D' attribute as a string.
 * @return The value of the 'D' attribute or null if not present.
 */","* This will get the string specifying the default directory in standard DOS syntax.
     *
     * @return The D entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getO(),165,168,"/**
 * Retrieves the ""O"" string from the action.
 * @return The value of the ""O"" string or null if not present.
 */","* This will get the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @return The O entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getP(),190,193,"/**
 * Retrieves the value of the ""P"" entry from the COS dictionary.
 * @return The string value associated with the ""P"" key or null if not present.
 */","* This will get a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @return The P entry of the specific Windows launch parameter dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,getURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:getURI(),62,84,"/**
 * Retrieves URI from PDF action.
 * @return decoded URI string or null if not found
 */","* This will get the uniform resource identifier to resolve. It should be encoded in 7-bit
     * ASCII, but UTF-8 and UTF-16 are supported too.
     *
     * @return The URI entry of the specific URI action dictionary or null if there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getFilename(),103,106,"/**
 * Retrieves the filename from the dictionary.
 * @return Filename as a string or null if not present
 */","* Get the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @return a filename or null if there is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationName(),242,245,"/**
 * Retrieves annotation name from dictionary.
 * @return Annotation name as a string
 */","* If the value in the /A entry is a string, this will get the value of the /NM entry in the
     * annotation dictionary.
     *
     * @return the /NM value of an annotation dictionary or null if the /A entry value is missing or
     * not a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getFilename(),79,82,"/**
 * Retrieves the filename from parameters.
 * @return filename as a String
 */","* The file to launch.
     *
     * @return The executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getDirectory(),99,102,"/**
 * Retrieves directory path from parameters.
 * @return Directory path as a string or null if not found
 */","* The dir to launch from.
     *
     * @return The dir of the executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getExecuteParam(),142,145,"/**
 * Retrieves the execute parameter from the PDF document.
 * @return The value of the ""P"" parameter as a string.
 */","* A parameter to pass the executable.
     *
     * @return The parameter to pass the executable.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getContents(),606,609,"/** Retrieves contents string from dictionary. */
```","* Get the ""contents"" of the field.
     * 
     * @return the value of the contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getModifiedDate(),626,629,"/**
 * Retrieves the modified date of the document.
 * @return Modified date as a string or null if not available
 */","* This will retrieve the date and time the annotation was modified.
     * 
     * @return the modified date/time (often in date format, but can be an arbitrary string).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationName(),661,664,"/**
 * Retrieves the annotation name.
 * @return The name of the annotation as a string.
 */","* This will get the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @return The identifying name for the Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultAppearance(),76,79,"/**
 * Retrieves the default appearance string.
 * @return default appearance string or null if not set
 */","* Get the default appearance.
     * 
     * @return a string describing the default appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getDefaultStyleString(),98,101,"/**
 * Retrieves the default style string from the COS object.
 * @return default style string or null if not found
 */","* Get the default style string.
     *
     * The default style string defines the default style for rich text fields.
     *
     * @return the DS element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getTitlePopup(),72,75,"/**
 * Retrieves the title popup text.
 * @return The title popup string or null if not present
 */","* Retrieve the string used as the title of the popup window shown when open and active (by convention this
     * identifies who added the annotation).
     *
     * @return The title of the popup.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getSubject(),210,213,"/**
 * Retrieves the subject of the document.
 * @return The subject string or null if not set
 */","* This will retrieve the short description of the subject of the annotation.
     *
     * @return the subject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getState(),188,191,"/**
 * Retrieves the state from the COS object.
 * @return The state as a string, or null if not present.
 */","* This will retrieve the annotation state.
     * 
     * @return the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getStateModel(),208,211,"/**
 * Retrieves the state model of the COS object.
 * @return The state model as a string or null if not found.
 */","* This will retrieve the annotation state model.
     * 
     * @return the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getNormalCaption(),126,129,"/**
 * Retrieves the normal caption from the COS object.
 * @return The normal caption as a string or null if not found.
 */","* This will retrieve the normal caption.
     * 
     * @return the normal caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRolloverCaption(),146,149,"/**
 * Retrieves the rollover caption from the COS object.
 * @return The rollover caption as a String, or null if not present
 */","* This will retrieve the rollover caption.
     * 
     * @return the rollover caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getAlternateCaption(),166,169,"/**
 * Retrieves alternate caption from COS object.
 * @return String containing alternate caption or null if not present
 */","* This will retrieve the alternate caption.
     * 
     * @return the alternate caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getDate(),93,96,"/**
 * Retrieves the date string from the dictionary.
 * @return Date string or null if not present
 */","* The build date of the software module. This string is normally produced by the compiler that
     * is used to compile the software, for example using the Date and Time preprocessor flags. As
     * such, this not likely to be in PDF Date format.
     *
     * @return the build date of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getOS(),219,224,"/**
 * Retrieves the operating system information from a PDF document.
 * @return OS name as a String or null if not available
 */","* Indicates the operating system. The string format isn't specified yet. In its PDF Signature
     * Build Dictionary Specifications Adobe differently specifies the value type to store operating
     * system string:<ul>
     * <li>Specification for PDF v1.5 specifies type as string;</li>
     * <li>Specification for PDF v1.7 specifies type as array and provided example for
     * <code>/PropBuild</code> dictionary indicate it as array of names.</li>
     * </ul>
     * This method supports both types to retrieve the value.
     *
     * @return the operating system id or name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getSubjectDN(),276,299,"/**
* Retrieves subject distinguished names from a dictionary.
* @return List of maps containing key-value pairs for each DN or null if not found
*/","* Returns list of maps that contains subject distinguished names like [(cn: John Doe, o: Doe), (cn: John Smith)]
     * both keys are typically of the form 'cn', 'o', 'email', '2.5.4.43'; and values are text strings.
     * 
     * @return list maps that contains subject distinguished names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:getURL(),567,570,"/**
 * Retrieves URL from dictionary.
 * @return URL string or null if not present
 */","* returns String of the URL
     * 
     * @return string of the URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,getURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:getURL(),67,70,"/**
 * Retrieves URL from dictionary.
 * @return URL string or null if not present
 */","* Returns the URL.
     * 
     * @return the URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getName(),226,229,"/**
 * Retrieves the name from the dictionary.
 * @return The name as a String or null if not found.
 */","* Returns the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @return the name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getLocation(),236,239,"/**
 * Retrieves location from dictionary.
 * @return Location string or null if not present
 */","* Returns the CPU host name or physical location of the signing.
     *
     * @return the location",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getReason(),246,249,"/**
 * Retrieves the reason from the dictionary.
 * @return Reason string or null if not found
 */","* Returns the reason for the signing, such as (I agree...).
     *
     * @return the reason",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContactInfo(),257,260,"/**
 * Retrieves contact information from the dictionary.
 * @return Contact information as a string or null if not present
 */","* Returns the contact info provided by the signer to enable a recipient to contact the signer
     * to verify the signature, e.g. a phone number.
     *
     * @return the contact info",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTitle(),165,168,"/**
 * Retrieves the title from the COS object.
 * @return The title as a String or null if not present
 */","* Get the title of this node.
     *
     * @return The title of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getPartialName(),380,383,"/**
 * Retrieves partial name from dictionary.
 * @return Partial name as a string or null if not found
 */","* Returns the partial name of the field.
     * 
     * @return the name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getAlternateFieldName(),431,434,"/**
 * Retrieves alternate field name from dictionary.
 * @return Alternate field name as String or null if not found
 */","* Gets the alternate name of the field (""shall be used in place of the actual field name
     * wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)"").
     *
     * @return the alternate name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getMappingName(),457,460,"/**
 * Retrieves the mapping name from the dictionary.
 * @return The string value of the TM key or null if not found.
 */","* Gets the mapping name of the field.
     * 
     * The mapping name shall be used when exporting interactive form field
     * data from the document.
     * 
     * @return the mapping name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultStyleString(),154,157,"/**
 * Retrieves default style string from COS object.
 * @return default style as string or null if not found
 */","* Get the default style string.
     * 
     * The default style string defines the default style for
     * rich text fields.
     * 
     * @return the DS element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getScaleRatio(),58,61,"/**
 * Retrieves the scale ratio from the COS object.
 * @return Scale ratio as a string or null if not found
 */","* This will return the scale ration.
     * 
     * @return the scale ratio.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getRoleMap(),176,191,"/**
 * Retrieves role map from COS object.
 * @return Map containing role mappings or empty map if not found
 */","* Returns the role map.
     * 
     * @return the role map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptions(),87,91,"/**
* Retrieves options from a PDF form field.
* @return List of option strings or empty list if none found
*/","* This will get the option values ""Opt"".
     * 
     * <p>
     * For a choice field the options array can either be an array
     * of text strings or an array of a two-element arrays.<br>
     * The method always only returns either the text strings or,
     * in case of two-element arrays, an array of the first element of 
     * the two-element arrays
     * </p>   
     * <p>
     * Use {@link #getOptionsExportValues()} and {@link #getOptionsDisplayValues()}
     * to get the entries of two-element arrays.
     * </p>
     * 
     * @return List containing the export values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsDisplayValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsDisplayValues(),191,195,"/**
 * Retrieves display values for options.
 * @return List of option display values
 */","* This will get the display values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the display value is the 
     * second entry in the two-element array.
     * </p>
     * 
     * @return List containing all the display values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValue(),110,140,"/**
 * Retrieves a string value based on attribute V or returns ""Off"" by default.
 * @return String value from export list or ""Off""
 */","* Returns the selected value.
     * 
     * <p>Off is the default value which will also be returned if the
     * value hasn't been set at all.
     * 
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValue(),432,435,"/**
 * Retrieves values associated with COSName.V.
 * @return List of strings containing the values
 */","* Returns the selected values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getDefaultValue(),443,446,"/**
 * Retrieves default value.
 * @return List of default values as strings
 */","* Returns the default values, or an empty List. This list always contains a single item
     * unless {@link #isMultiSelect()} is true.
     *
     * @return A non-null string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:<init>(),35,38,"/**
* Initializes a new PDF simple file specification with an empty string.
* @param none
* @return none
*/","* Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDSimpleFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDSimpleFileSpecification:setFile(java.lang.String),66,70,"/**
 * Sets the file name.
 * @param fileName name of the file to be set
 */","* This will set the file name.
     *
     * @param fileName The name of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:<init>(java.lang.String),67,70,"/**
 * Constructs a named destination from a string.
 * @param dest destination name as a string
 */","* Default constructor.
     *
     * @param dest The named destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDNamedDestination.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination:setNamedDestination(java.lang.String),110,120,"/**
* Sets a named destination.
* @param dest the destination string to set
* @throws IOException if an I/O error occurs
*/","* Set the named destination.
     *
     * @param dest The new named destination.
     *
     * @throws IOException If there is an error setting the named destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/GlyphCache.java,getPathForCharacterCode,org.apache.pdfbox.rendering.GlyphCache:getPathForCharacterCode(int),47,97,"/**
 * Retrieves the path for a character code from the font.
 * @param code character code to retrieve the path for
 * @return GeneralPath representing the character's glyph or an empty path if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType2,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType2(),264,269,"/**
* Decodes row type 2.
* Resets buffer if aligned, then decodes using 1D method.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType4,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType4(),271,298,"/**
 * Decodes row type 4 using Huffman coding.
 * Handles end-of-line detection and delegates decoding to 1D or 2D based on options.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRowType6,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRowType6(),300,305,"/**
* Decodes row type 6 from input stream.
* Resets buffer if option is byte-aligned.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRowType6,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRowType6(),130,132,"/**
 * Encodes row type 6 using 2D encoding.
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/DCTFilter.java,decode,"org.apache.pdfbox.filter.DCTFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",174,179,"/**
 * Decodes input stream using provided options.
 * @param encoded input stream containing encoded data
 * @param decoded output stream for decoded data
 * @param parameters decoding parameters
 * @param index current object index
 * @return DecodeResult indicating success or failure
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,write,org.apache.pdfbox.filter.Predictor$PredictorOutputStream:write(byte[]),291,295,"/**
 * Writes byte array to output.
 * @param bytes data to write
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readGenerationNumber,org.apache.pdfbox.pdfparser.BaseParser:readGenerationNumber(),1369,1378,"/**
 * Reads and validates a generation number.
 * @return validated generation number
 * @throws IOException if the number is invalid
 */","* This will read a integer from the Stream and throw an {@link IllegalArgumentException} if the integer value
     * has more than the maximum object revision (i.e. : bigger than {@link #GENERATION_NUMBER_THRESHOLD})
     * @return the generation number being read.
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,readObjectNumber,org.apache.pdfbox.pdfparser.BaseParser:readObjectNumber(),1353,1361,"/**
* Reads a long value and validates it.
* @return validated object number
* @throws IOException if the number is invalid
*/","* This will read a long from the Stream and throw an {@link IOException} if
     * the long value is negative or has more than 10 digits (i.e. : bigger than
     * {@link #OBJECT_NUMBER_THRESHOLD})
     *
     * @return the object number being read.
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",1021,1036,"/**
* Checks if user password matches given criteria.
* @param password user's password bytes
* @param user user identifier bytes
* @param owner document owner bytes
* @param permissions access permissions
* @param id document ID bytes
* @param encRevision encryption revision
* @param length data length
* @param encryptMetadata flag to encrypt metadata
* @return true if passwords match, false otherwise
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,getUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:getUserPassword(byte[],byte[],int,int)",657,669,"/**
 * Retrieves user password based on encryption revision.
 * @param ownerPassword owner's password bytes
 * @param owner user identifier bytes
 * @param encRevision encryption revision number
 * @param length expected password length
 * @return user password bytes or empty array for unsupported revisions
 * @throws IOException if an I/O error occurs
 */","* Get the user password based on the owner password.
     *
     * @param ownerPassword The plaintext owner password.
     * @param owner The o entry of the encryption dictionary.
     * @param encRevision The encryption revision number.
     * @param length The key length.
     *
     * @return The u entry of the encryption dictionary.
     *
     * @throws IOException If there is an error accessing data while generating the user password.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TensorPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TensorPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
* Initializes a TensorPatch with given points and colors.
* @param tcp array of control points defining the patch
* @param color 2D array representing color data
*/","* Constructor of a patch for type 7 shading.
     *
     * @param tcp 16 control points
     * @param color 4 corner colors",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,tokenize,org.apache.pdfbox.pdmodel.common.function.type4.Parser$Tokenizer:tokenize(),197,218,"/**
 * Tokenizes input by processing each state.
 * Continues until no more tokens are available.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptDataRC4,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptDataRC4(byte[],java.io.InputStream,java.io.OutputStream)",284,289,"/**
 * Encrypts data using RC4 algorithm.
 * @param finalKey encryption key
 * @param input source of data to encrypt
 * @param output destination for encrypted data
 * @throws IOException if an I/O error occurs
 */","* Encrypt or decrypt data with RC4.
     *
     * @param finalKey The final key obtained with via {@link #calcFinalKey(long, long)}.
     * @param input The data to encrypt.
     * @param output The output to write the encrypted data to.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,computeRecipientsField,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:computeRecipientsField(byte[]),433,469,"/**
* Computes the recipients field for encryption.
* @param seed input seed data
* @return byte array of encrypted recipient fields
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword56(byte[],byte[],byte[],int)",619,643,"/**
 * Checks if the provided owner password matches the encrypted hash.
 * @param ownerPassword user-provided owner password
 * @param user user encryption key
 * @param owner owner encryption key
 * @param encRevision encryption revision level
 * @return true if passwords match, false otherwise
 * @throws IOException if owner password is too short or other I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKeyRev56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKeyRev56(byte[],boolean,byte[],byte[],byte[],byte[],int)",780,837,"/**
* Computes encrypted key using password and encryption parameters.
* @param password user-provided password
* @param isOwnerPassword flag indicating if owner or user password
* @param o owner encryption data
* @param u user encryption data
* @param oe owner encryption entry
* @param ue user encryption entry
* @param encRevision encryption revision
* @return decrypted file key bytes
* @throws IOException on encryption errors
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword56,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword56(byte[],byte[],int)",1038,1057,"/**
* Validates user password against stored hash.
* @param password user's input password as bytes
* @param user combined hash and salt as byte array
* @param encRevision encryption revision identifier
* @return true if password matches, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getProvider,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getProvider(),154,161,"/**
 * Returns the current FontProvider.
 * Initializes with DefaultFontProvider if not already set.
 * @return FontProvider instance
 */",* Returns the font service provider. Defaults to using FileSystemFontProvider.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,createShadedTriangleList,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:createShadedTriangleList(int,int,org.apache.pdfbox.pdmodel.graphics.shading.Vertex[][])",157,188,"/**
 * Creates a list of shaded triangles from a lattice array.
 * @param rowNum number of rows in the lattice
 * @param numPerRow number of vertices per row
 * @param latticeArray 2D array of Vertex objects
 * @return List of ShadedTriangle objects
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Patch.java,getShadedTriangles,org.apache.pdfbox.pdmodel.graphics.shading.Patch:getShadedTriangles(org.apache.pdfbox.pdmodel.graphics.shading.CoordinateColorPair[][]),173,225,"/**
* Generates shaded triangles from a grid of color-coordinates.
* @param patchCC 2D array of CoordinateColorPair objects
* @return List of ShadedTriangle objects representing the grid's shaded areas
*/","* An assistant method to accomplish type 6 and type 7 shading.
     *
     * @param patchCC all the crossing point coordinates and color of a grid
     * @return a ShadedTriangle list which can compose the grid patch",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType1Font:getHeight(int),376,391,"/**
 * Retrieves character height for a given code.
 * @param code character code
 * @return character height or y-advance value
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType1Font:getWidthFromFont(int),450,465,"/**
 * Retrieves the width of a character from the font.
 * @param code character code
 * @return width in user space units
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getPath(int),631,636,"/**
* Retrieves path for character encoding.
* @param code character encoding code
* @return GeneralPath object representing the path
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDType1Font:getNormalizedPath(int),638,648,"/**
* Retrieves normalized path for a character code.
* @param code character encoding code
* @return GeneralPath object or default path if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/CoonsPatch.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.CoonsPatch:<init>(java.awt.geom.Point2D[],float[][])",35,41,"/**
* Initializes a CoonsPatch with given points and colors.
* @param points array of 12 boundary points for the patch
* @param color 2D array representing color values at each point
*/","* Constructor of a patch for type 6 shading.
     *
     * @param points 12 control points
     * @param color 4 corner colors",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,endText,org.apache.pdfbox.rendering.PageDrawer:endText(),456,460,"/**
 * Ends the current text clip.
 * Throws IOException if an I/O error occurs.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginText,org.apache.pdfbox.rendering.PageDrawer:beginText(),449,454,"/**
* Starts text rendering and sets clipping.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SigningSupport.java,getContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SigningSupport:getContent(),39,43,"/**
 * Retrieves content to be signed.
 * @return InputStream containing data to sign
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,processTextPosition,org.apache.pdfbox.text.PDFMarkedContentExtractor:processTextPosition(org.apache.pdfbox.text.TextPosition),156,249,"/**
 * Processes a text position, handling duplicates and diacritics.
 * @param text TextPosition object to process
 */","* This will process a TextPosition object and add the
     * text to the list of characters on a page.  It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processTextPosition,org.apache.pdfbox.text.PDFTextStripper:processTextPosition(org.apache.pdfbox.text.TextPosition),897,1056,"/**
 * Processes a text position, handling duplicates and diacritics.
 * @param text TextPosition object to process
 */","* This will process a TextPosition object and add the text to the list of characters on a page. It takes care of
     * overlapping text.
     *
     * @param text The text to process.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,removeContainedSpaces,org.apache.pdfbox.text.PDFTextStripper:removeContainedSpaces(java.util.List),771,793,"/**
* Removes spaces from list that are completely contained within another TextPosition.
* @param textList list of TextPosition objects to process
*/",* Remove all space characters if contained within the adjacent letters,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,handleLineSeparation,"org.apache.pdfbox.text.PDFTextStripper:handleLineSeparation(org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,org.apache.pdfbox.text.PDFTextStripper$PositionWrapper,float)",1563,1591,"/**
 * Handles line and paragraph separation.
 * @param current current position wrapper
 * @param lastPosition last processed position wrapper
 * @param lastLineStartPosition start of the last line
 * @param maxHeightForLine maximum height for a line
 * @return updated last line start position
 * @throws IOException if an I/O error occurs
 */","* handles the line separator for a new line given the specified current and previous TextPositions.
     * 
     * @param current the current text position
     * @param lastPosition the previous text position
     * @param lastLineStartPosition the last text position that followed a line separator.
     * @param maxHeightForLine max height for positions since lastLineStartPosition
     * @return start position of the last line
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalizeAdd,"org.apache.pdfbox.text.PDFTextStripper:normalizeAdd(java.util.List,java.lang.StringBuilder,java.util.List,org.apache.pdfbox.text.PDFTextStripper$LineItem)",2115,2132,"/**
 * Normalizes and processes words from a line item.
 * @param normalized list to store processed words
 * @param lineBuilder accumulates characters of the current word
 * @param wordPositions stores text positions for the current word
 * @param item current line item being processed
 * @return updated line builder after processing the item
 */","* Used within {@link #normalize(List)} to handle a {@link TextPosition}.
     * 
     * @return The StringBuilder that must be used when calling this method.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(java.lang.String),719,737,"/**
 * Converts a date string to a Calendar object.
 * @param text date string in specific format
 * @return Calendar object or null if conversion fails
 */","* Returns the Calendar for a given string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     *
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Begins marked content with a specified tag.
* @param tag COSName representing the tag for marking content
* @throws IOException if an I/O error occurs during writing
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Begins marked content in PDF with a tag and MCID.
 * @param tag the content tag
 * @param mcid the mark identifier, must be non-negative
 * @throws IOException if an I/O error occurs
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
 * Sets a marked content point with a given tag.
 * @param tag COSName representing the content tag
 * @throws IOException if an I/O error occurs
 */","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(org.apache.pdfbox.cos.COSString,java.io.OutputStream)",1621,1624,"/**
 * Writes a COSString to an OutputStream.
 * @param string the COSString to write
 * @param output the OutputStream to write to
 * @throws IOException if an I/O error occurs
 */","* This will output the given byte getString as a PDF object.
     *
     * @param string COSString to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeString,"org.apache.pdfbox.pdfwriter.COSWriter:writeString(byte[],java.io.OutputStream)",1633,1636,"/**
 * Writes byte array to OutputStream.
 * @param bytes data to write
 * @param output destination stream
 * @throws IOException if an I/O error occurs
 */","* This will output the given text/byte getString as a PDF object.
     *
     * @param bytes byte array representation of a string to be written
     * @param output The stream to write to.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFGraphicsStreamEngine.java,<init>,org.apache.pdfbox.contentstream.PDFGraphicsStreamEngine:<init>(org.apache.pdfbox.pdmodel.PDPage),107,176,"/**
 * Initializes PDF graphics stream engine for a page.
 * @param page PDPage to be processed
 */","* Constructor.
     * 
     * @param page the page the content stream belongs to",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFMarkedContentExtractor.java,<init>,org.apache.pdfbox.text.PDFMarkedContentExtractor:<init>(),52,55,"/**
 * Constructs a new PDFMarkedContentExtractor with default settings.
 */",* Instantiate a new PDFMarkedContentExtractor object.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,<init>,org.apache.pdfbox.text.PDFTextStripperByArea:<init>(),45,48,"/**
 * Initializes PDFTextStripperByArea with beads separation disabled.
 */","* Constructor.
     * @throws IOException If there is an error loading properties.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getObjectFromPath,org.apache.pdfbox.cos.COSDictionary:getObjectFromPath(java.lang.String),1311,1328,"/**
 * Retrieves an object from a specified path in a PDF document.
 * @param objPath path to the object, e.g., ""Root/Pages/Kids[0]""
 * @return COSBase object or null if not found
 */","* Nice method, gives you every object you want Arrays works properly too. Try ""P/Annots/[k]/Rect"" where k means the
     * index of the Annots array.
     *
     * @param objPath the relative path to the object.
     * @return the object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDestinationDictionary.java,getDestination,org.apache.pdfbox.pdmodel.PDDocumentNameDestinationDictionary:getDestination(java.lang.String),65,85,"/**
* Retrieves a destination by name from the PDF document.
* @param name the destination name to look up
* @return PDDestination object or null if not found
* @throws IOException if an I/O error occurs during retrieval
*/","* Returns the destination corresponding to the parameter.
     *
     * @param name The destination name.
     * @return The destination for that name, or null if there isn't any.
     * 
     * @throws IOException if something goes wrong when creating the destination object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String),74,77,"/**
 * Retrieves attribute value by name.
 * @param attrName name of the attribute
 * @return COSBase object representing the attribute value or null if not found
 */","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @return the attribute value for a given name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,getAttributeValue,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:getAttributeValue(java.lang.String,org.apache.pdfbox.cos.COSBase)",86,94,"/**
* Retrieves attribute value by name.
* @param attrName name of the attribute to retrieve
* @param defaultValue default value to return if attribute is not found
* @return COSBase object representing the attribute value, or default value if not present
*/","* Gets the attribute value for a given name.
     * 
     * @param attrName the given attribute name
     * @param defaultValue the default value
     * @return the attribute value for a given name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,isSpecified,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:isSpecified(java.lang.String),66,69,"/**
 * Checks if a specified key exists in the COS object.
 * @param name the key to check
 * @return true if the key exists, false otherwise
 */","* Is the attribute with the given name specified in this attribute object?
     * 
     * @param name the attribute name
     * @return <code>true</code> if the attribute is specified,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getArrayOfString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getArrayOfString(java.lang.String),103,117,"/**
 * Retrieves an array of strings from a named dictionary object.
 * @param name key for the COSArray in the dictionary
 * @return array of string values or null if not found
 */","* Gets an array of strings.
     * 
     * @param name the attribute name
     * @return the array of strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNameOrArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNameOrArrayOfName(java.lang.String,java.lang.String)",168,190,"/**
* Retrieves a name or array of names from the COSObject.
* @param name key to look up in the dictionary
* @param defaultValue default value if not found
* @return String or array of Strings, or default value if not applicable
*/","* Gets a name value or array of name values.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a String or array of Strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrName(java.lang.String,java.lang.String)",232,244,"/**
* Retrieves a number or name from the dictionary.
* @param name key for the dictionary object
* @param defaultValue default value to return if not found
* @return float value if COSNumber, string value if COSName, or default value
*/","* Gets a number or a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default name
     * @return a Float or a String",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumberOrArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumberOrArrayOfNumber(java.lang.String,float)",302,328,"/**
* Retrieves a number or an array of numbers by name.
* @param name the key for the value in the COS dictionary
* @param defaultValue the default float value to return if not found
* @return a Float or float[] depending on the retrieved object, or null if unspecified
*/","* Gets a number or an array of numbers.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return a Float or an array of floats",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColor,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColor(java.lang.String),383,391,"/**
* Retrieves color by name from PDF dictionary.
* @param name key for the color in the dictionary
* @return PDGamma object or null if not found
*/","* Gets a colour.
     * 
     * @param name the attribute name
     * @return the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,createKey,"org.apache.pdfbox.pdmodel.PDResources:createKey(org.apache.pdfbox.cos.COSName,java.lang.String)",740,758,"/**
 * Creates a unique PDF dictionary key.
 * @param kind type of resource dictionary
 * @param prefix base string for the key
 * @return unique COSName key
 */",* Returns a unique key for a new resource.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,65,"/**
* Processes color setting for an operator.
* @param operator the PDF operator
* @param arguments list of operands
* @throws IOException if processing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(org.apache.pdfbox.cos.COSName),799,822,"/**
 * Retrieves color from PDF object by item name.
 * @param itemName key for the color array in COSObject
 * @return PDColor object or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getColor(org.apache.pdfbox.cos.COSName),214,237,"/**
* Retrieves color from PDF item.
* @param itemName name of the PDF item
* @return PDColor object or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSHexString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSHexString(),693,746,"/**
* Parses a hexadecimal string from the source.
* @return COSString object parsed from hex data
* @throws IOException if parsing fails or missing closing bracket
*/","* This will parse a PDF HEX string with fail fast semantic
     * meaning that we stop if a not allowed character is found.
     * This is necessary in order to detect malformed input and
     * be able to skip to next object start.
     *
     * We assume starting '&lt;' was already read.
     * 
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getConvertedContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getConvertedContents(java.io.InputStream),363,388,"/**
* Converts input stream contents to byte array, filtering specific characters.
* @param is input stream containing data
* @return converted byte array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileFilters,org.apache.pdfbox.pdmodel.common.PDStream:setFileFilters(java.util.List),378,382,"/**
* Sets file filters in PDF stream.
* @param filters list of filter names
*/","* This will set the filters that are part of this stream.
     * 
     * @param filters The filters that are part of this stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(),93,96,"/**
* Initializes a new PDRectangle with zero dimensions.
*/","* Constructor.
     *
     * Initializes to 0,0,0,0",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDRectangle:<init>(float,float)",104,107,"/**
* Constructs a PDRectangle with specified width and height.
* @param width rectangle's width
* @param height rectangle's height
*/","* Constructor.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectangle(),164,168,"/**
* Returns a rectangle defined by bounding box coordinates.
* @return PDRectangle object representing the bounding box
*/","* Returns the updated <code>Rect</code> entry for the annotation.
     * The rectangle completely contains the cloudy border.
     *
     * @return Annotation <code>Rect</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getRectDifference(),185,201,"/**
* Calculates the difference rectangle between annotation and bounding box.
* @return PDRectangle representing the difference or a default rectangle if no annotation is present
*/","* Returns the updated <code>RD</code> entry for Square and Circle annotations.
     *
     * @return Annotation <code>RD</code> value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,applyRectDiff,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:applyRectDiff(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",496,535,"/**
 * Applies a rectangle difference to another rectangle.
 * @param rd the rectangle difference to apply, or null for no change
 * @param min minimum value for rectangle dimensions
 * @return new PDRectangle with adjusted bounds
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getPaddedRectangle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getPaddedRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",218,222,"/**
* Returns a new PDRectangle with uniform padding applied.
* @param rectangle original rectangle to pad
* @param padding amount of padding to add on each side
* @return new PDRectangle with padding applied
*/","* Get a padded rectangle.
     * 
     * <p>Creates a new rectangle with padding applied to each side.
     * .
     * @param rectangle the rectangle.
     * @param padding the padding to apply.
     * @return the padded rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,addRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:addRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",235,246,"/**
* Adjusts rectangle dimensions by specified differences.
* @param rectangle original PDRectangle to modify
* @param differences array of 4 floats: [left, bottom, right, top]
* @return new PDRectangle with adjusted dimensions
*/","* Get a rectangle enlarged by the differences.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,applyRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:applyRectDifferences(org.apache.pdfbox.pdmodel.common.PDRectangle,float[])",259,269,"/**
* Applies differences to a rectangle's dimensions.
* @param rectangle original PDRectangle object
* @param differences array of four floats representing adjustments
* @return new PDRectangle with applied differences or original if invalid input
*/","* Get a rectangle with the differences applied to each side.
     *
     * <p>
     * Creates a new rectangle with differences added to each side. If there are no valid
     * differences, then the original rectangle is returned.
     *
     * @param rectangle the rectangle.
     * @param differences the differences to apply.
     * @return the padded rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,applyPadding,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:applyPadding(org.apache.pdfbox.pdmodel.common.PDRectangle,float)",1045,1051,"/**
* Applies padding to a rectangle.
* @param box original rectangle
* @param padding amount of padding to apply
* @return new PDRectangle with applied padding
*/","* Apply padding to a box.
     * 
     * @param box box
     * @return the padded box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createStream,org.apache.pdfbox.multipdf.Overlay:createStream(java.lang.String),602,611,"/**
* Creates a PDF stream with given content.
* @param content string to be written to the stream
* @return COSStream containing the content
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSStream,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSStream(org.apache.pdfbox.cos.COSStream),144,166,"/**
 * Clones a COSStream to the destination document.
 * @param stream the original COSStream to be cloned
 * @return a new COSStream in the destination document
 * @throws IOException if an I/O error occurs during cloning
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,<init>,org.apache.pdfbox.pdfparser.PDFXRefStream:<init>(org.apache.pdfbox.cos.COSDocument),57,60,"/**
 * Creates a PDF XRef stream from a COS document.
 * @param cosDocument the COS document to create the stream from
 */","* Create a fresh XRef stream like for a fresh file or an incremental update.
     * 
     * @param cosDocument the COSDocmernt to be used to create a new COSStream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDObjectStream.java,createStream,org.apache.pdfbox.pdmodel.common.PDObjectStream:createStream(org.apache.pdfbox.pdmodel.PDDocument),51,57,"/**
* Creates a new object stream in the given PDF document.
* @param document the PDF document to add the stream to
* @return the newly created PDObjectStream
*/","* This will create a new PDObjectStream object.
     *
     * @param document The document that the stream will be part of.
     * @return A new stream object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),61,64,"/**
 * Creates a PDStream from a PDDocument.
 * @param document PDDocument to create stream from
 */","* Creates a new empty PDStream object.
     * 
     * @param document The document that the stream will be part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.cos.COSDocument),71,74,"/**
 * Creates a new PDStream from a COSDocument.
 * @param document the COSDocument to create the stream from
 */","* Creates a new empty PDStream object.
     *
     * @param document The document that the stream will be part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase)",131,138,"/**
* Initializes a PDStream with document and input stream.
* @param doc PDDocument object
* @param input InputStream for the stream content
* @param filters COSBase representing filter types
* @throws IOException if I/O operations fail
*/","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied, if any. This method closes the InputStream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createRawStream,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createRawStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",166,175,"/**
 * Creates a COSStream from an input stream.
 * @param document PDDocument to create the stream in
 * @param rawInput InputStream containing data for the stream
 * @return COSStream created from the input stream
 * @throws IOException if I/O error occurs
 */",* Creates a COS stream from raw (encoded) data.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,createCOSStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:createCOSStream(),106,109,"/**
* Creates a COSStream object.
* @return COSStream instance, either new or from document if available
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Filter.java,encode,"org.apache.pdfbox.filter.Filter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,112,"/**
* Encodes input stream using specified parameters.
* @param input source data stream
* @param encoded destination encoded stream
* @param parameters encoding configuration dictionary
* @param index current processing index (unused)
*/","* Encodes data.
     * @param input the byte stream to encode
     * @param encoded the stream where encoded data will be written
     * @param parameters the parameters used for encoding
     * @param index the index to the filter being encoded
     * @throws IOException if the stream cannot be encoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:<init>(),38,40,"/**
 * Default constructor for PDDefaultAttributeObject.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:<init>(),43,46,"/**
 * Initializes a new PDUserAttributeObject with OWNER_USER_PROPERTIES as owner.
 */",* Default constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:<init>(),44,46,"/**
 * Default constructor for PDStandardAttributeObject.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:<init>(),53,56,"/**
* Constructs a new PDOutlineItem instance.
*/",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),47,50,"/**
 * Constructs a PDVariableText object.
 * @param acroForm the PDAcroForm to associate with this text field
 */","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(org.apache.pdfbox.cos.COSDictionary),74,77,"/**
 * Constructs a PDExportFormatAttributeObject from a COSDictionary.
 * @param dictionary the COSDictionary to initialize with
 */","* Creates a new ExportFormat attribute object with a given dictionary.
     * 
     * @param dictionary the dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getAppearanceStream(),84,91,"/**
 * Retrieves the appearance stream.
 * @throws IllegalStateException if this entry is not an appearance stream
 * @return PDAppearanceStream object
 */","* Returns the entry as an appearance stream.
     *
     * @return the entry as an appearance stream
     * 
     * @throws IllegalStateException if this entry is not an appearance stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceEntry.java,getSubDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry:getSubDictionary(),100,120,"/**
* Retrieves appearance streams from the subdictionary.
* @return Map of COSName to PDAppearanceStream objects
* @throws IllegalStateException if entry is not an appearance subdictionary
*/","* Returns the entry as an appearance subdictionary.
     *
     * @return the entry as an appearance subdictionary
     * 
     * @throws IllegalStateException if this entry is not an appearance subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,createXObject,"org.apache.pdfbox.pdmodel.graphics.PDXObject:createXObject(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources)",52,90,"/**
* Creates an XObject from a COSBase and resources.
* @param base the base object to create the XObject from
* @param resources the resources for the XObject
* @return a PDXObject or throws IOException if invalid type
*/","* Creates a new XObject instance of the appropriate type for the COS stream.
     *
     * @param base The stream which is wrapped by this XObject.
     * @param resources the resources of this XObject
     * @return A new XObject instance.
     * @throws java.io.IOException if there is an error creating the XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,addTrueTypeFont,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:addTrueTypeFont(java.io.File),675,700,"/**
 * Adds a TrueType or OpenType font from a file.
 * @param ttfFile the font file to add
 */","* Adds an OTF or TTF font to the file cache. To reduce memory, the parsed font is not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
 * Constructs a PDShadingType6 from a COS dictionary.
 * @param shadingDictionary the COS dictionary representing the shading
 */","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,<init>,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:<init>(org.apache.pdfbox.cos.COSDictionary),38,41,"/**
* Constructs a PDShadingType7 from a COSDictionary.
* @param shadingDictionary dictionary containing shading details
*/","* Constructor using the given shading dictionary.
     *
     * @param shadingDictionary the dictionary for this shading",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",53,56,"/**
 * Constructs a PDComboBox instance.
 * @param acroForm the form containing the combo box
 * @param field the dictionary representing the combo box
 * @param parent the parent field of the combo box
 */","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",49,52,"/**
* Constructs a PDListBox.
* @param acroForm the form containing the list box
* @param field the dictionary representing the list box
* @param parent the parent non-terminal field
*/","* Constructor.
     * 
     * @param acroForm The form that this field is part of.
     * @param field the PDF object to represent as a field.
     * @param parent the parent node of the node",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/Save.java,process,"org.apache.pdfbox.contentstream.operator.state.Save:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",39,43,"/**
* Processes an operation by saving the graphics state.
* @param operator the operation to be processed
* @param arguments list of COSBase arguments for the operation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,"org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",165,169,"/**
* Constructs COSParser with specified parameters.
* @param source random access read source
* @param password decryption password
* @param keyStore input stream for keystore
* @param keyAlias alias for the key in keystore
*/","* Constructor for encrypted pdfs.
     * 
     * @param source input representing the pdf.
     * @param password password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param keyAlias alias to be used for decryption when using public key security
     *
     * @throws IOException if the source data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",91,95,"/**
 * Initializes a new PDF parser.
 * @param source input source for the PDF file
 * @param decryptionPassword password to decrypt the PDF if encrypted
 * @param keyStore keystore containing security certificates
 * @param alias alias for the certificate in the keystore
 * @param streamCacheCreateFunction function to create cache streams
 * @throws IOException if an I/O error occurs during initialization
 */","* Constructor.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of the stream cache
     *
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createOutputStream,org.apache.pdfbox.pdmodel.common.PDStream:createOutputStream(),158,161,"/**
 * Creates an output stream.
 * @throws IOException if an I/O error occurs
 * @return OutputStream instance
 */","* This will get a stream that can be written to.
     * 
     * @return An output stream to write data to.
     * @throws IOException If an IO error occurs during writing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,createCOSStreamwithIccProfile,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:createCOSStreamwithIccProfile(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",409,461,"/**
* Creates a COSStream with ICC profile for a PDF document.
* @param document PDDocument instance
* @param colorSpace PDColorSpace for the image
* @param state PNGConverterState containing ICCP data
* @return COSStream with ICC profile or null if invalid
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,writeToStream,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:writeToStream(byte[],org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",875,881,"/**
* Writes byte data to a PDF appearance stream.
* @param data byte array containing the data to write
* @param appearanceStream PDAppearanceStream object to write to
* @throws IOException if an I/O error occurs
*/","* Writes the stream to the actual stream in the COSStream.
     *
     * @throws IOException If there is an error writing to the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,boolean)",58,61,"/**
 * Initializes a content stream for an appearance.
 * @param appearance the appearance stream to write to
 * @param compress true if the output should be compressed
 * @throws IOException if an I/O error occurs
 */","* Create a new appearance stream.
     *
     * @param appearance The appearance stream to write to.
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the text transformation matrix.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAbstractContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a transformation to the graphics context.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginText(),134,142,"/**
* Starts text mode for document.
* Throws exception if already in text mode.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDFormContentStream:beginText(),134,142,"/**
* Starts text mode.
* Throws IllegalStateException if already in text mode.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPageContentStream:beginText(),134,142,"/**
 * Starts text mode for PDF operations.
 * Throws exception if already in text mode.
 */","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginText,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginText(),134,142,"/**
* Starts text mode.
* Throws IllegalStateException if already in text mode.
*/","* Begin some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest beginText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endText(),151,159,"/**
* Ends text mode and writes the END_TEXT operator.
* Throws IllegalStateException if not currently in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDFormContentStream:endText(),151,159,"/**
* Ends text mode and writes END_TEXT operator.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPageContentStream:endText(),151,159,"/**
* Ends text mode and writes the END_TEXT operator.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endText,org.apache.pdfbox.pdmodel.PDPatternContentStream:endText(),151,159,"/**
* Ends text mode and writes the END_TEXT operator.
* Throws IllegalStateException if not in text mode.
*/","* End some text operations.
     *
     * @throws IOException If there is an error writing to the stream or if you attempt to
     *         nest endText calls.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLeading(float),333,337,"/**
* Sets text leading.
* @param leading new text leading value
* @throws IOException if I/O error occurs
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDFormContentStream:setLeading(float),333,337,"/**
* Sets text leading.
* @param leading line spacing value
* @throws IOException if I/O error occurs
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPageContentStream:setLeading(float),333,337,"/**
* Sets text leading.
* @param leading the spacing between lines of text
* @throws IOException if an I/O error occurs
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLeading,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLeading(float),333,337,"/**
* Sets text leading.
* @param leading line spacing value
* @throws IOException if writing fails
*/","* Sets the text leading.
     *
     * @param leading The leading in unscaled text units.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLine(),345,352,"/**
* Writes a newline in text mode.
* Throws IllegalStateException if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDFormContentStream:newLine(),345,352,"/**
* Writes a newline in text mode.
* Throws IllegalStateException if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPageContentStream:newLine(),345,352,"/**
 * Writes a newline to the document.
 * Throws an exception if not in text mode.
 */","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLine,org.apache.pdfbox.pdmodel.PDPatternContentStream:newLine(),345,352,"/**
* Writes a newline in text mode.
* Throws IllegalStateException if not in text mode.
*/","* Move to the start of the next line of text. Requires the leading (see {@link #setLeading})
     * to have been set.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor to a new position with offset.
* @param tx horizontal offset
* @param ty vertical offset
* @throws IOException if an I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDFormContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor to a new line at specified offset.
* @param tx horizontal offset
* @param ty vertical offset
* @throws IOException if an I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPageContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor to a new line at specified offset.
* @param tx horizontal offset
* @param ty vertical offset
* @throws IOException if an I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,newLineAtOffset,"org.apache.pdfbox.pdmodel.PDPatternContentStream:newLineAtOffset(float,float)",363,372,"/**
* Moves text cursor to a new line at specified offset.
* @param tx horizontal translation
* @param ty vertical translation
* @throws IOException if an I/O error occurs
*/","* The Td operator.
     * Move to the start of the next line, offset from the start of the current line by (tx, ty).
     *
     * @param tx The x translation.
     * @param ty The y translation.
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:saveGraphicsState(),589,609,"/**
* Saves the current graphics state.
* Throws IllegalStateException if called within text mode.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:saveGraphicsState(),589,609,"/**
* Saves the current graphics state.
* Throws IllegalStateException if called within text mode.
*/","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:saveGraphicsState(),589,609,"/**
 * Saves the current graphics state.
 * Throws IllegalStateException if in text mode.
 */","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,saveGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:saveGraphicsState(),589,609,"/**
 * Saves the current graphics state.
 * Throws IllegalStateException if in text mode.
 */","* q operator. Saves the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:restoreGraphicsState(),615,635,"/**
* Restores the graphics state by popping color spaces and fonts.
* Throws IllegalStateException if called within text mode.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDFormContentStream:restoreGraphicsState(),615,635,"/**
* Restores the graphics state.
* Throws IllegalStateException if called within text mode.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPageContentStream:restoreGraphicsState(),615,635,"/**
 * Restores the graphics state.
 * Throws IllegalStateException if called within text mode.
 */","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,restoreGraphicsState,org.apache.pdfbox.pdmodel.PDPatternContentStream:restoreGraphicsState(),615,635,"/**
* Restores the graphics state.
* Throws IllegalStateException if in text mode.
* Pops from color space and font stacks.
*/","* Q operator. Restores the current graphics state.
     * @throws IOException If an error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets stroking color using RGB values.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
* @throws IOException if writing fails
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets the stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets the stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float)",713,725,"/**
* Sets the stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets the stroking color using CMYK values.
* @param c Cyan component (0.0 to 1.0)
* @param m Magenta component (0.0 to 1.0)
* @param y Yellow component (0.0 to 1.0)
* @param k Black component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets the stroking color using CMYK values.
* @param c Cyan component (0.0 to 1.0)
* @param m Magenta component (0.0 to 1.0)
* @param y Yellow component (0.0 to 1.0)
* @param k Black component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets the stroking color using CMYK values.
* @param c cyan component (0.0 to 1.0)
* @param m magenta component (0.0 to 1.0)
* @param y yellow component (0.0 to 1.0)
* @param k black component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float,float,float,float)",737,750,"/**
* Sets stroking color using CMYK values.
* @param c cyan component (0.0 to 1.0)
* @param m magenta component (0.0 to 1.0)
* @param y yellow component (0.0 to 1.0)
* @param k black component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceCMYK color space. Range is 0..1
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(float),759,768,"/**
* Sets the stroking color to grayscale.
* @param g grayscale value (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(float),759,768,"/**
 * Sets the stroking color to grayscale.
 * @param g grayscale value (must be within 0..1)
 * @throws IOException if an I/O error occurs while writing
 */","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(float),759,768,"/**
* Sets the stroking color to a grayscale value.
* @param g grayscale level (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(float),759,768,"/**
* Sets the stroking color to grayscale.
* @param g grayscale value (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking color using RGB values.
* @param r red component (0..1)
* @param g green component (0..1)
* @param b blue component (0..1)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets the non-stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float)",832,844,"/**
* Sets non-stroking color using RGB values.
* @param r red component (0.0 to 1.0)
* @param g green component (0.0 to 1.0)
* @param b blue component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceRGB color space. Range is 0..1.
     *
     * @param r The red value.
     * @param g The green value.
     * @param b The blue value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameters are invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets non-stroking color using CMYK values.
* @param c cyan component (0.0 to 1.0)
* @param m magenta component (0.0 to 1.0)
* @param y yellow component (0.0 to 1.0)
* @param k black component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets non-stroking color using CMYK values.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k black component (0..1)
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets non-stroking color using CMYK values.
* @param c cyan component (0.0 to 1.0)
* @param m magenta component (0.0 to 1.0)
* @param y yellow component (0.0 to 1.0)
* @param k black component (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float,float,float,float)",855,868,"/**
* Sets non-stroking color using CMYK values.
* @param c cyan component (0..1)
* @param m magenta component (0..1)
* @param y yellow component (0..1)
* @param k black component (0..1)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceCMYK color space. Range is 0..1.
     *
     * @param c The cyan value.
     * @param m The magenta value.
     * @param y The yellow value.
     * @param k The black value.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(float),877,886,"/**
* Sets non-stroking color to grayscale.
* @param g grayscale value (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(float),877,886,"/**
* Sets non-stroking color to grayscale.
* @param g grayscale value (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(float),877,886,"/**
* Sets non-stroking color to grayscale.
* @param g grayscale value (0.0 to 1.0)
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(float),877,886,"/**
 * Sets non-stroking color to grayscale.
 * @param g grayscale value (0.0 to 1.0)
 * @throws IOException if an I/O error occurs
 */","* Set the non-stroking color in the DeviceGray color space. Range is 0..1.
     *
     * @param g The gray value.
     * @throws IOException If an IO error occurs while writing to the stream.
     * @throws IllegalArgumentException If the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:addRect(float,float,float,float)",898,909,"/**
 * Adds a rectangle to the graphics context.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param width rectangle width
 * @param height rectangle height
 * @throws IOException if an I/O error occurs
 */","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDFormContentStream:addRect(float,float,float,float)",898,909,"/**
 * Adds a rectangle to the drawing.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param width rectangle width
 * @param height rectangle height
 * @throws IOException if an I/O error occurs
 */","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPageContentStream:addRect(float,float,float,float)",898,909,"/**
* Adds a rectangle to the graphics context.
* @param x top-left corner x-coordinate
* @param y top-left corner y-coordinate
* @param width rectangle width
* @param height rectangle height
* @throws IOException if an I/O error occurs
*/","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,addRect,"org.apache.pdfbox.pdmodel.PDPatternContentStream:addRect(float,float,float,float)",898,909,"/**
 * Adds a rectangle to the graphics.
 * @param x top-left corner x-coordinate
 * @param y top-left corner y-coordinate
 * @param width rectangle width
 * @param height rectangle height
 * @throws IOException if an I/O error occurs
 */","* Add a rectangle to the current path.
     *
     * @param x The lower left x coordinate.
     * @param y The lower left y coordinate.
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a cubic Bézier curve.
 * @param x1,y1 control point 1 coordinates
 * @param x2,y2 control point 2 coordinates
 * @param x3,y3 end point coordinates
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
 * Draws a cubic Bézier curve.
 * @param x1,y1 first control point
 * @param x2,y2 second control point
 * @param x3,y3 end point
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Draws a cubic Bézier curve.
* @param x1,y1 control point 1 coordinates
* @param x2,y2 control point 2 coordinates
* @param x3,y3 end point coordinates
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo(float,float,float,float,float,float)",924,937,"/**
* Draws a cubic Bézier curve.
* @param x1,y1 control point 1 coordinates
* @param x2,y2 control point 2 coordinates
* @param x3,y3 end point coordinates
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x2, y2) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a cubic Bézier curve with the given control points.
 * @param x2 x-coordinate of the second control point
 * @param y2 y-coordinate of the second control point
 * @param x3 x-coordinate of the third control point
 * @param y3 y-coordinate of the third control point
 * @throws IOException if an I/O error occurs during drawing
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a cubic Bézier curve.
 * @param x2 second control point's X coordinate
 * @param y2 second control point's Y coordinate
 * @param x3 third control point's X coordinate
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo2(float,float,float,float)",950,961,"/**
 * Draws a cubic Bézier curve.
 * @param x2 control point X-coordinate
 * @param y2 control point Y-coordinate
 * @param x3 end point X-coordinate
 * @param y3 end point Y-coordinate
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo2,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo2(float,float,float,float)",950,961,"/**
* Draws a cubic Bézier curve.
* @param x2 second control point X
* @param y2 second control point Y
* @param x3 third control point X
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using the current point and (x2, y2) as the Bézier control points.
     *
     * @param x2 x coordinate of the point 2
     * @param y2 y coordinate of the point 2
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IllegalStateException If the method was called within a text block.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a cubic Bézier curve with the given control points.
 * @param x1 x-coordinate of the first control point
 * @param y1 y-coordinate of the first control point
 * @param x3 x-coordinate of the third control point (end point)
 * @param y3 y-coordinate of the third control point (end point)
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDFormContentStream:curveTo1(float,float,float,float)",974,985,"/**
 * Draws a cubic Bézier curve with repeated final control point.
 * @param x1 x-coordinate of the first control point
 * @param y1 y-coordinate of the first control point
 * @param x3 x-coordinate of the third control point (also end point)
 * @param y3 y-coordinate of the third control point (also end point)
 * @throws IOException if an I/O error occurs
 */","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPageContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Draws a cubic Bézier curve with replicated final point.
* @param x1 control point X coordinate
* @param y1 control point Y coordinate
* @param x3 end point X coordinate
* @param y3 end point Y coordinate
* @throws IOException if an I/O error occurs
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,curveTo1,"org.apache.pdfbox.pdmodel.PDPatternContentStream:curveTo1(float,float,float,float)",974,985,"/**
* Draws a cubic Bézier curve with the specified control points.
* @param x1 x-coordinate of the first control point
* @param y1 y-coordinate of the first control point
* @param x3 x-coordinate of the third control point (final point)
* @param y3 y-coordinate of the third control point (final point)
* @throws IOException if an I/O error occurs during writing
*/","* Append a cubic Bézier curve to the current path. The curve extends from the current point to
     * the point (x3, y3), using (x1, y1) and (x3, y3) as the Bézier control points.
     *
     * @param x1 x coordinate of the point 1
     * @param y1 y coordinate of the point 1
     * @param x3 x coordinate of the point 3
     * @param y3 y coordinate of the point 3
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:moveTo(float,float)",995,1004,"/**
* Moves the cursor to specified coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
* @throws IOException if an I/O error occurs
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the drawing cursor to specified coordinates.
 * @param x horizontal coordinate
 * @param y vertical coordinate
 * @throws IOException if an I/O error occurs
 */","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:moveTo(float,float)",995,1004,"/**
 * Moves the current position to specified coordinates.
 * @param x target X coordinate
 * @param y target Y coordinate
 * @throws IOException if an I/O error occurs
 */","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,moveTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:moveTo(float,float)",995,1004,"/**
* Moves the graphics cursor to specified coordinates.
* @param x horizontal coordinate
* @param y vertical coordinate
* @throws IOException if an I/O error occurs
*/","* Move the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to specified coordinates.
* @param x destination x-coordinate
* @param y destination y-coordinate
* @throws IOException if an I/O error occurs
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDFormContentStream:lineTo(float,float)",1014,1023,"/**
* Draws a line to specified coordinates.
* @param x target X coordinate
* @param y target Y coordinate
* @throws IOException if an I/O error occurs
*/","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPageContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to the specified coordinates.
 * @param x x-coordinate of the endpoint
 * @param y y-coordinate of the endpoint
 * @throws IOException if an I/O error occurs
 */","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,lineTo,"org.apache.pdfbox.pdmodel.PDPatternContentStream:lineTo(float,float)",1014,1023,"/**
 * Draws a line to the specified coordinates.
 * @param x destination x-coordinate
 * @param y destination y-coordinate
 * @throws IOException if an I/O error occurs
 */","* Draw a line from the current position to the given coordinates.
     *
     * @param x The x coordinate.
     * @param y The y coordinate.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:stroke(),1031,1038,"/**
 * Strokes the current path.
 * Throws an exception if called in text mode.
 * @throws IOException if writing fails
 */","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDFormContentStream:stroke(),1031,1038,"/**
* Renders the current path.
* Throws an exception if called in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPageContentStream:stroke(),1031,1038,"/**
* Draws the current path.
* Throws an exception if called in text mode.
*/","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,stroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:stroke(),1031,1038,"/**
 * Applies stroke to the current path.
 * Throws exception if called in text mode.
 */","* Stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws IllegalStateException if called in text mode.
* @throws IOException if an I/O error occurs
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws exception if called in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndStroke(),1046,1053,"/**
 * Closes and strokes the current path.
 * Throws an exception if called in text mode.
 */","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndStroke(),1046,1053,"/**
* Closes and strokes the current path.
* Throws an exception if called in text mode.
*/","* Close and stroke the path.
     * 
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fill(),1061,1068,"/**
* Fills the current path using non-zero winding rule.
* Throws IllegalStateException if called in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDFormContentStream:fill(),1061,1068,"/**
* Fills the current path using non-zero winding rule.
* Throws IllegalStateException if called in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPageContentStream:fill(),1061,1068,"/**
* Fills non-zero areas in the current graphics context.
* Throws IllegalStateException if called within a text block.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fill,org.apache.pdfbox.pdmodel.PDPatternContentStream:fill(),1061,1068,"/**
* Fills the current path using non-zero winding rule.
* Throws IllegalStateException if called in text mode.
*/","* Fills the path using the nonzero winding number rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillEvenOdd(),1076,1083,"/**
* Writes fill rule for even-odd.
* Throws exception if in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillEvenOdd(),1076,1083,"/**
* Fills even-odd areas in graphics.
* Throws IOException on I/O error.
* Throws IllegalStateException if called in text mode.
*/","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillEvenOdd(),1076,1083,"/**
 * Writes FILL_EVEN_ODD operator.
 * Throws IOException on error.
 */","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillEvenOdd(),1076,1083,"/**
 * Fills the current path using the even-odd rule.
 * Throws an exception if called in text mode.
 */","* Fills the path using the even-odd winding rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStroke(),1093,1100,"/**
* Fills and strokes the current path.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStroke(),1093,1100,"/**
 * Fills and strokes the current path.
 * Throws an exception if called in text mode.
 */","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStroke(),1093,1100,"/**
* Fills and strokes the current path.
* Throws IOException on write failure.
* Throws IllegalStateException if called in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStroke(),1093,1100,"/**
* Fills and strokes the current path.
* Throws an exception if called in text mode.
*/","* Fill and then stroke the path, using the nonzero winding number rule to determine the region
     * to fill. This shall produce the same result as constructing two identical path objects,
     * painting the first with {@link #fill() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Fills and strokes the current path using even-odd rule.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Fills and strokes the current path using even-odd rule.
* Throws IllegalStateException if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Fills and strokes the current path using even-odd rule.
* Throws exception if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,fillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:fillAndStrokeEvenOdd(),1110,1117,"/**
* Fills and strokes the current path using even-odd rule.
* Throws an exception if called in text mode.
*/","* Fill and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall produce the same result as constructing two identical path objects, painting
     * the first with {@link #fillEvenOdd() } and the second with {@link #stroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes path, fills it using non-zero winding rule, and strokes it.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes path, fills using non-zero winding rule, and strokes it.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes path, fills using non-zero winding rule, and strokes it.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStroke,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStroke(),1127,1134,"/**
* Closes, fills, and strokes the current path.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the nonzero winding number rule to determine the
     * region to fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStroke() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
 * Closes path, fills using even-odd rule, and strokes.
 * Throws exception if called in text mode.
 */","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Closes path, fills using even-odd rule, and strokes it.
* Throws exception if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Closes path, fills using even-odd rule, and strokes.
* Throws IllegalStateException if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closeAndFillAndStrokeEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:closeAndFillAndStrokeEvenOdd(),1144,1151,"/**
* Closes path, fills it using even-odd rule, and strokes it.
* Throws IllegalStateException if called in text mode.
*/","* Close, fill, and then stroke the path, using the even-odd rule to determine the region to
     * fill. This shall have the same effect as the sequence {@link #closePath() }
     * and then {@link #fillAndStrokeEvenOdd() }.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:closePath(),1177,1184,"/**
* Closes the current path in graphics mode.
* Throws IllegalStateException if called within a text block.
* @throws IOException if an I/O error occurs while writing
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDFormContentStream:closePath(),1177,1184,"/**
* Closes the current path in graphics context.
* Throws exception if called within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPageContentStream:closePath(),1177,1184,"/**
* Closes the current path in graphics context.
* Throws exception if called within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,closePath,org.apache.pdfbox.pdmodel.PDPatternContentStream:closePath(),1177,1184,"/**
* Closes the current path.
* Throws IllegalStateException if called within a text block.
*/","* Closes the current subpath.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clip(),1192,1202,"/**
 * Clips the current path.
 * Throws an exception if called in text mode.
 */","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDFormContentStream:clip(),1192,1202,"/**
* Clips the current path.
* Throws IllegalStateException if in text mode.
*/","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPageContentStream:clip(),1192,1202,"/**
 * Clips the current path.
 * Throws an exception if called in text mode.
 */","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clip,org.apache.pdfbox.pdmodel.PDPatternContentStream:clip(),1192,1202,"/**
 * Clips the current path.
 * Throws an exception if called in text mode.
 */","* Intersects the current clipping path with the current path, using the nonzero rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:clipEvenOdd(),1210,1220,"/**
* Clips the current path using an even-odd rule.
* Throws IllegalStateException if called within a text block.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDFormContentStream:clipEvenOdd(),1210,1220,"/**
* Clips the current path using even-odd rule.
* Throws IllegalStateException if called in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPageContentStream:clipEvenOdd(),1210,1220,"/**
* Clips the current path using even-odd rule.
* Throws IllegalStateException if in text mode.
*/","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,clipEvenOdd,org.apache.pdfbox.pdmodel.PDPatternContentStream:clipEvenOdd(),1210,1220,"/**
 * Clips the current path using even-odd rule.
 * Throws IllegalStateException if called in text mode.
 */","* Intersects the current clipping path with the current path, using the even-odd rule.
     *
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width for drawing operations.
* @param lineWidth the width of the line to be used in drawing
* @throws IOException if an I/O error occurs while writing
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineWidth(float),1228,1232,"/**
 * Sets the line width for drawing operations.
 * @param lineWidth the desired line width
 * @throws IOException if an I/O error occurs
 */","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width in graphics context.
* @param lineWidth width of the line
* @throws IOException if I/O error occurs
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineWidth,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineWidth(float),1228,1232,"/**
* Sets line width in PDF.
* @param lineWidth desired line width
* @throws IOException if an I/O error occurs
*/","* Set line width to the given value.
     *
     * @param lineWidth The width which is used for drawing.
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle integer representing the line join style (0, 1, or 2)
* @throws IOException if an I/O error occurs while writing
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle join style (0, 1, or 2)
* @throws IOException if writing fails
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle style identifier (0, 1, or 2)
* @throws IOException if I/O error occurs
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineJoinStyle(int),1241,1252,"/**
* Sets the line join style.
* @param lineJoinStyle integer representing line join style (0-2)
* @throws IOException if writing fails
*/","* Set the line join style.
     *
     * @param lineJoinStyle 0 for miter join, 1 for round join, and 2 for bevel join.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle integer representing the line cap style (0, 1, or 2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDFormContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle integer representing the cap style (0-2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPageContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle line cap style (0-2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineCapStyle,org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineCapStyle(int),1261,1272,"/**
* Sets the line cap style.
* @param lineCapStyle integer representing the cap style (0-2)
* @throws IOException if an I/O error occurs
*/","* Set the line cap style.
     *
     * @param lineCapStyle 0 for butt cap, 1 for round cap, and 2 for projecting square cap.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is not a valid line cap style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern.
* @param pattern array of dash lengths
* @param phase offset for the start of the pattern
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDFormContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern.
* @param pattern array of dash lengths
* @param phase starting point of the pattern
* @throws IOException if writing fails
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPageContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern.
* @param pattern array of dash lengths
* @param phase offset for the start of the dash pattern
* @throws IOException if writing fails
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setLineDashPattern,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setLineDashPattern(float[],float)",1281,1291,"/**
* Sets line dash pattern and phase.
* @param pattern array of dash lengths
* @param phase starting point of the dash pattern
*/","* Set the line dash pattern.
     *
     * @param pattern The pattern array
     * @param phase The phase of the pattern
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit.
* @param miterLimit float value for miter limit, must be greater than 0
* @throws IOException if an I/O error occurs while writing
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDFormContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit.
* @param miterLimit the miter limit value, must be greater than 0
* @throws IOException if an I/O error occurs while writing
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPageContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit.
* @param miterLimit the miter limit value, must be greater than 0
* @throws IOException if an I/O error occurs while writing
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMiterLimit,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMiterLimit(float),1300,1308,"/**
* Sets the line miter limit.
* @param miterLimit the miter limit value (must be greater than 0)
* @throws IOException if an I/O error occurs
*/","* Set the miter limit.
     *
     * @param miterLimit the new miter limit.
     * @throws IOException If the content stream could not be written.
     * @throws IllegalArgumentException If the parameter is \u2264 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * @throws IOException if an I/O error occurs
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * @throws IOException if an I/O error occurs
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * @throws IOException if an I/O error occurs
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,endMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:endMarkedContent(),1370,1373,"/**
 * Ends marked content in PDF.
 * @throws IOException if an I/O error occurs
 */","* End a marked content sequence.
     *
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing in the document.
* @param spacing the amount of space between characters
* @throws IOException if an I/O error occurs
*/","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing in the document.
* @param spacing the amount of space between characters
* @throws IOException if an I/O error occurs while writing
*/","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setCharacterSpacing(float),1603,1607,"/**
 * Sets character spacing in the document.
 * @param spacing the amount of space between characters
 * @throws IOException if an I/O error occurs while writing
 */","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setCharacterSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setCharacterSpacing(float),1603,1607,"/**
* Sets character spacing in text.
* @param spacing the amount of space between characters
* @throws IOException if an I/O error occurs while writing
*/","* Set the character spacing. The value shall be added to the horizontal or vertical component
     * of the glyph's displacement, depending on the writing mode.
     *
     * @param spacing character spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing in PDF.
* @param spacing the amount of space to add between words
* @throws IOException if an I/O error occurs
*/","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDFormContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing in PDF document.
* @param spacing the amount of space between words
* @throws IOException if an I/O error occurs
*/","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPageContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing in PDF.
* @param spacing word spacing value
* @throws IOException if an I/O error occurs
*/","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setWordSpacing,org.apache.pdfbox.pdmodel.PDPatternContentStream:setWordSpacing(float),1622,1626,"/**
* Sets word spacing in PDF.
* @param spacing the spacing value to apply
* @throws IOException if an I/O error occurs
*/","* Set the word spacing. The value shall be added to the horizontal or vertical component of the
     * ASCII SPACE character, depending on the writing mode.
     * <p>
     * This will have an effect only with Type1 and TrueType fonts, not with Type0 fonts. The PDF
     * specification tells why: ""Word spacing shall be applied to every occurrence of the
     * single-byte character code 32 in a string when using a simple font or a composite font that
     * defines code 32 as a single-byte code. It shall not apply to occurrences of the byte value 32
     * in multiple-byte codes.""
     *
     * @param spacing word spacing
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setHorizontalScaling(float),1635,1639,"/**
* Sets horizontal scaling for text.
* @param scale factor to apply for horizontal scaling
* @throws IOException if an I/O error occurs
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDFormContentStream:setHorizontalScaling(float),1635,1639,"/**
* Sets horizontal scaling for text.
* @param scale scaling factor to apply
* @throws IOException if I/O error occurs
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPageContentStream:setHorizontalScaling(float),1635,1639,"/**
* Sets text horizontal scaling.
* @param scale scaling factor to apply
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setHorizontalScaling,org.apache.pdfbox.pdmodel.PDPatternContentStream:setHorizontalScaling(float),1635,1639,"/**
* Sets horizontal scaling for text.
* @param scale scaling factor to apply
* @throws IOException if I/O error occurs
*/","* Set the horizontal scaling to scale / 100.
     *
     * @param scale number specifying the percentage of the normal width. Default value: 100 (normal
     * width).
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets text rendering mode.
* @param rm rendering mode to apply
* @throws IOException if I/O error occurs
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDFormContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
 * Sets rendering mode for text.
 * @param rm new rendering mode to apply
 * @throws IOException if I/O error occurs while writing
 */","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPageContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets rendering mode.
* @param rm new rendering mode
* @throws IOException if I/O error occurs
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setRenderingMode,org.apache.pdfbox.pdmodel.PDPatternContentStream:setRenderingMode(org.apache.pdfbox.pdmodel.graphics.state.RenderingMode),1648,1652,"/**
* Sets rendering mode for text.
* @param rm RenderingMode to be applied
* @throws IOException if I/O error occurs during writing
*/","* Set the text rendering mode. This determines whether showing text shall cause glyph outlines
     * to be stroked, filled, used as a clipping boundary, or some combination of the three.
     *
     * @param rm The text rendering mode.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise value.
* @param rise amount of vertical space above baseline
* @throws IOException if I/O error occurs during operation
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise value.
* @param rise the amount of rise for text
* @throws IOException if I/O error occurs
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise.
* @param rise amount of text rise
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextRise,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextRise(float),1662,1666,"/**
* Sets text rise value.
* @param rise amount of text rise
* @throws IOException if I/O error occurs
*/","* Set the text rise value, i.e. move the baseline up or down. This is useful for drawing superscripts or
     * subscripts.
     *
     * @param rise Specifies the distance, in unscaled text space units, to move the baseline up or down from its
     * default location. 0 restores the default location.
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignSignatureRectangle,"org.apache.pdfbox.pdmodel.PDDocument:assignSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.cos.COSDictionary)",600,612,"/**
 * Assigns a signature rectangle to a widget.
 * @param firstWidget the annotation widget to modify
 * @param annotDict the dictionary containing annotation details
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:getBBox(),55,59,"/**
* Retrieves the bounding box of the PDF element.
* @return PDRectangle object representing the bounding box or null if not set
*/","* Gets the artifact's bounding box (BBox).
     * 
     * @return the artifact's bounding box",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,getBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:getBBox(),841,850,"/**
* Retrieves the bounding box of the PDF object.
* @return PDRectangle representing the bounding box or null if not set
*/","* Gets the bounding box.
     * 
     * @return the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRectangle(),732,736,"/**
* Retrieves the rectangle associated with an annotation.
* @return PDRectangle object or null if no rectangle is defined
*/","* The rectangle associated with this annotation.
     *
     * @return The annotation rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:getFringe(),115,119,"/**
* Retrieves the fringe rectangle of an annotation.
* @return PDRectangle representing the fringe or null if not set
*/","* This will retrieve the fringe. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:getFringe(),152,156,"/**
* Retrieves the fringe rectangle of an annotation.
* @return PDRectangle representing the fringe or null if not set
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getFringe(),271,275,"/**
* Retrieves the fringe rectangle of an annotation.
* @return PDRectangle object representing the fringe or null if not set
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where
     * the drawing occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,getFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:getFringe(),153,157,"/**
* Retrieves the fringe rectangle from an annotation.
* @return PDRectangle representing the fringe or null if not set
*/","* This will get the fringe. Giving the difference between the annotations rectangle and where the drawing occurs.
     * (To take account of any effects applied through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFontBoundingBox(),411,420,"/**
* Retrieves the font bounding box.
* @return PDRectangle representing the font's bounding box or null if not available
*/","* This will get the fonts bounding box.
     *
     * @return The fonts bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontBBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontBBox(),308,312,"/**
* Retrieves font bounding box.
* @return PDRectangle object or null if not found
*/","* This will get the fonts bounding box from its dictionary.
     *
     * @return The fonts bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getBBox,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getBBox(),208,213,"/**
* Retrieves the bounding box of the PDF object.
* @return PDRectangle representing the bounding box or null if not set
*/","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges, respectively,
     * of the form XObject's bounding box.
     * These boundaries are used to clip the form XObject and to determine its size for caching.
     * @return The BBox of the form.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getBBox(),221,226,"/**
* Retrieves the bounding box of the PDF object.
* @return PDRectangle representing the bounding box or null if not available
*/","* An array of four numbers in the form coordinate system (see
     * below), giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the pattern's bounding box.
     *
     * @return The BBox of the pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getBBox(),169,180,"/**
* Retrieves the bounding box of the PDF object.
* @return PDRectangle representing the bounding box or null if not defined
*/","* An array of four numbers in the form coordinate system (see below),
     * giving the coordinates of the left, bottom, right, and top edges,
     * respectively, of the shading's bounding box.
     *
     * @return the BBox of the form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getRectangle(),256,275,"/**
* Retrieves the rectangle from the dictionary.
* @return PDRectangle object or null if invalid data
*/","* The annotation rectangle, defining the location of the annotation on the page in default user space units. This
     * is usually required and should not return null on valid PDF documents. But where this is a parent form field with
     * children, such as radio button collections then the rectangle will be null.
     * 
     * @return The Rect value of this annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getRectDifference(),279,283,"/**
* Retrieves the rectangle difference.
* @return PDRectangle object or null if not available
*/","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,getRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:getRectDifference(),122,126,"/**
* Retrieves rectangle difference from PDF object.
* @return PDRectangle representing the difference or null if not present
*/","* This will get the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @return the rectangle difference",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,getBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:getBBox(),84,88,"/**
* Retrieves the bounding box rectangle.
* @return PDRectangle object or null if not found
*/","* This will retrieve the rectangle specifying the location of the viewport.
     * 
     * @return the location",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:getRectangle(),179,183,"/**
* Retrieves the rectangle from the bead.
* @return PDRectangle object or null if not found
*/","* The rectangle on the page that this bead is part of.
     *
     * @return The part of the page that this bead covers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,setLineDashPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:setLineDashPattern(org.apache.pdfbox.cos.COSArray,int)",1080,1084,"/**
* Sets line dash pattern for graphics.
* @param array COSArray containing dash lengths
* @param phase offset of the pattern
*/","* @param array dash array
     * @param phase dash phase",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineDashPattern(),303,317,"/**
* Retrieves line dash pattern from dictionary.
* @return PDLineDashPattern object or null if not found
*/","* This will get the dash pattern.
     *
     * @return null or the D value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getStencilImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getStencilImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Paint)",61,125,"/**
* Generates a stencil image from a PDF image.
* @param pdImage source PDF image
* @param paint color to fill the stencil
* @return BufferedImage with applied stencil
* @throws IOException if I/O error occurs
*/","* Returns an ARGB image filled with the given paint and using the given image as a mask.
     * @param paint the paint to fill the visible portions of the image with
     * @return a masked image filled with the given paint
     * @throws IOException if the image cannot be read
     * @throws IllegalStateException if the image is not a stencil.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,readRasterFromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:readRasterFromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster)",263,357,"/**
 * Reads image data from a PDF into a writable raster.
 * @param pdImage source PDF image
 * @param raster target writable raster
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,from1Bit,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:from1Bit(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,int,int)",359,458,"/**
* Converts a 1-bit PDImage to a BufferedImage.
* @param pdImage source image
* @param clipped region to clip
* @param subsampling factor for downscaling
* @param width target width
* @param height target height
* @return BufferedImage representation or null if conversion fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,fromAny,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:fromAny(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.WritableRaster,org.apache.pdfbox.cos.COSArray,java.awt.Rectangle,int,int,int)",554,703,"/**
 * Converts a PDImage to a BufferedImage.
 * @param pdImage source image
 * @param raster target raster for the image data
 * @param colorKey optional color key mask
 * @param clipped clipping rectangle
 * @param subsampling subsampling factor
 * @param width target image width
 * @param height target image height
 * @return BufferedImage representation of PDImage
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getDefaultDecode(int),454,464,"/**
* Generates default decode array.
* @param bitsPerComponent number of bits per color component
* @return float array with default decode values
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getFontMatrix,org.apache.pdfbox.pdmodel.font.PDType3Font:getFontMatrix(),254,264,"/**
 * Retrieves the font matrix.
 * @return Font matrix as a Matrix object
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getMatrix(),235,239,"/**
* Retrieves the transformation matrix.
* @return Matrix object representing the transformation
*/","* This will get the optional matrix of an XObjectForm. It maps the form space to user space.
     * @return the form matrix if available, or the identity matrix.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:getMatrix(),134,137,"/**
* Retrieves matrix from COS object.
* @return Matrix object created from dictionary entry
*/","* Returns the pattern matrix, or the identity matrix is none is available.
     * 
     * @return the pattern matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,getMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:getMatrix(),56,59,"/**
* Retrieves matrix from COS object.
* @return Matrix object created from dictionary entry or null if not present
*/","* This will get the optional Matrix of a function based shading.
     *
     * @return the matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getInheritableAttribute,"org.apache.pdfbox.pdmodel.PDPageTree:getInheritableAttribute(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",108,122,"/**
 * Retrieves inheritable attribute from PDF dictionary.
 * @param node current dictionary node
 * @param key attribute key to fetch
 * @return COSBase value or null if not found
 */","* Returns the given attribute, inheriting from parent tree nodes if necessary.
     *
     * @param node page object
     * @param key the key to look up
     * @return COS value for the given key",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,findFieldType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:findFieldType(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",132,147,"/**
 * Recursively finds the field type in a PDF dictionary.
 * @param dic the current dictionary to search
 * @param seen set of dictionaries already visited to prevent loops
 * @return field type string or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(org.apache.pdfbox.cos.COSName,boolean)",895,898,"/**
 * Retrieves boolean value for a given COSName key.
 * @param key the COSName to look up
 * @param defaultValue the default boolean value if key is not found
 * @return the boolean value associated with the key or default value
 */","* This is a convenience method that will get the dictionary object that is expected to be a COSBoolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The entry converted to a boolean.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getInterpolate(),229,233,"/**
* Retrieves interpolation setting from PDF parameters.
* @return true if interpolation is enabled, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,isStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:isStencil(),284,288,"/**
* Checks if the object represents an image mask.
* @return true if the object is an image mask, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,int)",994,997,"/**
 * Retrieves an integer value from a COSName key with a default.
 * @param key the COSName key to look up
 * @param defaultValue the default integer value if key not found
 * @return the integer value associated with the key or default
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the defaultvalue will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",1007,1010,"/**
* Retrieves integer value from nested COSDictionary keys.
* @param firstKey primary key in the dictionary
* @param secondKey secondary key nested under the first key
* @return integer value or -1 if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value -1 will be returned.
     *
     * @param firstKey The first key to the item in the dictionary.
     * @param secondKey The second key to the item in the dictionary.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getHeight(),205,209,"/**
* Retrieves height value from PDF parameters.
* @return height as an integer or -1 if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getWidth(),217,221,"/**
* Retrieves the width value.
* @return width as an integer or -1 if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:<init>(org.apache.pdfbox.cos.COSDictionary,byte[],org.apache.pdfbox.pdmodel.PDResources)",68,103,"/**
* Constructs a PDInlineImage from given parameters, data, and resources.
* @param parameters COSDictionary containing image parameters
* @param data byte array of raw image data
* @param resources PDResources object for resource management
* @throws IOException if an I/O error occurs during decoding
*/","* Creates an inline image from the given parameters and data.
     *
     * @param parameters the image parameters
     * @param data the image data
     * @param resources the current resources
     * @throws IOException if the stream cannot be decoded",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createInputStream(java.util.List),309,329,"/**
* Creates an input stream with filters applied.
* @param stopFilters list of filters to stop processing at
* @return InputStream after applying filters
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getSuffix,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getSuffix(),386,407,"/**
* Determines file suffix based on image filters.
* @return appropriate file suffix (""png"", ""jpg"", or ""tiff"")
*/","* Returns the suffix for this image type, e.g. jpg/png.
     *
     * @return The image suffix.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,"org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",252,265,"/**
* Retrieves COS objects by specified types.
* @param type1 first object type
* @param type2 second object type
* @return list of COSObject matching the types
*/","* This will get all dictionaries objects by type.
     *
     * @param type1 The first possible type of the object, mandatory.
     * @param type2 The second possible type of the object, usually an abbreviation, optional.
     *
     * @return This will return all objects with the specified type(s).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",448,451,"/**
 * Converts an integer code to its Unicode character representation.
 * @param code the integer code of the character
 * @return the Unicode character as a string
 */","* Returns the Unicode character sequence which corresponds to the given character code.
     *
     * @param code character code
     * @param customGlyphList a custom glyph list to use instead of the Adobe Glyph List
     * @return Unicode character(s)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,"org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",276,331,"/**
* Converts a glyph code to its Unicode representation.
* @param code glyph code to convert
* @param customGlyphList optional custom glyph list for mapping
* @return Unicode string or null if no mapping exists
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,isEncrypted,org.apache.pdfbox.pdmodel.PDDocument:isEncrypted(),812,815,"/**
 * Checks if the document is encrypted.
 * @return true if the document is encrypted, false otherwise
 */","* This will tell if this document is encrypted or not.
     * 
     * @return true If this document is encrypted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,parse,org.apache.pdfbox.pdfparser.FDFParser:parse(),66,88,"/**
* Parses an FDF file and returns a FDFDocument.
* @throws IOException if parsing fails
*/","* This will parse the stream and populate the FDFDocument object.
     *
     * @return the parsed FDFDocument
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getAcroForm(),111,114,"/**
* Retrieves the PDF acroform with default fixups applied.
* @return PDAcroForm object representing the form in the document
*/","* Get the documents AcroForm. This will return null if no AcroForm is part of the document.
     *
     * @return The document's AcroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removeResources,org.apache.pdfbox.pdmodel.PDPage:removeResources(org.apache.pdfbox.cos.COSDictionary),134,162,"/**
 * Removes resources from the given dictionary.
 * @param resources dictionary containing resource objects to be removed
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,hasColorSpace,org.apache.pdfbox.pdmodel.PDResources:hasColorSpace(org.apache.pdfbox.cos.COSName),244,247,"/**
* Checks if the document contains a specific color space.
* @param name COSName representing the color space
* @return true if the color space exists, false otherwise
*/","* Returns true if the given color space name exists in these resources.
     *
     * @param name Name of the color space resource.
     * @return true if the given color space name exists in these resources, otherwise false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGState,org.apache.pdfbox.pdmodel.PDResources:getExtGState(org.apache.pdfbox.cos.COSName),255,280,"/**
* Retrieves extended graphics state by name.
* @param name the name of the graphics state
* @return PDExtendedGraphicsState object or null if not found
*/","* Returns the extended graphics state resource with the given name, or null if none exists.
     *
     * @param name Name of the graphics state resource.
     * @return the extended graphics state with the given name or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isImageXObject,org.apache.pdfbox.pdmodel.PDResources:isImageXObject(org.apache.pdfbox.cos.COSName),391,409,"/**
* Checks if the specified XObject is an image.
* @param name the name of the XObject to check
* @return true if the XObject is an image, false otherwise
*/","* Tells whether the XObject resource with the given name is an image.
     *
     * @param name Name of the XObject resource.
     * @return true if it is an image XObject, false if not.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpaceNames,org.apache.pdfbox.pdmodel.PDResources:getColorSpaceNames(),515,518,"/**
 * Retrieves all color space names.
 * @return Iterable of COSName objects representing color spaces
 */","* Returns the names of the color space resources, if any.
     * 
     * @return an iterable containing all names of available colorspaces",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObjectNames,org.apache.pdfbox.pdmodel.PDResources:getXObjectNames(),525,528,"/**
 * Retrieves XObject names.
 * @return Iterable of COSName objects representing XObjects
 */","* Returns the names of the XObject resources, if any.
     * 
     * @return an iterable containing all names of available xobjects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFontNames,org.apache.pdfbox.pdmodel.PDResources:getFontNames(),535,538,"/**
 * Retrieves font names.
 * @return Iterable of COSName objects representing font names
 */","* Returns the names of the font resources, if any.
     * 
     * @return an iterable containing all names of available fonts",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPropertiesNames,org.apache.pdfbox.pdmodel.PDResources:getPropertiesNames(),545,548,"/**
 * Retrieves property names.
 * @return Iterable of COSName objects representing property names
 */","* Returns the names of the property list resources, if any.
     * 
     * @return an iterable containing all names of available property lists",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShadingNames,org.apache.pdfbox.pdmodel.PDResources:getShadingNames(),555,558,"/**
* Retrieves shading names.
* @return Iterable of COSName objects representing shading names
*/","* Returns the names of the shading resources, if any.
     * 
     * @return an iterable containing all names of available shadings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPatternNames,org.apache.pdfbox.pdmodel.PDResources:getPatternNames(),565,568,"/**
 * Retrieves pattern names from the document.
 * @return Iterable of COSName containing pattern names
 */","* Returns the names of the pattern resources, if any.
     * 
     * @return an iterable containing all names of available patterns",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getExtGStateNames,org.apache.pdfbox.pdmodel.PDResources:getExtGStateNames(),575,578,"/**
* Retrieves external graphics state names.
* @return Iterable of COSName objects representing external graphics states
*/","* Returns the names of the extended graphics state resources, if any.
     * 
     * @return an iterable containing all names of available extended graphics states",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getObjectFromEFDictionary,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getObjectFromEFDictionary(org.apache.pdfbox.cos.COSName),82,90,"/**
* Retrieves object from EF dictionary using specified key.
* @param key the COSName key to look up in the EF dictionary
* @return COSBase object or null if not found or EF dictionary is missing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getStdCryptFilterDictionary(),470,473,"/**
* Retrieves standard crypt filter dictionary.
* @return PDCryptFilterDictionary object or null if not found
*/","* Returns the standard crypt filter.
     * 
     * @return the standard crypt filter if available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getDefaultCryptFilterDictionary(),480,483,"/**
* Retrieves default encryption filter dictionary.
* @return PDCryptFilterDictionary object or null if not found
*/","* Returns the default crypt filter (for public-key security handler).
     * 
     * @return the default crypt filter if available.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType0Font:getFontDescriptor(),449,453,"/**
 * Retrieves font descriptor from descendant font.
 * @return Font descriptor of the descendant font
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getResources,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getResources(),88,99,"/**
* Retrieves resources from character stream or font.
* @return PDResources object containing resources
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDType3Font:hasGlyph(java.lang.String),135,140,"/**
* Checks if a glyph exists by name.
* @param name the name of the glyph
* @return true if the glyph is present, false otherwise
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getCharProc,org.apache.pdfbox.pdmodel.font.PDType3Font:getCharProc(int),395,404,"/**
 * Retrieves character procedure for a given code.
 * @param code character code
 * @return PDType3CharProc object or null if not found
 */","* Returns the stream of the glyph for the given character code
     * 
     * @param code character code
     * @return the stream to be used to render the glyph",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getRolloverAppearance(),99,103,"/**
* Retrieves rollover appearance entry.
* @return PDAppearanceEntry for rollover state or normal state if not available
*/","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:getDownAppearance(),133,137,"/**
 * Retrieves the down appearance entry.
 * @return PDAppearanceEntry for down state or normal state if not found
 */","* This will return a list of appearances. In the case where there is only one appearance the map will contain one
     * entry whose key is the string ""default"". If there is no rollover appearance then the normal appearance will be
     * returned. Which means that this method will never return null.
     *
     * @return A list of key(java.lang.String) value(PDAppearanceStream) pairs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDButton:constructAppearances(),284,304,"/**
* Constructs widget appearances based on their states.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getFirstChild(),184,187,"/**
 * Retrieves the first child outline item.
 * @return PDOutlineItem representing the first child or null if none exists
 */",* @return The first child or null if there is no child.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getLastChild(),202,205,"/**
 * Retrieves the last child outline item.
 * @return PDOutlineItem representing the last child or null if none exists
 */",* @return The last child or null if there is no child.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getSignature,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getSignature(),92,95,"/**
 * Retrieves the signature value.
 * @return PDSignature object containing the signature details
 */","* Get the signature dictionary.
     * 
     * @return the signature dictionary
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:getValueAsString(),158,163,"/**
* Returns the string representation of the signature.
* @return String value of the signature or empty string if null
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getIDTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getIDTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),1131,1157,"/**
* Converts PDF ID tree to a map.
* @param idTree root node of the ID tree
* @return Map of structure elements by name
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,getNumberTreeAsMap,org.apache.pdfbox.multipdf.PDFMergerUtility:getNumberTreeAsMap(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),1161,1187,"/**
 * Converts a PDNumberTreeNode to a map of numbers.
 * @param tree the number tree node
 * @return a map containing all numbers from the tree
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,findLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:findLabels(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),100,124,"/**
 * Recursively finds and collects page labels from a PDF node.
 * @param node the current node in the PDF structure
 * @throws IOException if an I/O error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:getValue(java.lang.Integer),141,167,"/**
 * Retrieves value by index from a tree node.
 * @param index the index to retrieve the value for
 * @return the value at the specified index or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the value corresponding to an index in the number tree.
     *
     * @param index The index in the number tree.
     *
     * @return The value corresponding to the index.
     *
     * @throws IOException If there is a problem creating the values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfOutputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfOutputParameters(),159,174,"/**
* Retrieves the number of output parameters.
* @return Number of output parameters or 0 if none
*/","* This will get the number of output parameters that
     * have a range specified.  A range for output parameters
     * is optional so this may return zero for a function
     * that does have output parameters, this will simply return the
     * number that have the range specified.
     *
     * @return The number of output parameters that have a range
     * specified.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getRangeForOutput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getRangeForOutput(int),185,189,"/**
 * Retrieves PDRange for specified output index.
 * @param n index of the desired range
 * @return PDRange object representing the range
 */","* This will get the range for a certain output parameters.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The output parameter number to get the range for.
     *
     * @return The range for this component.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,clipToRange,org.apache.pdfbox.pdmodel.common.function.PDFunction:clipToRange(float[]),293,313,"/**
* Clips input values to specified ranges.
* @param inputValues array of input values to clip
* @return array of clipped values
*/","* Clip the given input values to the ranges.
     * 
     * @param inputValues the input values
     * @return the clipped values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getNumberOfInputParameters,org.apache.pdfbox.pdmodel.common.function.PDFunction:getNumberOfInputParameters(),209,217,"/**
* Returns the number of input parameters.
* @return int representing the count of input parameters
*/","* This will get the number of input parameters that
     * have a domain specified.
     *
     * @return The number of input parameters that have a domain
     * specified.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,getDomainForInput,org.apache.pdfbox.pdmodel.common.function.PDFunction:getDomainForInput(int),228,232,"/**
* Retrieves domain range for input index.
* @param n index of the domain value
* @return PDRange object representing the domain range
*/","* This will get the range for a certain input parameter.  This is will never
     * return null.  If it is not present then the range 0 to 0 will
     * be returned.
     *
     * @param n The parameter number to get the domain for.
     *
     * @return The domain range for this component.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,calcSampleIndex,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:calcSampleIndex(int[]),351,372,"/**
* Calculates the sample index for a given vector.
* @param vector input vector of integers
* @return computed index as an integer
*/","* calculate array index (structure described in p.171 PDF spec 1.7) in multiple dimensions.
         *
         * @param vector with coordinates
         * @return index in flat array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getDecodeForParameter(int),220,229,"/**
* Retrieves the decode range for a specific parameter.
* @param paramNum index of the parameter
* @return PDRange object or null if not available
*/","* Get the decode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The decode parameter range or null if none is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:getEncodeForParameter(int),177,181,"/**
* Retrieves encoding range for parameter.
* @param n index of the parameter
* @return PDRange object representing the encoding range
*/","* Get the encode for the input parameter.
     *
     * @param n The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isTopAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isTopAttached(),67,70,"/**
 * Checks if the top attachment is present.
 * @return true if top attachment exists, false otherwise
 */","* Is the artifact attached to the top edge?
     * 
     * @return <code>true</code> if the artifact is attached to the top edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isBottomAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isBottomAttached(),78,81,"/**
 * Checks if the bottom attachment is active.
 * @return true if bottom is attached, false otherwise
 */","* Is the artifact attached to the bottom edge?
     * 
     * @return <code>true</code> if the artifact is attached to the bottom edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isLeftAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isLeftAttached(),89,92,"/**
 * Checks if the left component is attached.
 * @return true if left component is attached, false otherwise
 */","* Is the artifact attached to the left edge?
     * 
     * @return <code>true</code> if the artifact is attached to the left edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDArtifactMarkedContent.java,isRightAttached,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDArtifactMarkedContent:isRightAttached(),100,103,"/**
 * Checks if the right side is attached.
 * @return true if right side is attached, false otherwise
 */","* Is the artifact attached to the right edge?
     * 
     * @return <code>true</code> if the artifact is attached to the right edge,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFont:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",66,72,"/**
* Constructs a PDCIDFont from a COSDictionary.
* @param fontDictionary dictionary containing font data
* @param parent PDType0Font that contains this CID font
*/","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontDescriptor(org.apache.pdfbox.cos.COSDictionary),296,308,"/**
 * Retrieves the font descriptor from a given dictionary.
 * @param dictionary PDF dictionary containing font information
 * @return COSDictionary representing the font descriptor or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary),78,100,"/**
* Initializes a new DictionaryEncoding with the given font encoding.
* @param fontEncoding COSDictionary representing the font encoding
*/","* Creates a new DictionaryEncoding for a Type 3 font from a PDF.
     *
     * @param fontEncoding The Type 3 encoding dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSDictionary,boolean,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",109,149,"/**
 * Initializes dictionary encoding for a font.
 * @param fontEncoding font's encoding dictionary
 * @param isNonSymbolic true if the font is non-symbolic
 * @param builtIn built-in encoding for symbolic fonts
 */","* Creates a new DictionaryEncoding from a PDF.
     *
     * @param fontEncoding The encoding dictionary.
     * @param isNonSymbolic True if the font is non-symbolic. False for Type 3 fonts.
     * @param builtIn The font's built-in encoding. Null for Type 3 fonts.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNProcess.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNProcess:toString(),105,126,"/**
* Returns a string representation of the process.
* @return String with process details or ""ERROR"" if IOException occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,72,"/**
 * Initializes a ShadingContext with given parameters.
 * @param shading PDShading object representing the shading
 * @param cm ColorModel for the shading context
 * @param xform AffineTransform for coordinate transformation
 * @param matrix Matrix for additional transformations
 * @throws IOException if an I/O error occurs during initialization
 */","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws java.io.IOException if there is an error getting the color space
     * or doing background color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getDecodeForParameter(int),157,166,"/**
* Retrieves the decode range for a specific parameter.
* @param paramNum index of the parameter
* @return PDRange object or null if not applicable
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getPathArray,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getPathArray(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon),157,178,"/**
* Retrieves path array from annotation, converting if necessary.
* @param annotation polygon annotation object
* @return 2D float array representing the path or null if unavailable
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(java.io.InputStream),412,418,"/**
* Reads and signs PDF content.
* @param pdfFile input stream of the PDF file
* @return signed content as byte array
* @throws IOException if an I/O error occurs
*/","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignedContent,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignedContent(byte[]),431,437,"/**
 * Returns signed content of a PDF file.
 * @param pdfFile the input PDF file as byte array
 * @return signed content as byte array
 * @throws IOException if an I/O error occurs
 */","* Return the signed content of the document. This is not a PDF file, nor is it the PDF file
     * before signing, it is the byte sequence made of the input minus the area where the signature
     * bytes will be. See ""The ByteRange and signature value"" in the document
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/DigitalSignaturesInPDF.pdf#page=5"">Digital
     * Signatures in a PDF</a>.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing only the signed part of the content
     * @throws IOException if the pdfFile can't be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getRevision(),141,144,"/**
 * Retrieves the revision number from the dictionary.
 * @return The revision number as a long value.
 */","* The software module revision number, corresponding to the Date attribute.
     *
     * @return the revision of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getMinimumRevision(),165,168,"/**
 * Retrieves the minimum revision number.
 * @return the minimum revision as a long value
 */","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @return the revision of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions)",65,75,"/**
 * Creates a COSInputStream with decoding applied.
 * @param filters list of filters to apply
 * @param parameters dictionary of parameters for decoding
 * @param in input stream to decode
 * @param options decode options
 * @return COSInputStream with decoded data
 * @throws IOException if an I/O error occurs
 */","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @param options decode options for the encoded stream
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createView,org.apache.pdfbox.cos.COSStream:createView(),181,197,"/**
 * Creates a view for reading data with optional filters.
 * @return RandomAccessRead object
 * @throws IOException if an I/O error occurs
 */","* Returns a new RandomAccessRead which reads the decoded stream data.
     * 
     * @return RandomAccessRead containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(java.util.List),200,220,"/**
* Creates an InputStream with optional filtering.
* @param stopFilters list of filter names to stop at
* @return filtered InputStream or original if no filters applied
* @throws IOException if I/O error occurs
*/","* This will get a stream with some filters applied but not others. This is
     * useful when doing images, ie filters = [flate,dct], we want to remove
     * flate but leave dct
     * 
     * @param stopFilters  A list of filters to stop decoding at.
     * @return A stream with decoded data.
     * @throws IOException If there is an error processing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String),290,293,"/**
 * Retrieves a floating-point number from the COS object by key.
 * @param name key to identify the number in the COS object
 * @return the float value associated with the key, or default if not found
 */","* Gets a number value.
     * 
     * @param name the attribute name
     * @return the number value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getConversionFactor(),129,132,"/**
 * Retrieves conversion factor from COS object.
 * @return float value of ""C"" key or default if not found
 */","* This will return the conversion factor.
     * 
     * @return the conversion factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderLength(),306,309,"/**
 * Retrieves the leader line length.
 * @return float value representing the leader line length
 */","* This will retrieve the length of the leader line.
     * 
     * @return the length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderExtend(),326,329,"/**
 * Retrieves leader line extension value.
 * @return float representing leader line extension
 */","* This will retrieve the length of the leader line extensions.
     * 
     * @return the length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getLeaderOffset(),346,349,"/**
* Retrieves leader line offset.
* @return Float value representing leader line offset
*/","* This will retrieve the length of the leader line offset.
     * 
     * @return the length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,getV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:getV(),348,351,"/**
 * Retrieves the 'V' value from the dictionary.
 * @return The float value associated with 'V', or default if not present
 */","* The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @return the minimum required capability of the signature field seed value
     * dictionary parser",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,getCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:getCYX(),321,324,"/**
 * Retrieves the CYX value from the COS object.
 * @return float value of CYX or default if not found
 */","* This will return the CYX factor.
     * 
     * @return CYX factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getNumber(java.lang.String,float)",279,282,"/**
 * Retrieves a float value by key from COS object.
 * @param name the key to look up in the COS object
 * @param defaultValue the default value to return if key is not found
 * @return the float value associated with the key or default value
 */","* Gets a number value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the number value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getIntensity(),91,94,"/**
 * Retrieves intensity value.
 * @return float representing intensity, default is 0 if not found
 */","* This will retrieve the intensity of the applied effect.
     *
     * @return the intensity value 0 to 2",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,computeFontHeight,org.apache.pdfbox.text.LegacyPDFStreamEngine:computeFontHeight(org.apache.pdfbox.pdmodel.font.PDFont),324,369,"/**
 * Computes the font height for a given PDFont.
 * Adjusts bounding box and uses CapHeight or Ascent/Descent if available.
 * @param font the PDFont to compute the height for
 * @return the computed font height
 * @throws IOException if an I/O error occurs
 */","* Compute the font height. Override this if you want to use own calculations.
     * 
     * @param font the font.
     * @return the font height.
     * 
     * @throws IOException if there is an error while getting the font bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:toRGB(float[]),83,105,"/**
* Converts a color value to RGB.
* @param value input color value array
* @return RGB color array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:getLineWidth(),148,170,"/**
 * Retrieves the line width of an annotation.
 * @return float value representing the line width, default is 1
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:getLineWidth(),174,196,"/**
 * Retrieves the line width of an annotation.
 * @return float value representing the line width, default is 1
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:getLineWidth(),207,229,"/**
* Retrieves the line width of an annotation's border.
* @return the line width as a float, defaulting to 1 if not specified
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,getLineWidth,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:getLineWidth(),125,147,"/**
* Retrieves the line width of an annotation.
* @return float representing the line width, default is 1 if not specified
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getDefaultPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getDefaultPositionVector(int),267,270,"/**
* Generates default position vector.
* @param cid component ID
* @return Vector with centered x-coordinate and initial y-coordinate
*/","* Returns the default position vector (v).
     *
     * @param cid CID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDCIDFont:getWidth(int),317,324,"/**
 * Retrieves width of character by code.
 * @param code character code
 * @return width as float
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getAverageFontWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getAverageFontWidth(),485,489,"/**
* Returns the average font width.
* @return average font width as a float
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getProperties,org.apache.pdfbox.pdmodel.PDResources:getProperties(org.apache.pdfbox.cos.COSName),358,383,"/**
 * Retrieves properties by name.
 * @param name the property name
 * @return PDPropertyList object or null if not found
 */","* Returns the property list resource with the given name, or null if none exists.
     * 
     * @param name Name of the property list resource.
     * @return the property list with the given name or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getOptionalContent(),284,288,"/**
* Retrieves optional content properties.
* @return PDPropertyList object or null if not present
*/","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOptionalContent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOptionalContent(),1055,1059,"/**
* Retrieves optional content properties.
* @return PDPropertyList object or null if not found
*/","* This will get the optional content group or optional content membership dictionary.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:getOCGs(),62,86,"/**
* Retrieves OCGs from the dictionary.
* @return List of PDPropertyList objects representing OCGs
*/","* Get a list of optional content groups.
     * 
     * @return List of optional content groups, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getOptionalContent(),705,709,"/**
* Retrieves optional content properties.
* @return PDPropertyList object or null if none exists
*/","* This will get the optional content group or optional content membership dictionary for the
     * annotation.
     *
     * @return The optional content group or optional content membership dictionary or null if there
     * is none.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,getObjectOffset,"org.apache.pdfbox.pdfparser.COSParser:getObjectOffset(org.apache.pdfbox.cos.COSObjectKey,boolean)",498,523,"/**
* Retrieves object offset from XRef table, with optional brute force search.
* @param objKey key of the COSObject to find
* @param requireExistingNotCompressedObj flag to check if object must exist and not be compressed
* @return offset or null if not found
* @throws IOException if object is missing or invalid
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXrefOffsets,org.apache.pdfbox.pdfparser.XrefParser:checkXrefOffsets(),448,462,"/**
 * Validates and updates XRef offsets if necessary.
 * Throws IOException on I/O errors during validation or update.
 */","* Check the XRef table by dereferencing all objects and fixing the offset if necessary.
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteObjects,org.apache.pdfbox.pdfwriter.COSWriter:doWriteObjects(),527,533,"/**
 * Writes objects to output until queue is empty.
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeArray,org.apache.pdfbox.pdfwriter.COSWriter:writeArray(org.apache.pdfbox.cos.COSArray),1154,1165,"/**
* Writes a COSArray to the output stream.
* Handles direct and indirect arrays differently.
* @param array the COSArray to write
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,writeDictionary,org.apache.pdfbox.pdfwriter.COSWriter:writeDictionary(org.apache.pdfbox.cos.COSDictionary),1167,1178,"/**
 * Writes a PDF dictionary to the output stream.
 * Handles direct and indirect dictionaries differently.
 * @param dictionary the COSDictionary to write
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.io.File),174,180,"/**
 * Saves data to a file.
 * @param fileName the File object representing the destination
 * @throws IOException if an I/O error occurs
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setHighValue,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setHighValue(int),322,325,"/**
 * Sets the third element of the array to the specified value.
 * @param high the new value for the third element
 */","* Sets the highest value that is allowed. This cannot be higher than 255.
     * @param high the highest value for the lookup table",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPageNumber(int),166,169,"/**
* Sets the current page number.
* @param pageNumber the new page number to set
*/","* Set the page number for a remote destination. For an internal destination, call 
     * {@link #setPage(PDPage) setPage(PDPage page)}.
     *
     * @param pageNumber The page for a remote destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(java.lang.Object),217,237,"/**
 * Removes an object from the list.
 * @param o object to be removed
 * @return true if removal is successful, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,remove,org.apache.pdfbox.pdmodel.common.COSArrayList:remove(int),520,529,"/**
* Removes element at specified index.
* @param index position of the element to remove
* @return removed element
* @throws UnsupportedOperationException if list is filtered
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,removeObject,org.apache.pdfbox.cos.COSArray:removeObject(org.apache.pdfbox.cos.COSBase),492,511,"/**
* Removes an object from the list, handling nested COSObjects.
* @param o the object to remove
* @return true if the object was successfully removed, false otherwise
*/","* This will remove an element from the array.
     * This method will also remove a reference to the object.
     *
     * @param o The object to remove.
     * @return <code>true</code> if the object was removed, <code>false</code>
     *  otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,removeUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:removeUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),104,115,"/**
 * Removes a user property from the document.
 * @param userProperty the property to remove
 */","* Removes a user property.
     * 
     * @param userProperty the user property",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeSubject(byte[]),261,268,"/**
 * Removes a subject from the document's metadata.
 * @param subject byte array representing the subject to remove
 */","* removes a subject from the list
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeKeyUsage(java.lang.String),444,451,"/**
 * Removes a key usage extension from the dictionary.
 * @param keyUsageExtension the key usage extension to remove
 */","* Removes a key usage extension
     *
     * @param keyUsageExtension ASCII string that consists of {0, 1, X}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeIssuer(byte[]),499,506,"/**
* Removes an issuer from the document's issuer list.
* @param issuer byte array representing the issuer to remove
*/","* Removes an issuer from the issuers list
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,removeOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:removeOID(byte[]),553,560,"/**
* Removes an OID from the dictionary's OID array.
* @param oid byte array representing the OID to be removed
*/","* removes an OID from the list
     *
     * @param oid Object Identifier of the certificate policy to be removed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,clear,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:clear(),136,141,"/**
 * Clears all entries from both maps.
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,removePossibleOrphanAnnotation,"org.apache.pdfbox.multipdf.Splitter$KCloner:removePossibleOrphanAnnotation(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary)",555,582,"/**
 * Removes orphan annotations from PDF structure tree.
 * @param srcObj source object dictionary
 * @param srcDict source dictionary
 * @param currentPageDict current page dictionary
 * @param dstDict destination dictionary
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,remove,org.apache.pdfbox.pdmodel.common.COSDictionaryMap:remove(java.lang.Object),117,122,"/**
* Removes entry by key from both maps.
* @param key unique identifier for the entry
* @return the value associated with the removed key, or null if not found
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSArray),166,184,"/**
 * Recursively collects entries in a COSArray for incremental updates.
 * @param array the COSArray to process
 * @return true if any entry requires parent update, false otherwise
 */","* Collect all updates made to the given {@link COSArray} and it's contained structures.
     *
     * @param array The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSArray}´s elements changed. A {@link COSArray} shall always be
     * treated as a direct structure, that would require it´s parent to be updated instead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSObject),193,231,"/**
* Recursively collects and processes COS objects.
* @param object the COS object to collect
* @return true if collection is successful, false otherwise
*/","* Collect all updates made to the given {@link COSObject} and it's contained structures.
     *
     * @param object The {@link COSObject} updates shall be collected for.
     * @return Always returns {@code false}. {@link COSObject}s by definition are indirect and shall never cause a
     * parent structure to be updated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,setOriginDocumentState,org.apache.pdfbox.cos.COSUpdateState:setOriginDocumentState(org.apache.pdfbox.cos.COSDocumentState),82,85,"/**
* Sets the origin document state.
* @param originDocumentState new state to be set
*/","* <p>
     * Links the given {@link COSDocumentState} to the {@link #updated} state of the managed {@link #updateInfo}.<br>
     * </p>
     * <p>
     * This shall also initialize {@link #updated} accordingly and will also set the same {@link COSDocumentState} for
     * all possibly contained substructures.
     * </p>
     * <p>
     * Should {@link #originDocumentState} already have been set, by a prior call to this method, this shall deny to
     * overwrite it.
     * </p>
     * <p>
     * {@link COSDocumentState#isAcceptingUpdates()} shall determine, whether updates to {@link #updateInfo} are
     * allowed.
     * </p>
     * <p>
     * As long as no {@link COSDocumentState} is linked to this {@link COSUpdateState}, it shall not accept updates.
     * </p>
     *
     * @param originDocumentState The {@link COSDocumentState} that shall be linked to this {@link COSUpdateState}.
     * @see #originDocumentState
     * @see #updated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,dereferenceChild,org.apache.pdfbox.cos.COSUpdateState:dereferenceChild(org.apache.pdfbox.cos.COSBase),324,330,"/**
* Updates document state for a specific child.
* @param child the child object to update
*/","* This shall {@link #setOriginDocumentState(COSDocumentState, boolean)} for the dereferenced child,
     * initializing its {@link #originDocumentState}.
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo} and will never change
     * the child´s {@link #updated} state.
     * </p>
     *
     * @param child The child, that has been dereferenced.
     * @see #setOriginDocumentState(COSDocumentState, boolean)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getUpperLimit(),334,343,"/**
* Retrieves the upper limit from a COSArray.
* @return String representation of the upper limit or null if not found
*/","* Get the highest value for a key in the name map.
     *
     * @return The highest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getLowerLimit(),368,377,"/**
* Retrieves the lower limit from a COSArray.
* @return String representation of the lower limit or null if not found
*/","* Get the lowest value for a key in the name map.
     *
     * @return The lowest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String),144,147,"/**
 * Retrieves the value of a named attribute as a string.
 * @param name the attribute key to look up
 * @return the string value of the attribute, or null if not found
 */","* Gets a name value.
     * 
     * @param name the attribute name
     * @return the name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getRenderingIntent(),334,345,"/**
* Retrieves rendering intent from dictionary.
* @return RenderingIntent object or null if not found
*/","* This will get the rendering intent.
     *
     * @return null or the RI value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,getN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:getN(),54,57,"/**
 * Retrieves the name associated with key ""N"".
 * @return String representation of the name or null if not found
 */","* This will get the name of the action to be performed.
     *
     * @return The name of the action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getNameAsString,"org.apache.pdfbox.cos.COSDictionary:getNameAsString(java.lang.String,java.lang.String)",674,677,"/**
 * Retrieves name as string with default.
 * @param key PDF key to fetch
 * @param defaultValue default value if key not found
 * @return name as string or default value
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineStyle(),144,147,"/**
* Retrieves guideline style as a string.
* @return Style of the guideline or null if not found
*/","* Get the style for the guideline.  The default is ""S"" for solid.
     *
     * @return The guideline style.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,getIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:getIcon(),103,106,"/**
 * Retrieves the icon name of the annotation.
 * @return The icon name as a string or null if not found.
 */","* This will retrieve the icon (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the PDAnnotationText.NAME_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getAttachmentName(),104,107,"/**
* Retrieves attachment name.
* @return Name of the attachment as a string
*/","* This is the name used to draw the type of attachment. See the ATTACHMENT_NAME_XXX constants.
     *
     * @return The name that describes the visual cue for the attachment.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getLineEndingStyle(),230,233,"/**
 * Retrieves the line ending style of an annotation.
 * @return the line ending style as a string
 */","* This will retrieve the line ending style.
     *
     * @return The line ending style, possible values shown in the LE_ constants section, LE_NONE if
     * missing, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getHighlightMode(),160,163,"/**
 * Retrieves the highlight mode.
 * @return Highlight mode as a string or default value if not set.
 */","* Set the highlight mode for when the mouse is depressed. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @return The string representation of the highlight mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getReplyType(),231,234,"/**
 * Retrieves the reply type from the COS object.
 * @return reply type as a string or default value if not found
 */","* This will retrieve the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for
     * the available values.
     *
     * @return the relationship.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:getName(),131,134,"/**
 * Retrieves the name from the COS object.
 * @return The name as a string or an empty string if not found.
 */","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * DRAFT.
     *
     * @return The name of this rubber stamp, see the NAME_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getName(),178,181,"/**
 * Retrieves the name from the COS object.
 * @return The name as a string or null if not found.
 */","* This will retrieve the name (and hence appearance, AP taking precedence) For this annotation. The default is
     * NOTE.
     *
     * @return The name of this annotation, see the NAME_XXX constants.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getHighlightingMode(),77,80,"/**
 * Retrieves the highlighting mode.
 * @return Highlighting mode as a string or default ""I"" if not set
 */","* Returns the highlighting mode. Default value: <code>I</code>
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @return the highlighting mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getStyle(),150,153,"/**
 * Retrieves the style of the object.
 * @return Style as a string or default value if not set
 */","* This will retrieve the border style, see the STYLE_* constants for valid values.
     *
     * @return the style of the border",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,getType,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:getType(),67,70,"/**
 * Retrieves the type of the COS object.
 * @return The type as a string, defaulting to ""ExData"" if not specified.
 */","* returns the type of the external data dictionary. It must be ""ExData"", if present
     * 
     * @return the type of the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,getSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:getSubtype(),82,86,"/**
 * Retrieves the subtype of the measure.
 * @return Subtype as a string, or default value if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getStyle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getStyle(),70,73,"/**
 * Retrieves the transition style as a string.
 * @return Transition style name or default if not specified
 */","* @return the style for this transition
     * @see PDTransitionStyle#valueOf(String)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getDimension(),80,83,"/**
 * Retrieves the dimension of the transition effect.
 * @return String representing the dimension or default if not specified
 */","* @return The dimension in which the specified transition effect shall occur or the default
     * {@link PDTransitionDimension#H} if no dimension is found.
     * @see PDTransitionDimension",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,getMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:getMotion(),101,104,"/**
* Retrieves motion transition effect.
* @return motion effect as string or null if not set
*/","* @return The direction of motion for the specified transition effect or the default {@link PDTransitionMotion#I}
     * if no motion is found.
     * @see PDTransitionMotion",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getNonFullScreenPageMode(),287,291,"/**
 * Retrieves non-full screen page mode preference.
 * @return page mode as a string or default if not set
 */","* Get the non full screen page mode preference.
     *
     * @return the non full screen page mode preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getReadingDirection(),308,311,"/**
* Retrieves the reading direction preference.
* @return Reading direction as a string (e.g., ""L2R"" for left-to-right)
*/","* Get the reading direction preference.
     *
     * @return the reading direction preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewArea(),328,331,"/**
* Retrieves the view area setting.
* @return String representation of the view area or ""CropBox"" if not set
*/","* Get the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @return the ViewArea preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getViewClip(),348,351,"/**
 * Retrieves the view clip setting.
 * @return string representation of the view clip or default boundary if not set
 */","* Get the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @return the ViewClip preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintArea(),368,371,"/**
* Retrieves print area preference.
* @return String representing print area or default boundary if not set
*/","* Get the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @return the PrintArea preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintClip(),388,391,"/**
 * Retrieves the print clip setting.
 * @return String representation of the print clip or default boundary if not set.
 */","* Get the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @return the PrintClip preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,getPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:getPrintScaling(),428,431,"/**
 * Retrieves print scaling setting.
 * @return current print scaling value or default if not set
 */","* Get the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @return the PrintScaling preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,checkXRefOffset,org.apache.pdfbox.pdfparser.XrefParser:checkXRefOffset(long),295,316,"/**
 * Checks and validates the cross-reference table offset.
 * @param startXRefOffset initial offset to check
 * @return validated offset or -1 if invalid
 * @throws IOException if an I/O error occurs
 */","* Check if the cross reference table/stream can be found at the current offset.
     * 
     * @param startXRefOffset
     * @return the revised offset
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,isEmpty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:isEmpty(),143,147,"/**
* Checks if the collection has only one entry which is the owner.
* @return true if empty under specific conditions, false otherwise
*/","* Detects whether there are no properties in the attribute object.
     * 
     * @return <code>true</code> if the attribute object is empty,
     *  <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:toString(),193,197,"/**
 * Returns a string representation of the object.
 * @return String in the format ""O=ownerName""
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getParent(),96,100,"/**
 * Retrieves the parent structure node.
 * @return PDStructureNode representing the parent, or null if none exists
 */","* Returns the parent in the structure hierarchy (P).
     * 
     * @return the parent in the structure hierarchy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,createObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:createObject(org.apache.pdfbox.cos.COSBase),364,390,"/**
 * Creates an object from a PDF COSBase element.
 * @param kid the COSBase element to process
 * @return created object or integer if applicable, otherwise null
 */","* Creates an object for a kid of this structure node.
     * The type of object depends on the type of the kid. It can be
     * <ul>
     * <li>a {@link PDStructureElement},</li>
     * <li>a {@link PDObjectReference},</li>
     * <li>a {@link PDMarkedContentReference},</li>
     * <li>an {@link Integer}</li>
     * </ul>
     * 
     * @param kid the kid
     * @return the object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,<init>,org.apache.pdfbox.pdmodel.encryption.PDEncryption:<init>(org.apache.pdfbox.cos.COSDictionary),93,97,"/**
* Initializes PDEncryption with a COSDictionary.
* @param dictionary PDF encryption settings
*/","* creates a new encryption dictionary from the low level dictionary provided.
     * @param dictionary a COS encryption dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getSecurityHandler,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getSecurityHandler(),104,112,"/**
* Retrieves the security handler.
* @return SecurityHandler instance for protection policies
* @throws IOException if no security handler is available
*/","* Returns the security handler specified in the dictionary's Filter entry.
     * @return a security handler instance
     * @throws IOException if there is no security handler available which matches the Filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getAnnotations(),437,451,"/**
* Retrieves annotations from an FDF document.
* @return List of FDFAnnotation objects or null if none exist
* @throws IOException if there's an I/O error reading the annotations
*/","* This will get the list of FDF Annotations. This will return a list of FDFAnnotation objects or null if the entry
     * is not set.
     *
     * @return A list of FDF annotations.
     *
     * @throws IOException If there is an error creating the annotation list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getName,org.apache.pdfbox.pdmodel.font.PDCIDFont:getName(),210,214,"/**
 * Returns the base font name.
 * @return the name of the base font
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,isCharSetMatch,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:isCharSetMatch(org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo,org.apache.pdfbox.pdmodel.font.FontInfo)",666,710,"/**
* Checks if character set matches between CIDSystemInfo and FontInfo.
* @param cidSystemInfo CIDSystemInfo object to compare
* @param info FontInfo object containing character set information
* @return true if character sets match, false otherwise
*/","* Returns true if the character set described by CIDSystemInfo is present in the given font.
     * Only applies to Adobe-GB1, Adobe-CNS1, Adobe-Japan1, Adobe-Korea1, as per the PDF spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getName,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getName(),323,327,"/**
 * Returns the base font name.
 * @return Name of the base font
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType0Font:getName(),613,617,"/**
 * Returns the base font name.
 * @return name of the base font
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toString,org.apache.pdfbox.pdmodel.font.PDType0Font:toString(),672,681,"/**
* Returns a string representation of the font.
* @return String in format ""ClassName/DescendantClassName, PostScript name: BaseFontName""
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getName,org.apache.pdfbox.pdmodel.font.PDType1CFont:getName(),248,252,"/**
 * Returns the base font name.
 * @return base font name as a String
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getName,org.apache.pdfbox.pdmodel.font.PDType1Font:getName(),531,535,"/**
 * Returns the base font name.
 * @return Name of the base font as a string.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,isNChannel,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:isNChannel(),437,440,"/**
 * Checks if the channel is an N-channel.
 * @return true if attributes are not null and it's an N-channel, false otherwise
 */","* Returns true if this color space has the NChannel subtype.
     * @return true if subtype is NChannel",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getOpenAction(),284,299,"/**
 * Retrieves the open action for a PDF document.
 * @return PDDestinationOrAction object representing the open action or null if none
 * @throws IOException if an I/O error occurs while accessing the PDF
 */","* Get the Document Open Action for this object.
     *
     * @return The action to perform when the document is opened.
     * @throws IOException If there is an error creating the destination or action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDJavascriptNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),50,58,"/**
* Converts a COSBase to a PDActionJavaScript.
* @param base the COSBase to convert
* @return PDActionJavaScript object
* @throws IOException if conversion fails or input is not a COSDictionary
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getAction,org.apache.pdfbox.pdmodel.fdf.FDFField:getAction(),702,705,"/**
 * Retrieves an action from a PDF field.
 * @return PDAction object or null if no action is defined
 */","* This will get the action that is associated with this field.
     *
     * @return The 'A' entry in the FDF field dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getDoc(),140,165,"/**
* Retrieves JavaScript actions from document dictionary.
* @return Map of named JavaScript actions or null if not present
*/","* Returns the dictionary's ""Doc"" entry, that is, a map of key value pairs to be added to the document's JavaScript
     * name tree.
     * 
     * @return Map of named ""JavaScript"" dictionaries.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:getF(),66,69,"/**
 * Retrieves an action from the ""F"" entry in the actions dictionary.
 * @return PDAction object or null if not found
 */","* Get the F action.
     *
     * @return The F action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getE(),69,73,"/**
* Retrieves an action associated with key 'E'.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @return The E entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getX(),92,96,"/**
* Retrieves an action associated with key 'X'.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @return The X entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getD(),116,120,"/**
* Retrieves the D action from the actions dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @return The d entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getU(),141,145,"/**
* Retrieves the U action from the dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @return The U entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getFo(),165,169,"/**
 * Retrieves the ""FO"" action from a PDF document.
 * @return PDAction object or null if not found
 */","* This will get an action to be performed when the annotation
     * receives the input focus.
     *
     * @return The Fo entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getBl(),189,193,"/**
* Retrieves the ""BL"" action from PDF document.
* @return PDAction object for ""BL"" or null if not present
*/","* This will get an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @return The Bl entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPO(),215,219,"/**
* Retrieves and creates an action from the PO dictionary.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @return The PO entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPC(),241,245,"/**
* Retrieves PC action from document.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @return The PC entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPV(),265,269,"/**
* Retrieves an action associated with a PDF annotation.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @return The PV entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,getPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:getPI(),288,292,"/**
 * Retrieves the PI action from the document.
 * @return PDAction object representing the PI action or null if not present
 */","* This will get an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @return The PI entry of annotation's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWC(),70,74,"/**
* Retrieves web capture action.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @return The WC entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWS(),95,99,"/**
* Retrieves the web search action.
* @return PDAction object representing the web search or null if not present
*/","* This will get a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @return The WS entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDS(),120,124,"/**
* Retrieves DS action from document.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @return The DS entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getWP(),145,149,"/**
* Retrieves WP action from dictionary.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @return The WP entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,getDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:getDP(),170,174,"/**
* Retrieves the DP action from the document.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @return The DP entry of document catalog's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getK(),71,75,"/**
* Retrieves action associated with key 'K'.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @return The K entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getF(),97,101,"/**
* Retrieves an action associated with key 'F'.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @return The F entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getV(),123,127,"/**
* Retrieves and creates a PDF action from the 'V' dictionary entry.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @return The V entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:getC(),151,155,"/**
* Retrieves action dictionary and creates PDAction.
* @return PDAction object or null if not found
*/","* This will get a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @return The C entry of form field's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getO(),71,75,"/**
* Retrieves an action from the document's O entry.
* @return PDAction object or null if not found
*/","* This will get an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @return The O entry of page object's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,getC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:getC(),97,101,"/**
 * Retrieves an action from the dictionary.
 * @return PDAction object or null if not found
 */","* This will get an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @return The C entry of page object's additional actions dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:getAction(),92,96,"/**
* Retrieves an action from the PDF object.
* @return PDAction instance or null if not present
*/","* Get the action to be performed when this annotation is to be activated. Either this or the
     * destination entry should be set, but not both.
     *
     * @return The action to be performed when this annotation is activated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,getAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:getAction(),142,146,"/**
* Retrieves an action from the PDF object.
* @return PDAction object or null if not found
*/","* Get the action to be performed when this annotation is to be activated.
     *
     * @return The action to be performed when this annotation is activated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getAction(),281,284,"/**
* Retrieves an action from the PDF object.
* @return PDAction object created from the associated COS dictionary
*/","* Get the action of this node.
     *
     * @return The action of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldType,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldType(),87,96,"/**
* Retrieves the field type of a PDF form element.
* @return the field type as a String, or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getPropertyStringValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getPropertyStringValue(java.lang.String),80,83,"/**
 * Retrieves string value of a property.
 * @param propertyKey key of the property to retrieve
 * @return string value of the property or null if not found
 */","* Return the properties String value.
     * <p>
     * Allows to retrieve the
     * low level date for validation purposes.
     * </p> 
     * 
     * @param propertyKey the dictionaries key
     * @return the properties value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCustomMetadataValue,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCustomMetadataValue(java.lang.String),280,283,"/**
 * Retrieves custom metadata value by field name.
 * @param fieldName name of the metadata field
 * @return value of the specified metadata field or null if not found
 */","*  This will get the value of a custom metadata information field for the document.
     *  This will return null if one is not found.
     *
     * @param fieldName Name of custom metadata field from pdf document.
     *
     * @return String Value of metadata field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getString(java.lang.String),78,81,"/**
 * Retrieves string value by key.
 * @param name key for the string value
 * @return string value associated with the key
 */","* Gets a string attribute value.
     * 
     * @param name the attribute name
     * @return the string attribute value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,getBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:getBase(),70,73,"/**
 * Retrieves the base string from the COS object.
 * @return Base string or null if not found
 */","* This will get the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @return The URI entry of the specific URI dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getVersion(),131,134,"/**
 * Retrieves the version string from the dictionary.
 * @return Version string associated with ""REx"" key
 */","* A text string indicating the version of the application implementation, as described by the
     * <code>/Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     *
     * @return the application implementation version",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getUnits(),109,112,"/**
 * Retrieves units from COS object.
 * @return units as string or null if not present
 */","* This will return the label for the units.
     * 
     * @return the label for the units",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getString,"org.apache.pdfbox.cos.COSDictionary:getString(java.lang.String,java.lang.String)",735,738,"/**
 * Retrieves string value by key with default.
 * @param key unique identifier for the string
 * @param defaultValue value to return if key not found
 * @return string associated with key or default value
 */","* This is a convenience method that will get the dictionary object that is expected to be a
     * string.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",780,784,"/**
* Retrieves a string value from an embedded dictionary.
* @param embedded name of the embedded dictionary
* @param key key for the desired string value
* @param defaultValue default value if key is not found
* @return string value or default if key is missing
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,getOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:getOperation(),122,125,"/**
 * Retrieves operation type from parameters.
 * @return operation string or default ""Open"" if not specified
 */","* Get the operation to perform on the file.  This method will not return null,
     * OPERATION_OPEN is the default.
     *
     * @return The operation to perform for the file.
     * @see PDWindowsLaunchParams#OPERATION_OPEN
     * @see PDWindowsLaunchParams#OPERATION_PRINT",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getDefaultAppearance(),500,503,"/**
 * Retrieves default appearance string.
 * @return default appearance value from dictionary or empty string if not found
 */","* Get the default appearance.
     * 
     * @return the DA element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getFilename,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getFilename(),101,121,"/**
* Retrieves the filename using various file retrieval methods.
* @return the filename as a String, or null if all methods fail
*/","* <p>Preferred method for getting the filename.
     * It will determinate the recommended file name.</p>
     * <p>First of all we try to get the unicode filename if it exist.
     * If it doesn't exist we take a look at the DOS, MAC UNIX filenames.
     * If no one exist the required F entry will be returned.</p>
     *
     * @return The preferred file name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,beginMarkedContentSequence,"org.apache.pdfbox.text.PDFTextStripper:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",862,874,"/**
* Starts a marked content sequence with specified tag and properties.
* @param tag the name of the marked content
* @param properties dictionary containing additional attributes
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,endMarkedContentSequence,org.apache.pdfbox.text.PDFTextStripper:endMarkedContentSequence(),876,889,"/**
* Ends the current marked content sequence.
* Pops the last marked content from stack and resets actual text if necessary.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,probablyBarcodeFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:probablyBarcodeFont(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),646,660,"/**
* Checks if a font descriptor likely represents a barcode font.
* @param fontDescriptor the PDFontDescriptor to check
* @return true if the font family or name indicates a barcode, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,toString,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:toString(),146,150,"/**
 * Returns string representation of the object including its name.
 * @return concatenated string with superclass and name
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,hasGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:hasGroup(java.lang.String),258,269,"/**
* Checks if a group exists by name.
* @param groupName the name of the group to check
* @return true if the group exists, false otherwise
*/","* Indicates whether a particular optional content group is found in the PDF file.
     * @param groupName the group name
     * @return true if the group exists, false otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,getFullyQualifiedName,org.apache.pdfbox.pdmodel.interactive.form.PDField:getFullyQualifiedName(),406,422,"/**
 * Constructs the fully qualified name.
 * @return String representing the fully qualified name
 */","* Returns the fully qualified name of the field, which is a concatenation of the names of all the parents fields.
     * 
     * @return the name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getOptionsExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getOptionsExportValues(),209,212,"/**
 * Retrieves export values of options.
 * @return List of option export values
 */","* This will get the export values from the options.
     * 
     * <p>
     * For options with an array of text strings the display value and export value
     * are the same.<br>
     * For options with an array of two-element arrays the export value is the 
     * first entry in the two-element array.
     * </p>
     *
     * @return List containing all export values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getValueAsString(),223,227,"/**
 * Returns the value as a string.
 * @return the value converted to a string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,getValueAsString,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:getValueAsString(),465,469,"/**
 * Converts value to string representation.
 * @return String representation of the value array
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,decodeRow,org.apache.pdfbox.filter.CCITTFaxDecoderStream:decodeRow(),307,372,"/**
 * Decodes a TIFF row based on compression type.
 * Throws IOException if decoding fails or sum of run-lengths doesn't match scan line width.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,encodeRow,org.apache.pdfbox.filter.CCITTFaxEncoderStream:encodeRow(),99,127,"/**
* Encodes a row of data, updating internal state.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword234(byte[],byte[],byte[],int,byte[],int,int,boolean)",608,617,"/**
* Checks if the provided password matches the owner's password.
* @param ownerPassword encrypted owner password
* @param user user-specific data
* @param owner owner-specific data
* @param permissions access permissions
* @param id document identifier
* @param encRevision encryption revision level
* @param keyLengthInBytes length of the encryption key in bytes
* @param encryptMetadata flag indicating if metadata is encrypted
* @return true if passwords match, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType7.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
* Generates a patch from given points and colors.
* @param points array of 2D points defining the patch
* @param color 2D array representing colors at each point
* @return Patch object created using TensorPatch
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/Parser.java,parse,"org.apache.pdfbox.pdmodel.common.function.type4.Parser:parse(java.lang.CharSequence,org.apache.pdfbox.pdmodel.common.function.type4.Parser$SyntaxHandler)",44,48,"/**
* Parses input using provided syntax handler.
* @param input text to be parsed
* @param handler processes parsing events
*/","* Parses a Type 4 function and sends the syntactic elements to the given
     * syntax handler.
     * @param input the text source
     * @param handler the syntax handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptData,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)",216,238,"/**
* Encrypts or decrypts data using specified algorithms.
* @param objectNumber unique identifier for the encryption context
* @param genNumber generation number for key calculation
* @param data input stream containing the data to be processed
* @param output output stream for the processed data
* @param decrypt true if decrypting, false if encrypting
* @throws IOException if an I/O error occurs during processing
*/","* Encrypt or decrypt a set of data.
     *
     * @param objectNumber The data object number.
     * @param genNumber The data generation number.
     * @param data The data to encrypt.
     * @param output The output to write the encrypted data to.
     * @param decrypt true to decrypt the data, false to encrypt it.
     *
     * @throws IOException If there is an error reading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,computeEncryptedKey,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)",722,735,"/**
 * Computes encrypted key based on encryption revision.
 * @param password user or owner password
 * @param o owner hash
 * @param u user hash
 * @param oe owner encryption key
 * @param ue user encryption key
 * @param permissions access permissions
 * @param id document identifier
 * @param encRevision encryption revision
 * @param keyLengthInBytes desired key length in bytes
 * @param encryptMetadata flag to encrypt metadata
 * @param isOwnerPassword indicates if owner password is used
 * @return encrypted key as byte array
 * @throws IOException on encryption failure
 */","* Compute the encryption key.
     *
     * @param password The password to compute the encrypted key.
     * @param o The O entry of the encryption dictionary.
     * @param u The U entry of the encryption dictionary.
     * @param oe The OE entry of the encryption dictionary.
     * @param ue The UE entry of the encryption dictionary.
     * @param permissions The permissions for the document.
     * @param id The document id.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     * @param isOwnerPassword whether the password given is the owner password (for revision 6)
     *
     * @return The encrypted key bytes.
     *
     * @throws IOException If there is an error with encryption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",1002,1019,"/**
* Checks if the provided password matches user or owner permissions.
* @param password byte array of the password to check
* @param user byte array representing user data
* @param owner byte array representing owner data
* @param permissions permission level for the user
* @param id unique identifier for the document
* @param encRevision encryption revision version
* @param keyLengthInBytes length of the encryption key in bytes
* @param encryptMetadata flag indicating if metadata should be encrypted
* @return true if password matches, false otherwise
* @throws IOException if unknown encryption revision is encountered
*/","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata.
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFont(org.apache.pdfbox.pdmodel.font.FontFormat,java.lang.String)",399,464,"/**
* Finds a FontBoxFont based on format and PostScript name.
* @param format font format type
* @param postScriptName unique font identifier
* @return FontBoxFont object or null if not found
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType6.java,generatePatch,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6:generatePatch(java.awt.geom.Point2D[],float[][])",55,59,"/**
* Generates a CoonsPatch from given points and colors.
* @param points array of control points defining the patch shape
* @param color  2D array representing color values across the patch
* @return Patch object created using CoonsPatch algorithm
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,normalize,org.apache.pdfbox.text.PDFTextStripper:normalize(java.util.List),1878,1894,"/**
 * Normalizes a list of LineItem objects into WordWithTextPositions.
 * @param line list of LineItem to be processed
 * @return List of WordWithTextPositions representing normalized words
 */","* Normalize the given list of TextPositions.
     * 
     * @param line list of TextPositions
     * @return a list of strings, one string for every word",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/DateConverter.java,toCalendar,org.apache.pdfbox.util.DateConverter:toCalendar(org.apache.pdfbox.cos.COSString),701,708,"/**
* Converts COSString to Calendar.
* @param text COSString containing date information
* @return Calendar object or null if input is null
*/","* Returns the Calendar for a given COS string containing a date,
     * or {@code null} if it cannot be parsed.
     *
     * The returned value will have 0 for DST_OFFSET.
     * 
     * @param text A COS string containing a date.
     * @return The Calendar that the text string represents, or {@code null} if it cannot be parsed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Begins marked content with a specified tag.
* @param tag COSName representing the content tag
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Begins marked content with specified tag.
* @param tag COSName representing the content tag
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Begins marked content with a specified tag.
* @param tag COSName representing the content tag
* @throws IOException if an I/O error occurs during writing
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName),1316,1320,"/**
* Begins marked content with a specified tag.
* @param tag COSName representing the content tag
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
 * Begins marked content sequence.
 * @param tag COSName representing the content tag
 * @param mcid Marked content identifier, must not be negative
 * @throws IOException if an I/O error occurs
 */","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Begins marked content sequence.
* @param tag content tag name
* @param mcid unique mark identifier, must be non-negative
* @throws IOException if writing fails
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Begins marked content with a tag and MCID.
* @param tag COSName representing the content tag
* @param mcid Marked content identifier, must not be negative
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,int)",1329,1338,"/**
* Begins marked content with a tag and ID.
* @param tag the COSName tag for marking content
* @param mcid the marked content identifier, must be non-negative
*/","* Begin a marked content sequence with a reference to the marked content identifier (MCID).
     *
     * @param tag the tag to be added to the content stream
     * @param mcid the marked content identifier (MCID)
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Sets marked content point in PDF.
* @param tag COSName representing the mark
* @throws IOException if I/O error occurs
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Writes marked content point with specified tag.
* @param tag COSName representing the content tag
* @throws IOException if an I/O error occurs
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Sets marked content point with specified tag.
* @param tag COSName representing the content tag
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPoint,org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPoint(org.apache.pdfbox.cos.COSName),1381,1385,"/**
* Sets marked content point in PDF.
* @param tag COSName representing the tag
*/","* set a marked content point.
     *
     * @param tag the tag to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.cos.COSBase),160,222,"/**
 * Writes PDF object to output.
 * @param o PDF object to write
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSString,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSString(java.io.OutputStream,org.apache.pdfbox.cos.COSString)",258,262,"/**
 * Writes a COS string to an output stream.
 * @param output the OutputStream to write to
 * @param cosString the COSString to write
 */","* Write the given {@link COSString} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosString The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextInternal,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextInternal(java.lang.String),276,325,"/**
* Shows text using the current font and mode.
* @param text string to display
* @throws IOException if an I/O error occurs
*/","* Outputs a string using the correct encoding and subsetting as required.
     *
     * @param text The Unicode text to show.
     * 
     * @throws IOException If an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,<init>,org.apache.pdfbox.rendering.PageDrawer:<init>(org.apache.pdfbox.rendering.PageDrawerParameters),190,199,"/**
* Initializes a PageDrawer with specified parameters.
* @param parameters configuration for page drawing
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor.
     *
     * @param parameters Parameters for page drawing.
     * @throws IOException If there is an error loading properties from the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,findNamedDestinationPage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:findNamedDestinationPage(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),348,372,"/**
* Finds the page destination for a named destination.
* @param namedDest the named destination to find
* @return PDPageDestination object or null if not found
* @throws IOException if an I/O error occurs
*/","* Find the page destination from a named destination.
     * @param namedDest the named destination.
     * @return a PDPageDestination object or null if not found.
     * @throws IOException if there is an error creating the PDPageDestination object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getColor(),794,797,"/**
 * Retrieves the color associated with 'C' key.
 * @return PDColor object or null if not found
 */","* This will retrieve the color used in drawing various elements. As of PDF 1.6 these are :
     * <ul>
     * <li>Background of icon when closed</li>
     * <li>Title bar of popup window</li>
     * <li>Border of a link annotation</li>
     * </ul>
     *
     * @return Color object representing the colour
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBorderColour(),86,89,"/**
 * Retrieves the border color of a PDF element.
 * @return PDColor object representing the border color
 */","* This will retrieve the border color.
     * 
     * @return the border color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getBackground(),106,109,"/**
 * Retrieves the background color.
 * @return PDColor representing the background
 */","* This will retrieve the background color.
     * 
     * @return the background color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSString,org.apache.pdfbox.pdfparser.BaseParser:parseCOSString(),528,679,"/**
* Parses a COS string from the input source.
* @return COSString object representing the parsed string
* @throws IOException if parsing fails due to invalid format or I/O error
*/","* This will parse a PDF string.
     *
     * @return The parsed PDF string.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(java.io.InputStream),337,344,"/**
* Extracts contents from a PDF file using specified byte range.
* @param pdfFile input stream of the PDF file
* @return byte array containing extracted contents
*/","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as InputStream. It will be closed in this method.
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getContents(byte[]),354,361,"/**
* Extracts contents from a PDF file.
* @param pdfFile PDF file as byte array
* @return extracted contents as byte array
* @throws IOException if an I/O error occurs
*/","* Will return the embedded signature between the byterange gap.
     *
     * @param pdfFile The signed pdf file as byte array
     * @return a byte array containing the signature
     * @throws IOException if the pdfFile can't be read
     * @throws IndexOutOfBoundsException if the byterange array is not long enough",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDImmutableRectangle.java,<init>,"org.apache.pdfbox.pdmodel.common.PDImmutableRectangle:<init>(float,float)",31,34,"/**
 * Constructs an immutable rectangle.
 * @param width  the width of the rectangle
 * @param height the height of the rectangle
 */","* Constructor for immutable rectangle.
     *
     * @param width The width of the rectangle.
     * @param height The height of the rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getBBox,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getBBox(),153,156,"/**
 * Retrieves the bounding box rectangle.
 * @return PDRectangle representing the bounding box
 */","* Returns the <code>BBox</code> entry (bounding box) for the
     * appearance stream form XObject.
     *
     * @return Bounding box for appearance stream form XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument),43,48,"/**
* Initializes metadata for a PDF document.
* @param document the PDF document to associate with this metadata
*/","* This will create a new PDMetadata object with the /Type and /Subtype entries for a document
     * level metadata object.
     *
     * @param document The document that the stream will be part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument),40,44,"/**
* Creates a new embedded file in a PDF document.
* @param document the parent PDF document
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.PDXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSName)",125,130,"/**
* Initializes a PDXObject with a document and subtype.
* @param document the PDF document to associate with
* @param subtype the XObject subtype
*/","* Creates a new XObject of the given subtype for writing.
     * @param document The document in which to create the XObject.
     * @param subtype The subtype of the new XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,102,"/**
 * Constructs a new PDImageXObject from a given PDDocument.
 * @param document The PDDocument to create the image from.
 */","* Creates an Image XObject in the given document. This constructor is for internal PDFBox use
     * and is not for PDF generation. Users who want to create images should look at {@link #createFromFileByExtension(File, PDDocument)
     * }.
     *
     * @param document the current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createHolderFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createHolderFormStream(org.apache.pdfbox.pdmodel.PDDocument),205,211,"/**
* Creates and sets the holder form stream in a PDF document.
* @param template the PDDocument to modify
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createInnerFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createInnerFormStream(org.apache.pdfbox.pdmodel.PDDocument),251,258,"/**
* Creates an inner form stream for a PDF template.
* @param template the PDDocument to which the inner form stream is added
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageFormStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageFormStream(org.apache.pdfbox.pdmodel.PDDocument),290,296,"/**
 * Creates an image form stream from a PDF document.
 * @param template the source PDF document to create the stream from
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",94,97,"/**
* Constructs a PDStream from a document and input stream.
* @param doc PDDocument to associate with the stream
* @param input InputStream containing the stream data
* @throws IOException if an I/O error occurs
*/","* Constructor. Reads all data from the input stream and embeds it into the document. This
     * method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",108,111,"/**
* Constructs a PDStream with a document, input stream, and filter.
* @param doc PDDocument to associate the stream with
* @param input InputStream containing data for the stream
* @param filter COSName representing the filter applied to the stream
* @throws IOException if there's an error processing the input stream
*/","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filter applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filter Filter to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,<init>,"org.apache.pdfbox.pdmodel.common.PDStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSArray)",122,125,"/**
* Constructs a PDStream with document, input stream, and filters.
* @param doc PDDocument to associate the stream with
* @param input InputStream containing the stream data
* @param filters COSArray of filters to apply
*/","* Constructor. Reads all data from the input stream and embeds it into the document with the
     * given filters applied. This method closes the InputStream.
     *
     * @param doc The document that will hold the stream.
     * @param input The stream parameter.
     * @param filters Filters to apply to the stream.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,<init>,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSBase,int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",118,130,"/**
 * Constructs an image object from a document and input stream.
 * @param document the PDF document
 * @param encodedStream the image data stream
 * @param cosFilter the compression filter
 * @param width the image width in pixels
 * @param height the image height in pixels
 * @param bitsPerComponent bits per color component
 * @param initColorSpace initial color space for the image
 * @throws IOException if an I/O error occurs
 */","* Creates an Image XObject in the given document using the given filtered stream. This
     * constructor is for internal PDFBox use and is not for PDF generation. Users who want to
     * create images should look at {@link #createFromFileByExtension(File, PDDocument) }.
     *
     * @param document the current document
     * @param encodedStream an encoded stream of image data
     * @param cosFilter the filter or a COSArray of filters
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @throws IOException if there is an error creating the XObject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSOutputStream.java,close,org.apache.pdfbox.cos.COSOutputStream:close(),104,153,"/**
* Closes the stream, applying filters in reverse order.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:<init>(),355,358,"/**
* Constructs a new PDLayoutAttributeObject with OWNER_LAYOUT as owner.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDListAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDListAttributeObject:<init>(),78,81,"/**
 * Constructs a new PDListAttributeObject with OWNER_LIST as the owner.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDPrintFieldAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDPrintFieldAttributeObject:<init>(),71,74,"/**
 * Constructs a new PDPrintFieldAttributeObject with OWNER_PRINT_FIELD as owner.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDTableAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDTableAttributeObject:<init>(),57,60,"/**
 * Constructs a PDTableAttributeObject and sets its owner to OWNER_TABLE.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,create,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:create(org.apache.pdfbox.cos.COSDictionary),63,93,"/**
* Creates an attribute object based on the dictionary's owner.
* @param dictionary COSDictionary containing attribute data
* @return PDAttributeObject instance or default if no match found
*/","* Creates an attribute object.
     * 
     * @param dictionary the dictionary
     * @return the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isValidAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isValidAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),297,313,"/**
* Validates an appearance stream.
* @param appearance the PDAppearanceEntry to validate
* @return true if valid, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getNormalAppearanceStream(),366,390,"/**
* Retrieves the normal appearance stream.
* @return PDAppearanceStream object or null if not available
*/","* Returns the appearance stream for this annotation, if any. The annotation state is taken into account, if
     * present.
     * 
     * @return the appearance stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValueForWidget,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValueForWidget(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),351,370,"/**
 * Retrieves the on value for a widget.
 * @param widget PDF annotation widget
 * @return On value as a string or empty if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:getOnValue(),100,121,"/**
* Retrieves the ON value from the first annotation widget.
* @return The name of the ON value or an empty string if not found
*/","* Get the value which sets the check box to the On state.
     * 
     * <p>The On value should be 'Yes' but other values are possible
     * so we need to look for that. On the other hand the Off value shall
     * always be 'Off'. If not set or not part of the normal appearance keys
     * 'Off' is the default</p>
     *
     * @return the value setting the check box to the On state. 
     *          If an empty string is returned there is no appearance definition.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getGroup,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getGroup(),149,165,"/**
* Retrieves the transparency group.
* @return PDTransparencyGroup object or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the G entry of the soft mask object
     * 
     * @return form containing the transparency group
     * @throws IOException if the group could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,scanFonts,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:scanFonts(java.util.List),365,386,"/**
* Scans a list of font files and adds them based on their type.
* @param files List of File objects representing font files
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,<init>,org.apache.pdfbox.pdfparser.COSParser:<init>(org.apache.pdfbox.io.RandomAccessRead),150,153,"/**
* Initializes a COSParser with a given source.
* @param source RandomAccessRead object containing PDF data
*/","* Default constructor.
     *
     * @param source input representing the pdf.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",74,78,"/**
* Initializes a PDF parser with decryption details.
* @param source input stream of the PDF file
* @param decryptionPassword password for decrypting the PDF
* @param keyStore InputStream containing the keystore data
* @param alias alias for the keystore entry
* @throws IOException if an I/O error occurs
*/","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @param keyStore key store to be used for decryption when using public key security 
     * @param alias alias to be used for decryption when using public key security
     *
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:<init>(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),45,48,"/**
* Creates a content stream for an appearance.
* @param appearance PDF appearance object
* @throws IOException if there's an I/O error
*/","* Create a new appearance stream.
     *
     * @param appearance
     *            The appearance stream to write to.
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDFormContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDFormContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),35,38,"/**
* Initializes a content stream for a PDF form.
* @param form PDF form object to write to
* @throws IOException if an I/O error occurs
*/","* Create a new form XObject content stream.
     *
     * @param form The form XObject stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",209,212,"/**
 * Initializes a content stream for an appearance.
 * @param doc PDF document
 * @param appearance appearance stream to write to
 * @throws IOException if there is an error creating the output stream
 */","* Create a new appearance stream. Note that this is not actually a ""page"" content stream.
     *
     * @param doc The document the page is part of.
     * @param appearance The appearance stream to write to.
     * @throws IOException If there is an error writing to the page contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPatternContentStream.java,<init>,org.apache.pdfbox.pdmodel.PDPatternContentStream:<init>(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),35,38,"/**
* Initializes a content stream for a tiling pattern.
* @param pattern the tiling pattern to process
* @throws IOException if an I/O error occurs
*/","* Create a new tiling pattern content stream.
     *
     * @param pattern The tiling pattern stream to write to.
     * 
     * @throws IOException If there is an error writing to the form contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectAppearanceStreams,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectAppearanceStreams(org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",354,374,"/**
 * Injects appearance streams into PDF forms.
 * @param holderFormStream stream for the holder form
 * @param innerFormStream stream for the inner form
 * @param imageFormStream stream for the image form
 * @param imageFormName name of the image form
 * @param imageName name of the image resource
 * @param innerFormName name of the inner form
 * @param properties design properties for the visible signature
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the text transformation matrix.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDFormContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the text transformation matrix.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPageContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
* Sets the text transformation matrix.
* @param matrix transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setTextMatrix,org.apache.pdfbox.pdmodel.PDPatternContentStream:setTextMatrix(org.apache.pdfbox.util.Matrix),382,390,"/**
 * Sets the text transformation matrix.
 * @param matrix the transformation matrix to apply
 * @throws IOException if an I/O error occurs
 */","* The Tm operator. Sets the text matrix to the given values.
     * A current text matrix will be replaced with the new one.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was not allowed to be called at this time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a transformation to the graphics state.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDFormContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a transformation to the graphics state.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs while writing
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPageContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
* Applies a transformation to the graphics state.
* @param matrix the transformation matrix to apply
* @throws IOException if an I/O error occurs
*/","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,transform,org.apache.pdfbox.pdmodel.PDPatternContentStream:transform(org.apache.pdfbox.util.Matrix),574,583,"/**
 * Applies a transformation to the graphics context.
 * @param matrix the transformation matrix to apply
 * @throws IOException if an I/O error occurs
 */","* The cm operator. Concatenates the given matrix with the current transformation matrix (CTM),
     * which maps user space coordinates used within a PDF content stream into output device
     * coordinates. More details on coordinates can be found in the PDF 32000 specification, 8.3.2
     * Coordinate Spaces.
     *
     * @param matrix the transformation matrix
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,curveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:curveTo(double,double,double,double,double,double)",1067,1074,"/**
 * Draws a cubic Bezier curve.
 * @param ax x-coordinate of the first control point
 * @param ay y-coordinate of the first control point
 * @param bx x-coordinate of the second control point
 * @param by y-coordinate of the second control point
 * @param cx x-coordinate of the end point
 * @param cy y-coordinate of the end point
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawArrow(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",357,368,"/**
* Draws an arrow on a PDF canvas.
* @param cs the content stream for drawing
* @param x starting x coordinate
* @param y starting y coordinate
* @param len length of the arrow
* @throws IOException if an I/O error occurs
*/","* Add the two arms of a horizontal arrow.
     * 
     * @param cs Content stream
     * @param x
     * @param y
     * @param len The arm length. Positive goes to the right, negative goes to the left.
     * 
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,drawShape,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawShape(float,boolean,boolean)",262,288,"/**
* Draws a shape with specified line width and optional stroke/fill.
* @param lineWidth thickness of the shape's outline
* @param hasStroke whether to apply a stroke
* @param hasFill whether to apply a fill
* @throws IOException if an I/O error occurs during drawing
*/","* Draw a shape.
     *
     * <p>
     * Dependent on the lineWidth and whether or not there is a background to be generated there are
     * different commands to be used for draw a shape.
     *
     * @param lineWidth the line width of the path.
     * @param hasStroke shall there be a stroking color.
     * @param hasFill shall there be a fill color.
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,finish,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:finish(),1076,1091,"/**
* Closes the output and adjusts bounding box if line width is positive.
* @throws IOException if closing the output fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawDiamond,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawDiamond(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",380,387,"/**
* Draws a diamond on the PDF canvas.
* @param cs content stream for drawing
* @param x center x-coordinate
* @param y center y-coordinate
* @param r radius of the diamond
* @throws IOException if an I/O error occurs
*/","* Add a square diamond shape (corner on top) to the path.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius (to a corner)
     * 
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",399,409,"/**
 * Draws a circle on the PDF canvas.
 * @param cs content stream for drawing
 * @param x center x-coordinate of the circle
 * @param y center y-coordinate of the circle
 * @param r radius of the circle
 * @throws IOException if an I/O error occurs
 */","* Add a circle shape to the path in clockwise direction.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     * 
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawCircle2,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawCircle2(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float)",422,432,"/**
* Draws a circle on the PDF canvas.
* @param cs PDF content stream for drawing
* @param x center x-coordinate of the circle
* @param y center y-coordinate of the circle
* @param r radius of the circle
* @throws IOException if an I/O error occurs
*/","* Add a circle shape to the path in counterclockwise direction. You'll need this e.g. when
     * drawing a doughnut shape. See ""Nonzero Winding Number Rule"" for more information.
     *
     * @param cs Content stream
     * @param x
     * @param y
     * @param r Radius
     *
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPaperclip,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPaperclip(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),100,130,"/**
* Draws a paperclip shape on the PDF.
* @param contentStream the stream to draw on
*/","* Draw a paperclip. Shape is from
     * <a href=""https://raw.githubusercontent.com/Iconscout/unicons/master/svg/line/paperclip.svg"">Iconscout</a>
     * (Apache licensed).
     *
     * @param contentStream
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,addPath,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:addPath(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,java.awt.geom.GeneralPath)",617,667,"/**
 * Adds a GeneralPath to the content stream.
 * @param contentStream the PDF appearance content stream
 * @param path the GeneralPath to add
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setLineWidthOnDemand,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setLineWidthOnDemand(float),239,248,"/**
 * Sets line width if different from default (1.0).
 * @param lineWidth desired line width
 * @throws IOException if an I/O error occurs
 */","* Sets the line width. The command is only emitted if the lineWidth is
     * different to 1.
     * 
     * @param lineWidth the line width of the path.
     * @throws IOException If there is an error writing to the content stream.
     * @see PDAbstractContentStream#setLineWidth(float)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,beginOutput,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:beginOutput(double,double)",1010,1019,"/**
* Initializes output with starting coordinates and sets line join style.
* @param x initial X coordinate
* @param y initial Y coordinate
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:toString(),1477,1684,"/**
* Generates a string representation of the object, including specified properties.
* @return formatted string with object details
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:generateBoundingBox(),215,237,"/**
* Generates a bounding box for the font.
* @return BoundingBox object representing the font's dimensions or default if unavailable
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:generateBoundingBox(),206,222,"/**
* Generates a bounding box for the font.
* @return BoundingBox object or default if descriptor is missing or invalid
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:generateBoundingBox(),339,350,"/**
* Generates bounding box for font.
* @return BoundingBox object or default if descriptor is null
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:generateBoundingBox(),264,275,"/**
* Generates bounding box for the font.
* @return BoundingBox object representing the font's bounds
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:generateBoundingBox(),547,558,"/**
* Generates bounding box for font.
* @return BoundingBox object representing font bounds
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getHeight,org.apache.pdfbox.pdmodel.font.PDType3Font:getHeight(int),206,240,"/**
* Retrieves the height of a font based on its descriptor.
* @param code character code for which to get the height
* @return font height or 0 if not available
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getBBox(),101,105,"/**
 * Retrieves the bounding box of the font.
 * @return PDRectangle representing the font's bounding box
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getImage,"org.apache.pdfbox.rendering.TilingPaint:getImage(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform,java.awt.geom.Rectangle2D)",127,179,"/**
 * Generates a BufferedImage for a tiling pattern.
 * @param drawer PageDrawer instance for rendering
 * @param pattern PDTilingPattern to render
 * @param colorSpace PDColorSpace for coloring
 * @param color PDColor for coloring
 * @param xform AffineTransform for scaling and transformation
 * @param anchorRect Rectangle2D defining the anchor area
 * @return BufferedImage of the tiling pattern or null if error occurs
 */",* Returns the pattern image in parent stream coordinates.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,getAnchorRect,org.apache.pdfbox.rendering.TilingPaint:getAnchorRect(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern),201,246,"/**
* Calculates the anchor rectangle for a tiling pattern.
* @param pattern the PDTilingPattern object
* @return scaled Rectangle2D representing the anchor rect
* @throws IOException if /BBox is missing or other I/O error occurs
*/","* Returns the anchor rectangle, which includes the XStep/YStep and scaling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRectangle(),101,104,"/**
 * Retrieves the rectangle from the annotation.
 * @return PDRectangle object representing the annotation's bounds
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,resolveTransformationMatrix,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:resolveTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",733,744,"/**
* Calculates transformation matrix for annotation.
* @param annotation PDF annotation object
* @param appearanceStream associated appearance stream
* @return Matrix to transform appearance into annotation bounds
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetLineDashPattern.java,process,"org.apache.pdfbox.contentstream.operator.state.SetLineDashPattern:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",46,84,"/**
* Sets line dash pattern based on operator and arguments.
* @param operator the operator to process
* @param arguments list of COSBase arguments
* @throws MissingOperandException if required operands are missing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getStencilImage(java.awt.Paint),562,570,"/**
 * Retrieves the stencil image with specified paint.
 * @param paint the paint to apply to the stencil
 * @return BufferedImage of the stencil
 * @throws IOException if an I/O error occurs
 */","* {@inheritDoc}
     * The returned images are not cached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRawRaster(org.apache.pdfbox.pdmodel.graphics.image.PDImage),226,261,"/**
* Retrieves raw raster data from a PDF image.
* @param pdImage the PDF image object
* @return WritableRaster containing pixel data
* @throws IOException if image is empty or invalid dimensions
*/","* Extract the raw unconverted raster of the given image
     * @param pdImage  The image to get the raw raster data from
     * @return the raw raster of this image
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.Rectangle,int,org.apache.pdfbox.cos.COSArray)",170,218,"/**
* Converts a PDF image to a BufferedImage.
* @param pdImage the PDF image object
* @param region the region of interest in the image
* @param subsampling factor for reducing image resolution
* @param colorKey array defining color key mask
* @return BufferedImage representation of the PDF image
* @throws IOException if image processing fails
*/","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param region The region of the source image to get, or null if the entire image is needed.
     *               The actual region will be clipped to the dimensions of the source image.
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value
     * of 1 meaning every pixel will be read. It must not be larger than the image width or height.
     * @param colorKey an optional color key mask
     * @return content of this image as an (A)RGB buffered image
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getMatrix,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getMatrix(),154,158,"/**
 * Retrieves the font matrix.
 * @return FontMatrix object representing the font's transformation matrix
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getResources,org.apache.pdfbox.pdmodel.PDPage:getResources(),326,340,"/**
 * Retrieves the resources for the page.
 * @return PDResources object containing page resources
 */",* A dictionary containing any resources required by the page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getMediaBox,org.apache.pdfbox.pdmodel.PDPage:getMediaBox(),400,416,"/**
* Retrieves the media box of the page.
* Returns a PDRectangle object representing the page's dimensions or default U.S. Letter if not found.
*/","* A rectangle, expressed in default user space units, defining the boundaries of the physical medium on which the
     * page is intended to be displayed or printed.
     * 
     * @return the media box of the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getRotation,org.apache.pdfbox.pdmodel.PDPage:getRotation(),583,595,"/**
* Retrieves the rotation angle of a PDF page.
* @return Rotation angle in degrees, multiple of 90, or 0 if not set
*/","* Returns the rotation angle in degrees by which the page should be rotated
     * clockwise when displayed or printed. Valid values in a PDF must be a
     * multiple of 90.
     *
     * @return The rotation angle in degrees in normalized form (0, 90, 180 or
     * 270) or 0 if invalid or not set at this level.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getBoolean,"org.apache.pdfbox.cos.COSDictionary:getBoolean(java.lang.String,boolean)",881,884,"/**
* Retrieves a boolean value by key with a default.
* @param key the key to search for
* @param defaultValue the default boolean value if key not found
* @return the boolean value associated with the key, or default if not present
*/","* This is a convenience method that will get the dictionary object that is expected to be a cos boolean and convert
     * it to a primitive boolean.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value returned if the entry is null.
     *
     * @return The value converted to a boolean.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,isVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:isVolatile(),215,218,"/**
 * Checks if the PDF stream is marked as volatile.
 * @return true if the stream is volatile, false otherwise
 */","* Get if the file is volatile.  Default: false
     *
     * @return True if the file is volatile attribute is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,isHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:isHidden(),127,130,"/**
 * Checks if the PDF annotation is hidden.
 * @return true if hidden, false otherwise
 */","* Shall the property be hidden?
     * 
     * @return <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,isEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDEncryption:isEncryptMetaData(),417,421,"/**
 * Determines if metadata should be encrypted.
 * @return true if metadata encryption is enabled, false otherwise
 */","* Will get the EncryptMetaData dictionary info.
     * 
     * @return true if EncryptMetaData is explicitly set to false (the default is true)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,getCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:getCaption(),296,299,"/**
 * Retrieves caption status.
 * @return true if caption is enabled, false otherwise
 */","* This will retrieve if the contents are shown as a caption or not.
     *
     * @return boolean if the content is shown as a caption.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,shouldScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:shouldScaleToFitAnnotation(),184,187,"/**
 * Checks if content should scale to fit annotation.
 * @return true if scaling is enabled, false otherwise
 */","* This will tell if the icon should scale to fit the annotation bounds. Default: false
     *
     * @return A flag telling if the icon should scale.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,shouldRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:shouldRename(),122,125,"/**
 * Determines if renaming is enabled.
 * @return true if renaming is enabled, false otherwise
 */","* A flag telling if the fields imported from the template may be renamed if there are conflicts.
     *
     * @return A flag telling if the fields can be renamed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isIsolated,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isIsolated(),94,97,"/**
 * Checks if the PDF document is isolated.
 * @return true if the document is isolated, false otherwise
 */","* Returns true if this group is isolated. Isolated groups begin with the fully transparent image, non-isolated
     * begin with the current backdrop.
     * 
     * @return true if this group is isolated",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,isKnockout,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:isKnockout(),105,108,"/**
 * Checks if the document is marked as a knockout.
 * @return true if the document is a knockout, false otherwise
 */","* Returns true if this group is a knockout. A knockout group blends with original backdrop, a non-knockout group
     * blends with the current backdrop.
     * 
     * @return true if this group is a knockout",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getAntiAlias(),228,231,"/**
 * Retrieves anti-aliasing setting from dictionary.
 * @return true if anti-aliasing is enabled, false otherwise
 */","* This will return the AntiAlias value.
     *
     * @return the AntiAlias value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getStrokingOverprintControl(),362,365,"/**
 * Retrieves stroking overprint control setting.
 * @return true if stroking overprint is enabled, false otherwise
 */","* This will get the overprint control.
     *
     * @return The overprint control or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAutomaticStrokeAdjustment(),498,501,"/**
 * Retrieves automatic stroke adjustment setting.
 * @return true if enabled, false otherwise
 */","* This will get the automatic stroke adjustment flag.
     *
     * @return The automatic stroke adjustment flag or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getAlphaSourceFlag(),560,563,"/**
 * Retrieves the alpha source flag.
 * @return true if alpha source is enabled, false otherwise
 */","* This will get the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @return The alpha source flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getTextKnockoutFlag(),615,618,"/**
 * Retrieves the text knockout flag from the dictionary.
 * @return true if text knockout is enabled, false otherwise
 */","/**
     * This will get the text knockout flag.
     *
     * @return The text knockout flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,getH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:getH(),79,82,"/**
* Retrieves boolean value of 'H' from action dictionary.
* @return true if 'H' is true or not present; false otherwise
*/","* A flag indicating whether to hide the annotation or show it
     *
     * @return true if annotation is hidden",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getSynchronous(),123,126,"/**
 * Checks if the action is synchronous.
 * @return true if the action is synchronous, false otherwise
 */","* Gets the synchronous flag. It specifyes whether to play the sound synchronously or
     * asynchronously. When true, the reader allows no further user interaction other than canceling
     * the sound until the sound has been completely played.
     *
     * @return Whether to play the sound synchronously (true) or asynchronously (false, also the
     * default).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getRepeat(),143,146,"/**
 * Retrieves repeat status.
 * @return true if repeat is enabled, false otherwise
 */","* Gets whether to repeat the sound indefinitely.
     *
     * @return Whether to repeat the sound indefinitely (default: false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,getMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:getMix(),168,171,"/**
 * Retrieves mix setting from action.
 * @return true if mix is enabled, false otherwise
 */","* Gets the flag specifying whether to mix this sound with any other sound already playing. If
     * this flag is false, any previously playing sound shall be stopped before starting this sound;
     * this can be used to stop a repeating sound (see Repeat).
     *
     * @return whether to mix this sound with any other sound already playing (default: false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,hasCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:hasCaption(),262,265,"/**
 * Checks if the PDF annotation has a caption.
 * @return true if the annotation has a caption, false otherwise
 */","* This will retrieve whether the text specified by the /Contents or /RC entries shall be
     * shown as a caption in the appearance of the line.
     *
     * @return boolean if the contents shall be shown as a caption (default: false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:getOpen(),156,159,"/**
 * Checks if the document is open.
 * @return true if the document is open, false otherwise
 */","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getPreRelease(),190,193,"/**
 * Retrieves pre-release status from dictionary.
 * @return true if pre-release is enabled, false otherwise
 */","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @return true if the software module or signature handler was a pre release.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getNonEFontNoWarn(),262,265,"/**
 * Retrieves non-EFont warning status.
 * @return boolean indicating if non-EFont warnings are suppressed
 */","* If there is a LegalPDF dictionary in the catalog
     * of the PDF file and the NonEmbeddedFonts attribute in this dictionary
     * has a non zero value, and the viewing application has a preference
     * set to suppress the display of this warning then the value of this
     * attribute will be set to true.
     *
     * @return true if NonEFontNoWarn is set to true
     * @see #setNonEFontNoWarn(boolean)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,getTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:getTrustedMode(),295,298,"/**
 * Retrieves trusted mode status.
 * @return true if trusted mode is enabled, false otherwise
 */","* If true, the application was in trusted mode when signing took place.
     *
     * @return true if the application was in trusted mode while signing.
     *              default: false",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getNeedAppearances(),521,524,"/**
 * Checks if appearances are needed.
 * @return true if appearances need to be generated; otherwise, false
 */","* True if the viewing application should construct the appearances of all field widgets.
     * The default value is false.
     * 
     * @return the value of NeedAppearances, false if the value isn't set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,isFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:isFlyAreaOpaque(),182,185,"/**
 * Checks if the fly area is opaque.
 * @return true if the fly area is opaque, false otherwise
 */","* @return true if the area that shall be flown in is rectangular and opaque. Default is false. Only for
     * {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideToolbar(),167,170,"/**
 * Checks if the toolbar should be hidden.
 * @return true if toolbar is hidden, false otherwise
 */","* Get the toolbar preference.
     *
     * @return the toolbar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideMenubar(),187,190,"/**
 * Checks if the menu bar is hidden.
 * @return true if menu bar is hidden, false otherwise
 */","* Get the menubar preference.
     *
     * @return the menubar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,hideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:hideWindowUI(),207,210,"/**
 * Checks if window UI should be hidden.
 * @return true if window UI is hidden, false otherwise
 */","* Get the window UI preference.
     *
     * @return the window UI preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,fitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:fitWindow(),227,230,"/**
 * Checks if the window should fit the page.
 * @return true if window should fit the page, false otherwise
 */","* Get the fit window preference.
     *
     * @return the fit window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,centerWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:centerWindow(),247,250,"/**
 * Checks if window should be centered.
 * @return true if window centering is enabled, false otherwise
 */","* Get the center window preference.
     *
     * @return the center window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,displayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:displayDocTitle(),267,270,"/**
 * Checks if document title should be displayed.
 * @return true if document title is enabled, false otherwise
 */","* Get the display doc title preference.
     *
     * @return the display doc title preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getBitsPerComponent(),111,122,"/**
 * Returns the number of bits per color component.
 * @return bits per component or default value if not set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getStencilImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getStencilImage(java.awt.Paint),371,379,"/**
 * Retrieves the stencil image for the current image.
 * @param paint object used for painting operations
 * @return BufferedImage representing the stencil image
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",943,947,"/**
* Retrieves an integer value from a nested dictionary.
* @param embeddedDictionary name of the embedded dictionary
* @param key dictionary key for the integer value
* @param defaultValue default integer value if key not found
* @return integer value or default if missing
*/","* Get an integer from an embedded dictionary. Useful for 1-1 mappings.
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     * @param defaultValue The value if there is no embedded dictionary or it does not contain the key.
     *
     * @return The value of the embedded integer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String),956,959,"/**
 * Retrieves an integer value associated with a given key.
 * @param key the key to look up
 * @return the integer value or -1 if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,org.apache.pdfbox.cos.COSDictionary:getInt(org.apache.pdfbox.cos.COSName),968,971,"/**
 * Retrieves an integer value associated with a given COSName.
 * @param key the COSName key to look up
 * @return the integer value or -1 if not found
 */","* This is a convenience method that will get the dictionary object that is expected to be an int. -1 is returned if
     * there is no value.
     *
     * @param key The key to the item in the dictionary.
     * @return The integer value..",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getInt,"org.apache.pdfbox.cos.COSDictionary:getInt(java.lang.String,int)",981,984,"/**
 * Retrieves an integer value from a map using a string key.
 * @param key the key as a string
 * @param defaultValue default value to return if key is not found
 * @return integer value associated with the key or default value
 */","* This is a convenience method that will get the dictionary object that is expected to be an integer. If the
     * dictionary value is null then the default value will be returned.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The value to return if the dictionary item is null.
     * @return The integer value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getFlag,"org.apache.pdfbox.cos.COSDictionary:getFlag(org.apache.pdfbox.cos.COSName,int)",1153,1157,"/**
* Checks if a specific bit flag is set in an integer value.
* @param field COSName representing the field to check
* @param bitFlag integer value of the bit flag to test
* @return true if the bit flag is set, false otherwise
*/","* Gets the boolean value from the flags at the given bit position.
     *
     * @param field The COSName of the field to get the flag from.
     * @param bitFlag the bitPosition to get the value from.
     *
     * @return true if the number at bitPos is '1'",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getCount,org.apache.pdfbox.pdmodel.PDPageTree:getCount(),439,442,"/**
 * Retrieves the count value from the COS dictionary.
 * @return The integer count value or 0 if not present
 */","* Returns the number of leaf nodes (page objects) that are descendants of this root within the page tree.
     * 
     * @return the number of leaf nodes, 0 if not present",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,getStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:getStart(),133,136,"/**
 * Retrieves the start value from the root.
 * @return integer value of KEY_START or default 1 if not set
 */","* Returns the start value for page numbering in this page range.
     * 
     * @return a positive integer the start value for numbering.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getOrder,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getOrder(),123,126,"/**
 * Retrieves the order value from the COS object.
 * @return the order value as an integer, defaulting to 1 if not found
 */","* Get the order of interpolation between samples. Valid values are 1 and 3,
     * specifying linear and cubic spline interpolation, respectively. Default
     * is 1. See p.170 in PDF spec 1.7.
     *
     * @return order of interpolation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRevisionNumber(),470,473,"/**
 * Retrieves the revision number of the PDF document.
 * @return The revision number as an integer.
 */","* Returns the revision number (R).
     * 
     * @return the revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:getLength(),84,87,"/**
 * Retrieves the length value from the crypt filter dictionary.
 * @return the length value or 40 if not specified
 */","* This will return the Length entry of the crypt filter dictionary.<br><br>
     * The length in <b>bits</b> for the crypt filter algorithm. This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getVersion(),203,206,"/**
 * Retrieves the version from the dictionary.
 * @return integer representing the version or 0 if not found
 */","* This will return the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.
     *
     * @return The encryption version to use.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getLength(),224,227,"/**
 * Retrieves the length of the dictionary.
 * @return Length value from dictionary or default 40 if not set
 */","* This will return the Length entry of the encryption dictionary.<br><br>
     * The length in <b>bits</b> for the encryption algorithm.  This will return a multiple of 8.
     *
     * @return The length in bits for the encryption algorithm",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getRevision(),249,252,"/**
 * Retrieves the revision number from the dictionary.
 * @return Revision number or default version if not found
 */","* This will return the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.
     *
     * @return The encryption revision to use.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getPermissions(),407,410,"/**
 * Retrieves permissions integer from dictionary.
 * @return permissions value or default (0) if not found
 */","* This will get the permissions bit mask.
     *
     * @return The permissions bit mask.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,getJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:getJustification(),187,190,"/**
 * Retrieves justification value as a string.
 * @return justification value converted to string
 */","* This will get the form of quadding (justification) of the annotation text.
     * 
     * @return The quadding of the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getWidth,org.apache.pdfbox.pdmodel.font.PDFont:getWidth(int),255,311,"/**
* Retrieves character width from PDF font.
* @param code character code
* @return width of the character in user space units
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,getFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:getFlags(),386,393,"/**
 * Retrieves document flags.
 * @return integer value of document flags
 */","* This will get the font flags.
     *
     * @return The font flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,hasExplicitWidth,org.apache.pdfbox.pdmodel.font.PDSimpleFont:hasExplicitWidth(int),452,464,"/**
 * Checks if a character has an explicit width.
 * @param code character code to check
 * @return true if explicit width exists, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,create,"org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:create(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",48,64,"/**
* Creates a PDAbstractPattern from a COSDictionary.
* @param dictionary PDF dictionary containing pattern data
* @param resourceCache cache for shared resources
* @return PDAbstractPattern object based on pattern type
* @throws IOException if unknown pattern type is encountered
*/","* Create the correct PD Model pattern based on the COS base pattern.
     * @param dictionary the COS pattern dictionary
     * @param resourceCache the resource cache, may be null, useful for tiling patterns.
     * @return the newly created pattern object
     * @throws IOException If we are unable to create the PDPattern object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getPaintType(),110,113,"/**
* Retrieves paint type from COS object.
* @return integer representing paint type or default value if not found
*/","* This will return the paint type.
     * @return The paint type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getTilingType(),128,131,"/**
 * Retrieves the tiling type.
 * @return integer representing the tiling type or default value if not set
 */","* This will return the tiling type.
     * @return The tiling type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,create,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:create(org.apache.pdfbox.cos.COSDictionary),274,305,"/**
* Creates a PDShading object based on the provided dictionary.
* @param shadingDictionary COSDictionary containing shading details
* @return PDShading instance or throws IOException for unknown types
*/","* Create the correct PD Model shading based on the COS base shading.
     *
     * @param shadingDictionary the COS shading dictionary
     * @return the newly created shading resources object
     * @throws IOException if we are unable to create the PDShading object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,getBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerFlag(),69,72,"/**
* Retrieves bits per flag from COS object.
* @return integer value of bits per flag or -1 if not found
*/","* The bits per flag of this shading. This will return -1 if one has not
     * been set.
     *
     * @return The number of bits per flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,getVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getVerticesPerRow(),65,68,"/**
 * Retrieves vertices per row.
 * @return number of vertices per row or -1 if not specified
 */","* The vertices per row of this shading. This will return -1 if one has not
     * been set.
     *
     * @return the number of vertices per row",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerComponent(),60,68,"/**
* Retrieves the number of bits per color component.
* @return int value representing bits per component or -1 if not set
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:getBitsPerCoordinate(),87,95,"/**
* Retrieves the number of bits per coordinate.
* @return int value representing bits per coordinate
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:getFlags(),77,80,"/**
 * Retrieves flags value from action.
 * @return integer representing flags or default 0 if not set
 */","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFlags(),103,106,"/**
 * Retrieves the flags value.
 * @return integer representing the flags
 */","* A set of flags specifying various characteristics of the action
     *
     * @return the flags",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getPageNumber(),149,152,"/**
 * Retrieves the page number.
 * @return page number as an integer, or -1 if not found
 */","* If the value in the /P entry is an integer, this will get the page number (zero-based) in the
     * current document containing the file attachment annotation.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,getAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:getAnnotationIndex(),212,215,"/**
 * Retrieves the annotation index from the dictionary.
 * @return The annotation index as an integer, or -1 if not found.
 */","* If the value in the /A entry is an integer, this will get the index (zero-based) of the
     * annotation in the /Annots array of the page specified by the /P entry.
     *
     * @return the zero based page number or -1 if the /P entry value is missing or not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getAnnotationFlags(),292,295,"/**
 * Retrieves annotation flags.
 * @return integer representing annotation flags
 */","* This will get the flags for this field.
     * 
     * @return flags The set of flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,getQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:getQ(),125,128,"/**
 * Retrieves the Q value from the COS object.
 * @return integer value of Q or 0 if not set
 */","* This will get the 'quadding' or justification of the text to be displayed.
     * <br>
     * 0 - Left (default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * Please see the QUADDING_CONSTANTS in {@link PDVariableText }.
     *
     * @return The justification of the text strings.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,getRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:getRotation(),66,69,"/**
 * Retrieves rotation angle of the PDF page.
 * @return Rotation angle in degrees (0, 90, 180, or 270)
 */","* This will retrieve the rotation of the annotation widget. It must be a multiple of 90. Default is 0
     * 
     * @return the rotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,isTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:isTimestampRequired(),86,89,"/**
 * Checks if timestamp is required.
 * @return true if timestamp is required, false otherwise
 */","* Indicates if a timestamp is required.
     * 
     * @return true if a timestamp is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getOpenCount(),224,227,"/**
 * Retrieves the open count of the COS object.
 * @return the open count as an integer, defaulting to 0 if not set
 */","* Get the number of open nodes or a negative number if this node is closed.
     * See PDF Reference 32000-1:2008 table 152 and 153 for more details. This
     * value is updated as you append children and siblings.
     *
     * @return The Count attribute of the outline dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getTextAlign,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getTextAlign(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),648,652,"/**
* Retrieves text alignment for a widget.
* @param widget PDF annotation widget
* @return Quadding value (alignment) for the widget's text
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getQ(),611,614,"/**
 * Retrieves the integer value of Q from the dictionary.
 * @return the integer value of Q or 0 if not found
 */","* This will get the document-wide default value for the quadding/justification of variable text
     * fields. 
     * <p>
     * 0 - Left(default)<br>
     * 1 - Centered<br>
     * 2 - Right<br>
     * See the QUADDING constants of {@link PDVariableText}.
     *
     * @return The justification of the variable text fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createChoiceSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createChoiceSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",97,109,"/**
* Creates a choice subtype field based on flags.
* @param form PDF form containing the field
* @param field COS dictionary representing the field
* @param parent parent non-terminal field
* @return PDComboBox or PDListBox instance
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createButtonSubType,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createButtonSubType(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",111,130,"/**
* Creates a button subtype based on field flags.
* @param form PDF acroform containing the field
* @param field COS dictionary representing the field
* @param parent non-terminal field parent
* @return PDField instance (radio, pushbutton, or checkbox)
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,getTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:getTopIndex(),59,62,"/**
 * Retrieves the top index from the COS object.
 * @return integer value of the top index, default is 0 if not set
 */","* This will get the top index ""TI"" value.
     *
     * @return the top index, default value 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getFieldFlags(),68,73,"/**
 * Retrieves field flags.
 * @return integer representing field flags
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/BeginInlineImage.java,process,"org.apache.pdfbox.contentstream.operator.graphics.BeginInlineImage:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,62,"/**
* Processes an image operator with operands.
* @param operator the image processing operator
* @param operands list of operands for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,getObjectsByType,org.apache.pdfbox.cos.COSDocument:getObjectsByType(org.apache.pdfbox.cos.COSName),239,242,"/**
* Retrieves COS objects by specified type.
* @param type object type to filter by
* @return list of COS objects matching the type
*/","* This will get all dictionaries objects by type.
     *
     * @param type The type of the object.
     *
     * @return This will return all objects with the specified type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDSimpleFont:toUnicode(int),270,274,"/**
 * Converts an integer code to its Unicode representation.
 * @param code character code
 * @return Unicode string
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,removePageResourceFromCache,org.apache.pdfbox.pdmodel.PDPage:removePageResourceFromCache(),124,132,"/**
* Removes page-specific resources from the cache.
*/","* Remove all page resources from the cache to avoid relying on the implementation of the Cache. Does make sense
     * after processing a page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,isAllowedCache,org.apache.pdfbox.pdmodel.PDResources:isAllowedCache(org.apache.pdfbox.pdmodel.graphics.PDXObject),453,480,"/**
* Determines if caching is allowed for a given PDXObject.
* @param xobject the object to check
* @return true if caching is allowed, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFile(),225,233,"/**
* Retrieves embedded file from the PDF.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded file.
     *
     * @return The embedded file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileDos,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileDos(),261,269,"/**
* Retrieves embedded file for DOS.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded dos file.
     *
     * @return The embedded dos file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileMac,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileMac(),276,284,"/**
 * Retrieves embedded file for Mac.
 * @return PDEmbeddedFile object or null if not found
 */","* Get the embedded Mac file.
     *
     * @return The embedded Mac file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnix,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnix(),291,299,"/**
* Retrieves embedded file for UNIX.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded Unix file.
     *
     * @return The embedded file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,getEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:getEmbeddedFileUnicode(),306,314,"/**
* Retrieves an embedded file using Unicode key.
* @return PDEmbeddedFile object or null if not found
*/","* Get the embedded unicode file.
     *
     * @return The embedded unicode file for this file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,findSignatureField,"org.apache.pdfbox.pdmodel.PDDocument:findSignatureField(java.util.Iterator,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature)",483,500,"/**
* Finds a PDSignatureField matching the given signature object.
* @param fieldIterator iterator for PDField objects
* @param sigObject signature object to match
* @return matching PDSignatureField or null if not found
*/","* Search acroform fields for signature field with specific signature dictionary.
     * 
     * @param fieldIterator iterator on all fields.
     * @param sigObject signature object (the /V part).
     * @return a signature field if found, or null if none was found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType3Font:readEncoding(),95,113,"/**
* Reads the font encoding from a dictionary.
* Sets the encoding and initializes the glyph list.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",69,129,"/**
 * Initializes an AxialShadingContext with specified parameters.
 * @param shading PDShadingType2 object representing the shading
 * @param colorModel ColorModel for color conversion
 * @param xform AffineTransform for device to user space conversion
 * @param matrix Matrix defining the shading coordinate system
 * @param deviceBounds Rectangle defining the bounds of the device
 * @throws IOException if an I/O error occurs
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType3,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",71,135,"/**
* Initializes a RadialShadingContext.
* @param shading PDShadingType3 object representing radial shading
* @param colorModel ColorModel for color conversion
* @param xform AffineTransform for device space to user space
* @param matrix Matrix defining the coordinate system
* @param deviceBounds Rectangle representing device bounds
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds the bounds of the area to paint, in device units
     * @throws IOException if there is an error getting the color space or doing color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",54,58,"/**
* Constructs a TriangleBasedShadingContext.
* @param shading PDShading object for shading
* @param cm ColorModel for color mapping
* @param xform AffineTransform for coordinate transformation
* @param matrix Matrix for additional transformations
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if there is an error getting the color space or doing background color conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",50,82,"/**
* Initializes Type1ShadingContext with specified parameters.
* @param shading PDShadingType1 object
* @param colorModel ColorModel for rendering
* @param xform AffineTransform for coordinate space conversion
* @param matrix Matrix defining the shading's coordinate system
* @throws IOException if an error occurs during initialization
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getDecodeForParameter(int),157,166,"/**
* Retrieves the decode range for a parameter.
* @param paramNum index of the parameter
* @return PDRange object or null if not applicable
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getDecodeForParameter,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getDecodeForParameter(int),157,166,"/**
* Retrieves the decode range for a specified parameter.
* @param paramNum index of the parameter
* @return PDRange object or null if not found
*/","* Get the decode for the input parameter.
     *
     * @param paramNum the function parameter number
     * @return the decode parameter range or null if none is set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSInputStream.java,create,"org.apache.pdfbox.cos.COSInputStream:create(java.util.List,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream)",49,53,"/**
* Creates an input stream with specified filters and parameters.
* @param filters list of filter objects to apply
* @param parameters dictionary containing additional parameters
* @param in original input stream
* @return COSInputStream with applied filters
* @throws IOException if an I/O error occurs
*/","* Creates a new COSInputStream from an encoded input stream.
     *
     * @param filters Filters to be applied.
     * @param parameters Filter parameters.
     * @param in Encoded input stream.
     * @return Decoded stream.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),169,173,"/**
* Creates an encoded input stream.
* @param options decoding options
* @return COSInputStream for reading encoded data
* @throws IOException if I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFObjectStreamParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFObjectStreamParser:<init>(org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDocument)",49,73,"/**
* Initializes a PDFObjectStreamParser with given COSStream and document.
* @param stream PDF object stream containing objects
* @param document associated COSDocument
* @throws IOException if required entries are missing or invalid
*/","* Constructor.
     *
     * @param stream The stream to parse.
     * @param document The document for the current parsing.
     * @throws IOException If there is an error initializing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.PDPage:getContentsForRandomAccess(),259,302,"/**
 * Retrieves contents for random access.
 * @return RandomAccessRead object containing page content or empty buffer if none found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType0:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",74,166,"/**
* Constructs a PDCIDFontType0 from a font dictionary and parent font.
* @param fontDictionary the COSDictionary containing font data
* @param parent the PDType0Font parent font
* @throws IOException if an I/O error occurs
*/","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * 
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font,org.apache.fontbox.ttf.TrueTypeFont)",83,155,"/**
 * Constructs a PDCIDFontType2 from a font dictionary and parent font.
 * @param fontDictionary the COS dictionary for the font
 * @param parent the parent PDType0Font
 * @param trueTypeFont the TrueType font, if available
 * @throws IOException if an I/O error occurs
 */","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @param trueTypeFont The true type font used to create the parent font
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,readCMap,org.apache.pdfbox.pdmodel.font.PDFont:readCMap(org.apache.pdfbox.cos.COSBase),208,228,"/**
* Reads a CMap from a COSBase object.
* @param base COSBase containing the CMap data
* @return CMap object parsed from the input
* @throws IOException if the input is invalid or parsing fails
*/","* Reads a CMap given a COS Stream or Name. May return null if a predefined CMap does not exist.
     *
     * @param base COSName or COSStream
     * @return the CMap if present
     * 
     * @throws IOException if the CMap could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontHeader,org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontHeader(org.apache.pdfbox.cos.COSDictionary),324,360,"/**
 * Retrieves the font header from a font descriptor.
 * @param fontDescriptor PDF dictionary containing font information
 * @return byte array of the font header or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContentsForRandomAccess(),82,86,"/**
 * Provides random access to the contents.
 * @return RandomAccessRead object for content access
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContentsForRandomAccess(),163,167,"/**
* Retrieves random access view of COS object contents.
* @return RandomAccessRead instance for accessing contents
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContentsForRandomAccess,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContentsForRandomAccess(),182,191,"/**
* Retrieves random access view of content.
* @return RandomAccessRead object or null if not a stream
* @throws IOException on I/O error
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(java.util.List),925,929,"/**
* Creates an input stream with specified filters.
* @param stopFilters list of filter strings to apply
* @return InputStream object
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDCIDFont:getPositionVector(int),288,298,"/**
 * Retrieves the position vector for a given code.
 * @param code unique identifier for the position
 * @return Vector representing the position or default if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType0Font:getWidth(int),511,515,"/**
 * Retrieves character width from descendant font.
 * @param code character code
 * @return width of character as float
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/BeginMarkedContentSequenceWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.BeginMarkedContentSequenceWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",44,78,"/**
* Processes operator with operands to begin marked content.
* @param operator the PDF operator
* @param operands list of COSBase operands
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/MarkedContentPointWithProperties.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.MarkedContentPointWithProperties:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,75,"/**
 * Processes operands for marked content in PDF.
 * @param operator the operator being processed
 * @param operands list of COSBase operands
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCMD,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCMD(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary),2148,2185,"/**
 * Determines if an optional content membership dictionary (OCMD) is hidden.
 * @param ocmd the PDOptionalContentMembershipDictionary to check
 * @return true if the OCMD is hidden, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBody,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBody(org.apache.pdfbox.cos.COSDocument),426,449,"/**
* Writes document body, handling encryption and object preservation.
* @param doc the COSDocument to write
*/","* This will write the body of the document.
     *
     * @param doc The document to write the body for.
     *
     * @throws IOException If there is an error writing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromArray,org.apache.pdfbox.pdfwriter.COSWriter:visitFromArray(org.apache.pdfbox.cos.COSArray),1108,1152,"/**
 * Visits and writes elements of a COSArray to output.
 * @param array the COSArray to process
 * @throws IOException if an I/O error occurs during writing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDictionary,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDictionary(org.apache.pdfbox.cos.COSDictionary),1186,1265,"/**
 * Visits and writes a dictionary object.
 * @param obj COSDictionary to process
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,save,org.apache.pdfbox.pdmodel.fdf.FDFDocument:save(java.lang.String),189,192,"/**
 * Saves data to a file.
 * @param fileName name of the file to save to
 * @throws IOException if an I/O error occurs
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,removeFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:removeFields(java.util.List),854,871,"/**
 * Removes specified fields from their respective PDF dictionaries.
 * @param fields List of PDField objects to be removed
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSBase),83,103,"/**
 * Recursively collects COSBase objects.
 * @param base the object to collect
 * @return true if collected, false otherwise
 */","* Collect all updates made to the given {@link COSBase} and it's contained structures.<br>
     * This shall forward all {@link COSUpdateInfo} objects to the proper specialized collection methods.
     *
     * @param base The {@link COSBase} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSBase} represents a direct child structure, that would require it´s
     * parent to be updated instead.
     * @see #collect(COSDictionary)
     * @see #collect(COSArray)
     * @see #collect(COSObject)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setTrailer,org.apache.pdfbox.cos.COSDocument:setTrailer(org.apache.pdfbox.cos.COSDictionary),395,399,"/**
* Updates document trailer.
* @param newTrailer dictionary containing trailer data
*/","* // MIT added, maybe this should not be supported as trailer is a persistence construct.
     * This will set the document trailer.
     *
     * @param newTrailer the document trailer dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSBase),255,262,"/**
 * Updates the object and sets origin document state for COSUpdateInfo children.
 * @param child the child COSBase object to update
 */","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given child, initializing it´s {@link #updated} state
     * and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param child The child that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(java.lang.Iterable),297,311,"/**
* Updates document with new children.
* @param children iterable collection of COSBase objects to update
*/","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,getValue,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:getValue(java.lang.String),213,241,"/**
 * Retrieves value by name from a map or child nodes.
 * @param name key to search for
 * @return value associated with the name, or null if not found
 * @throws IOException if an I/O error occurs
 */","* The name to retrieve.
     *
     * @param name The name in the tree.
     * @return The value of the name in the tree.
     * @throws IOException If there is a problem creating the destinations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getName(java.lang.String,java.lang.String)",156,159,"/**
 * Retrieves a named string value from COSObject.
 * @param name key of the value to retrieve
 * @param defaultValue default value if key not found
 * @return string value or default if not present
 */","* Gets a name value.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,getStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:getStyle(),111,114,"/**
 * Retrieves the style of the object.
 * @return Style as a string, defaulting to ""Solid"" if not specified
 */","* This will retrieve the border effect, see the STYLE_* constants for valid values.
     *
     * @return the effect of the border or {@link #STYLE_SOLID} if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:toString(),109,125,"/**
 * Generates a string representation of the object with its attributes.
 * @return String containing object details and attribute values
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:toString(),127,131,"/**
* Returns string representation of object including owner's properties.
* @return concatenated string with superclass and user properties
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStructureTreeRoot(),739,751,"/**
* Retrieves the structure tree root from the hierarchy.
* @return PDStructureTreeRoot object or null if not found
*/","* Returns the structure tree root.
     * 
     * @return the structure tree root",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,getKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:getKids(),109,133,"/**
* Retrieves list of child objects.
* @return List of child objects or empty list if none found
*/","* Returns a list of objects for the kids (K).
     * 
     * @return a list of objects for the kids, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getEncryption,org.apache.pdfbox.pdmodel.PDDocument:getEncryption(),825,832,"/**
* Returns document encryption settings.
* Initializes if not already created and document is encrypted.
* @return PDEncryption object or null if no encryption
*/","* This will get the encryption dictionary for this document. This will still return the parameters if the document
     * was decrypted. As the encryption architecture in PDF documents is pluggable this returns an abstract class,
     * but the only supported subclass at this time is a
     * PDStandardEncryption object.
     *
     * @return The encryption dictionary(most likely a PDStandardEncryption object)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,prepareDecryption,org.apache.pdfbox.pdfparser.COSParser:prepareDecryption(),1197,1245,"/**
 * Prepares the document for decryption.
 * @throws IOException if an I/O error occurs during decryption setup
 */","* Prepare for decryption.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,readEncodingFromFont,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:readEncodingFromFont(),263,315,"/**
* Reads encoding from font.
* @return Encoding object based on font type and properties
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,encode,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:encode(int),393,443,"/**
 * Encodes a Unicode character to a byte array.
 * @param unicode the Unicode code point to encode
 * @return byte array representing the encoded character
 * @throws IOException if encoding fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getPath(int),473,500,"/**
 * Retrieves the path for a given character code.
 * @param code character code to fetch path for
 * @return GeneralPath object representing the character's outline
 * @throws IOException if an I/O error occurs or glyf table is missing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDType0Font:readEncoding(),321,355,"/**
* Reads and sets the CMap encoding from a PDF dictionary.
* Throws IOException if required CMap is missing or invalid.
*/","* Reads the font's Encoding entry, which should be a CMap name/stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,toUnicode,org.apache.pdfbox.pdmodel.font.PDType0Font:toUnicode(int),535,611,"/**
 * Converts a character code to its Unicode representation.
 * @param code character code
 * @return Unicode string or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,encode,org.apache.pdfbox.pdmodel.font.PDType1CFont:encode(int),389,412,"/**
* Encodes a Unicode character to a byte array.
* @param unicode the Unicode code point to encode
* @return byte array representing the encoded character
* @throws IOException if encoding fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDType1CFont:getStringWidth(java.lang.String),414,436,"/**
 * Calculates the total width of a given string using embedded CFF font.
 * @param string input text to measure
 * @return total width in font units, 0 if no CFF font is available
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength1,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength1(byte[],int)",292,318,"/**
 * Repairs the length of the first segment in a byte array.
 * @param bytes input byte array
 * @param length1 initial length of the first segment
 * @return corrected length of the first segment
 */","* Some Type 1 fonts have an invalid Length1, which causes the binary segment of the font
     * to be truncated, see PDFBOX-2350, PDFBOX-3677.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @return repaired Length1 value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,repairLength2,"org.apache.pdfbox.pdmodel.font.PDType1Font:repairLength2(byte[],int,int)",355,364,"/**
 * Repairs Length2 if it's out of bounds.
 * @param bytes byte array containing font data
 * @param length1 first length value
 * @param length2 second length value to repair
 * @return corrected Length2 or maximum possible length if invalid
 */","* Some Type 1 fonts have an invalid Length2, see PDFBOX-3475. A negative /Length2 brings an
     * IllegalArgumentException in Arrays.copyOfRange(), a huge value eats up memory because of
     * padding.
     *
     * @param bytes Type 1 stream bytes
     * @param length1 Length1 from the Type 1 stream
     * @param length2 Length2 from the Type 1 stream
     * @return repaired Length2 value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,encode,org.apache.pdfbox.pdmodel.font.PDType1Font:encode(int),393,448,"/**
 * Encodes a Unicode character to its corresponding byte array.
 * @param unicode the Unicode character to encode
 * @return byte array representing the encoded character
 * @throws IOException if encoding fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getFormattedValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getFormattedValue(java.lang.String),274,295,"/**
* Formats field value using scripting if available.
* @param apValue original field value
* @return formatted field value or original if no formatting is possible
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getFractionalDisplay(),149,152,"/**
* Retrieves fractional display setting.
* @return String representing fractional display or default value if not set
*/","* This will return the value for the manner to display a fractional value.
     *  
     * @return the manner to display a fractional value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getThousandsSeparator(),221,224,"/**
 * Retrieves thousands separator from COS object.
 * @return String representing thousands separator or default "",""
 */","* This will return the text to be used between orders of thousands in display of numerical values.
     * 
     * @return thousands separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDecimalSeparator(),241,244,"/**
 * Retrieves the decimal separator from the COS object.
 * @return the decimal separator as a string, default is "".""
 */","* This will return the text to be used as the decimal point in displaying numerical values.
     * 
     * @return decimal separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPrefixString(),260,263,"/**
 * Retrieves the label prefix string from the COS object.
 * @return The label prefix or a space if not found.
 */","* This will return the text to be concatenated to the left of the label specified by U.
     * @return label prefix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelSuffixString(),279,282,"/**
 * Retrieves label suffix string from COS object.
 * @return Suffix string or space if not found
 */","* This will return the text to be concatenated after the label specified by U.
     * 
     * @return label suffix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getLabelPositionToValue(),299,302,"/**
* Retrieves label position to value mapping.
* @return string representation of the mapping or default suffix if not found
*/","* This will return a value indicating the ordering of the label specified by U to the calculated unit value.
     * 
     * @return label position",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",766,769,"/**
* Retrieves an embedded string value.
* @param embedded name of the embedded object
* @param key specific key within the embedded object
* @return string value or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontMatches,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontMatches(org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",553,644,"/**
* Generates a priority queue of font matches based on descriptor and CID system info.
* @param fontDescriptor PDFontDescriptor object for comparison
* @param cidSystemInfo PDCIDSystemInfo object for filtering
* @return PriorityQueue containing FontMatch objects
*/","* Returns a list of matching fonts, scored by suitability. Positive scores indicate matches
     * for certain attributes, while negative scores indicate mismatches. Zero scores are neutral.
     * 
     * @param fontDescriptor FontDescriptor, always present.
     * @param cidSystemInfo Font's CIDSystemInfo, may be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,toString,org.apache.pdfbox.pdmodel.interactive.form.PDField:toString(),472,477,"/**
* Returns string representation of object.
* @return formatted string with class name and attribute value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,fetch,org.apache.pdfbox.filter.CCITTFaxDecoderStream:fetch(),126,150,"/**
 * Fetches and decodes data from a CCITT stream.
 * Throws IOException for malformed streams or unexpected EOF.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxEncoderStream.java,write,org.apache.pdfbox.filter.CCITTFaxEncoderStream:write(int),78,87,"/**
 * Writes a byte to the buffer and encodes when full.
 * @param b byte to write
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)",589,606,"/**
 * Checks if the provided owner password matches for given encryption revision.
 * @param ownerPassword password to validate
 * @param user user permissions data
 * @param owner owner permissions data
 * @param permissions permission level
 * @param id document identifier
 * @param encRevision encryption revision number
 * @param keyLengthInBytes length of the encryption key in bytes
 * @param encryptMetadata flag indicating if metadata is encrypted
 * @return true if password matches, false otherwise
 * @throws IOException if unknown encryption revision
 */","* Check for owner password.
     *
     * @param ownerPassword The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/type4/InstructionSequenceBuilder.java,parse,org.apache.pdfbox.pdmodel.common.function.type4.InstructionSequenceBuilder:parse(java.lang.CharSequence),55,60,"/**
* Parses a CharSequence into an InstructionSequence.
* @param text input containing instructions
* @return InstructionSequence object representing parsed instructions
*/","* Parses the given text into an instruction sequence representing a Type 4 function
     * that can be executed.
     * @param text the Type 4 function text
     * @return the instruction sequence",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptStream(org.apache.pdfbox.cos.COSStream,long,long)",498,553,"/**
* Decrypts a PDF stream.
* @param stream the COSStream to decrypt
* @param objNum object number of the stream
* @param genNum generation number of the stream
* @throws IOException if an I/O error occurs
*/","* This will decrypt a stream.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptStream,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptStream(org.apache.pdfbox.cos.COSStream,long,int)",566,583,"/**
 * Encrypts a PDF stream.
 * @param stream the COSStream to encrypt
 * @param objNum object number of the stream
 * @param genNum generation number of the stream
 * @throws IOException if an I/O error occurs
 */","* This will encrypt a stream, but not the dictionary as the dictionary is
     * encrypted by visitFromString() in COSWriter and we don't want to encrypt
     * it twice.
     *
     * @param stream The stream to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error getting the stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptString(org.apache.pdfbox.cos.COSString,long,long)",632,653,"/**
* Decrypts a COSString using the specified object number and generation number.
* @param string the encrypted COSString to decrypt
* @param objNum the object number of the COSString
* @param genNum the generation number of the COSString
* @return decrypted COSBase object or original if decryption fails
*/","* This will decrypt a string.
     *
     * @param string the string to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     * 
     * @return the decrypted COSString",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,encryptString,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:encryptString(org.apache.pdfbox.cos.COSString,long,int)",666,672,"/**
* Encrypts a string using object number and generation number.
* @param string the string to encrypt
* @param objNum the object number
* @param genNum the generation number
* @return encrypted COSBase object
* @throws IOException if encryption fails
*/","* This will encrypt a string.
     *
     * @param string the string to encrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @return the encrypted COSString
     * 
     * @throws IOException If an error occurs writing the new string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isUserPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isUserPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1075,1089,"/**
* Checks if the provided password matches the user's encrypted credentials.
* @param password plain text password to verify
* @param user user data byte array
* @param owner owner data byte array
* @param permissions permission level
* @param id unique identifier byte array
* @param encRevision encryption revision number
* @param keyLengthInBytes length of the encryption key in bytes
* @param encryptMetadata flag to indicate if metadata is encrypted
* @return true if password matches, false otherwise
* @throws IOException if an I/O error occurs
*/","* Check if a plaintext password is the user password.
     *
     * @param password The plaintext password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The permissions set in the PDF.
     * @param id The document id used for encryption.
     * @param encRevision The revision of the encryption algorithm.
     * @param keyLengthInBytes The length of the encryption key in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return true If the plaintext password is the user password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,findFontBoxFont,org.apache.pdfbox.pdmodel.font.FontMapperImpl:findFontBoxFont(java.lang.String),371,392,"/**
 * Finds FontBoxFont by PostScript name.
 * @param postScriptName the font's PostScript name
 * @return FontBoxFont object or null if not found
 */","* Finds a font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param postScriptName PostScript font name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writePage,org.apache.pdfbox.text.PDFTextStripper:writePage(),495,728,"/**
 * Writes a page of text from a list of articles.
 * Handles sorting, spacing, and layout adjustments.
 */","* This will print the text of the processed page to ""output"". It will estimate, based on the coordinates of the
     * text, where newlines and word spacings should be placed. The text will be sorted only if that feature was
     * enabled.
     *
     * @throws IOException If there is an error writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName),805,813,"/**
* Retrieves calendar date from dictionary by key.
* @param key the dictionary key for the date
* @return Calendar object or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.cos.COSBase),70,73,"/**
 * Writes a token to the output stream.
 * @param base the COSBase object to be written
 */","* Writes a single operand token.
     *
     * @param base The operand to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(org.apache.pdfbox.contentstream.operator.Operator),131,158,"/**
* Writes an Operator to the output stream.
* @param op Operator object to be written
* @throws IOException if writing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObject,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObject(java.io.OutputStream,org.apache.pdfbox.cos.COSBase,boolean)",168,250,"/**
 * Writes a COSBase object to an OutputStream.
 * @param output the OutputStream to write to
 * @param object the COSBase object to write
 * @param topLevel indicates if it's at the top level of the document
 * @throws IOException if an I/O error occurs
 */","* This method prepares and writes COS data to the object stream by selecting appropriate specialized methods for
     * the content.
     *
     * @param output The stream, that shall be written to.
     * @param object The content, that shall be written.
     * @param topLevel True, if the currently written object is a top level entry of this object stream.
     * @throws IOException Shall be thrown, when an exception occurred for the write operation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
* Writes text with positioning from an array.
* @param textWithPositioningArray array containing Strings and Floats for text and positioning
* @throws IOException if writing fails
*/","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAbstractContentStream:showText(java.lang.String),262,267,"/**
* Displays text and writes a show text operator.
* @param text the text to display
* @throws IOException if an I/O error occurs
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,createPageDrawer,org.apache.pdfbox.rendering.PDFRenderer:createPageDrawer(org.apache.pdfbox.rendering.PageDrawerParameters),526,531,"/**
 * Creates and configures a PageDrawer.
 * @param parameters configuration for the PageDrawer
 * @return configured PageDrawer instance
 * @throws IOException if an I/O error occurs during setup
 */","* Returns a new PageDrawer instance, using the given parameters. May be overridden.
     * 
     * @param parameters parameters to be used when creating the PageDrawer instance
     * @return a new PageDrawer instance
     * 
     * @throws IOException id the PageDrawer instance could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getColor(),96,99,"/**
 * Retrieves the color of the annotation.
 * @return PDColor object representing the annotation's color
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:<init>(org.apache.pdfbox.pdmodel.PDDocument),99,103,"/**
 * Constructs a new PDF form object.
 * @param document the document to which this form will belong
 */","* Creates a Form Image XObject for writing, in the given document.
     * @param document The current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDMetadata.java,<init>,"org.apache.pdfbox.pdmodel.common.PDMetadata:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",59,64,"/**
 * Initializes PDF metadata from a document and input stream.
 * @param doc the PDF document
 * @param str the input stream containing metadata
 * @throws IOException if an I/O error occurs
 */","* Constructor. Reads all data from the input stream and embeds it into the document, this will
     * close the InputStream. The /Type and /Subtype entries for a document level metadata object
     * will be created.
     *
     * @param doc The document that will hold the stream.
     * @param str The stream parameter.
     * @throws IOException If there is an error creating the stream in the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",57,61,"/**
* Constructs a PDEmbeddedFile with the given document and input stream.
* @param doc PDF document to associate with the embedded file
* @param str input stream containing the file data
* @throws IOException if an I/O error occurs
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,<init>,"org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.cos.COSName)",66,70,"/**
* Creates a new embedded file in a PDF document.
* @param doc the parent PDF document
* @param input stream containing the file data
* @param filter compression filter to apply
* @throws IOException if an I/O error occurs
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,configureOutputProfile,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:configureOutputProfile(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",108,115,"/**
* Configures output profile for a PDF document.
* @param doc PDDocument to configure
* @param colorProfile input stream of the ICC color profile
* @return PDStream containing the configured color profile
* @throws IOException if I/O operations fail
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createJPEG,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createJPEG(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",305,328,"/**
* Creates a JPEG image XObject from a BufferedImage.
* @param document PDF document to add the image to
* @param image source BufferedImage
* @param quality JPEG compression quality (0.0-1.0)
* @param dpi dots per inch for image resolution
* @return PDImageXObject representing the JPEG image
* @throws IOException if image processing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",243,256,"/**
 * Prepares an image XObject from a byte array.
 * @param document PDF document to add the image to
 * @param byteArray raw image data
 * @param width image width in pixels
 * @param height image height in pixels
 * @param bitsPerComponent bits per color component
 * @param initColorSpace initial color space for the image
 * @return PDImageXObject with encoded image data
 * @throws IOException if encoding fails
 */","* Create a PDImageXObject using the Flate filter.
     * 
     * @param document The document.
     * @param byteArray array with data.
     * @param width the image width
     * @param height the image height
     * @param bitsPerComponent the bits per component
     * @param initColorSpace the color space
     * @return the newly created PDImageXObject with the data compressed.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:<init>(java.lang.String),64,67,"/**
 * Initializes a new PDExportFormatAttributeObject with an owner.
 * @param owner the owner of the attribute object
 */","* Default constructor.
     * 
     * @param owner the owner of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getAttributes(),161,196,"/**
 * Retrieves attributes from the PDF object.
 * @return Revisions containing PDAttributeObjects
 */","* Returns the attributes together with their revision numbers (A).
     * 
     * @return the attributes as a list, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getAppearance,org.apache.pdfbox.contentstream.PDFStreamEngine:getAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),466,469,"/**
 * Retrieves the normal appearance stream of an annotation.
 * @param annotation PDF annotation object
 * @return Appearance stream of the annotation or null if not set
 */","* Returns the appearance stream to process for the given annotation. May be used to render
     * a specific appearance such as ""hover"".
     *
     * @param annotation The current annotation.
     * @return The stream to process.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,addFontFromWidget,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:addFontFromWidget(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation)",153,190,"/**
* Adds fonts from a widget's appearance stream to the AcroForm resources.
* @param acroFormResources the AcroForm resources to add fonts to
* @param annotation the annotation containing the widget
*/","* Add font resources from the widget to the AcroForm to make sure embedded fonts are being used
     * and not added by ensureFontResources potentially using a fallback font.
     * 
     * @param acroFormResources AcroForm default resources, should not be null.
     * @param annotation annotation, should not be null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValues(),316,333,"/**
* Retrieves all 'on' values from export or widgets.
* @return Set of 'on' values, possibly empty
*/","* Get the values to set individual buttons within a group to the on state.
     * 
     * <p>The On value could be an arbitrary string as long as it is within the limitations of
     * a PDF name object. The Off value shall always be 'Off'. If not set or not part of the normal
     * appearance keys 'Off' is the default</p>
     *
     * @return the potential values setting the check box to the On state. 
     *         If an empty Set is returned there is no appearance definition.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,getOnValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:getOnValue(int),338,346,"/**
 * Retrieves the on-value for a widget at a specific index.
 * @param index position of the widget in the list
 * @return the on-value as a String, or empty string if index is out of bounds
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,isChecked,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:isChecked(),64,67,"/**
 * Checks if the value matches the on-value.
 * @return true if values match, false otherwise
 */","* This will tell if this radio button is currently checked or not.
     * This is equivalent to calling {@link #getValue()}.
     *
     * @return true If this field is checked.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,check,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:check(),74,77,"/**
 * Sets value to on-value.
 * Throws IOException if an I/O error occurs.
 */","* Checks the check box.
     * 
     * @throws IOException if the appearance couldn't be generated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FileSystemFontProvider.java,<init>,org.apache.pdfbox.pdmodel.font.FileSystemFontProvider:<init>(org.apache.pdfbox.pdmodel.font.FontCache),323,363,"/**
* Initializes font provider with system fonts.
* @param cache FontCache instance for caching font info
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/FDFParser.java,<init>,org.apache.pdfbox.pdfparser.FDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),36,39,"/**
 * Constructs an FDFParser instance.
 * @param source RandomAccessRead object representing the data source
 * @throws IOException if an I/O error occurs
 */","* Constructs parser for given file using memory buffer.
     * 
     * @param source the source of the pdf to be parsed
     * 
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,"org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",58,61,"/**
* Constructs a PDF parser with a source and optional password.
* @param source RandomAccessRead object representing the PDF file
* @param decryptionPassword password for decrypting the PDF, if encrypted
*/","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source input representing the pdf.
     * @param decryptionPassword password to be used for decryption.
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawPushPin,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawPushPin(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),132,183,"/**
 * Draws a pushpin on the PDF content stream.
 * @param contentStream the PDF content stream to draw on
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawGraph,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawGraph(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),185,271,"/**
* Draws a graph on the PDF using provided content stream.
* @param contentStream PDAppearanceContentStream to draw on
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,drawTag,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:drawTag(org.apache.pdfbox.pdmodel.PDAppearanceContentStream),273,323,"/**
 * Draws a tag shape on the PDF content stream.
 * @param contentStream the PDF content stream to draw on
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,drawStyle,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:drawStyle(java.lang.String,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float,float,float,boolean,boolean,boolean)",298,345,"/**
 * Draws line endings based on style.
 * @param style line ending style
 * @param cs appearance content stream
 * @param x x-coordinate
 * @param y y-coordinate
 * @param width line width
 * @param hasStroke true if stroke is present
 * @param hasBackground true if background is drawn
 * @param ending true for end, false for start
 * @throws IOException on I/O error
 */","* Draw a line ending style.
     * 
     * @param style
     * @param cs
     * @param x
     * @param y
     * @param width
     * @param hasStroke
     * @param hasBackground
     * @param ending false if left, true if right of an imagined horizontal line (important for
     * arrows).
     *
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(double,double)",1034,1046,"/**
 * Moves the drawing cursor to a new position.
 * @param x the new x-coordinate
 * @param y the new y-coordinate
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(double,double)",1053,1065,"/**
* Draws a line to the specified coordinates.
* @param x destination X coordinate
* @param y destination Y coordinate
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDExportFormatAttributeObject.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDExportFormatAttributeObject:toString(),235,264,"/**
 * Overrides toString to include table attributes.
 * @return String representation of the object with specified attributes
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getBoundingBox(),205,213,"/**
* Returns the bounding box of the font.
* Generates and caches it if not already created.
* @return BoundingBox object representing the font's dimensions
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getBoundingBox(),196,204,"/**
* Returns the bounding box of the font.
* @return BoundingBox object representing the font's dimensions
* @throws IOException if an I/O error occurs during generation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getBoundingBox(),329,337,"/**
 * Retrieves the bounding box of the font.
 * @return BoundingBox object representing the font's dimensions
 * @throws IOException if an I/O error occurs during retrieval
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1CFont:getBoundingBox(),254,262,"/**
 * Retrieves the bounding box for the font.
 * Generates it if not already cached.
 * @return BoundingBox object representing the font's dimensions
 * @throws IOException if an error occurs during generation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType1Font:getBoundingBox(),537,545,"/**
* Retrieves or generates the bounding box for a font.
* @return BoundingBox object representing the font's dimensions
* @throws IOException if an error occurs during generation
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",97,104,"/**
 * Initializes tiling paint for a given pattern.
 * @param drawer the page drawer to use
 * @param pattern the tiling pattern to apply
 * @param colorSpace the color space for painting
 * @param color the color to use for painting
 * @param xform the transformation matrix
 * @throws IOException if an I/O error occurs
 */","* Creates a new tiling Paint. The parameters color and colorSpace must be null for a colored
     * tiling Paint (because it has its own colors), and non null for an uncolored tiling Paint.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param colorSpace color space for this tiling
     * @param color color for this tiling
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setTransformationMatrix,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setTransformationMatrix(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),509,516,"/**
* Sets transformation matrix for appearance stream.
* Adjusts bounding box and translation based on rectangle.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawRaster(),525,529,"/**
* Retrieves raw raster data.
* @return WritableRaster object containing image data
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawRaster,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawRaster(),359,363,"/**
 * Retrieves raw raster data.
 * @return WritableRaster object containing pixel data
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(java.awt.Rectangle,int)",597,600,"/**
 * Retrieves an opaque image from a specified region with subsampling.
 * @param region the area of the image to retrieve
 * @param subsampling factor for reducing image resolution
 * @return BufferedImage object representing the opaque image
 * @throws IOException if an I/O error occurs during image retrieval
 */","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @param region The region of the source image to get, or null if the entire image is needed. The actual region
     * will be clipped to the dimensions of the source image.
     * 
     * @param subsampling The amount of rows and columns to advance for every output pixel, a value of 1 meaning every
     * pixel will be read. It must not be larger than the image width or height.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(java.awt.Rectangle,int)",353,357,"/**
 * Retrieves an image from a specified region with subsampling.
 * @param region the area of the image to retrieve
 * @param subsampling factor for reducing image resolution
 * @return BufferedImage object or null if retrieval fails
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java,getRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.SampledImageReader:getRGBImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,org.apache.pdfbox.cos.COSArray)",136,139,"/**
 * Converts PDImage to RGB BufferedImage.
 * @param pdImage PDF image object
 * @param colorKey optional color key mask array
 * @return RGB BufferedImage representation of the image
 * @throws IOException if an I/O error occurs
 */","* Returns the content of the given image as an AWT buffered image with an RGB color space.
     * If a color key mask is provided then an ARGB image is returned instead.
     * This method never returns null.
     * @param pdImage the image to read
     * @param colorKey an optional color key mask
     * @return content of this image as an RGB buffered image
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,pushResources,org.apache.pdfbox.contentstream.PDFStreamEngine:pushResources(org.apache.pdfbox.contentstream.PDContentStream),576,602,"/**
 * Pushes resources from content stream to current context.
 * @param contentStream the content stream to process
 * @return previous resource state
 */","* Pushes the given stream's resources, returning the previous resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,hasBlendMode,org.apache.pdfbox.rendering.PDFRenderer:hasBlendMode(org.apache.pdfbox.pdmodel.PDPage),533,556,"/**
* Checks if a page has any non-normal blend modes.
* @param page the PDF page to check
* @return true if non-normal blend mode is found, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,calculateAffineTransform,"org.apache.pdfbox.multipdf.Overlay:calculateAffineTransform(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.common.PDRectangle)",575,583,"/**
* Calculates affine transform to center an overlay on a page.
* @param page the PDPage to apply the transformation to
* @param overlayMediaBox the media box of the overlay content
* @return AffineTransform for centering the overlay
*/","* Calculate the transform to be used when positioning the overlay. The default implementation
     * centers on the destination. Override this method to do your own, e.g. move to a corner, or
     * rotate.
     *
     * @param page The page that will get the overlay.
     * @param overlayMediaBox The overlay media box.
     * @return The affine transform to be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedMediaBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedMediaBox(org.apache.pdfbox.pdmodel.PDPage),348,361,"/**
 * Returns the rotated media box of a page.
 * @param page PDF page object
 * @return PDRectangle representing the rotated media box
 */","* This will find the MediaBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The MediaBox at this level in the hierarchy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isMarked(),67,70,"/**
 * Checks if the item is marked.
 * @return true if marked, false otherwise
 */","* Tells if this is a tagged PDF.
     *
     * @return true If this is a tagged PDF.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,usesUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:usesUserProperties(),87,90,"/**
 * Checks if user properties are used.
 * @return true if UserProperties is enabled, false otherwise
 */","* Tells if structure elements use user properties.
     *
     * @return A boolean telling if the structure elements use user properties.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,isSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:isSuspect(),108,111,"/**
 * Checks if the entity is marked as a suspect.
 * @return true if the entity is a suspect, false otherwise
 */","* Tells if this PDF contain 'suspect' tags.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this property.
     *
     * @return true if the suspect flag has been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,shouldTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:shouldTrackMousePosition(),106,109,"/**
 * Determines if mouse position tracking is enabled.
 * @return true if tracking is enabled, false otherwise
 */","* This will specify whether to track the mouse position when the URI is
     * resolved. Default value: false. This entry applies only to actions
     * triggered by the user's clicking an annotation; it is ignored for actions
     * associated with outline items or with a document's OpenAction entry.
     *
     * @return A flag specifying whether to track the mouse position when the
     * URI is resolved.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getOpen(),74,77,"/**
 * Checks if the document is open.
 * @return true if the document is open, false otherwise
 */","* This will retrieve the initial state of the annotation, open Or closed (default closed).
     *
     * @return The initial state, true = open false = closed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,isFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:isFD(),201,204,"/**
 * Checks if the ""FD"" flag is set.
 * @return true if ""FD"" flag is set, false otherwise
 */","* This will return the value indication if the denominator of the fractional value is reduced/truncated .
     * 
     * @return fd",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:toString(),145,152,"/**
* Returns a string representation of the object.
* @return formatted string with name, value, formatted value, and hidden status
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getNonStrokingOverprintControl(),383,386,"/**
* Retrieves non-stroking overprint control setting.
* @return true if non-stroking overprint is enabled, false otherwise
*/","* This will get the overprint control for non stroking operations.  If this
     * value is null then the regular overprint control value will be returned.
     *
     * @return The overprint control or null if one has not been set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",929,932,"/**
* Retrieves an integer from an embedded dictionary.
* @param embeddedDictionary the dictionary to search within
* @param key the key for the integer value
* @return the integer value or -1 if not found
*/","* Get an integer from an embedded dictionary. Useful for 1-1 mappings. default:-1
     *
     * @param embeddedDictionary The name of the embedded dictionary.
     * @param key The key in the embedded dictionary.
     *
     * @return The value of the embedded integer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,getDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:getDenominator(),181,184,"/**
 * Retrieves the denominator value.
 * @return integer representing the denominator
 */","* This will return the precision or denominator of a fractional amount.
     * 
     * @return the precision or denominator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,encode,"org.apache.pdfbox.filter.CCITTFaxFilter:encode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",149,158,"/**
 * Encodes input stream using CCITT Fax encoding.
 * @param input the input stream to encode
 * @param encoded the output stream for encoded data
 * @param parameters dictionary containing encoding parameters (columns, rows)
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/Predictor.java,wrapPredictor,"org.apache.pdfbox.filter.Predictor:wrapPredictor(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",235,250,"/**
* Wraps output stream with a predictor.
* @param out original output stream
* @param decodeParams parameters for decoding
* @return wrapped output stream or original if no prediction needed
*/","* Wraps and <code>OutputStream</code> in a predictor decoding stream as necessary.
     * If no predictor is specified by the parameters, the original stream is returned as is.
     *
     * @param out The stream to which decoded data should be written
     * @param decodeParams Decode parameters for the stream
     * @return An <code>OutputStream</code> is returned, which will write decoded data
     * into the given stream. If no predictor is specified, the original stream is returned.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getStructParents,org.apache.pdfbox.pdmodel.PDPage:getStructParents(),366,369,"/**
* Retrieves the structure parents value.
* @return integer representing structure parents or default value
*/","* This will get the key of this Page in the structural parent tree.
     * 
     * @return the integer key of the page's entry in the structural parent tree or -1 if
     * there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getBitsPerSample(),111,114,"/**
 * Retrieves bits per sample from COS object.
 * @return integer representing bits per sample
 */","* Get the number of bits that the output value will take up.  
     * 
     * Valid values are 1,2,4,8,12,16,24,32.
     *
     * @return Number of bits for each output value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:getMCID(),89,92,"/**
 * Retrieves MCID value from COSObject.
 * @return integer MCID or default if not found
 */","* Gets the marked content identifier.
     * 
     * @return the marked content identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,getParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:getParentTreeNextKey(),155,158,"/**
* Retrieves the next key in the parent tree.
* @return integer value of the next key or default if not present
*/","* Returns The next key for the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     *
     * @return The next key for the parent tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/markedcontent/PDMarkedContent.java,getMCID,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent:getMCID(),97,101,"/**
* Retrieves MCID from properties.
* @return MCID value or -1 if properties are null
*/","* Gets the marked-content identifier.
     * 
     * @return the marked-content identifier, or -1 if it doesn't exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,getSupplement,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:getSupplement(),57,60,"/**
 * Retrieves the supplement value from the dictionary.
 * @return integer supplement value or default if not set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineCapStyle(),242,245,"/**
 * Retrieves the line cap style from the dictionary.
 * @return integer representing the line cap style
 */","* This will get the line cap style.
     *
     * @return null or the LC value of the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,getLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:getLineJoinStyle(),262,265,"/**
 * Retrieves line join style from dictionary.
 * @return integer representing line join style
 */","* This will get the line join style.
     *
     * @return null or the LJ value in the dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getStructParent(),683,686,"/**
 * Retrieves the structure parent index.
 * @return index of the parent structure element
 */","* This will get the key of this annotation in the structural parent tree.
     *
     * @return the integer key of the annotation's entry in the structural parent tree or -1 if
     * there isn't any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,getP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:getP(),67,70,"/**
 * Retrieves the integer value associated with key ""P"".
 * @return integer value of key ""P"" or default if not found
 */","* Return the P value.
     * 
     * @return the P value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,getMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:getMaxLen(),193,196,"/**
 * Retrieves the maximum length value.
 * @return integer representing the maximum length
 */","* Returns the maximum number of characters of the text field.
     * 
     * @return the maximum number of characters, returns -1 if the value isn't present",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getInteger(java.lang.String,int)",253,256,"/**
 * Retrieves an integer value by key from the COS object.
 * @param name key of the integer in the COS object
 * @param defaultValue default value if the key is not found
 * @return integer value associated with the key or default value
 */","* Gets an integer.
     * 
     * @param name the attribute name
     * @param defaultValue the default value
     * @return the integer",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isInvisible(),502,505,"/**
 * Checks if the annotation is invisible.
 * @return true if the annotation is invisible, false otherwise
 */","* Get the invisible flag.
     *
     * @return The invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isHidden(),522,525,"/**
 * Checks if the annotation is hidden.
 * @return true if hidden, false otherwise
 */","* Get the hidden flag.
     *
     * @return The hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isPrinted(),542,545,"/**
 * Checks if the document has been printed.
 * @return true if printed, false otherwise
 */","* Get the printed flag.
     *
     * @return The printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoZoom(),562,565,"/**
 * Checks if zooming is disabled.
 * @return true if no zoom flag is set, false otherwise
 */","* Get the noZoom flag.
     *
     * @return The noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoRotate(),582,585,"/**
 * Checks if annotation rotation is disabled.
 * @return true if no rotate flag is set, false otherwise
 */","* Get the noRotate flag.
     *
     * @return The noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isNoView(),602,605,"/**
* Checks if the annotation should not be viewed.
* @return true if no view flag is set, false otherwise
*/","* Get the noView flag.
     *
     * @return The noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isReadOnly(),622,625,"/**
 * Checks if the annotation is read-only.
 * @return true if the annotation is read-only, false otherwise
 */","* Get the readOnly flag.
     *
     * @return The readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLocked(),642,645,"/**
 * Checks if the annotation is locked.
 * @return true if locked, false otherwise
 */","* Get the locked flag.
     *
     * @return The locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isToggleNoView(),662,665,"/**
 * Checks if toggle no view flag is set.
 * @return true if toggle no view is enabled, false otherwise
 */","* Get the toggleNoView flag.
     *
     * @return The toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:isLockedContents(),682,685,"/**
 * Checks if contents are locked.
 * @return true if contents are locked, false otherwise
 */","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isInvisible(),397,400,"/**
 * Checks if the object is invisible.
 * @return true if the object is invisible, false otherwise
 */","* Get the invisible flag.
     * 
     * @return The invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isHidden(),417,420,"/**
 * Checks if the object is hidden.
 * @return true if hidden, false otherwise
 */","* Get the hidden flag.
     * 
     * @return The hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isPrinted(),437,440,"/**
 * Checks if the document has been printed.
 * @return true if printed, false otherwise
 */","* Get the printed flag.
     * 
     * @return The printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoZoom(),457,460,"/**
* Checks if zooming is disabled.
* @return true if no zoom is allowed, false otherwise
*/","* Get the noZoom flag.
     * 
     * @return The noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoRotate(),477,480,"/**
* Checks if rotation is disabled.
* @return true if no rotate flag is set, false otherwise
*/","* Get the noRotate flag.
     * 
     * @return The noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isNoView(),497,500,"/**
 * Checks if the document should not be viewed.
 * @return true if the document has the no-view flag set, false otherwise
 */","* Get the noView flag.
     * 
     * @return The noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isReadOnly(),517,520,"/**
 * Checks if the document is read-only.
 * @return true if the document is read-only, false otherwise
 */","* Get the readOnly flag.
     * 
     * @return The readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLocked(),537,540,"/**
* Checks if the document is locked.
* @return true if the document is locked, false otherwise
*/","* Get the locked flag.
     * 
     * @return The locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isToggleNoView(),557,560,"/**
* Checks if toggle no view flag is set.
* @return true if flag is set, false otherwise
*/","* Get the toggleNoView flag.
     * 
     * @return The toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,isLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:isLockedContents(),578,581,"/**
* Checks if contents are locked.
* @return true if contents are locked, false otherwise
*/","* Get the LockedContents flag.
     *
     * @return The LockedContents flag.
     * @see #setLockedContents(boolean)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isFilterRequired(),116,119,"/**
 * Checks if filtering is required.
 * @return true if filter is needed, false otherwise
 */","*
     * @return true if the Filter is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isSubFilterRequired(),135,138,"/**
 * Checks if subfilter is required.
 * @return true if subfilter is required, false otherwise
 */","*
     * @return true if the SubFilter is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isDigestMethodRequired(),154,157,"/**
* Checks if digest method is required.
* @return true if digest method is required, false otherwise
*/","*
    * @return true if the DigestMethod is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isVRequired(),173,176,"/**
 * Checks if 'v' flag is required.
 * @return true if 'v' flag is set, false otherwise
 */","*
    * @return true if the V entry is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isReasonRequired(),192,195,"/**
 * Checks if reason is required.
 * @return true if reason is required, false otherwise
 */","*
    * @return true if the Reason is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isLegalAttestationRequired(),211,214,"/**
* Checks if legal attestation is required.
* @return true if legal attestation is required, false otherwise
*/","*
    * @return true if the LegalAttestation is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,isAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:isAddRevInfoRequired(),230,233,"/**
* Checks if revision information addition is required.
* @return true if required, false otherwise
*/","*
    * @return true if the AddRevInfo is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectRequired(),104,107,"/**
 * Checks if subject is required.
 * @return true if subject is required, false otherwise
 */","*
     * @return true if the Subject is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isIssuerRequired(),123,126,"/**
 * Checks if issuer is required.
 * @return true if issuer is required, false otherwise
 */","*
     * @return true if the Issuer is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isOIDRequired(),142,145,"/**
 * Checks if OID (Object Identifier) is required.
 * @return true if OID is required, false otherwise
 */","*
     * @return true if the OID is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isSubjectDNRequired(),161,164,"/**
 * Checks if subject DN (Distinguished Name) is required.
 * @return true if subject DN is required, false otherwise
 */","*
     * @return true if the Subject DN is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isKeyUsageRequired(),180,183,"/**
 * Checks if key usage is required.
 * @return true if key usage is mandatory, false otherwise
 */","*
     * @return true if the KeyUsage is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,isURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:isURLRequired(),199,202,"/**
 * Checks if URL input is required.
 * @return true if URL is required, false otherwise
 */","*
     * @return true if the URL is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isItalic(),364,367,"/**
 * Checks if the font style is italic.
 * @return true if the font is italic, false otherwise
 */","* A flag telling if the text should be italic.
     *
     * @return The italic flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,isBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:isBold(),384,387,"/**
 * Checks if the text is bold.
 * @return true if text is bold, false otherwise
 */","* A flag telling if the text should be bold.
     *
     * @return The bold flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isSignaturesExist(),632,635,"/**
 * Checks if signatures exist in the document.
 * @return true if signatures are present, false otherwise
 */","* Determines if SignaturesExist is set.
     * 
     * @return true if the document contains at least one signature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isAppendOnly(),652,655,"/**
 * Checks if the document is in append-only mode.
 * @return true if the document supports appending only, false otherwise
 */","* Determines if AppendOnly is set.
     * 
     * @return true if the document contains signatures that may be invalidated if the file is saved.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isPushButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isPushButton(),87,90,"/**
 * Checks if the field is a push button.
 * @return true if the field is a push button, false otherwise
 */","* Determines if push button bit is set.
     * 
     * @return true if type of button field is a push button.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,isRadioButton,org.apache.pdfbox.pdmodel.interactive.form.PDButton:isRadioButton(),97,100,"/**
 * Checks if the field is a radio button.
 * @return true if the field is a radio button, false otherwise
 */","* Determines if radio button bit is set.
     * 
     * @return true if type of button field is a radio button.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isSort(),272,275,"/**
 * Checks if sorting is enabled.
 * @return true if sorting is enabled, false otherwise
 */","* Determines if Sort is set.
     * 
     * <p>
     * If set, the field’s option items shall be sorted alphabetically.
     * The sorting has to be done when writing the PDF. PDF Readers are supposed to
     * display the options in the order in which they occur in the Opt array. 
     * </p>
     * 
     * @return true if the options are sorted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isMultiSelect(),293,296,"/**
* Checks if the field allows multiple selections.
* @return true if multi-select is enabled, false otherwise
*/","* Determines if MultiSelect is set.
     * 
     * @return true if multi select is allowed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isDoNotSpellCheck(),313,316,"/**
* Checks if spell checking is disabled.
* @return true if spell checking is disabled, false otherwise
*/","* Determines if DoNotSpellCheck is set.
     * 
     * @return true if spell checker is disabled.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCommitOnSelChange(),333,336,"/**
* Checks if commit on selection change is enabled.
* @return true if commit on selection change is enabled, false otherwise
*/","* Determines if CommitOnSelChange is set.
     * 
     * @return true if value shall be committed as soon as a selection is made.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,isCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:isCombo(),353,356,"/**
 * Checks if field is a combo box.
 * @return true if field is a combo box, false otherwise
 */","* Determines if Combo is set.
     * 
     * @return true if value the choice is a combo box..",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,isEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:isEdit(),63,66,"/**
 * Checks if the field is editable.
 * @return true if the field can be edited, false otherwise
 */","* Determines if Edit is set.
     * 
     * @return true if the combo box shall include an editable text box as well as a drop-down list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:isReadOnly(),157,160,"/**
 * Checks if the field is read-only.
 * @return true if the field is read-only, false otherwise
 */","* 
     * @return true if the field is readonly",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:isRequired(),177,180,"/**
 * Checks if the field is required.
 * @return true if the field is marked as required, false otherwise
 */","* @return true if the field is required to have a value at the time it is exported by a
     * submit-form action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,isNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:isNoExport(),196,199,"/**
 * Checks if the field should not be exported.
 * @return true if no export flag is set, false otherwise
 */","* 
     * @return true if the field is not to be exported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,isRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:isRadiosInUnison(),78,81,"/**
* Checks if radio buttons are in unison mode.
* @return true if radios are in unison, false otherwise
*/","*
     * @return true If the flag is set for radios in unison.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isMultiline(),65,68,"/**
 * Checks if the field allows multiline input.
 * @return true if multiline is enabled, false otherwise
 */",* @return true if the field is multiline,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isPassword(),83,86,"/**
 * Checks if the field requires a password.
 * @return true if password is required, false otherwise
 */",* @return true if the field is a password field.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isFileSelect(),101,104,"/**
* Checks if file selection is enabled.
* @return true if file select flag is set, false otherwise
*/",* @return true if the field is a file select field.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotSpellCheck(),119,122,"/**
* Checks if spell checking is disabled.
* @return true if spell checking is disabled, false otherwise
*/",* @return true if the field is not suppose to spell check.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,doNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:doNotScroll(),137,140,"/**
 * Checks if scrolling is disabled.
 * @return true if scrolling is disabled, false otherwise
 */",* @return true if the field is not suppose to scroll.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isComb(),155,158,"/**
 * Checks if the field should be displayed as a combo box.
 * @return true if the field is a combo box, false otherwise
 */",* @return true if the field is not suppose to comb the text display.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,isRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:isRichText(),173,176,"/**
* Checks if text field supports rich text.
* @return true if rich text is enabled, false otherwise
*/",* @return true if the field is a rich text field.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,next,org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelGenerator:next(),314,341,"/**
* Generates the next page label.
* @return formatted page label string
* @throws NoSuchElementException if no more pages
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",119,289,"/**
* Prepares for decryption by validating material and extracting encryption key.
* @param encryption PDEncryption object containing encryption details
* @param documentIDArray COSArray of document IDs
* @param decryptionMaterial DecryptionMaterial used for decryption
* @throws IOException if decryption preparation fails
*/","* Prepares everything to decrypt the document.
     *
     * @param encryption encryption dictionary, can be retrieved via
     * {@link PDDocument#getEncryption()}
     * @param documentIDArray document id which is returned via
     * {@link org.apache.pdfbox.cos.COSDocument#getDocumentID()} (not used by
     * this handler)
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws IOException If there is an error accessing data. If verbose mode
     * is enabled, the exception message will provide more details why the
     * match wasn't successful.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getOwnerKey(),273,291,"/**
 * Retrieves the owner encryption key.
 * @return byte array of the owner key or null if not found
 * @throws IOException if an I/O error occurs
 */","* This will get the O entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,getUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:getUserKey(),312,330,"/**
* Retrieves user key from PDF dictionary.
* @return byte array containing user key or null if not found
* @throws IOException if an I/O error occurs
*/","* This will get the U entry in the standard encryption dictionary.
     *
     * @return A 32 byte array or null if there is no user key.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDFont:getDisplacement(int),250,253,"/**
* Calculates displacement vector from width code.
* @param code width identifier
* @return Vector representing displacement or null if invalid
*/","* Returns the displacement vector (w0, w1) in text space, for the given character. For horizontal text only the x
     * component is used, for vertical text only the y component.
     *
     * @param code character code
     * @return displacement vector
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getStringWidth,org.apache.pdfbox.pdmodel.font.PDFont:getStringWidth(java.lang.String),367,380,"/**
 * Calculates the width of a string.
 * @param text input string to measure
 * @return total width of the string
 * @throws IOException if an I/O error occurs
 */","* Returns the width of the given Unicode string.
     *
     * @param text The text to get the width of.
     * @return The width of the string in 1/1000 units of text space.
     * @throws IOException If there is an error getting the width information.
     * @throws IllegalArgumentException if a character isn't supported by the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFlagBitOn,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFlagBitOn(int),250,253,"/**
 * Checks if a specific flag bit is set.
 * @param bit the flag bit to check
 * @return true if the bit is on, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getPattern,org.apache.pdfbox.pdmodel.PDResources:getPattern(org.apache.pdfbox.cos.COSName),325,350,"/**
 * Retrieves a PDF pattern by name.
 * @param name the name of the pattern
 * @return PDAbstractPattern object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the pattern resource with the given name, or null if none exists.
     * 
     * @param name Name of the pattern resource.
     * @return the pattern with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getShading,org.apache.pdfbox.pdmodel.PDResources:getShading(org.apache.pdfbox.cos.COSName),290,315,"/**
* Retrieves a shading pattern by name.
* @param name the COSName of the shading
* @return PDShading object or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the shading resource with the given name, or null if none exists.
     *
     * @param name Name of the shading resource.
     * @return the shading state with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,getShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:getShading(),90,101,"/**
* Retrieves the shading for this resource.
* @return PDShading object or null if not found
* @throws IOException if an I/O error occurs
*/","* This will get the shading resources for this pattern.
     * @return The shading resources for this pattern.
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerComponent(),60,68,"/**
* Retrieves the number of bits per color component.
* @return int value representing bits per component
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerComponent(),60,68,"/**
* Retrieves the number of bits per color component.
* @return int representing bits per component or -1 if not set
*/","* The bits per component of this shading. This will return -1 if one has not been set.
     *
     * @return the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:getBitsPerCoordinate(),87,95,"/**
* Retrieves the number of bits per coordinate.
* @return int representing bits per coordinate or default value if not set
*/","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,getBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:getBitsPerCoordinate(),87,95,"/**
 * Retrieves the number of bits per coordinate.
 * @return int value representing bits per coordinate
 */","* The bits per coordinate of this shading. This will return -1 if one has
     * not been set.
     *
     * @return the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveRotation,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveRotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),346,355,"/**
* Resolves rotation of annotation widget.
* @param widget PDF annotation widget
* @return rotation angle or 0 if not specified
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,isNodeOpen,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:isNodeOpen(),274,277,"/**
 * Checks if the node is open.
 * @return true if the node has open slots, false otherwise
 */","* @return true if this node count is greater than zero, false otherwise.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldFactory.java,createField,"org.apache.pdfbox.pdmodel.interactive.form.PDFieldFactory:createField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",50,95,"/**
* Creates a PDField based on the given COSDictionary.
* @param form PDAcroForm containing the field
* @param field COSDictionary representing the field
* @param parent PDNonTerminalField parent of the field
* @return PDField instance or null if unsupported type
*/","* Creates a COSField subclass from the given field.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created 
     * @return the corresponding PDField instance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxSelectionHighlight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxSelectionHighlight(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",772,811,"/**
* Highlights selected options in a PDF listbox.
* @param contents content stream for drawing
* @param appearanceStream appearance stream of the field
* @param font font used for rendering
* @param fontSize size of the font
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getFieldFlags(),71,85,"/**
* Retrieves field flags.
* @return integer value of field flags, or 0 if not set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getXObject,org.apache.pdfbox.pdmodel.PDResources:getXObject(org.apache.pdfbox.cos.COSName),419,451,"/**
 * Retrieves an XObject by name.
 * @param name the COSName of the XObject to retrieve
 * @return PDXObject instance or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the XObject resource with the given name, or null if none exists.
     * 
     * @param name Name of the XObject resource.
     * @return the XObject with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/AxialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.AxialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",56,69,"/**
* Creates a PaintContext for axial shading.
* @param cm the color model of the target device
* @param deviceBounds the bounding box of the device space
* @param userBounds the bounding box of the user space
* @param xform the transformation from user space to device space
* @param hints rendering hints
* @return a PaintContext for axial shading or a transparent context if an error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/RadialShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.RadialShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a paint context for radial shading.
* @param cm color model for the paint
* @param deviceBounds bounding box of the device area
* @param userBounds bounding box of the user space
* @param xform transformation from user to device space
* @param hints rendering hints
* @return PaintContext object or a transparent context if an error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/GouraudShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.GouraudShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShading,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",51,55,"/**
* Initializes GouraudShadingContext with given parameters.
* @param shading PDShading object representing the shading
* @param colorModel ColorModel for color conversion
* @param xform AffineTransform for coordinate transformation
* @param matrix Matrix for additional transformations
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type1ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type1ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a PaintContext for rendering.
* @param cm ColorModel for the context
* @param deviceBounds Device space bounding box
* @param userBounds User space bounding box
* @param xform Transformation from user to device space
* @param hints RenderingHints for the context
* @return PaintContext for rendering or a transparent one on error
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,createInputStream,org.apache.pdfbox.cos.COSStream:createInputStream(),164,167,"/**
 * Creates an input stream with default decode options.
 * @return COSInputStream instance
 * @throws IOException if an I/O error occurs
 */","* Returns a new InputStream which reads the decoded stream data.
     * 
     * @return InputStream containing decoded stream data.
     * @throws IOException If the stream could not be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(org.apache.pdfbox.filter.DecodeOptions),186,189,"/**
 * Creates an input stream with specified decode options.
 * @param options decoding options to apply
 * @return COSInputStream for reading data
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectStreamObject,"org.apache.pdfbox.pdfparser.COSParser:parseObjectStreamObject(long,org.apache.pdfbox.cos.COSObjectKey)",621,658,"/**
* Parses objects from a PDF object stream.
* @param objstmObjNr object stream number
* @param key object key to parse
* @return parsed COSBase object or null if not found
*/","* Parse the object with the given key from the object stream with the given number.
     * 
     * @param objstmObjNr the number of the offset stream
     * @param key the key of the object to be parsed
     * @return the parsed object
     * @throws IOException if something went wrong when parsing the object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContents,org.apache.pdfbox.pdmodel.PDPage:getContents(),221,230,"/**
* Retrieves the contents as an InputStream.
* @return InputStream of the contents or empty stream if not available
*/","* Returns the content stream(s) of this page as a single input stream.
     *
     * @return An InputStream, never null. Multiple content streams are concatenated and separated
     * with a newline. An empty stream is returned if the page doesn't have any content stream.
     * @throws IOException If the stream could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getContentsForStreamParsing,org.apache.pdfbox.pdmodel.PDPage:getContentsForStreamParsing(),232,257,"/**
* Returns a random access reader for parsing PDF page contents.
* Supports streams with FlateDecode filter, falls back to other methods if unsupported.
* @return RandomAccessRead object for content parsing
* @throws IOException on I/O errors during stream processing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",70,73,"/**
* Constructs a PDCIDFontType2 from a font dictionary.
* @param fontDictionary the COSDictionary containing font info
* @param parent the parent PDType0Font
*/","* Constructor.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param parent The parent font.
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getCIDFont(),673,676,"/**
* Creates and returns a PDCIDFontType2 instance.
* @throws IOException if an I/O error occurs during font creation
*/",* Returns the descendant CIDFont.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadUnicodeCmap,org.apache.pdfbox.pdmodel.font.PDFont:loadUnicodeCmap(),134,172,"/**
 * Loads Unicode CMap from font dictionary.
 * @return CMap object or null if loading fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,getFontTypeFromFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:getFontTypeFromFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",214,258,"/**
 * Determines the font type from a PDF font descriptor.
 * @param fontDescriptor dictionary containing font information
 * @param fontType name of the font type
 * @return FontType object or null if unrecognized
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getContents,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getContents(),76,80,"/**
* Returns an InputStream for accessing contents.
* @return InputStream of contents
* @throws IOException if access fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,getContents,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:getContents(),157,161,"/**
 * Returns an input stream for accessing contents.
 * @return InputStream for reading contents
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,getContents,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:getContents(),174,180,"/**
 * Retrieves the contents as an input stream.
 * @return InputStream of the contents or null if not available
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getPositionVector,org.apache.pdfbox.pdmodel.font.PDType0Font:getPositionVector(int),491,496,"/**
* Retrieves and scales the position vector for a given character code.
* @param code character code
* @return scaled position vector as Vector object
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,collect,org.apache.pdfbox.cos.COSIncrement:collect(org.apache.pdfbox.cos.COSDictionary),112,157,"/**
 * Collects and updates entries in a COSDictionary.
 * @param dictionary the dictionary to process
 * @return true if child entries demand parent update, false otherwise
 */","* Collect all updates made to the given {@link COSDictionary} and it's contained structures.
     *
     * @param dictionary The {@link COSDictionary} updates shall be collected for.
     * @return Returns {@code true}, if the {@link COSDictionary} represents a direct child structure, that would
     * require it´s parent to be updated instead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,getObjects,org.apache.pdfbox.cos.COSIncrement:getObjects(),337,345,"/**
* Returns the set of COSBase objects.
* Initializes by collecting from incrementOrigin if not already done.
* @return Set of COSBase objects
*/","* Returns all indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.<br>
     * Calling this method will cause the increment to be initialized.
     *
     * @return All indirect {@link COSBase}s, that shall be written to an increment as top level {@link COSObject}s.
     * @see #objects",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.cos.COSBase),83,97,"/**
 * Adds a COSBase object to the collection.
 * @param object the COSBase object to add
 */","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,"org.apache.pdfbox.cos.COSArray:add(int,org.apache.pdfbox.cos.COSBase)",121,135,"/**
 * Adds an object to the list at a specified index.
 * @param i index at which to add the object
 * @param object COSBase object to be added
 */","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param object The object to add at that index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.cos.COSBase)",220,234,"/**
 * Sets an object at the specified index.
 * @param index position in the list
 * @param object COSBase object to set
 */","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)",198,219,"/**
* Sets an item in the dictionary with a key.
* @param key the COSName key for the item
* @param value the COSBase value to set, null removes the item
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(java.util.Collection),175,181,"/**
 * Adds all elements from the provided list to the collection.
 * @param objectsList list of COSBase objects to add
 */","* This will add an object to the array.
     *
     * @param objectsList The object to add to the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,"org.apache.pdfbox.cos.COSArray:addAll(int,java.util.Collection)",206,212,"/**
* Adds all elements from the specified collection to this list at the specified position.
* @param i index at which to insert the first element from the specified collection
* @param objectList collection containing elements to be added to this list
*/","* Add the specified object at the ith location and push the rest to the
     * right.
     *
     * @param i The index to add at.
     * @param objectList The object to add at that index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSUpdateState.java,update,org.apache.pdfbox.cos.COSUpdateState:update(org.apache.pdfbox.cos.COSArray),278,281,"/**
 * Updates elements from a COSArray.
 * @param children array of COSBase objects to update
 */","* <p>
     * Shall call {@link #update()} for this {@link COSUpdateState} and shall
     * {@link #setOriginDocumentState(COSDocumentState)} for the given children, initializing their {@link #updated}
     * state and {@link #originDocumentState}.
     * </p>
     * <p>
     * This shall have no effect for a child, that is not an instance of {@link COSUpdateInfo}.
     * </p>
     *
     * @param children The children that shall also be updated.
     * @see #update()
     * @see #setOriginDocumentState(COSDocumentState)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getRoleMap(),758,766,"/**
 * Retrieves the role map from the structure tree root.
 * @return Map containing roles or an empty map if no root is found
 */","* Returns the role map.
     * 
     * @return the role map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addObjectToPool,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addObjectToPool(org.apache.pdfbox.cos.COSObjectKey,org.apache.pdfbox.cos.COSBase)",100,157,"/**
* Adds a PDF object to the pool, handling indirect objects and object streams.
* @param key unique identifier for the COSBase object
* @param base the COSBase object to be added
* @return the COSBase object after processing
*/","* Adds the given {@link COSBase} to this pool, using the given {@link COSObjectKey} as it's referencable ID. This
     * method shall determine an appropriate key, for yet unregistered objects, to register them. Depending on the type
     * of object, it shall either be appended as-is or shall be appended to a compressed {@link COSWriterObjectStream}.
     *
     * @param key The {@link COSObjectKey} that shall be used as the {@link COSBase}s ID, if possible.
     * @param base The {@link COSBase}, that shall be registered in this pool.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,protect,org.apache.pdfbox.pdmodel.PDDocument:protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy),1323,1345,"/**
* Applies a protection policy to the document.
* @param policy the security policy to apply
* @throws IOException if no suitable security handler is found
*/","* Protects the document with a protection policy. The document content will be really
     * encrypted when it will be saved. This method only marks the document for encryption. It also
     * calls {@link #setAllSecurityToBeRemoved(boolean)} with a false argument if it was set to true
     * previously and logs a warning.
     * <p>
     * Do not use the document after saving, because the structures are encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @see org.apache.pdfbox.pdmodel.encryption.StandardProtectionPolicy
     * @see org.apache.pdfbox.pdmodel.encryption.PublicKeyProtectionPolicy
     *
     * @param policy The protection policy.
     * @throws IOException if there isn't any suitable security handler.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:getNormalizedPath(int),540,569,"/**
* Retrieves normalized path for a given character code.
* @param code character code
* @return GeneralPath object representing the character's path
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getGlyphName,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getGlyphName(int),306,314,"/**
* Retrieves glyph name for a given Unicode code.
* @param code Unicode code point
* @return Glyph name as String, or "".notdef"" if not found
*/","* Returns the name of the glyph with the given character code. This is done by looking up the
     * code in the parent font's ToUnicode map and generating a glyph name from that.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,codeToGID,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:codeToGID(int),249,333,"/**
* Converts character code to glyph ID.
* @param code character code to convert
* @return glyph ID or 0 if not found
* @throws IOException if an I/O error occurs
*/","* Returns the GID for the given character code.
     *
     * @param code character code
     * @return GID
     * @throws IOException if the mapping could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacSubtype(),179,183,"/**
 * Retrieves the MAC subtype from a PDF object.
 * @return The MAC subtype as a String or null if not found
 */","* Get the mac subtype.
     *
     * @return The mac subtype.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacCreator(),209,213,"/**
* Retrieves MAC creator from PDF document parameters.
* @return Creator string or null if not found
*/","* Get the mac Creator.
     *
     * @return The mac Creator.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,getMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:getMacResFork(),239,243,"/**
* Retrieves the Mac resource fork from PDF parameters.
* @return Resource fork string or null if not found
*/","* Get the mac ResFork.
     *
     * @return The mac ResFork.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getCIDFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getCIDFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo)",494,544,"/**
 * Retrieves CID font mapping for a given base font and descriptor.
 * @param baseFont the base font name
 * @param fontDescriptor the PDFontDescriptor object
 * @param cidSystemInfo the PDCIDSystemInfo object
 * @return CIDFontMapping object or default if not found
 */","* Finds a CFF CID-Keyed font with the given PostScript name, or a suitable substitute, or null.
     * This method can also map CJK fonts via their CIDSystemInfo (ROS).
     * 
     * @param fontDescriptor FontDescriptor
     * @param cidSystemInfo the CID system info, e.g. ""Adobe-Japan1"", if any.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(),427,442,"/**
 * Reads a byte from the decoded data.
 * @return next byte or 0 if no more data is available
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,read,"org.apache.pdfbox.filter.CCITTFaxDecoderStream:read(byte[],int,int)",444,465,"/**
 * Reads bytes from the input stream.
 * @param b destination buffer
 * @param off starting offset in buffer
 * @param len number of bytes to read
 * @return number of bytes actually read or -1 if end of stream
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxDecoderStream.java,skip,org.apache.pdfbox.filter.CCITTFaxDecoderStream:skip(long),467,485,"/**
* Skips the specified number of bytes.
* @param n number of bytes to skip
* @return actual number of bytes skipped or -1 if end reached
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,isOwnerPassword,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:isOwnerPassword(java.lang.String,byte[],byte[],int,byte[],int,int,boolean)",1107,1113,"/**
 * Checks if the provided password matches the owner's password.
 * @param password user-provided password string
 * @return true if password matches, false otherwise
 */","* Check for owner password.
     *
     * @param password The owner password.
     * @param user The u entry of the encryption dictionary.
     * @param owner The o entry of the encryption dictionary.
     * @param permissions The set of permissions on the document.
     * @param id The document id.
     * @param encRevision The encryption algorithm revision.
     * @param keyLengthInBytes The encryption key length in bytes.
     * @param encryptMetadata The encryption metadata
     *
     * @return True If the ownerPassword param is the owner password.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromStream,org.apache.pdfbox.pdfwriter.COSWriter:visitFromStream(org.apache.pdfbox.cos.COSStream),1391,1423,"/**
* Processes a COSStream object, encrypts it if needed, and writes its content to the output.
* @param obj the COSStream object to process
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decrypt,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decrypt(org.apache.pdfbox.cos.COSBase,long,long)",455,487,"/**
* Decrypts a PDF object.
* @param obj the PDF object to decrypt
* @param objNum the object number
* @param genNum the generation number
* @return decrypted COSBase object
*/","* This will dispatch to the correct method.
     *
     * @param obj The object to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation Number.
     * 
     * @return the encrypted/decrypted COS object
     *
     * @throws IOException If there is an error getting the stream data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromString,org.apache.pdfbox.pdfwriter.COSWriter:visitFromString(org.apache.pdfbox.cos.COSString),1425,1441,"/**
 * Writes a string to the output stream, encrypting it if required.
 * @param obj the string to write
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripperByArea.java,writePage,org.apache.pdfbox.text.PDFTextStripperByArea:writePage(),155,164,"/**
* Writes page content for each region.
* Iterates through regions, setting characters and output text before calling superclass method.
*/","* This will print the processed page text to the output stream.
     *
     * @throws IOException If there is an error writing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String),793,796,"/**
 * Retrieves date from COSDictionary using specified key.
 * @param key PDF dictionary key
 * @return Calendar object representing the date
 */","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary or if the date was invalid.
     *
     * @param key The key to the item in the dictionary.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",834,842,"/**
* Retrieves date from COSName key or returns default value.
* @param key the COSName key to search for
* @param defaultValue the default Calendar value if key is not found
* @return Calendar object associated with key or default value
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getCreationDate(),210,213,"/**
 * Retrieves the creation date of the document.
 * @return Calendar object representing the creation date, or null if not available
 */","* This will get the creation date of the document.  This will return null if no creation date exists.
     *
     * @return The creation date of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,getModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:getModificationDate(),230,233,"/**
 * Retrieves the modification date of the document.
 * @return Calendar object representing the modification date
 */","* This will get the modification date of the document.  This will return null if no modification date exists.
     *
     * @return The modification date of the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getCreationDate(),785,788,"/**
 * Retrieves the creation date of the annotation.
 * @return Calendar object representing the creation date
 * @throws IOException if an I/O error occurs while accessing the annotation
 */","* The annotation create date.
     *
     * @return The date of the creation of the annotation date
     *
     * @throws IOException If there is an error converting the string to a Calendar object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getCreationDate(),166,169,"/**
 * Returns the creation date of the PDF document.
 * @return Calendar object representing the creation date
 */","* This will retrieve the date and time the annotation was created.
     *
     * @return the creation date/time.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,getSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:getSignDate(),267,270,"/**
 * Retrieves the signing date from the document.
 * @return Calendar object representing the signing date or null if not available
 */","* Returns the sign date.
     *
     * @return the sign date",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeToken,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeToken(org.apache.pdfbox.contentstream.operator.Operator),81,84,"/**
 * Writes an Operator object to output.
 * @param op Operator object to be written
 * @throws IOException if I/O error occurs
 */","*  Writes a single operator token.
     *
     * @param op The operator to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeObject,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeObject(java.lang.Object),115,129,"/**
 * Writes an object to the output stream.
 * @param o the object to write
 * @throws IOException if an I/O error occurs or unknown type is encountered
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeObjectsToStream,org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeObjectsToStream(org.apache.pdfbox.cos.COSStream),109,157,"/**
* Writes prepared objects to a COSStream.
* @param stream the COSStream to write to
* @return the updated COSStream with written objects
* @throws IOException if an I/O error occurs
*/","* Writes all prepared {@link COSObject}s to the given {@link COSStream}.
     *
     * @param stream The stream for the compressed objects.
     * @return The given {@link COSStream} of this object stream.
     * @throws IOException Shall be thrown, if writing the object stream failed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSArray,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSArray(java.io.OutputStream,org.apache.pdfbox.cos.COSArray)",318,334,"/**
* Writes a COSArray to the given OutputStream.
* @param output target stream for writing
* @param cosArray array of COSBase objects to write
*/","* Write the given {@link COSArray} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosArray The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterObjectStream.java,writeCOSDictionary,"org.apache.pdfbox.pdfwriter.compress.COSWriterObjectStream:writeCOSDictionary(java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary)",342,359,"/**
* Writes a COSDictionary to the given OutputStream.
* @param output stream to write dictionary to
* @param cosDictionary dictionary to write
* @throws IOException if an I/O error occurs
*/","* Write the given {@link COSDictionary} to the given stream.
     *
     * @param output The stream, that shall be written to.
     * @param cosDictionary The content, that shall be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Writes text with positioning from an array.
 * @param textWithPositioningArray array containing Strings and Floats for text and positions
 * @throws IOException if writing fails
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDFormContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Writes text with positioning from an array.
 * @param textWithPositioningArray array containing Strings and Floats for text and positions
 * @throws IOException if writing fails
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPageContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Writes text with positioning from an array.
 * @param textWithPositioningArray array containing Strings and Floats for text and position
 * @throws IOException if I/O error occurs during writing
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showTextWithPositioning,org.apache.pdfbox.pdmodel.PDPatternContentStream:showTextWithPositioning(java.lang.Object[]),233,253,"/**
 * Writes text with positioning from an array.
 * @param textWithPositioningArray array containing Strings and Floats for text and positioning
 * @throws IOException if an I/O error occurs during writing
 */","* Shows the given text at the location specified by the current text matrix with the given
     * interspersed positioning. This allows the user to efficiently position each glyph or sequence
     * of glyphs.
     *
     * @param textWithPositioningArray An array consisting of String and Float types. Each String is
     * output to the page using the current text matrix. Using the default coordinate system, each
     * interspersed number adjusts the current text matrix by translating to the left or down for
     * horizontal and vertical text respectively. The number is expressed in thousands of a text
     * space unit, and may be negative.
     *
     * @throws IOException if an io exception occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:showText(java.lang.String),262,267,"/**
 * Displays text and writes a show text operator.
 * @param text the string to display
 * @throws IOException if an I/O error occurs
 */","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDFormContentStream:showText(java.lang.String),262,267,"/**
 * Displays given text and writes an operator.
 * @param text string to display
 * @throws IOException if I/O error occurs
 */","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPageContentStream:showText(java.lang.String),262,267,"/**
* Displays text and writes operator.
* @param text string to display
* @throws IOException if an I/O error occurs
*/","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,showText,org.apache.pdfbox.pdmodel.PDPatternContentStream:showText(java.lang.String),262,267,"/**
 * Displays text and writes SHOW_TEXT operator.
 * @param text the string to display
 * @throws IOException if an I/O error occurs
 */","* Shows the given text at the location specified by the current text matrix.
     *
     * @param text The Unicode text to show.
     * @throws IOException If an io exception occurs.
     * @throws IllegalArgumentException if a character isn't supported by the current font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup:<init>(org.apache.pdfbox.pdmodel.PDDocument),56,60,"/**
 * Constructs a new PDTransparencyGroup.
 * @param document The PDDocument to associate with this group.
 */","* Creates a Transparency Group for writing, in the given document.
     * @param document The current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceStream.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream:<init>(org.apache.pdfbox.pdmodel.PDDocument),48,51,"/**
* Initializes a new appearance stream for the given PDF document.
* @param document the PDF document to associate with this appearance stream
*/","* Creates a Form Image XObject for writing, in the given document.
     * 
     * @param document The current document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,float,int)",274,278,"/**
* Creates an image object from a BufferedImage.
* @param document PDF document to add the image to
* @param image source BufferedImage
* @param quality JPEG compression quality (0.0 - 1.0)
* @param dpi dots per inch for image resolution
* @return PDImageXObject representing the image in JPEG format
* @throws IOException if an I/O error occurs
*/","* Creates a new JPEG Image XObject from a BufferedImage, a given quality and dpi metadata.
     * <p>
     * Do not read a JPEG image from a stream/file and call this method; you'll get more speed and
     * quality by calling {@link #createFromStream(org.apache.pdfbox.pdmodel.PDDocument,
     * java.io.InputStream) createFromStream()} instead.
     * 
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @param quality The desired JPEG compression quality; between 0 (best
     * compression) and 1 (best image quality). See
     * {@link ImageWriteParam#setCompressionQuality(float)} for more details.
     * @param dpi the desired dpi (resolution) value of the JPEG to be stored in metadata. This
     * value has no influence on image content or size.
     * @return a new Image XObject
     * @throws IOException if the JPEG data cannot be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromGrayImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromGrayImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",136,162,"/**
* Converts a grayscale BufferedImage to a PDImageXObject.
* @param image the source grayscale image
* @param document the PDDocument to add the image to
* @return PDImageXObject representing the grayscale image
* @throws IOException if an I/O error occurs during conversion
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromRGBImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromRGBImage(java.awt.image.BufferedImage,org.apache.pdfbox.pdmodel.PDDocument)",164,229,"/**
 * Creates a PDImageXObject from a BufferedImage.
 * @param image source BufferedImage to convert
 * @param document PDDocument to add the image to
 * @return PDImageXObject representing the image
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,checkValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:checkValue(java.lang.String),378,387,"/**
* Validates that the provided value is either 'Off' or in the set of allowed 'on' values.
* @param value the value to check
*/","* Checks value.
     *
     * @param value Name of radio button to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.File),74,89,"/**
* Loads an FDF document from a file.
* @param file the FDF file to load
* @return the parsed FDFDocument object
* @throws IOException if an I/O error occurs
*/","* This will load a document from a file.
     *
     * @param file The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to
     * read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.io.InputStream),102,109,"/**
* Loads an FDF document from the given InputStream.
* @param input stream containing FDF data
* @return parsed FDFDocument object
* @throws IOException if an I/O error occurs
*/","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document. To read the stream
     * {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,<init>,org.apache.pdfbox.pdfparser.PDFParser:<init>(org.apache.pdfbox.io.RandomAccessRead),45,48,"/**
 * Constructs a PDF parser with a default password.
 * @param source input stream for reading the PDF file
 * @throws IOException if an I/O error occurs
 */","* Constructor.
     * Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param source source representing the pdf.
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,outputCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:outputCurlTemplate(java.awt.geom.Point2D$Double[],double,double)",475,494,"/**
 * Outputs a curl template using given points and offset.
 * @param template array of Point2D.Double representing the template
 * @param x horizontal offset
 * @param y vertical offset
 * @throws IOException if an I/O error occurs
 */","* Writes the curl template points to the output and applies translation (x, y).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArcSegment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArcSegment(double,double,double,double,double,double,java.util.ArrayList,boolean)",639,700,"/**
* Generates an arc segment.
* @param startAng starting angle in radians
* @param endAng ending angle in radians
* @param cx center x-coordinate
* @param cy center y-coordinate
* @param rx radius x
* @param ry radius y
* @param out output list for points or null
* @param addMoveTo flag to add move-to command
* @throws IOException if an I/O error occurs
*/","* Creates a single Bézier curve that represents a section of an elliptical
     * arc. The sweep angle of the section must not be larger than 90 degrees.
     * If argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,moveTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:moveTo(java.awt.geom.Point2D$Double),1029,1032,"/**
 * Moves to specified coordinates.
 * @param p Point2D.Double representing target position
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,lineTo,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:lineTo(java.awt.geom.Point2D$Double),1048,1051,"/**
 * Draws a line to the specified point.
 * @param p target point coordinates
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaint.java,<init>,"org.apache.pdfbox.rendering.TilingPaint:<init>(org.apache.pdfbox.rendering.PageDrawer,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,java.awt.geom.AffineTransform)",79,83,"/**
* Initializes tiling paint with specified parameters.
* @param drawer PageDrawer instance for drawing
* @param pattern PDTilingPattern to be used
* @param xform AffineTransform for coordinate transformation
* @throws IOException if an I/O error occurs
*/","* Creates a new colored tiling Paint, i.e. one that has its own colors.
     *
     * @param drawer renderer to render the page
     * @param pattern tiling pattern dictionary
     * @param xform device scale transform
     *
     * @throws java.io.IOException if something goes wrong while drawing the pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/TilingPaintFactory.java,create,"org.apache.pdfbox.rendering.TilingPaintFactory:create(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.AffineTransform)",53,71,"/**
* Creates a Paint object for tiling patterns.
* @param pattern the tiling pattern to use
* @param colorSpace the color space for painting
* @param color the color to apply
* @param xform transformation matrix
* @return Paint object for rendering
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearanceEntryAsContentStream,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearanceEntryAsContentStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry,boolean)",492,507,"/**
* Retrieves appearance content stream from entry.
* @param appearanceEntry PDF appearance entry
* @param compress whether to compress the content stream
* @return PDAppearanceContentStream object
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getOpaqueImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getOpaqueImage(),579,582,"/**
 * Retrieves an opaque image.
 * @return BufferedImage object with opacity applied
 * @throws IOException if an I/O error occurs
 */","* Returns an RGB buffered image containing the opaque image stream without any masks applied. If this Image XObject
     * is a mask then the buffered image will contain the raw mask.
     * 
     * @return the image without any masks applied
     * @throws IOException if the image cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getImage(),347,351,"/**
* Retrieves an RGB image.
* @throws IOException if an I/O error occurs
* @return BufferedImage object containing the image data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/FlateFilter.java,decode,"org.apache.pdfbox.filter.FlateFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",35,48,"/**
 * Decodes input stream using Flate algorithm.
 * @param encoded input stream to decode
 * @param decoded output stream for decoded data
 * @param parameters decoding parameters dictionary
 * @param index filter-specific parameter index
 * @return DecodeResult with updated parameters
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/LZWFilter.java,decode,"org.apache.pdfbox.filter.LZWFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",64,72,"/**
 * Decodes input stream using LZW algorithm.
 * @param encoded InputStream containing encoded data
 * @param decoded OutputStream for decoded output
 * @param parameters COSDictionary with decoding parameters
 * @param index parameter dictionary index
 * @return DecodeResult object with parameters
 * @throws IOException if an I/O error occurs
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,toString,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:toString(),105,109,"/**
 * Returns string representation of the object.
 * @return String in format ""mcid=MCID_VALUE""
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDMarkedContent),635,647,"/**
* Appends a kid to the current object.
* @param markedContent PDMarkedContent instance to append
*/","* Appends a marked-content sequence kid.
     * 
     * @param markedContent the marked-content sequence with the MCID.
     * @throws IllegalArgumentException if the mcid is negative or doesn't exist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,toString,org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:toString(),68,72,"/**
* Returns a string representation of the object.
* @return concatenated string of registry, ordering, and supplement
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,fetchCMapUCS2,org.apache.pdfbox.pdmodel.font.PDType0Font:fetchCMapUCS2(),360,407,"/**
* Fetches UCS2 CMap for composite or CJK fonts.
* Handles predefined CMaps excluding Identity-H/V.
*/",* Fetches the corresponding UCS2 CMap if the font's CMap is predefined.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,isVisibleAnnotation,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:isVisibleAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),319,332,"/**
 * Checks if an annotation is visible.
 * @param annotation the PDF annotation to check
 * @return true if annotation is visible, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,isMultiLine,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:isMultiLine(),681,684,"/**
 * Checks if the field is a multiline text field.
 * @return true if the field is multiline, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,shallComb,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:shallComb(),698,706,"/**
* Determines if a text field should be combined.
* @return true if the field is a PDTextField with comb enabled, max length set, and not multiline, password, or file select; false otherwise
*/","* Determine if the appearance shall provide a comb output.
     * 
     * <p>
     * May be set only if the MaxLen entry is present in the text field dictionary
     * and if the Multiline, Password, and FileSelect flags are clear.
     * If set, the field shall be automatically divided into as many equally spaced positions,
     * or combs, as the value of MaxLen, and the text is laid out into those combs.
     * </p>
     * 
     * @return the comb state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,computeLabels,"org.apache.pdfbox.pdmodel.common.PDPageLabels:computeLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels$LabelHandler,int)",257,287,"/**
* Computes page labels for a PDF document.
* @param handler handles label creation
* @param numberOfPages total number of pages in the document
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareForDecryption,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareForDecryption(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.encryption.DecryptionMaterial)",145,297,"/**
 * Prepares the decryption process for a PDF document.
 * @param encryption PDEncryption object containing encryption details
 * @param documentIDArray COSArray representing the document ID
 * @param decryptionMaterial DecryptionMaterial required for decryption
 * @throws IOException if decryption material is incompatible or other I/O errors occur
 */","* Prepares everything to decrypt the document.
     *
     * Only if decryption of single objects is needed this should be called.
     *
     * @param encryption  encryption dictionary
     * @param documentIDArray  document id
     * @param decryptionMaterial Information used to decrypt the document.
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType0Font:getDisplacement(int),498,509,"/**
* Returns displacement vector for a character code.
* @param code character identifier
* @return Vector representing vertical or horizontal displacement
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,getSpaceWidth,org.apache.pdfbox.pdmodel.font.PDFont:getSpaceWidth(),553,605,"/**
 * Retrieves the width of a space character in the font.
 * @return Width of space character or default value if not determined
 */","* Determines the width of the space character. This is very important for text extraction.
     *
     * @return the width of the space character",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,calculateWidth,"org.apache.pdfbox.pdmodel.interactive.PlainText$Line:calculateWidth(org.apache.pdfbox.pdmodel.font.PDFont,float)",258,276,"/**
* Calculates the total width of words in a PDF using a given font and size.
* @param font the font used for rendering text
* @param fontSize the size of the font
* @return the total width of the words, excluding trailing whitespace if present
* @throws IOException if an I/O error occurs during font processing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isFixedPitch(),75,78,"/**
 * Checks if the font is fixed pitch.
 * @return true if the font is fixed pitch, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSerif(),95,98,"/**
 * Checks if the font style is serif.
 * @return true if serif style is enabled, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSymbolic(),115,118,"/**
 * Checks if the file is symbolic.
 * @return true if the file is symbolic, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isScript(),135,138,"/**
 * Checks if the script flag is set.
 * @return true if script flag is on, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isNonSymbolic(),155,158,"/**
 * Checks if the flag is non-symbolic.
 * @return true if non-symbolic, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isItalic(),175,178,"/**
 * Checks if text style is italic.
 * @return true if italic, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isAllCap(),195,198,"/**
 * Checks if all characters in the string are uppercase.
 * @return true if all characters are uppercase, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isSmallCap(),215,218,"/**
 * Checks if the stock is small-cap.
 * @return true if small-cap flag is set, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,isForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:isForceBold(),235,238,"/**
 * Checks if force bold flag is set.
 * @return true if force bold is enabled, false otherwise
 */","* A convenience method that checks the flag bit.
     *
     * @return The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,getPattern,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:getPattern(org.apache.pdfbox.pdmodel.graphics.color.PDColor),117,128,"/**
 * Retrieves a pattern by color.
 * @param color the PDColor object containing the pattern name
 * @return the PDAbstractPattern if found, otherwise throws IOException
 */","* Returns the pattern for the given color.
     * 
     * @param color color containing a pattern name
     * @return pattern for the given color
     * @throws java.io.IOException if the pattern name was not found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveNonRootField,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveNonRootField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",196,219,"/**
 * Resolves a non-root form field from its parent dictionary.
 * @param acroForm the form containing fields
 * @param parent the COSDictionary representing the field's parent
 * @param nonTerminalFieldsMap map of non-terminal fields by name
 * @return resolved PDField or null if not found or broken PDF structure
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,fromDictionary,"org.apache.pdfbox.pdmodel.interactive.form.PDField:fromDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField)",77,80,"/**
* Creates a PDField from a dictionary.
* @param form the PDAcroForm containing the field
* @param field the COSDictionary representing the field
* @param parent the parent PDNonTerminalField
* @return PDField instance created from the dictionary
*/","* Creates a COSField subclass from the given COS field. This is for reading fields from PDFs.
     *
     * @param form the form that the field is part of
     * @param field the dictionary representing a field element
     * @param parent the parent node of the node to be created, or null if root.
     * @return a new PDField instance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/graphics/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.graphics.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,104,"/**
 * Processes an operator with operands, handling XObjects.
 * @param operator the PDF operator to process
 * @param operands list of COSBase operands
 * @throws IOException if processing fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasTransparency,org.apache.pdfbox.rendering.PageDrawer:hasTransparency(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1611,1635,"/**
 * Checks if a form object or its nested forms have transparency.
 * @param form the form object to check for transparency
 * @return true if transparency is found, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,hasBlendMode,"org.apache.pdfbox.rendering.PageDrawer:hasBlendMode(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.util.Set)",2025,2083,"/**
* Checks if a transparency group has non-normal blend mode.
* @param group the transparency group to check
* @param groupsDone set of processed groups to avoid recursion
* @return true if non-normal blend mode is found, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSStream.java,toTextString,org.apache.pdfbox.cos.COSStream:toTextString(),363,376,"/**
* Converts input stream to text string.
* @return String representation of input stream or empty string on error
*/","* Returns the contents of the stream as a PDF ""text string"".
     * 
     * @return the PDF string representation of the stream content",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",63,139,"/**
 * Decodes a JBIG2 encoded image.
 * @param encoded input stream of the encoded image
 * @param decoded output stream for the decoded image
 * @param parameters dictionary containing decode parameters
 * @param index index of the decode operation
 * @param options decode options
 * @return DecodeResult object with parameters
 * @throws IOException if an I/O error occurs during decoding
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createCombinedContentStream,org.apache.pdfbox.multipdf.Overlay:createCombinedContentStream(org.apache.pdfbox.cos.COSBase),340,357,"/**
* Combines multiple content streams into a single stream.
* @param contents base object containing content streams
* @return concatenated COSStream
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,createInputStream,org.apache.pdfbox.pdmodel.common.PDStream:createInputStream(),181,184,"/**
 * Creates an input stream from the underlying data source.
 * @return COSInputStream representing the data stream
 * @throws IOException if an I/O error occurs
 */","* This will get a stream that can be read from.
     * 
     * @return An input stream that can be read from.
     * @throws IOException If an IO error occurs during reading.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFont.java,readCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFont:readCIDToGIDMap(),399,419,"/**
 * Reads CID to GID mapping from a PDF stream.
 * @return array of integers representing the mapping or null if not found
 * @throws IOException if an I/O error occurs while reading the stream
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,collectPatches,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:collectPatches(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",61,155,"/**
 * Collects patches from a PDF shading dictionary.
 * @param xform transformation matrix
 * @param matrix additional transformation matrix
 * @param controlPoints number of control points
 * @return list of Patch objects or empty list if none found
 * @throws IOException if an I/O error occurs
 */","* Create a patch list from a data stream, the returned list contains all the patches contained in the data stream.
     *
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @return the obtained patch list
     * @throws IOException when something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",90,209,"/**
* Collects shaded triangles from a PDF stream.
* @param xform affine transformation for coordinates
* @param matrix color transformation matrix
* @return list of ShadedTriangle objects
* @throws IOException if reading fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,collectTriangles,"org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:collectTriangles(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix)",86,155,"/**
* Collects shaded triangles from a PDF stream.
* @param xform transformation matrix
* @param matrix additional transformation matrix
* @return list of ShadedTriangle objects
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromStream,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromStream(org.apache.pdfbox.cos.COSStream),110,116,"/**
 * Reads all bytes from a PDF stream.
 * @param stream the PDF COSStream to read from
 * @return byte array containing data from the stream
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(org.apache.pdfbox.filter.DecodeOptions),919,923,"/**
* Creates an input stream from the underlying stream.
* @param options decoding options to apply
* @return InputStream for reading data
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createDescendantFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createDescendantFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.PDType0Font)",368,386,"/**
 * Creates a descendant CID font based on the provided dictionary.
 * @param dictionary font dictionary containing font details
 * @param parent parent Type0 font
 * @return PDCIDFont object or throws IOException if invalid font type
 */","* Creates a new PDCIDFont instance with the appropriate subclass.
     *
     * @param dictionary descendant font dictionary
     * @return a PDCIDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSIncrement.java,iterator,org.apache.pdfbox.cos.COSIncrement:iterator(),352,356,"/**
 * Returns an iterator over the COSBase objects.
 * @return Iterator of COSBase objects
 */","* Return an iterator for the determined {@link #objects} contained in this {@link COSIncrement}.
     *
     * @return An iterator for the determined {@link #objects} contained in this {@link COSIncrement}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,add,org.apache.pdfbox.cos.COSArray:add(org.apache.pdfbox.pdmodel.common.COSObjectable),104,112,"/**
* Adds an object to the collection.
* @param object the object to be added
*/","* This will add an object to the array.
     *
     * @param object The object to add to the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,"org.apache.pdfbox.cos.COSArray:growToSize(int,org.apache.pdfbox.cos.COSBase)",611,620,"/**
* Expands the list to a specified size by adding an object.
* @param size target size of the list
* @param object item to be added to reach the desired size
*/","* This will add the object until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.
     * @param object The object to fill the array with.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setFloatArray,org.apache.pdfbox.cos.COSArray:setFloatArray(float[]),655,662,"/**
* Sets a float array.
* @param value array of float values to be set
*/","* Clear the current contents of the COSArray and set it with the float[].
     *
     * @param value The new value of the float array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSArray,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSArray(org.apache.pdfbox.cos.COSArray),126,142,"/**
* Clones a COSArray for use in a new document.
* @param array the original COSArray to clone
* @return a cloned COSArray with updated references
* @throws IOException if an I/O error occurs during cloning
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createArrayClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createArrayClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",390,411,"/**
* Clones a COSArray and its elements.
* @param src source array to clone
* @param dstParent parent of the destination array
* @param currentPageDict current page dictionary
* @return cloned COSArray or null if empty
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneTreeElement,"org.apache.pdfbox.multipdf.Splitter:cloneTreeElement(java.util.Map,java.util.Map,int)",300,348,"/**
* Clones a tree element from source to destination map.
* @param srcNumberTreeAsMap source map containing tree elements
* @param dstNumberTreeAsMap destination map for cloned elements
* @param sp structure parent number
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXRefStream.java,getStream,org.apache.pdfbox.pdfparser.PDFXRefStream:getStream(),67,116,"/**
* Prepares and returns a COSStream for cross-reference.
* @return Configured COSStream object
* @throws IOException if an I/O error occurs
*/","* Returns the stream of the XRef.
     * @return the XRef stream
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,initParserValues,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:initParserValues(org.apache.pdfbox.cos.COSStream),66,102,"/**
 * Initializes parser values from a COSStream.
 * @param stream input COSStream containing Xref data
 * @throws IOException if required arrays or values are missing or invalid
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,<init>,"org.apache.pdfbox.pdmodel.common.COSArrayList:<init>(java.lang.Object,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",118,127,"/**
* Initializes a COSArrayList with an initial object and corresponding COSBase.
* @param actualObject the actual Java object to be managed
* @param item the COSBase item associated with the actual object
* @param dictionary the parent COSDictionary
* @param dictionaryKey the key in the dictionary for this list
*/","* This is a really special constructor.  Sometimes the PDF spec says
     * that a dictionary entry can either be a single item or an array of those
     * items.  But in the PDModel interface we really just want to always return
     * a java.util.List.  In the case were we get the list and never modify it
     * we don't want to convert to COSArray and put one element, unless we append
     * to the list.  So here we are going to create this object with a single
     * item instead of a list, but allow more items to be added and then converted
     * to an array.
     *
     * @param actualObject The PDModel object.
     * @param item The COS Model object.
     * @param dictionary The dictionary that holds the item, and will hold the array if an item is added.
     * @param dictionaryKey The key into the dictionary to set the item.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,converterToCOSArray,org.apache.pdfbox.pdmodel.common.COSArrayList:converterToCOSArray(java.util.List),304,349,"/**
 * Converts a list of objects to a COSArray.
 * @param cosObjectableList the list of objects to convert
 * @return COSArray containing converted COSBase objects
 */","* This will convert a list of COSObjectables to an array list of COSBase objects.
     *
     * @param cosObjectableList A list of COSObjectable.
     *
     * @return A list of COSBase.
     * @throws IllegalArgumentException if an object type is not supported for conversion to a
     * COSBase object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,<init>,org.apache.pdfbox.pdmodel.common.PDRange:<init>(),37,43,"/**
* Initializes a PDRange with default values.
*/",* Constructor with an initial range of 0..1.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeValues(),144,163,"/**
* Retrieves or constructs the encode values array.
* @return COSArray containing encode values, defaulting if null
*/","* Returns all encode values as COSArray.
     * 
     * @return the encode array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType2.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType2:<init>(org.apache.pdfbox.cos.COSBase),54,71,"/**
* Initializes a PDFunctionType2 with the given function base.
* @param function the COSBase object representing the function
*/","* Constructor.
     *
     * @param function The function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:<init>(org.apache.pdfbox.cos.COSArray),47,58,"/**
* Constructs PDFourColours with a COSArray, ensuring it has 4 items.
* @param array the input COSArray to be processed
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseArrayElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseArrayElement(org.w3c.dom.Element),285,355,"/**
* Parses an XML element into a COSArray.
* @param arrayEl XML element representing the array
* @return COSArray containing parsed elements
* @throws IOException if required attributes are missing or invalid
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:<init>(),38,43,"/**
* Initializes a new FDFOptionElement with two empty strings in its option array.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getWidths(int[]),417,511,"/**
 * Converts font widths to COSArray format.
 * @param widths array of width values and CIDs
 * @return COSArray representing font widths
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,getVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:getVerticalMetrics(int[]),547,668,"/**
 * Processes vertical metrics from an array of values.
 * @param values input integer array containing metric data
 * @return COSArray with processed vertical metrics
 * @throws IOException if processing fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,<init>,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:<init>(),45,50,"/**
* Initializes a PDFontSetting with default values.
*/","* Creates a blank font setting, font will be null, size will be 1.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDLineDashPattern.java,getCOSObject,org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern:getCOSObject(),78,85,"/**
* Creates a COSArray with array and phase.
* @return COSBase object containing the constructed array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getWhitepoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getWhitepoint(),115,126,"/**
* Retrieves the white point as a tristimulus value.
* @return PDTristimulus object representing the white point
*/","* This will return the whitepoint tristimulus. As this is a required field
     * this will never return null. A default of 1,1,1 will be returned if the
     * pdf does not have any values yet.
     *
     * @return the whitepoint tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,getBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:getBlackPoint(),135,146,"/**
* Retrieves or creates the black point for color management.
* @return PDTristimulus object representing the black point
*/","* This will return the BlackPoint tristimulus. This is an optional field
     * but has defaults so this will never return null. A default of 0,0,0 will
     * be returned if the pdf does not have any values yet.
     *
     * @return the blackpoint tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColor.java,toCOSArray,org.apache.pdfbox.pdmodel.graphics.color.PDColor:toCOSArray(),208,216,"/**
* Converts components to a COSArray.
* @return COSArray containing components and pattern name if available
*/","* Returns the color component values as a COS array
     * @return the color component values as a COS array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(),72,81,"/**
* Initializes a new PDDeviceN object with default settings.
*/",* Creates a new DeviceN color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:<init>(),39,45,"/**
* Initializes a PDGamma object with default values.
*/","* Creates a new gamma.
     * Defaults all values to 0, 0, 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getAlternateColorSpace(),389,432,"/**
* Retrieves the alternate color space.
* @return PDColorSpace object representing the alternate color space
* @throws IOException if an error occurs during retrieval or parsing
*/","* Returns a list of alternate color spaces for non-conforming readers.
     * WARNING: Do not use the information in a conforming reader.
     * @return A list of alternateColorSpace color spaces.
     * @throws IOException If there is an error getting the alternateColorSpace color spaces.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(),61,68,"/**
* Initializes a PDIndexed object with default RGB color space and 256 colors.
*/","* Creates a new Indexed color space.
     * Default DeviceRGB, hival 255.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultRangeArray,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultRangeArray(),184,192,"/**
* Creates a default range array with predefined values.
* @return COSArray containing four COSFloat elements: -100, 100, -100, 100
*/","* creates a range array with default values (-100..100 -100..100).
     * @return the new range array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources),46,51,"/**
* Constructs a PDPattern with given resources.
* @param resources PDF document resources
*/","* Creates a new pattern color space.
     * 
     * @param resources The current resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(),69,77,"/**
* Initializes a PDSeparation with default values.
*/",* Creates a new Separation color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(),38,44,"/**
* Initializes a PDTristimulus with zero values.
*/","* Constructor. Defaults all values to 0, 0, 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:<init>(float[]),59,66,"/**
 * Initializes a PDTristimulus with float array.
 * @param array array of float values (max 3)
 */","* Constructor from COS object.
     * @param array the array containing the XYZ values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDFormXObject.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject:setMatrix(java.awt.geom.AffineTransform),245,255,"/**
* Sets the transformation matrix.
* @param transform AffineTransform object to apply
*/","* Sets the optional Matrix entry for the form XObject.
     * @param transform the transformation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",95,139,"/**
* Creates a PDImageXObject from a byte array.
* @param document the PDDocument to add the image to
* @param byteArray the image data as a byte array
* @return PDImageXObject created from the byte array
* @throws IOException if an I/O error occurs
*/","* Creates a new JPEG Image XObject from a byte array containing JPEG data.
     *
     * @param document the document where the image will be created
     * @param byteArray bytes of JPEG image
     * @return a new Image XObject
     *
     * @throws IOException if the input stream cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createProcSetArray,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createProcSetArray(),172,183,"/**
 * Creates and sets the ProcSet array in PDF structure.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/util/Matrix.java,toCOSArray,org.apache.pdfbox.util.Matrix:toCOSArray(),566,576,"/**
* Converts single array elements to COSArray.
* @return COSArray containing specific float values from single array
*/","* Returns a COS array which represent the geometric relevant components of the matrix. The last column of the
     * matrix is ignored, only the first two columns are returned. This is analog to the Matrix(COSArray) constructor.
     * 
     * @return a COSArray representing the geometric relevant components of the matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,set,"org.apache.pdfbox.cos.COSArray:set(int,org.apache.pdfbox.pdmodel.common.COSObjectable)",254,262,"/**
* Sets an object at the specified index.
* @param index position in the array
* @param object to be inserted
*/","* This will set an object at a specific index.
     *
     * @param index zero based index into array.
     * @param object The object to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setInt,"org.apache.pdfbox.cos.COSArray:setInt(int,int)",338,341,"/**
* Sets an integer at a specified index.
* @param index position in the array
* @param value integer value to set
*/","* Set the value in the array as an integer.
     *
     * @param index The index into the array.
     * @param value The value to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setName,"org.apache.pdfbox.cos.COSArray:setName(int,java.lang.String)",348,351,"/**
 * Sets the name at the specified index.
 * @param index position in the list
 * @param name string to be converted and set
 */","* Set the value in the array as a name.
     * @param index The index into the array.
     * @param name The name to set in the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,setString,"org.apache.pdfbox.cos.COSArray:setString(int,java.lang.String)",389,399,"/**
* Sets a string value at specified index.
* @param index position in the array
* @param string value to be set
*/","* Set the value in the array as a string.
     * @param index The index into the array.
     * @param string The string to set in the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteSignature,org.apache.pdfbox.pdfwriter.COSWriter:doWriteSignature(),863,916,"/**
 * Writes the digital signature to the output stream.
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMin,org.apache.pdfbox.pdmodel.common.PDRange:setMin(float),107,110,"/**
 * Sets the minimum value in the range array.
 * @param min the minimum value to be set
 */","* This will set the minimum value for the range.
     *
     * @param min The new minimum for the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRange.java,setMax,org.apache.pdfbox.pdmodel.common.PDRange:setMax(float),128,131,"/**
 * Sets the maximum value in the range array.
 * @param max the new maximum value to set
 */","* This will set the maximum value for the range.
     *
     * @param max The new maximum for the range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftX,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftX(float),225,228,"/**
 * Sets the x-coordinate of the lower-left corner.
 * @param value the x-coordinate value
 */","* This will set the lower left x coordinate.
     *
     * @param value The lower left x.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setLowerLeftY,org.apache.pdfbox.pdmodel.common.PDRectangle:setLowerLeftY(float),245,248,"/**
 * Sets the lower-left Y coordinate of a rectangle.
 * @param value the Y coordinate value to set
 */","* This will set the lower left y coordinate.
     *
     * @param value The lower left y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightX,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightX(float),265,268,"/**
 * Sets the upper right X coordinate of the rectangle.
 * @param value the new X coordinate value
 */","* This will set the upper right x coordinate.
     *
     * @param value The upper right x .",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,setUpperRightY,org.apache.pdfbox.pdmodel.common.PDRectangle:setUpperRightY(float),285,288,"/**
* Sets the upper right Y coordinate of a rectangle.
* @param value the new Y coordinate value
*/","* This will set the upper right y coordinate.
     *
     * @param value The upper right y.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setColourByIndex,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setColourByIndex(int,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",175,187,"/**
 * Sets color at specified index.
 * @param index array position to update
 * @param colour PDGamma object or null
 */","* Sets the colour by edge index.
     * 
     * @param index the edge index
     * @param colour the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setOption,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setOption(java.lang.String),91,94,"/**
 * Sets an option by updating the first element of the option list.
 * @param opt the new option value as a string
 */","* This will set the string for an available option.
     *
     * @param opt One of the available options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFOptionElement.java,setDefaultAppearanceString,org.apache.pdfbox.pdmodel.fdf.FDFOptionElement:setDefaultAppearanceString(java.lang.String),111,114,"/**
 * Sets default appearance string.
 * @param da default appearance string value
 */","* This will set the default appearance string.
     *
     * @param da The default appearance string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFontSize,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFontSize(float),115,118,"/**
 * Sets the font size.
 * @param size the new font size in points
 */","* This will set the size of the font.
     *
     * @param size The new size of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setColorantNames,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setColorantNames(java.util.List),494,498,"/**
* Sets colorant names in the array.
* @param names list of colorant names
*/","* Sets the list of colorants
     * @param names the list of colorants",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAttributes(org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes),505,521,"/**
* Sets device attributes.
* @param attributes device attributes to set
*/","* Sets the color space attributes.
     * If null is passed in then all attribute will be removed.
     * @param attributes the color space attributes, or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),545,554,"/**
* Sets the alternate color space.
* @param cs the new color space to set
*/","* This will set the alternate color space.
     *
     * @param cs The alternate color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setR,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setR(float),88,91,"/**
 * Sets the radius value.
 * @param r the radius to be set
 */","* Sets the r value of the tristimulus.
     * @param r the r value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setG,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setG(float),106,109,"/**
 * Sets the second value to a COSFloat representing 'g'.
 * @param g the gravity value to be set
 */","* Sets the g value of the tristimulus.
     * @param g the g value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDGamma.java,setB,org.apache.pdfbox.pdmodel.graphics.color.PDGamma:setB(float),124,127,"/**
* Sets the third value to a float.
* @param b the float value to be set
*/","* Sets the b value of the tristimulus.
     * @param b he b value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,setRangeForComponent,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:setRangeForComponent(org.apache.pdfbox.pdmodel.common.PDRange,int)",511,527,"/**
* Sets the range for a specific component in a PDF stream.
* @param range the PDRange object representing the new range
* @param n the index of the component to set the range for
*/","* Sets the range for this color space.
     * @param range the new range for the a component
     * @param n the component to set the range for",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,setBaseColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:setBaseColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),312,316,"/**
* Sets the base color space.
* @param base PDColorSpace object to be set as base
*/","* Sets the base color space.
     * @param base the base color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setColorantName,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setColorantName(java.lang.String),274,277,"/**
 * Sets colorant name in PDF array.
 * @param name new colorant name
 */","* Sets the colorant name.
     * @param name the name of the colorant",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setAlternateColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),283,292,"/**
* Sets the alternate color space.
* @param colorSpace the new color space to set
*/","* Sets the alternate color space.
     * @param colorSpace The alternate color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setX,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setX(float),91,94,"/**
 * Sets the X coordinate.
 * @param x new X value
 */","* Sets the x value of the tristimulus.
     * @param x the x value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setY,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setY(float),109,112,"/**
 * Sets the Y coordinate value.
 * @param y new Y coordinate as float
 */","* Sets the y value of the tristimulus.
     * @param y the y value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDTristimulus.java,setZ,org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus:setZ(float),127,130,"/**
 * Sets the Z value.
 * @param z the Z coordinate to be set
 */","* Sets the z value of the tristimulus.
     * @param z the z value for the tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",227,235,"/**
 * Sets an item in the dictionary.
 * @param key the key for the item
 * @param value the object to be stored; may be null
 */","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(java.lang.String,boolean)",254,257,"/**
* Sets a boolean value in the PDF document.
* @param key the key under which to store the boolean value
* @param value the boolean value to store
*/","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setBoolean,"org.apache.pdfbox.cos.COSDictionary:setBoolean(org.apache.pdfbox.cos.COSName,boolean)",265,268,"/**
 * Sets a boolean value in the dictionary.
 * @param key the key under which to store the boolean
 * @param value the boolean value to store
 */","* This will set an item in the dictionary.
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)",276,279,"/**
* Sets an item in the dictionary using a string key.
* @param key the key to store the item under
* @param value the value to associate with the key
*/","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(org.apache.pdfbox.cos.COSName,java.lang.String)",300,308,"/**
* Sets a PDF dictionary item with the given key and string value.
* @param key the COSName key for the dictionary entry
* @param value the string value to be converted to COSName
*/","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(org.apache.pdfbox.cos.COSName,java.lang.String)",372,380,"/**
* Sets a string value for a given key.
* @param key the COSName key to associate with the value
* @param value the string value to be stored
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(org.apache.pdfbox.cos.COSName,int)",421,424,"/**
 * Sets an integer value in the dictionary.
 * @param key the name of the entry
 * @param value the integer value to be set
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(org.apache.pdfbox.cos.COSName,long)",443,447,"/**
* Sets a long value in the PDF dictionary.
* @param key the dictionary key as a COSName
* @param value the long value to be set
*/","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(org.apache.pdfbox.cos.COSName,float)",484,488,"/**
* Sets a float value in the dictionary.
* @param key the key to store the float under
* @param value the float value to set
*/","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,createCOSStream,"org.apache.pdfbox.cos.COSDocument:createCOSStream(org.apache.pdfbox.cos.COSDictionary,long,long)",192,200,"/**
* Creates a COSStream from a dictionary and byte range.
* @param dictionary source dictionary for stream properties
* @param startPosition start position in the file
* @param streamLength length of the stream data
* @return newly created COSStream object
* @throws IOException if I/O error occurs
*/","* Creates a new COSStream using the current configuration for scratch files. Not for public use.
     * Only COSParser should call this method.
     * 
     * @param dictionary    the corresponding dictionary
     * @param startPosition the start position within the source
     * @param streamLength  the stream length
     * @return the new COSStream
     * @throws IOException if the random access view can't be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setEncryptionDictionary,org.apache.pdfbox.cos.COSDocument:setEncryptionDictionary(org.apache.pdfbox.cos.COSDictionary),351,354,"/**
 * Sets the encryption dictionary in the PDF trailer.
 * @param encDictionary the encryption dictionary to be set
 */","* This will set the encryption dictionary, this should only be called when
     * encrypting the document.
     *
     * @param encDictionary The encryption dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDocument.java,setDocumentID,org.apache.pdfbox.cos.COSDocument:setDocumentID(org.apache.pdfbox.cos.COSArray),374,377,"/**
 * Sets the document ID in the trailer.
 * @param id COSArray containing the document ID
 */","* This will set the document ID. This should be an array of two strings. This method cannot be
     * used to remove the document id by passing null or an empty array; it will be recreated. Only
     * the first existing string is used when writing, the second one is always recreated. If you
     * don't want this, you'll have to modify the {@code COSWriter} class, look for {@link COSName#ID}.
     *
     * @param id The document id.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,wrapInSaveRestore,org.apache.pdfbox.multipdf.LayerUtility:wrapInSaveRestore(org.apache.pdfbox.pdmodel.PDPage),89,130,"/**
 * Wraps existing page content in a graphics state save/restore pair.
 * @param page the PDF page to modify
 * @throws IOException if an I/O error occurs
 */","* Some applications may not wrap their page content in a save/restore (q/Q) pair which can
     * lead to problems with coordinate system transformations when content is appended. This
     * method lets you add a q/Q pair around the existing page's content.
     * @param page the page
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,transferDict,"org.apache.pdfbox.multipdf.LayerUtility:transferDict(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,java.util.Set)",289,300,"/**
 * Transfers filtered entries from one dictionary to another.
 * @param orgDict source dictionary to transfer from
 * @param targetDict destination dictionary to transfer to
 * @param filter set of keys to include in the transfer
 * @throws IOException if an I/O error occurs during cloning
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSDictionary(org.apache.pdfbox.cos.COSDictionary),168,185,"/**
* Clones a COSDictionary, handling self-references.
* @param dictionary the original COSDictionary to clone
* @return a cloned COSDictionary with updated references
* @throws IOException if an I/O error occurs during cloning
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneMergeCOSBase,"org.apache.pdfbox.multipdf.PDFCloneUtility:cloneMergeCOSBase(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",204,236,"/**
* Clones and merges COSBase objects.
* @param source the original COSBase object to clone
* @param target the target COSBase object to merge into
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateParentEntry,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateParentEntry(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",1067,1082,"/**
* Updates parent and structure type for entries in a COSArray.
* @param kArray array of COSBase objects to update
* @param newParent new parent dictionary to set
* @param newStructureType optional new structure type to set
*/","* Update the P reference to the new parent dictionary.
     *
     * @param kArray the kids array
     * @param newParent the new parent
     * @param newStructureType the new structure type in /S or null so it doesn't get replaced",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeRoleMap,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.multipdf.PDFCloneUtility)",1189,1220,"/**
 * Merges role map from source to destination structure tree.
 * @param srcStructTree source structure tree root
 * @param destStructTree destination structure tree root
 * @param cloner utility for cloning PDF objects
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSDictionary,java.util.Map)",1427,1478,"/**
* Updates page references in a PDF structure tree.
* @param cloner utility for cloning objects
* @param parentTreeEntry parent dictionary entry to update
* @param objMapping mapping of COSDictionaries
* @throws IOException if an I/O error occurs
*/","* Update the Pg and Obj references to the new (merged) page.
     *
     * @param parentTreeEntry
     * @param objMapping mapping between old and new references",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeInto,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeInto(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Set)",1546,1555,"/**
* Merges entries from source dictionary into destination dictionary, excluding specified keys.
* @param src source COSDictionary to merge from
* @param dst destination COSDictionary to merge into
* @param cloner utility for cloning COSBase objects
* @param exclude set of COSName keys to exclude from merging
* @throws IOException if an I/O error occurs during cloning
*/","* This will add all of the dictionaries keys/values to this dictionary, but
     * only if they are not in an exclusion list and if they don't already
     * exist. If a key already exists in this dictionary then nothing is
     * changed.
     *
     * @param src The source dictionary to get the keys/values from.
     * @param dst The destination dictionary to merge the keys/values into.
     * @param exclude Names of keys that shall be skipped.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneRoleMap,"org.apache.pdfbox.multipdf.Splitter:cloneRoleMap(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",281,297,"/**
* Clones role map from source to destination structure tree.
* @param srcStructTree source PDF structure tree root
* @param destStructTree destination PDF structure tree root
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionaryNameValuePair,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionaryNameValuePair(org.apache.pdfbox.cos.COSDictionary),377,402,"/**
* Parses a COSDictionary name-value pair.
* @param obj the COSDictionary to add the parsed pair to
* @return true if parsing is successful, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForTrailer(org.apache.pdfbox.cos.COSDictionary),382,450,"/**
 * Searches for PDF trailer using brute force method.
 * @param trailer dictionary to populate with found information
 * @return true if trailer is successfully found and populated, false otherwise
 */","* Brute force search for all trailer marker.
     * 
     * @param trailer dictionary to be used as trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,searchForTrailerItems,org.apache.pdfbox.pdfparser.BruteForceParser:searchForTrailerItems(org.apache.pdfbox.cos.COSDictionary),460,497,"/**
 * Searches for and updates trailer items in a PDF document.
 * @param trailer the COSDictionary representing the trailer to update
 * @return true if a root object was found, false otherwise
 */","* Search for the different parts of the trailer dictionary.
     *
     * @param trailer dictionary to be used as trailer dictionary
     * @return true if the root was found, false if not.
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,initialParse,org.apache.pdfbox.pdfparser.PDFParser:initialParse(),105,123,"/**
* Initializes PDF parsing by retrieving and validating the trailer.
* Throws IOException if root object is missing or invalid.
*/","* The initial parse will first parse only the trailer, the xrefstart and all xref tables to have a pointer (offset)
     * to all the pdf's objects. It can handle linearized pdfs, which will have an xref at the end pointing to an xref
     * at the beginning of the file. Last the root object is parsed.
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parseNextToken,org.apache.pdfbox.pdfparser.PDFStreamParser:parseNextToken(),97,321,"/**
 * Parses the next token from the content stream.
 * @return Parsed object or null if at EOF or closed
 * @throws IOException if an I/O error occurs
 */","* This will parse the next token in the stream.
     *
     * @return The next token in the stream or null if there are no more tokens in the stream.
     *
     * @throws IOException If an io error occurs while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,"org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",1480,1593,"/**
 * Writes a PDF document with optional encryption and signature.
 * @param doc PDDocument to write
 * @param signInterface Signature interface for signing the document
 * @throws IOException if an I/O error occurs
 */","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     * @param signInterface class to be used for signing; {@code null} if external signing would be performed
     *                      or there will be no signing at all
     *
     * @throws IOException If an error occurs while generating the data.
     * @throws IllegalStateException If the document has an encryption dictionary but no protection
     * policy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),172,195,"/**
* Initializes a PDDocument with a stream cache.
* @param streamCacheCreateFunction function to create stream cache
*/","* Creates an empty PDF document. You need to add at least one page for the document to be valid.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache for buffering PDF streams",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,assignAcroFormDefaultResource,"org.apache.pdfbox.pdmodel.PDDocument:assignAcroFormDefaultResource(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDictionary)",622,647,"/**
 * Assigns default resources to an AcroForm.
 * @param acroForm the form to update
 * @param newDict dictionary containing new resource data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:getDocumentInformation(),753,767,"/**
* Retrieves or creates document information.
* @return PDDocumentInformation object containing metadata
*/","* This will get the document info dictionary. If it doesn't exist, an empty document info
     * dictionary is created in the document trailer.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#getMetadata()}.
     *
     * @return The documents /Info dictionary, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setDocumentInformation,org.apache.pdfbox.pdmodel.PDDocument:setDocumentInformation(org.apache.pdfbox.pdmodel.PDDocumentInformation),778,782,"/**
* Sets document information.
* @param info PDDocumentInformation object containing metadata
*/","* This will set the document information for this document.
     * <p>
     * In PDF 2.0 this is deprecated except for two entries, /CreationDate and /ModDate. For any other
     * document level metadata, a metadata stream should be used instead, see
     * {@link PDDocumentCatalog#setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata) PDDocumentCatalog#setMetadata(PDMetadata)}.
     *
     * @param info The updated document information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentCatalog:<init>(org.apache.pdfbox.pdmodel.PDDocument),74,80,"/**
* Initializes a PDF document catalog.
* @param doc the PDDocument to associate with this catalog
*/","* Constructor. Internal PDFBox use only! If you need to get the document catalog, call
     * {@link PDDocument#getDocumentCatalog()}.
     *
     * @param doc The document that this catalog is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getThreads(),217,232,"/**
 * Retrieves threads from the document.
 * @return List of PDThread objects representing threads in the document
 */","* Returns the document's article threads.
     * 
     * @return a list of all threads of the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setThreads,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setThreads(java.util.List),239,244,"/**
* Sets document threads.
* @param threads list of PDThread objects
*/","* Sets the list of threads for this pdf document.
     *
     * @param threads The list of threads, or null to clear it.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getActions(),303,312,"/**
* Retrieves or creates additional actions for the document catalog.
* @return PDDocumentCatalogAdditionalActions object representing the actions
*/",* @return The Additional Actions for this Document,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,addOutputIntent,org.apache.pdfbox.pdmodel.PDDocumentCatalog:addOutputIntent(org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent),436,445,"/**
* Adds an output intent to the PDF document.
* @param outputIntent the PDOutputIntent object to add
*/","* Add an OutputIntent to the list.  If there is not OutputIntent, the list is created and the
     * first  element added.
     *
     * @param outputIntent the OutputIntent to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOutputIntents,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOutputIntents(java.util.List),453,461,"/**
* Sets the list of output intents.
* @param outputIntents List of PDOutputIntent objects
*/","* Replace the list of OutputIntents of the document.
     *
     * @param outputIntents the list of OutputIntents, if the list is empty all OutputIntents are
     * removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,<init>,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:<init>(org.apache.pdfbox.pdmodel.PDDocumentCatalog),38,48,"/**
* Initializes a PDDocumentNameDictionary from a document catalog.
* @param cat the PDDocumentCatalog to extract or create name dictionary from
*/","* Constructor.
     *
     * @param cat The document catalog that this dictionary is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setCropBox,org.apache.pdfbox.pdmodel.PDPage:setCropBox(org.apache.pdfbox.pdmodel.common.PDRectangle),460,470,"/**
* Sets the crop box for a PDF page.
* @param cropBox the new crop box dimensions or null to remove it
*/","* This will set the CropBox for this page.
     * 
     * @param cropBox The new CropBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(java.util.List),622,625,"/**
* Sets the list of content streams for the page.
* @param contents List of PDStream objects representing page content
*/","* This will set the contents of this page.
     *
     * @param contents Array of new contents of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setThreadBeads,org.apache.pdfbox.pdmodel.PDPage:setThreadBeads(java.util.List),661,664,"/**
* Sets thread beads on a PDF page.
* @param beads list of PDThreadBead objects representing thread beads
*/","* This will set the list of thread beads.
     * 
     * @param beads A list of PDThreadBead objects or null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getActions,org.apache.pdfbox.pdmodel.PDPage:getActions(),693,702,"/**
 * Retrieves or creates additional actions for a PDF page.
 * @return PDPageAdditionalActions object representing the page's actions
 */","* Get the page actions.
     * 
     * @return The Actions for this Page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setAnnotations,org.apache.pdfbox.pdmodel.PDPage:setAnnotations(java.util.List),800,803,"/**
* Sets annotations on a PDF page.
* @param annotations list of PDAnnotation objects to be added
*/","* This will set the list of annotations. Although this is optional, you should take care that
     * any newly created annotations link back to this page by calling
     * {@link PDAnnotation#setPage(org.apache.pdfbox.pdmodel.PDPage)}. Not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>.
     *
     * @param annotations The new list of annotations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setViewports,org.apache.pdfbox.pdmodel.PDPage:setViewports(java.util.List),860,868,"/**
* Sets the list of viewports for a PDF page.
* @param viewports List of PDViewportDictionary objects representing viewports
*/","* Set the viewports.
     *
     * @param viewports A list of viewports, or null if the entry is to be deleted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(),54,61,"/**
* Initializes a new PDPageTree with an empty root dictionary.
*/",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,getKids,org.apache.pdfbox.pdmodel.PDPageTree:getKids(org.apache.pdfbox.cos.COSDictionary),138,174,"/**
 * Retrieves child dictionaries (kids) from a PDF node.
 * @param node the parent dictionary node
 * @return list of child COSDictionary objects
 */","* Helper to get kids from malformed PDFs.
     * @param node page tree node
     * @return list of kids",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,sanitizeType,org.apache.pdfbox.pdmodel.PDPageTree:sanitizeType(org.apache.pdfbox.cos.COSDictionary),271,283,"/**
* Ensures the dictionary has a valid 'Type' of 'Page'.
* @param dictionary PDF dictionary to sanitize
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,org.apache.pdfbox.pdmodel.common.COSArrayList:add(java.lang.Object),187,212,"/**
 * Adds an element to the collection.
 * Handles special cases for parent dictionary and string elements.
 * @param o element to be added
 * @return true if the element was successfully added
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,clear,org.apache.pdfbox.pdmodel.common.COSArrayList:clear(),416,427,"/**
* Clears the dictionary and associated arrays.
* If there's a parent dictionary, sets its item to null.
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,set,"org.apache.pdfbox.pdmodel.common.COSArrayList:set(int,java.lang.Object)",460,485,"/**
* Sets an element at the specified index.
* @param index position in the list
* @param element new value to set
* @return the previous element at the specified position
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,add,"org.apache.pdfbox.pdmodel.common.COSArrayList:add(int,java.lang.Object)",490,515,"/**
* Adds an element at the specified index.
* @param index position where to insert the element
* @param element the element to add
* @throws UnsupportedOperationException if adding in a filtered list
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSDictionaryMap.java,put,"org.apache.pdfbox.pdmodel.common.COSDictionaryMap:put(java.lang.Object,java.lang.Object)",105,112,"/**
* Puts a key-value pair in the map and updates the PDF document.
* @param key unique key for the entry
* @param value associated COSObjectable value
* @return previous value associated with the key or null if none
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getCOSObject,org.apache.pdfbox.pdmodel.common.PDPageLabels:getCOSObject(),180,192,"/**
* Converts label map to COSBase object.
* @return COSDictionary representing the label map
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(),38,42,"/**
* Initializes a new PDComplexFileSpecification with default values.
*/",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,<init>,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:<init>(org.apache.pdfbox.cos.COSDictionary),49,60,"/**
* Initializes a PDComplexFileSpecification with a given dictionary.
* @param dict the COSDictionary to initialize with; if null, creates a new one
*/","* Constructor. Creates empty COSDictionary if dict is null.
     *
     * @param dict The dictionary that fulfils this file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setRangeValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setRangeValues(org.apache.pdfbox.cos.COSArray),196,200,"/**
* Sets the range values for a PDF annotation.
* @param rangeValues COSArray containing the range values
*/","* This will set the range values.
     *
     * @param rangeValues The new range values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,setDomainValues,org.apache.pdfbox.pdmodel.common.function.PDFunction:setDomainValues(org.apache.pdfbox.cos.COSArray),239,243,"/**
* Sets domain values.
* @param domainValues array of COSBase objects representing domain values
*/","* This will set the domain values.
     *
     * @param domainValues The new domain values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setEncodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setEncodeValues(org.apache.pdfbox.cos.COSArray),207,211,"/**
* Sets encoding values for the object.
* @param encodeValues array of COS objects representing encoding values
*/","* This will set the encode values.
     *
     * @param encodeValues The new encode values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setDecodeValues,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setDecodeValues(org.apache.pdfbox.cos.COSArray),236,240,"/**
* Sets decode values for the object.
* @param decodeValues array of decode values to be set
*/","* This will set the decode values.
     *
     * @param decodeValues The new decode values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDDefaultAttributeObject.java,setAttribute,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDDefaultAttributeObject:setAttribute(java.lang.String,org.apache.pdfbox.cos.COSBase)",102,107,"/**
* Sets an attribute with the given name and value.
* @param attrName name of the attribute
* @param attrValue value to set for the attribute
*/","* Sets an attribute.
     * 
     * @param attrName the attribute name
     * @param attrValue the attribute value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),263,289,"/**
* Removes an attribute from the PDF object.
* @param attributeObject the attribute to remove
*/","* Removes an attribute object.
     * 
     * @param attributeObject the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,attributeChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:attributeChanged(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),296,321,"/**
 * Updates attribute revision number.
 * @param attributeObject the attribute object to update
 */","* Updates the revision number for the given attribute object.
     * 
     * @param attributeObject the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addClassName(java.lang.String),401,426,"/**
 * Adds a class name to the PDF object.
 * @param className the class name to add
 */","* Adds a class name.
     * 
     * @param className the class name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,removeClassName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:removeClassName(java.lang.String),433,463,"/**
* Removes a class name from the PDF object.
* @param className the name of the class to remove
*/","* Removes a class name.
     * 
     * @param className the class name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.cos.COSBase),176,200,"/**
* Adds a child object to the current COSBase.
* @param object the child object to add
*/","* Appends a COS base kid.
     * 
     * @param object the COS base",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.cos.COSBase,java.lang.Object)",234,270,"/**
 * Inserts a new child before a reference child in the PDF structure.
 * @param newKid the new child to insert
 * @param refKid the reference child before which to insert
 */","* Inserts an COS base kid before a reference kid.
     * 
     * @param newKid the COS base
     * @param refKid the reference kid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.cos.COSBase),309,349,"/**
 * Removes a kid from the COS object.
 * @param object the kid to remove
 * @return true if the kid was removed, false otherwise
 */","* Removes a COS base kid.
     * 
     * @param object the COS base
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setK,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setK(org.apache.pdfbox.cos.COSBase),88,91,"/**
 * Sets the K item in the COS object.
 * @param k the COSBase value to set
 */","* Sets the K entry.
     * 
     * @param k the K value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setClassMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setClassMap(java.util.Map),253,273,"/**
* Sets the class map for the PDF document.
* @param classMap mapping of attribute names to PDAttributeObject or List of PDAttributeObjects
*/","* Sets the ClassMap.
     * 
     * @param classMap null, or a map whose elements are either {@link PDAttributeObject} or lists
     * of it.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:setUserProperties(java.util.List),81,85,"/**
* Sets user properties in PDF document.
* @param userProperties list of user properties to set
*/","* Sets the user properties.
     * 
     * @param userProperties the user properties",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setValue(org.apache.pdfbox.cos.COSBase),94,98,"/**
* Sets the value of the COS object.
* @param value the new value to set
*/","* Sets the property value.
     * 
     * @param value the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getGuidelineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getGuidelineColor(),85,98,"/**
* Retrieves the guideline color from the PDF dictionary.
* Initializes to black if not set.
* @return PDColor object representing the guideline color
*/","* Get the RGB color to be used for the guidelines.  This is guaranteed to
     * not return null. The default color is [0,0,0].
     *
     *@return The guideline color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,getLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:getLineDashPattern(),167,178,"/**
* Retrieves or creates a line dash pattern.
* @return PDLineDashPattern object with default settings if not previously set
*/","* Get the line dash pattern for this box style.  This is guaranteed to not
     * return null.  The default is [3],0.
     *
     * @return The line dash pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setLineDashPattern,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setLineDashPattern(org.apache.pdfbox.cos.COSArray),185,193,"/**
* Sets the line dash pattern.
* @param dashArray array defining the dash pattern
*/","* Set the line dash pattern associated with this box style.
     *
     * @param dashArray The patter for this box style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setCryptFilterMethod,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setCryptFilterMethod(org.apache.pdfbox.cos.COSName),96,99,"/**
* Sets the cryptographic filter method in the dictionary.
* @param cfm the cryptographic filter method to be set
*/","* This will set the crypt filter method. 
     * Allowed values are: NONE, V2, AESV2, AESV3
     *
     * @param cfm name of the crypt filter method.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setFilter(java.lang.String),149,152,"/**
 * Sets the PDF filter.
 * @param filter name of the filter to apply
 */","* Sets the filter entry of the encryption dictionary.
     *
     * @param filter The filter name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerKey(byte[]),261,264,"/**
* Sets the owner key in the dictionary.
* @param o byte array representing the owner key
* @throws IOException if an I/O error occurs
*/","* This will set the O entry in the standard encryption dictionary.
     *
     * @param o A 32 byte array or null if there is no owner key.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserKey(byte[]),300,303,"/**
* Sets user key in dictionary.
* @param u byte array representing user key
* @throws IOException if an I/O error occurs
*/","* This will set the U entry in the standard encryption dictionary.
     *
     * @param u A 32 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setOwnerEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setOwnerEncryptionKey(byte[]),339,342,"/**
* Sets owner encryption key in dictionary.
* @param oe encryption key bytes
* @throws IOException if an I/O error occurs
*/","* This will set the OE entry in the standard encryption dictionary.
     *
     * @param oe A 32 byte array or null if there is no owner encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setUserEncryptionKey,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setUserEncryptionKey(byte[]),369,372,"/**
* Sets user encryption key in dictionary.
* @param ue user encryption key bytes
* @throws IOException if an I/O error occurs
*/","* This will set the UE entry in the standard encryption dictionary.
     *
     * @param ue A 32 byte array or null if there is no user encryption key.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRecipients,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRecipients(byte[][]),429,439,"/**
* Sets the recipients for a PDF document.
* @param recipients array of byte arrays representing recipient data
* @throws IOException if an I/O error occurs while setting recipients
*/","* This will set the Recipients field of the dictionary. This field contains an array
     * of string.
     * @param recipients the array of bytes arrays to put in the Recipients field.
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setCryptFilterDictionary,"org.apache.pdfbox.pdmodel.encryption.PDEncryption:setCryptFilterDictionary(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary)",513,523,"/**
* Sets a cryptographic filter dictionary.
* @param cryptFilterName name of the crypt filter
* @param cryptFilterDictionary crypt filter settings
*/","* Sets the crypt filter with the given name.
     * 
     * @param cryptFilterName the name of the crypt filter
     * @param cryptFilterDictionary the crypt filter to set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStreamFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStreamFilterName(org.apache.pdfbox.cos.COSName),564,567,"/**
* Sets the stream filter name in the dictionary.
* @param streamFilterName the filter name to be set
*/","* Sets the name of the filter which is used for de/encrypting streams.
     * 
     * @param streamFilterName the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStringFilterName,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStringFilterName(org.apache.pdfbox.cos.COSName),586,589,"/**
* Sets the string filter name in the dictionary.
* @param stringFilterName the COSName to be set as the string filter
*/","* Sets the name of the filter which is used for de/encrypting strings.
     * 
     * @param stringFilterName the name of the filter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPerms,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPerms(byte[]),598,601,"/**
 * Sets permissions using byte array.
 * @param perms byte array representing permissions
 * @throws IOException if an I/O error occurs
 */","* Set the Perms entry in the encryption dictionary.
     *
     * @param perms A 16 byte array.
     *
     * @throws IOException If there is an error setting the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,removeV45filters,org.apache.pdfbox.pdmodel.encryption.PDEncryption:removeV45filters(),624,629,"/**
* Removes V45 filters from the dictionary.
*/","* remove CF, StmF, and StrF entries. This is to be called if V is not 4 or 5.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(),107,111,"/**
* Initializes a new FDF annotation.
* Sets up the underlying dictionary with type annotation.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setColor(java.awt.Color),467,475,"/**
* Sets the annotation's color.
* @param c Color object to set; null for no color
*/","* Set the annotation color.
     *
     * @param c The annotation color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRichContents(java.lang.String),876,879,"/**
 * Sets rich content to the annotation.
 * @param rc rich content string
 */","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setInteriorColor(java.awt.Color),105,113,"/**
* Sets the interior color of an annotation.
* @param color the new interior color or null to clear it
*/","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setCallout(float[]),144,147,"/**
 * Sets the callout coordinates.
 * @param callout array of float values representing coordinates
 */","* This will set the coordinates of the callout line.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, Four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:setInkList(java.util.List),123,131,"/**
 * Sets the ink list for an annotation.
 * @param inklist list of float arrays representing ink data
 */","* Set the paths making up the freehand ""scribble"".
     * 
     * The ink annotation is made up of one ore more disjoint paths. Each array entry is an array representing a stroked
     * path, being a series of alternating horizontal and vertical coordinates in default user space.
     * 
     * @param inklist the List of arrays representing the paths.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLine(float[]),162,165,"/**
 * Sets a line annotation.
 * @param line array representing the line coordinates
 */","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param line array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setInteriorColor(java.awt.Color),251,259,"/**
* Sets the interior color of an annotation.
* @param color Color to be set; null removes the color
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionHorizontalOffset(float),386,398,"/**
* Sets horizontal offset for annotation caption.
* @param offset the horizontal offset value
*/","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionVerticalOffset(float),416,427,"/**
* Sets the vertical offset for the annotation caption.
* @param offset the vertical offset value
*/","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setVertices(float[]),116,119,"/**
* Sets the vertices of an annotation.
* @param vertices array of vertex coordinates
*/","* This will set the coordinates of the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:setInteriorColor(java.awt.Color),137,145,"/**
* Sets the interior color of an annotation.
* @param color the desired interior color or null to clear it
*/","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the drawn area.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setVertices(float[]),133,136,"/**
 * Sets the vertices of an annotation.
 * @param vertices array of vertex coordinates
 */","* This will set the coordinates of the the vertices.
     *
     * @param vertices array of floats [x1, y1, x2, y2, ...] vertex coordinates in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setInteriorColor(java.awt.Color),220,228,"/**
* Sets the interior color of an annotation.
* @param color Color object to set; null removes the color
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param color The interior color of the line endings.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setInteriorColor,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setInteriorColor(java.awt.Color),106,114,"/**
* Sets the interior color of an annotation.
* @param color Color object representing the new interior color
*/","* This will set interior color of the drawn area.
     *
     * @param color The interior color of the circle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,setCoords,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:setCoords(float[]),87,90,"/**
* Sets annotation coordinates.
* @param coords coordinate array [x1,y1,x2,y2,...]
*/","* Set the coordinates of individual words or group of words.
     * 
     * The quadliterals shall encompasses a word or group of contiguous words in the text underlying the annotation. The
     * coordinates for each quadrilateral shall be given in the order x1 y1 x2 y2 x3 y3 x4 y4.
     *
     * @param coords an array of 8 􏰍 n numbers specifying the coordinates of n quadrilaterals.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setID,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setID(org.apache.pdfbox.cos.COSArray),315,318,"/**
* Sets the ID of the FDF document.
* @param id COSArray containing the ID information
*/","* This will set the FDF id.
     *
     * @param id The new id for the FDF.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFields(java.util.List),346,349,"/**
* Sets form fields in the FDF document.
* @param fields list of FDFField objects representing form fields
*/","* This will set the list of fields. This should be a list of FDFField objects.
     *
     * @param fields The list of fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setPages,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setPages(java.util.List),398,401,"/**
* Sets the list of PDF pages.
* @param pages list of FDFPage objects
*/","* This will set the list of pages. This should be a list of FDFPage objects.
     *
     *
     * @param pages The list of pages.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setAnnotations,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setAnnotations(java.util.List),459,462,"/**
* Sets annotations in the FDF document.
* @param annots list of FDF annotations to be set
*/","* This will set the list of annotations. This should be a list of FDFAnnotation objects.
     *
     *
     * @param annots The list of annotations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setDifferences,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setDifferences(org.apache.pdfbox.cos.COSStream),479,482,"/**
* Sets the differences stream in the FDF document.
* @param diff COSStream containing differences data
*/","* This will set the differences stream.
     *
     * @param diff The new differences stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEmbeddedFDFs(java.util.List),534,537,"/**
* Sets embedded FDF files.
* @param embedded list of file specifications to embed
*/","* This will set the list of embedded FDFs. This should be a list of PDFileSpecification objects.
     *
     *
     * @param embedded The list of embedded FDFs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setKids,org.apache.pdfbox.pdmodel.fdf.FDFField:setKids(java.util.List),197,200,"/**
* Sets the list of child fields.
* @param kids list of FDFField objects representing child fields
*/","* This will set the list of kids.
     *
     * @param kids A list of FDFField objects.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(java.lang.Object),293,313,"/**
 * Sets the value of a PDF form field.
 * @param value the value to set, can be List<String>, String, or COSObjectable
 * @throws IOException if an I/O error occurs or unknown type is provided
 */","* You should pass a String, or a List&lt;String&gt; to set the value.
     *
     * @param value The value that should populate when imported.
     *
     * @throws IOException If there is an error setting the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setValue,org.apache.pdfbox.pdmodel.fdf.FDFField:setValue(org.apache.pdfbox.cos.COSBase),320,323,"/**
 * Sets the value of a PDF form field.
 * @param value the new value to be set
 */","* Sets the COS value of this field.
     *
     * @param value COS value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(java.lang.Integer),348,356,"/**
* Sets field flags.
* @param ff field flag integer value
*/","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(java.lang.Integer),392,400,"/**
* Sets field flags.
* @param ff field flag integer value
*/","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(java.lang.Integer),436,444,"/**
* Sets clear field flags for a form field.
* @param ff flag values to set
*/","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(java.lang.Integer),480,488,"/**
* Sets widget field flags.
* @param f flag integer value
*/","* This will set the widget field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(java.lang.Integer),524,532,"/**
* Sets widget field flags.
* @param ff field flag values
*/","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(java.lang.Integer),568,576,"/**
* Sets widget field clear flags.
* @param ff flag values to set
*/","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear widget field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSString),765,768,"/**
 * Sets rich text value for a field.
 * @param rv rich text string to be set
 */","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:setRichText(org.apache.pdfbox.cos.COSStream),775,778,"/**
* Sets rich text content.
* @param rv COSStream containing rich text data
*/","* This will set the rich text value.
     *
     * @param rv The rich text value for the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setBefore(java.lang.String),97,100,"/**
 * Sets the ""before"" value in the dictionary.
 * @param before the string to be set as the ""before"" value
 */","* This will set the javascript code the will get execute before the import.
     *
     * @param before A reference to some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setAfter(java.lang.String),129,132,"/**
 * Sets the ""after"" attribute in the dictionary.
 * @param after value to be set
 */","* This will set the javascript code the will get execute after the import.
     *
     * @param after A reference to some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,setDoc,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:setDoc(java.util.Map),172,181,"/**
* Sets document actions from a map.
* @param map key-value pairs of document action names and their JavaScript actions
*/","* Sets the dictionary's ""Doc"" entry.
     * 
     * @param map Map of named ""JavaScript"" dictionaries.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setTemplates,org.apache.pdfbox.pdmodel.fdf.FDFPage:setTemplates(java.util.List),91,94,"/**
* Sets PDF form templates.
* @param templates list of FDFTemplate objects
*/","* A list of FDFTemplate objects.
     *
     * @param templates A list of templates for this Page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setFields,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setFields(java.util.List),112,115,"/**
* Sets form fields in the PDF template.
* @param fields list of FDFField objects representing form fields
*/","* This will set a list of fields for this template.
     *
     * @param fields The list of fields to set for this template.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(java.util.TreeMap),279,309,"/**
 * Builds character width arrays for a font.
 * @param cidToGid mapping of CID to GID
 * @throws IOException if an I/O error occurs
 */",* Builds widths with a custom CIDToGIDMap (for embedding font subset).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalHeader,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalHeader(org.apache.pdfbox.cos.COSDictionary),311,332,"/**
* Builds vertical header for CID font.
* @param cidFont the CID font dictionary to update
* @return true if successful, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(),72,80,"/**
* Initializes a new PDFont object.
* Sets up the dictionary with type 'Font' and initializes other attributes.
*/",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,<init>,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:<init>(),54,58,"/**
* Constructs a new font descriptor.
* Initializes a dictionary with type set to FONT_DESC.
*/","* Package-private constructor, for embedding.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontName,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontName(java.lang.String),295,303,"/**
* Sets the font name in a PDF dictionary.
* @param fontName the name of the font to set
*/","* This will set the font name.
     *
     * @param fontName The new name for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFamily,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFamily(java.lang.String),320,328,"/**
* Sets the font family for a PDF document.
* @param fontFamily name of the font family to be set
*/","* This will set the font family.
     *
     * @param fontFamily The font family.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontStretch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontStretch(java.lang.String),371,379,"/**
* Sets the font stretch for a PDF dictionary.
* @param fontStretch the font stretch value as a string
*/","* This will set the font stretch.
     *
     * @param fontStretch The new stretch for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontBoundingBox,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontBoundingBox(org.apache.pdfbox.pdmodel.common.PDRectangle),427,435,"/**
* Sets the font bounding box.
* @param rect rectangle defining the bounding box or null to clear it
*/","* Set the fonts bounding box.
     *
     * @param rect The new bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCharacterSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCharacterSet(java.lang.String),711,719,"/**
* Sets the character set for the document.
* @param charSet character set string to be set
*/","* This will set the character set for the font.
     *
     * @param charSet The new character set for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,fixType0Subtype,"org.apache.pdfbox.pdmodel.font.PDFontFactory:fixType0Subtype(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.cos.COSName)",192,212,"/**
 * Adjusts the subtype of a descendant font in a PDF.
 * @param descendantFont The descendant font dictionary to adjust.
 * @param fontDescriptor The font descriptor containing font files.
 * @param newSubType The new subtype to set for the font.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/encoding/DictionaryEncoding.java,<init>,"org.apache.pdfbox.pdmodel.font.encoding.DictionaryEncoding:<init>(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSArray)",48,71,"/**
* Initializes a DictionaryEncoding with a base encoding and differences.
* @param baseEncoding the base encoding name
* @param differences array of character differences
*/","* Creates a new DictionaryEncoding for embedding.
     *
     * @param baseEncoding the base encoding of this encoding
     * @param differences the differences of this encoding with regard to the base encoding",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:setGamma(float),123,126,"/**
 * Sets the gamma value in the dictionary.
 * @param value the gamma value to set
 */","* Set the gamma value.
     *
     * @param value The new gamma value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,getGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:getGamma(),121,133,"/**
* Retrieves or creates the gamma array for color correction.
* @return PDGamma object representing the gamma settings
*/","* Returns the gamma value.
     * If none is present then the default of 1,1,1 will be returned.
     * @return the gamma value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setGamma,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setGamma(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),157,165,"/**
* Sets the gamma value in the dictionary.
* @param gamma PDGamma object representing the gamma settings
*/","* Sets the gamma value.
     * @param gamma the new gamma value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:setMatrix(org.apache.pdfbox.util.Matrix),172,191,"/**
* Sets the transformation matrix in the dictionary.
* @param matrix the transformation matrix to set
*/","* Sets the linear interpretation matrix.
     * Passing in null will clear the matrix.
     * @param matrix the new linear interpretation matrix, or null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,getColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:getColorants(org.apache.pdfbox.pdmodel.PDResources),80,98,"/**
* Retrieves and creates separation colorants from resources.
* @param resources PDF document resources
* @return Map of colorant names to PDSeparation objects
* @throws IOException if an I/O error occurs
*/","* Returns a map of colorants and their associated Separation color space.
     * @param resources resources, can be null.
     * @return map of colorants to color spaces, never null.
     * @throws IOException If there is an error reading a color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,setColorants,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:setColorants(java.util.Map),127,135,"/**
* Sets the colorants for a PDF document.
* @param colorants map of color names to PDColorSpace objects
*/","* Sets the colorant map.
     * @param colorants the map of colorants",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/form/PDTransparencyGroupAttributes.java,<init>,org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroupAttributes:<init>(),40,44,"/**
* Initializes a new instance of PDTransparencyGroupAttributes.
* Sets up the dictionary with the necessary transparency settings.
*/",* Creates a group object with /Transparency subtype entry.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),194,203,"/**
* Sets the color space for PDF parameters.
* @param colorSpace the color space to be set
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setFilters,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setFilters(java.util.List),266,270,"/**
* Sets document filters.
* @param filters list of filter names
*/","* Sets which filters are applied to this stream.
     *
     * @param filters the filters to apply to this stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setDecode,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setDecode(org.apache.pdfbox.cos.COSArray),272,276,"/**
 * Sets the decoding array for an image.
 * @param decode COSArray containing decoding values
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildDecodeParams,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildDecodeParams(org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",463,471,"/**
 * Builds decode parameters for PNG conversion.
 * @param state converter state containing image dimensions and bit depth
 * @param colorSpace color space of the image
 * @return COSDictionary with decode parameters
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:<init>(),38,41,"/**
 * Constructs a PDOptionalContentMembershipDictionary.
 * Sets the dictionary type to ""OCMD"".
 */",* Creates a new optional content membership dictionary (OCMD).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setVisibilityPolicy,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setVisibilityPolicy(org.apache.pdfbox.cos.COSName),118,121,"/**
 * Sets the visibility policy.
 * @param visibilityPolicy the COSName representing the visibility policy
 */","* Sets the visibility policy name. Valid names are AllOff, AllOn, AnyOff, AnyOn (default).
     * 
     * @param visibilityPolicy the visibility policy name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOCGs(),115,124,"/**
* Retrieves or creates the OCGs array from the dictionary.
* @return COSArray containing OCG objects
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setMatrix(java.awt.geom.AffineTransform),143,153,"/**
* Sets the transformation matrix for an object.
* @param transform AffineTransform containing the matrix values
*/","* Sets the optional Matrix entry for the Pattern.
     * @param transform the transformation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setBBox,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),232,242,"/**
* Sets the bounding box for the PDF object.
* @param bbox PDRectangle representing the bounding box or null to remove it
*/","* This will set the BBox (bounding box) for this Pattern.
     * @param bbox The new BBox for this Pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBackground,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBackground(org.apache.pdfbox.cos.COSArray),142,146,"/**
* Sets the document's background.
* @param newBackground COSArray representing the new background
*/","* This will set the background.
     *
     * @param newBackground the new background",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setBBox,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),187,198,"/**
* Sets the bounding box for this object.
* @param newBBox the new bounding box rectangle
*/","* This will set the BBox (bounding box) for this Shading.
     *
     * @param newBBox the new BBox",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setColorSpace,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),254,265,"/**
* Sets the color space for PDF rendering.
* @param colorSpace the new color space to apply
*/","* This will set the color space for the shading.
     *
     * @param colorSpace the color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.cos.COSArray),324,329,"/**
* Sets the function array.
* @param newFunctions new COSArray of functions
*/","* This will set the functions COSArray for the color conversion.
     *
     * @param newFunctions the new COSArray containing all functions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setMatrix,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setMatrix(java.awt.geom.AffineTransform),66,76,"/**
* Sets the transformation matrix for an object.
* @param transform AffineTransform object defining the matrix
*/","* Sets the optional Matrix entry for the function based shading.
     *
     * @param transform the transformation matrix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType1.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType1:setDomain(org.apache.pdfbox.cos.COSArray),97,101,"/**
* Sets the domain for the COS object.
* @param newDomain the new domain to be set
*/","* Sets the optional Domain entry for the function based shading.
     *
     * @param newDomain the domain array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setExtend,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setExtend(org.apache.pdfbox.cos.COSArray),70,74,"/**
* Sets the extend array.
* @param newExtend the new COSArray to set
*/","* Sets the optional Extend entry for this shading.
     *
     * @param newExtend the extend array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setDomain,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setDomain(org.apache.pdfbox.cos.COSArray),95,99,"/**
* Sets the domain for the COS object.
* @param newDomain the new domain array to be set
*/","* Sets the optional Domain entry for this shading.
     *
     * @param newDomain the domain array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType2.java,setCoords,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType2:setCoords(org.apache.pdfbox.cos.COSArray),120,124,"/**
* Sets coordinates for the object.
* @param newCoords array of coordinates to be set
*/","* Sets the Coords entry for this shading.
     *
     * @param newCoords the coordinates array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets the decode values for the COS object.
* @param decodeValues array of decode values to be set
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,<init>,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:<init>(),46,51,"/**
* Initializes a new PDExtendedGraphicsState with default settings.
*/","* Default constructor, creates blank graphics state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setBlendMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setBlendMode(org.apache.pdfbox.pdmodel.graphics.blend.BlendMode),592,595,"/**
* Sets blend mode for an object.
* @param bm the BlendMode to apply
*/","* Set the blending mode.
     * 
     * @param bm blend mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFloatItem,"org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFloatItem(org.apache.pdfbox.cos.COSName,java.lang.Float)",656,666,"/**
* Sets a float item in the dictionary.
* @param key the key for the item
* @param value the float value to set
*/","* This will set a float object.
     *
     * @param key The key to the data that we are setting.
     * @param value The value that we are setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer(org.apache.pdfbox.cos.COSBase),694,697,"/**
 * Sets the transfer attribute in the dictionary.
 * @param transfer COSBase object representing the transfer
 */","* This will set the transfer function of the /TR dictionary.
     *
     * @param transfer The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTransfer2,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTransfer2(org.apache.pdfbox.cos.COSBase),727,730,"/**
 * Sets the second transfer object in the dictionary.
 * @param transfer2 the COSBase object representing the second transfer
 */","* This will set the transfer function of the /TR2 dictionary.
     *
     * @param transfer2 The transfer function. According to the PDF specification, this is either a
     * single function (which applies to all process colorants) or an array of four functions (which
     * apply to the process colorants individually). The name Identity may be used to represent the
     * identity function, and the name Default denotes the transfer function that was in effect at
     * the start of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setNext(java.util.List),156,159,"/**
 * Sets the next actions in the PDF document.
 * @param next list of PDAction objects representing subsequent actions
 */","* This will set the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @param next The Next action or sequence of actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setT,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setT(org.apache.pdfbox.cos.COSBase),69,72,"/**
 * Sets the ""T"" item in the action.
 * @param t COSBase object to be set
 */",* @param t annotation or annotations,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,setH,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:setH(boolean),87,90,"/**
 * Sets the 'h' flag in the action item.
 * @param h boolean value to set the 'h' flag
 */",* @param h hide flag,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setD(org.apache.pdfbox.cos.COSBase),108,111,"/**
 * Sets the ""D"" item in the action.
 * @param d the COSBase object to set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFields(org.apache.pdfbox.cos.COSArray),67,70,"/**
 * Sets form fields in an action.
 * @param array COSArray containing field names
 */",* @param array the array of fields,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSound,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSound(org.apache.pdfbox.cos.COSStream),61,64,"/**
 * Sets the sound for an action.
 * @param sound COSStream representing the sound to be set
 */","* Sets the sound object.
     * 
     * @param sound the sound object defining the sound that shall be played.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFields(org.apache.pdfbox.cos.COSArray),93,96,"/**
 * Sets form fields to the given COSArray.
 * @param array containing field definitions
 */",* @param array the array of fields,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setD(org.apache.pdfbox.cos.COSBase),71,74,"/**
 * Sets the destination item.
 * @param d COSBase object representing the destination
 */",* @param d The destination.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setB,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setB(org.apache.pdfbox.cos.COSBase),109,112,"/**
* Sets the base item B in the action.
* @param b the COSBase object to set
*/",* @param b The destination.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setRelationship,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setRelationship(org.apache.pdfbox.cos.COSName),88,95,"/**
* Sets the relationship to either 'P' (Parent) or 'C' (Child).
* @param relationship COSName representing the relationship type
*/","* Set the relationship between the current document and the target (which may be an
     * intermediate target).
     *
     * @param relationship Valid values are P (the target is the parent of the current document) and
     * C (the target is a child of the current document).
     *
     * throws IllegalArgumentException if the parameter is not P or C.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(),173,177,"/**
* Initializes a new annotation with a type of ""Annot"".
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:<init>(org.apache.pdfbox.cos.COSDictionary),184,196,"/**
 * Initializes a PDAnnotation with the given dictionary.
 * @param dict the COSDictionary to use for initialization
 */","* Constructor.
     * 
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),282,285,"/**
* Sets the rectangle bounds.
* @param rectangle PDRectangle object defining bounds
*/","* This will set the rectangle for this annotation.
     * 
     * @param rectangle The new rectangle values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setBorder(org.apache.pdfbox.cos.COSArray),764,767,"/**
* Sets the border array for the PDF object.
* @param borderArray COSArray representing the border properties
*/","* This will set the border array.
     * 
     * @param borderArray the border array to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float,float,float,float)",76,84,"/**
* Sets rectangle differences for PDF cropping.
* @param differenceLeft left margin difference
* @param differenceTop top margin difference
* @param differenceRight right margin difference
* @param differenceBottom bottom margin difference
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float,float,float,float)",163,171,"/**
* Sets rectangle differences for a PDF annotation.
* @param differenceLeft left margin difference
* @param differenceTop top margin difference
* @param differenceRight right margin difference
* @param differenceBottom bottom margin difference
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setCallout,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setCallout(float[]),194,197,"/**
* Sets the callout coordinates.
* @param callout array of float values representing callout coordinates
*/","* This will set the coordinates of the callout line. (PDF 1.6 and higher) Only relevant if the
     * intent is FreeTextCallout.
     *
     * @param callout An array of four or six numbers specifying a callout line attached to the free
     * text annotation. Six numbers [ x1 y1 x2 y2 x3 y3 ] represent the starting, knee point, and
     * ending coordinates of the line in default user space, four numbers [ x1 y1 x2 y2 ] represent
     * the starting and ending coordinates of the line.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,setInkList,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:setInkList(float[][]),65,78,"/**
* Sets the ink list for a PDF annotation.
* @param inkList 2D float array representing ink paths
*/","* Sets the paths that make this annotation.
     *
     * @param inkList An array of arrays, each representing a stroked path. Each array shall be a
     * series of alternating horizontal and vertical coordinates. If the parameter is null the entry
     * will be removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLine,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLine(float[]),135,138,"/**
* Sets line coordinates.
* @param l array of float values representing line coordinates
*/","* This will set start and end coordinates of the line (or leader line if LL entry is set).
     *
     * @param l array of 4 floats [x1, y1, x2, y2] line start and end points in default user space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionHorizontalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionHorizontalOffset(float),352,363,"/**
* Sets the horizontal offset for the caption.
* @param offset the horizontal offset value
*/","* This will set the horizontal offset of the caption.
     * 
     * @param offset the horizontal offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionVerticalOffset,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionVerticalOffset(float),381,392,"/**
* Sets vertical caption offset.
* @param offset vertical offset value
*/","* This will set the vertical offset of the caption.
     * 
     * @param offset vertical offset of the caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setQuadPoints(float[]),201,204,"/**
* Sets quad points for annotation.
* @param quadPoints array of float values defining points
*/","* This will set the set of quadpoints which encompass the areas of this annotation which will activate.
     *
     * @param quadPoints an array representing the set of area covered.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setRichContents(java.lang.String),156,159,"/**
* Sets rich content string.
* @param rc rich content to be set
*/","* This will set the rich text stream which is displayed in the popup window.
     *
     * @param rc the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setVertices(float[]),124,127,"/**
* Sets vertex coordinates.
* @param points array of vertex coordinates
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setVertices,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setVertices(float[]),170,173,"/**
* Sets vertices for a shape.
* @param points array of vertex coordinates
*/","* This will set the numbers that shall represent the alternating horizontal and vertical
     * coordinates.
     *
     * @param points an array with the numbers that shall represent the alternating horizontal and
     * vertical coordinates.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setParent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup),84,87,"/**
* Sets the parent annotation.
* @param annot the parent PDAnnotationMarkup object
*/","* This will set the markup annotation which this popup relates to.
     *
     * @param annot the markup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,"org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float,float,float,float)",152,160,"/**
* Sets rectangle differences for PDF content.
* @param differenceLeft left margin difference
* @param differenceTop top margin difference
* @param differenceRight right margin difference
* @param differenceBottom bottom margin difference
*/","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * @param differenceLeft left difference from the annotations /Rect entry
     * @param differenceTop top difference from the annotations /Rect entry
     * @param differenceRight right difference from  the annotations /Rect entry
     * @param differenceBottom bottom difference from the annotations /Rect entry
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,setQuadPoints,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:setQuadPoints(float[]),59,62,"/**
* Sets quadrilateral points for annotation.
* @param quadPoints array of 8 floats representing the quad points
*/","* This will set the set of quadpoints which encompass the areas of this annotation.
     *
     * @param quadPoints an array representing the set of area covered",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:<init>(),36,41,"/**
* Initializes a new PDAppearanceDictionary with required N entry.
*/",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setDashStyle(org.apache.pdfbox.cos.COSArray),160,163,"/**
 * Sets the dash style for a PDF line.
 * @param dashArray array defining dash pattern
 */","* This will set the dash style used for drawing the border.
     *
     * @param dashArray the dash style to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,getDashStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:getDashStyle(),170,180,"/**
* Retrieves or creates the dash style for a line.
* @return PDLineDashPattern representing the dash pattern
*/","* This will retrieve the dash style used for drawing the border.
     *
     * @return the dash style of the border",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setOS,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setOS(java.lang.String),233,250,"/**
* Sets the operating system name.
* @param os OS name string
*/","* Indicates the operating system. The string format isn't specified yet. Value will be stored
     * as first item of the array, as specified in PDF Signature Build Dictionary Specification for
     * PDF v1.7.
     *
     * @param os is a string with the system id or name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:<init>(),83,88,"/**
* Initializes a PDSeedValue with a COSDictionary.
* Sets the type to SV and marks it as a direct object.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilter(org.apache.pdfbox.cos.COSName),264,267,"/**
 * Sets the filter for compression.
 * @param filter COSName representing the filter type
 */","* (Optional) The signature handler that shall be used to sign the signature field.
     *
     * @param filter is the filter that shall be used by the signature handler",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilter(java.util.List),292,296,"/**
* Sets the sub-filter items in the dictionary.
* @param subfilter list of sub-filter names
*/","* (Optional) An array of names indicating encodings to use when signing. The first name
     * in the array that matches an encoding supported by the signature handler shall be the
     * encoding that is actually used for signing.
     *
     * @param subfilter is the name that shall be used for encoding",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethod,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethod(java.util.List),323,336,"/**
* Sets the digest method for the dictionary.
* @param digestMethod list of allowed digest names
*/","* <p>(Optional, PDF 1.7) An array of names indicating acceptable digest
     * algorithms to use when signing. The value shall be one of <b>SHA1</b>,
     * <b>SHA256</b>, <b>SHA384</b>, <b>SHA512</b>, <b>RIPEMD160</b>. The default
     * value is implementation-specific.</p>
     *
     * <p>This property is only applicable if the digital credential signing contains RSA
     * public/privat keys</p>
     *
     * @param digestMethod is a list of possible names of the digests, that should be
     * used for signing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasons,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasons(java.util.List),390,393,"/**
* Sets the list of reasons.
* @param reasons list of reason strings
*/","* (Optional) An array of text strings that specifying possible reasons for signing
     * a document. If specified, the reasons supplied in this entry replace those used
     * by conforming products.
     *
     * @param reasons is a list of possible text string that specifying possible reasons",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setMPD,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setMPD(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP),427,433,"/**
* Sets the MDP seed value in the dictionary.
* @param mdp PDSeedValueMDP object to set
*/","* <p>(Optional; PDF 1.6) A dictionary containing a single entry whose key is P
     * and whose value is an integer between 0 and 3. A value of 0 defines the
     * signatures as an author signature. The value 1 through 3 shall be used for
     * certification signatures and correspond to the value of P in a DocMDP transform
     * parameters dictionary.</p>
     *
     * <p>If this MDP key is not present or the MDP dictionary does not contain a P
     * entry, no rules shall be defined regarding the type of signature or its
     * permissions.</p>
     *
     * @param mdp dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setTimeStamp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setTimeStamp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp),478,484,"/**
* Sets the time stamp in the dictionary.
* @param timestamp PDSeedValueTimeStamp object to be set
*/","* <p>(Optional; PDF 1.6) A time stamp dictionary containing two entries. URL which
     * is a ASCII string specifying the URL to a rfc3161 conform timestamp server and Ff
     * to indicate if a timestamp is required or optional.</p>
     *
     * @param timestamp dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestation(java.util.List),505,509,"/**
* Sets legal attestations.
* @param legalAttestation list of attestation strings
*/","* (Optional, PDF 1.6) An array of text strings that specifying possible legal
     * attestations.
     *
     * @param legalAttestation is a list of possible text string that specifying possible
     * legal attestations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:<init>(),71,76,"/**
* Initializes a PDF seed value certificate.
* Sets up a COSDictionary with type SV_CERT and direct flag.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubject(java.util.List),234,237,"/**
* Sets document subject from list of byte arrays.
* @param subjects list containing byte array representations of subjects
*/","* (Optional) A list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing. if
     * <b>Subject</b> is not null and {@link #isSubjectRequired()} is true then the subject
     * constraint is enforced on the subjects in this array subjects.
     *
     * @param subjects list of byte arrays containing DER-encoded X.509v3 certificates that are
     * acceptable for signing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addSubject,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addSubject(byte[]),245,254,"/**
* Adds a subject to the document.
* @param subject byte array representing the subject
*/","* (Optional) byte array containing DER-encoded X.509v3 certificate that is acceptable for
     * signing. works like {@link #setSubject(List)} but one byte array
     *
     * @param subject byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDN,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDN(java.util.List),309,319,"/**
* Sets the subject distinguished name (DN) in a PDF document.
* @param subjectDN list of maps containing DN attributes and values
*/","* (Optional; PDF 1.7) A list of maps, where each map contains key value pairs, that specify the
     * Subject Distinguished Name (DN) that must be present within the certificate for it to be
     * acceptable for signing. The certificate must at a minimum contain all the attributes
     * specified in one of the maps entered.
     *
     * @param subjectDN list of maps that contains subject distinguished names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsage(java.util.List),377,381,"/**
* Sets key usage extensions.
* @param keyUsageExtensions list of key usage strings
*/","* (Optional; PDF 1.7) A List of ASCII strings, where each string specifies an acceptable
     * key-usage extension that must be present in the signing certificate. Multiple strings specify
     * a range of acceptable key-usage extensions; where each string 9 characters long and each
     * character is one of these values {0, 1, X} 0 for must not set, 1 for must set, X for don't
     * care. each index in the string represents a key usage:
     * <ol>
     * <li>digitalSignature</li>
     * <li>non-Repudiation</li>
     * <li>keyEncipherment</li>
     * <li>dataEncipherment</li>
     * <li>keyAgreement</li>
     * <li>keyCertSign</li>
     * <li>cRLSign</li>
     * <li>encipherOnly</li>
     * <li>decipherOnly</li>
     * </ol>
     *
     * @param keyUsageExtensions list of ASCII strings that consists only of {0, 1, X}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(java.lang.String),389,406,"/**
* Adds a key usage extension to the dictionary.
* @param keyUsageExtension string containing '0', '1', or 'X' characters
*/","* (Optional; PDF 1.7) specifies an acceptable key-usage extension that must be presennt in the
     * signing certificate for works like {@link #setKeyUsage(List)} but takes only one string
     *
     * @param keyUsageExtension String that consist only of {0, 1, X}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuer(java.util.List),471,474,"/**
* Sets the list of issuers in the dictionary.
* @param issuers list of issuer byte arrays
*/","* (Optional) A list of array of bytes containing DER-encoded X.509v3 certificates of acceptable
     * issuers. If the signer’s certificate chains up to any of the specified issuers (either
     * directly or indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuers A list of byte array containing DER-encoded X.509v3 certificates",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addIssuer,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addIssuer(byte[]),483,492,"/**
 * Adds an issuer to the document's issuer list.
 * @param issuer byte array representing the issuer
 */","* array of bytes containing DER-encoded X.509v3 certificates of acceptable issuers. If the
     * signer’s certificate chains up to any of the specified issuers (either directly or
     * indirectly), the certificate is considered acceptable for signing.
     *
     * @param issuer A byte array containing DER-encoded X.509v3 certificate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOID(java.util.List),527,530,"/**
* Sets OID values from byte array list.
* @param oidByteStrings list of byte arrays representing OIDs
*/","* (Optional) A list of byte arrays that contain Object Identifiers (OIDs) of the certificate
     * policies that must be present in the signing certificate. This field is only applicable if
     * the value of Issuer is not empty.
     *
     * @param oidByteStrings list of byte arrays that contain OIDs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addOID,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addOID(byte[]),537,546,"/**
 * Adds an OID to the dictionary.
 * @param oid byte array representing the OID
 */","* works like {@link #setOID(List)} but for one object
     *
     * @param oid Object Identifier of a certificate policy to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,<init>,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:<init>(),90,94,"/**
* Initializes a PDSignature object with a signature type.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setType(org.apache.pdfbox.cos.COSName),122,125,"/**
 * Sets the type of the dictionary.
 * @param type the COSName representing the type
 */","* Set the dictionary type.
     *
     * @param type is the dictionary type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setFilter(org.apache.pdfbox.cos.COSName),132,135,"/**
 * Sets the filter for compression.
 * @param filter the compression filter to apply
 */","* Set the filter.
     *
     * @param filter the filter to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSubFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSubFilter(org.apache.pdfbox.cos.COSName),142,145,"/**
 * Sets the sub-filter type.
 * @param subfilter the sub-filter name to be set
 */","* Set a subfilter that specify the signature that should be used.
     *
     * @param subfilter the subfilter that shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setByteRange,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setByteRange(int[]),277,291,"/**
* Sets byte range for a PDF signature.
* @param range array of 4 integers defining the byte range
*/","* Sets the byte range.
     *
     * @param range the byte range to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContents,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContents(byte[]),395,399,"/**
* Sets the contents of the document.
* @param bytes byte array representing the content
*/","* Sets the contents.
     *
     * @param bytes contents to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,injectProcSetArray,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:injectProcSetArray(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.cos.COSArray)",341,352,"/**
* Injects ProcSet array into multiple PDF resources.
* @param innerForm PDF form object
* @param page PDF page object
* @param innerFormResources resources of the inner form
* @param imageFormResources resources of the image form
* @param holderFormResources resources of the holder form
* @param procSet array of ProcSet entries to inject
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createWidgetDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createWidgetDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDResources)",389,399,"/**
 * Creates a widget dictionary for a signature field.
 * @param signatureField the PDSignatureField to create the dictionary for
 * @param holderFormResources resources containing form data
 * @throws IOException if an I/O error occurs during dictionary creation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(java.awt.Color),350,357,"/**
* Sets the text color for a PDF object.
* @param textColor Color object representing the desired text color
*/","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:<init>(org.apache.pdfbox.pdmodel.PDDocument),85,90,"/**
* Initializes a new PDAcroForm with a given document.
* @param doc the PDF document to associate with this form
*/","* Constructor.
     *
     * @param doc The document that this form is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setFields(java.util.List),409,412,"/**
 * Sets form fields in the document.
 * @param fields list of PDF form fields to be set
 */","* Set the documents root fields.
     *
     * @param fields The fields that are part of the documents root fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCalcOrder,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCalcOrder(java.util.List),728,731,"/**
* Sets calculation order for form fields.
* @param fields list of PDField objects representing form fields
*/","* Set the calculation order in which field values should be recalculated when the value of any
     * field changes. (Read about ""Trigger Events"" in the PDF specification)
     *
     * @param fields The field list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),64,68,"/**
 * Initializes a new PDButton instance.
 * @param acroForm parent form containing the button
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setExportValues,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setExportValues(java.util.List),270,282,"/**
* Sets export values for the object.
* @param values list of string values to be exported
*/","* This will set the export values.
     * 
     * @see #getExportValues()
     * @param values List containing all possible export values. Supplying null or an empty list will remove the Opt entry.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),52,56,"/**
* Initializes a new choice field in an Acrobat form.
* @param acroForm the parent form containing the field
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List),108,123,"/**
* Sets display options.
* @param displayValues list of option strings to set
*/","* This will set the display values - the 'Opt' key.
     * 
     * <p>
     * The Opt array specifies the list of options in the choice field either
     * as an array of text strings representing the display value 
     * or as an array of a two-element array where the
     * first element is the export value and the second the display value.
     * </p>
     * <p>
     * To set both the export and the display value use {@link #setOptions(List, List)}
     * </p> 
     *
     * @param displayValues List containing all possible options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setOptions,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setOptions(java.util.List,java.util.List)",143,177,"/**
 * Sets export and display options.
 * @param exportValues list of export values
 * @param displayValues corresponding list of display values
 */","* This will set the display and export values - the 'Opt' key.
     *
     * <p>
     * This will set both, the export value and the display value
     * of the choice field. If either one of the parameters is null or an 
     * empty list is supplied the options will
     * be removed.
     * </p>
     * <p>
     * An {@link IllegalArgumentException} will be thrown if the
     * number of items in the list differ.
     * </p>
     *
     * @see #setOptions(List)
     * @param exportValues List containing all possible export values.
     * @param displayValues List containing all possible display values.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSelectedOptionsIndex,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSelectedOptionsIndex(java.util.List),244,259,"/**
 * Sets selected options indices.
 * @param values list of option indices to select
 */","* This will set the indices of the selected options - the 'I' key.
     * <p>
     * This method is preferred over {@link #setValue(List)} for choice fields which
     * <ul>
     *  <li>do support multiple selections</li>
     *  <li>have export values with the same value</li>
     * </ul>
     * <p>
     * Setting the index will set the value too.
     *
     * @param values List containing the indices of all selected options.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setChildren(java.util.List),160,164,"/**
* Sets the list of child fields.
* @param children list of PDField objects representing child fields
*/","* Sets the child fields.
     *
     * @param children The list of child fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(org.apache.pdfbox.cos.COSBase),214,219,"/**
* Sets value for COSObject.
* @param object the new value to set
*/","* Sets the value of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param object the new value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setDefaultValue(org.apache.pdfbox.cos.COSBase),258,261,"/**
 * Sets default value for COS object.
 * @param value the default value to be set
 */","* Sets the default of this field. This may be of any kind which is valid for this field's children.
     *
     * <p>
     * <b>Note:</b> while non-terminal fields <b>do</b> inherit field values, this method returns the local value,
     * without inheritance.
     * 
     * @param value the default value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),46,54,"/**
* Creates a new PDSignatureField in the given form.
* @param acroForm the parent form containing this field
*/","* @see PDTerminalField#PDTerminalField(PDAcroForm)
     *
     * @param acroForm The acroForm for this field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),44,48,"/**
* Creates a new text field in an Acrobat form.
* @param acroForm the form to which this field belongs
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultStyleString(java.lang.String),166,176,"/**
 * Sets the default style string for a PDF document.
 * @param defaultStyleString the style string to set or null to remove it
 */","* Set the default style string.
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param defaultStyleString a string describing the default style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setRichTextValue(java.lang.String),238,248,"/**
* Sets the rich text value.
* @param richTextValue the rich text content to set
*/","* Set the fields rich text value.
     * 
     * <p>
     * Setting the rich text value will not generate the appearance
     * for the field.
     * <br>
     * You can set {@link PDAcroForm#setNeedAppearances(Boolean)} to
     * signal a conforming reader to generate the appearance stream.
     * </p>
     * 
     * Providing null as the value will remove the default style string.
     * 
     * @param richTextValue a rich text string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCoordSystemOrigin,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCoordSystemOrigin(float[]),311,314,"/**
* Sets the coordinate system origin.
* @param coordSystemOrigin array representing the origin coordinates
*/","* This will set the origin of the coordinate system.
     * 
     * @param coordSystemOrigin the origin",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:<init>(),49,53,"/**
* Initializes a new PDF thread.
* Sets up the thread dictionary with type 'Thread'.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDirection,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDirection(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDirection),139,142,"/**
* Sets the transition direction.
* @param direction the new transition direction to set
*/","* Sets the direction in which the specified transition effect shall move. Only for {@link PDTransitionStyle#Wipe},
     * {@link PDTransitionStyle#Glitter}, {@link PDTransitionStyle#Fly}, {@link PDTransitionStyle#Cover},
     * {@link PDTransitionStyle#Uncover} and {@link PDTransitionStyle#Push}.
     * 
     * @param direction the direction in which the specified transition effect shall move",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDuration,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDuration(float),155,158,"/**
 * Sets the duration of an object.
 * @param duration the duration value to be set
 */","* @param duration The duration of the transition effect, in seconds.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyScale,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyScale(float),173,176,"/**
* Sets the flying scale factor.
* @param scale the scaling factor for flying animations
*/","* @param scale The starting or ending scale at which the changes shall be drawn. Only for
     * {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setFlyAreaOpaque,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setFlyAreaOpaque(boolean),191,194,"/**
* Sets the fly area's opacity.
* @param opaque true to make the fly area opaque, false otherwise
*/","* @param opaque If true, the area that shall be flown in is rectangular and opaque. Only for
     * {@link PDTransitionStyle#Fly}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(java.util.Collection),251,269,"/**
 * Adds all elements from a collection to the list.
 * Throws UnsupportedOperationException if the list is filtered.
 * Updates dictionary item to an array if applicable.
 * @param c collection of elements to add
 * @return true if the list was modified
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFontColor,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFontColor(java.util.List),186,207,"/**
* Sets font color based on operand size.
* @param operands list of color operands
* @throws IOException if invalid operand count
*/","* Process the font color operator.
     * 
     * This is assumed to be an RGB color.
     * 
     * @param operands the color components
     * @throws IOException in case of the color components not matching",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/COSArrayList.java,addAll,"org.apache.pdfbox.pdmodel.common.COSArrayList:addAll(int,java.util.Collection)",274,293,"/**
 * Adds all elements from a collection at a specified index.
 * Throws UnsupportedOperationException if list is filtered.
 * Updates dictionary if parent dictionary exists.
 * @param index position to insert elements
 * @param c collection of elements to add
 * @return true if elements were added, false otherwise
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,addAll,org.apache.pdfbox.cos.COSArray:addAll(org.apache.pdfbox.cos.COSArray),188,197,"/**
 * Adds all objects from the given list to this array.
 * @param objectList list of COSBase objects to add
 */","* This will add all objects to this array.
     *
     * @param objectList The list of objects to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,getStandardStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:getStandardStructureType(),603,612,"/**
* Retrieves the standardized structure type.
* @return Standardized structure type as a String
*/","* Returns the standard structure type, the actual structure type is mapped
     * to in the role map.
     * 
     * @return the standard structure type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,addStructure,org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:addStructure(org.apache.pdfbox.cos.COSBase),165,191,"/**
* Adds structure to the PDF by processing COSBase objects.
* Handles streams, dictionaries, arrays, and objects recursively.
* @param current the COSBase object to process
* @throws IOException if an I/O error occurs
*/","* Attempts to find yet unregistered streams and dictionaries in the given structure.
     *
     * @param current The object to be added for compressing.
     * @throws IOException Shall be thrown, if compressing the object failed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getPath(int),316,338,"/**
* Retrieves the GeneralPath for a given character code.
* @param code character code to fetch path for
* @return GeneralPath representing the glyph or null if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:hasGlyph(int),346,363,"/**
 * Checks if a glyph exists for the given code.
 * @param code character code to check
 * @return true if glyph exists, false otherwise
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getWidthFromFont(int),408,429,"/**
 * Retrieves the width of a character from the font.
 * @param code character code
 * @return width of the character in transformed units
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getWidthFromFont(int),343,354,"/**
 * Retrieves the width of a character from the font.
 * @param code character code point
 * @return width in design units, normalized to 1000 units per EM if necessary
 * @throws IOException if an I/O error occurs while accessing the font data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPathFromOutlines,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPathFromOutlines(int),491,497,"/**
 * Retrieves a GeneralPath from font outlines.
 * @param code character code for the glyph
 * @return GeneralPath object or null if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,hasGlyph,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:hasGlyph(int),499,503,"/**
* Checks if a character code has an associated glyph.
* @param code character code to check
* @return true if the character has a glyph, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,readFromDecoderStream,"org.apache.pdfbox.filter.CCITTFaxFilter:readFromDecoderStream(org.apache.pdfbox.filter.CCITTFaxDecoderStream,byte[])",126,139,"/**
* Reads data from a CCITTFaxDecoderStream into a byte array.
* @param decoderStream source stream to read from
* @param result buffer to store the read bytes
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/SecurityHandler.java,decryptArray,"org.apache.pdfbox.pdmodel.encryption.SecurityHandler:decryptArray(org.apache.pdfbox.cos.COSArray,long,long)",683,689,"/**
* Decrypts each element in the provided COSArray.
* @param array the COSArray to decrypt
* @param objNum object number for decryption
* @param genNum generation number for decryption
*/","* This will decrypt an array.
     *
     * @param array The array to decrypt.
     * @param objNum The object number.
     * @param genNum The object generation number.
     *
     * @throws IOException If there is an error accessing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getDate,"org.apache.pdfbox.cos.COSDictionary:getDate(java.lang.String,java.util.Calendar)",822,825,"/**
 * Retrieves date value by key with default.
 * @param key PDF key string
 * @param defaultValue default Calendar if key not found
 * @return Calendar object or default if missing
 */","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was invalid.
     * @return The name converted to a date.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",866,870,"/**
* Retrieves a date from an embedded dictionary.
* @param embedded name of the embedded dictionary
* @param key key for the date value
* @param defaultValue default date if not found
* @return Calendar object or default value
*/","* This is a convenience method that will get the dictionary object that is expected to be a date.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @param defaultValue The default value to return if the entry does not exist in the dictionary or if the date was
     * invalid.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/ContentStreamWriter.java,writeTokens,org.apache.pdfbox.pdfwriter.ContentStreamWriter:writeTokens(java.util.List),107,113,"/**
* Writes a list of tokens to an output stream.
* @param tokens list of objects to be written
* @throws IOException if an I/O error occurs
*/","* This will write out the list of tokens to the stream.
     *
     * @param tokens The tokens to write to the stream.
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,processLines,"org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:processLines(java.util.List,boolean)",201,259,"/**
* Processes lines of text for alignment and rendering.
* @param lines list of Line objects to process
* @param isFirstParagraph flag indicating if it's the first paragraph
*/","* Process lines for output. 
     *
     * Process lines for an individual paragraph and generate the 
     * commands for the content stream to show the text.
     * 
     * @param lines the lines to process.
     * @throws IOException if there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedCombAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedCombAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.font.PDFont,float)",717,770,"/**
 * Inserts text with comb appearance into PDF field.
 * @param contents content stream for rendering
 * @param appearanceStream appearance stream of the field
 * @param font font to use for text
 * @param fontSize size of the font
 * @throws IOException if an I/O error occurs
 */","* Generate the appearance for comb fields.
     * 
     * @param contents the content stream to write to
     * @param appearanceStream the appearance stream used
     * @param font the font to be used
     * @param fontSize the font size to be used
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedListboxAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedListboxAppearance(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.pdmodel.font.PDFont,float)",814,868,"/**
 * Inserts listbox appearance with centered or right-aligned text.
 * @param contents PDAppearanceContentStream for drawing content
 * @param appearanceStream PDAppearanceStream of the field
 * @param contentRect bounding rectangle for content area
 * @param font PDFont used for rendering text
 * @param fontSize size of the font
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,prepareNormalAppearanceStream,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:prepareNormalAppearanceStream(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),315,337,"/**
* Prepares the normal appearance stream for a widget.
* @param widget annotation widget to process
* @return PDAppearanceStream configured for the widget
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadFDF,org.apache.pdfbox.Loader:loadFDF(java.lang.String),59,62,"/**
 * Loads an FDF document from a specified file.
 * @param filename path to the FDF file
 * @return FDFDocument object loaded from the file
 * @throws IOException if an I/O error occurs
 */","* This will load a document from a file.
     *
     * @param filename The name of the file to load. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used
     * to read the file.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addFirstIntermediateCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addFirstIntermediateCurl(double,double,double,double,double)",444,453,"/**
 * Adds the first intermediate curl segment to the path.
 * @param angleCur current angle in degrees
 * @param r radius of the arc
 * @param alpha additional angle parameter
 * @param cx x-coordinate of the center
 * @param cy y-coordinate of the center
 * @throws IOException if an I/O error occurs
 */",* Generates the first intermediate curl for a cloudy polygon.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getIntermediateCurlTemplate,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getIntermediateCurlTemplate(double,double)",458,470,"/**
 * Generates intermediate curl template points.
 * @param angleCur current angle in degrees
 * @param r radius of the arc segments
 * @return array of Point2D.Double representing the curl shape
 * @throws IOException if an I/O error occurs
 */",* Returns a template for intermediate curls in a cloudy polygon.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,getArc,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:getArc(double,double,double,double,double,double,java.util.ArrayList,boolean)",592,631,"/**
* Generates arc segments for a given ellipse.
* @param startAng starting angle in radians
* @param endAng ending angle in radians
* @param rx horizontal radius of the ellipse
* @param ry vertical radius of the ellipse
* @param cx x-coordinate of the center
* @param cy y-coordinate of the center
* @param out list to store output points, may be null
* @param addMoveTo whether to add a move-to command at the start
* @throws IOException if an I/O error occurs during processing
*/","* Creates one or more Bézier curves that represent an elliptical arc.
     * Angles are in radians.
     * The arc will always proceed in the positive angle direction.
     * If the argument `out` is null, this writes the results to the instance
     * variable `output`.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,showGlyph,"org.apache.pdfbox.text.LegacyPDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",160,314,"/**
* Renders text glyph with specific transformations and displacements.
* @param textRenderingMatrix current text rendering matrix
* @param font PDF font used for rendering
* @param code character code to render
* @param displacement vector for character positioning
* @throws IOException if an I/O error occurs
*/","* Called when a glyph is to be processed. The heuristic calculations here were originally
     * written by Ben Litchfield for PDFStreamEngine.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainText.java,getLines,"org.apache.pdfbox.pdmodel.interactive.PlainText$Paragraph:getLines(org.apache.pdfbox.pdmodel.font.PDFont,float,float)",159,237,"/**
* Splits text into lines based on font and width constraints.
* @param font PDFont used for measuring text width
* @param fontSize size of the font
* @param width maximum line width
* @return List of Line objects containing formatted words
*/","* Break the paragraph into individual lines.
         *
         * @param font the font used for rendering the text.
         * @param fontSize the fontSize used for rendering the text.
         * @param width the width of the box holding the content.
         * @return the individual lines.
         * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,getSymbolicFlag,org.apache.pdfbox.pdmodel.font.PDSimpleFont:getSymbolicFlag(),260,268,"/**
* Retrieves symbolic flag from font descriptor.
* @return Boolean value or null if font descriptor is missing
*/","* Returns the value of the symbolic flag, allowing for the fact that the result may be indeterminate.
     * 
     * @return the value of the isSymbolic flag form the font descriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFallbackFontName,org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFallbackFontName(org.apache.pdfbox.pdmodel.font.PDFontDescriptor),231,307,"/**
 * Determines fallback font name based on PDFontDescriptor.
 * @param fontDescriptor font descriptor object
 * @return fallback font name as String
 */",* Attempts to find a good fallback based on the font descriptor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getPaint,org.apache.pdfbox.rendering.PageDrawer:getPaint(org.apache.pdfbox.pdmodel.graphics.color.PDColor),349,402,"/**
 * Converts PDColor to Java Paint.
 * @param color PDF color to convert
 * @return Java Paint object or Color with transparency if conversion fails
 * @throws IOException on error during processing
 */","* Returns an AWT paint for the given PDColor.
     * 
     * @param color The color to get a paint for. This can be an actual color or a pattern.
     * @return an AWT paint for the given PDColor
     * 
     * @throws IOException if the AWT paint could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,intersectShadingBBox,"org.apache.pdfbox.rendering.PageDrawer:intersectShadingBBox(org.apache.pdfbox.pdmodel.graphics.color.PDColor,java.awt.geom.Area)",865,883,"/**
 * Intersects the current area with the bounding box of a shading pattern.
 * @param color PDColor object containing the pattern
 * @param area Area to intersect with the pattern's bounding box
 * @throws IOException if an I/O error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,handleAnnotations,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:handleAnnotations(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.PDResources,java.util.List,java.util.List,java.util.Map)",115,144,"/**
 * Handles annotations by resolving associated fields.
 * @param acroForm PDF form containing annotations
 * @param acroFormResources resources for the form
 * @param fields list to store resolved fields
 * @param annotations list of annotations to process
 * @param nonTerminalFieldsMap map of non-terminal fields
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFields(),381,402,"/**
* Retrieves fields from a PDF dictionary.
* @return List of PDField objects representing form fields
*/","* This will return all of the documents root fields.
     * 
     * A field might have children that are fields (non-terminal field) or does not
     * have children which are fields (terminal fields).
     * 
     * The fields within an AcroForm are organized in a tree structure. The documents root fields 
     * might either be terminal fields, non-terminal fields or a mixture of both. Non-terminal fields
     * mark branches which contents can be retrieved using {@link PDNonTerminalField#getChildren()}.
     * 
     * @return A list of the documents root fields, never null. If there are no fields then this
     * method returns an empty list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,findKid,"org.apache.pdfbox.pdmodel.interactive.form.PDField:findKid(java.lang.String[],int)",331,352,"/**
* Recursively finds a PDField by matching names.
* @param name array of field names to match
* @param nameIndex current index in the name array
* @return PDField object or null if not found
*/","* This will find one of the child elements. The name array are the components of the name to search down the tree
     * of names. The nameIndex is where to start in that array. This method is called recursively until it finds the end
     * point based on the name array.
     * 
     * @param name An array that picks the path to the field.
     * @param nameIndex The index into the array.
     * @return The field at the endpoint or null if none is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,getChildren,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:getChildren(),125,153,"/**
 * Retrieves child fields of the current field.
 * @return List of PDField objects representing child fields
 */","* Returns this field's children. These may be either terminal or non-terminal fields.
     *
     * @return the list of child fields. Be aware that this list is <i>not</i> backed by the
     * children of the field, so adding or deleting has no effect on the PDF document until you call
     * {@link #setChildren(java.util.List) setChildren()} with the modified list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getStringOrStream,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getStringOrStream(org.apache.pdfbox.cos.COSBase),936,954,"/**
 * Converts a COSBase object to a string.
 * @param base the COSBase object to convert
 * @return string representation of the base or empty string if unsupported type
 */","* Get a text or text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getValue,org.apache.pdfbox.pdmodel.fdf.FDFField:getValue(),234,261,"/**
 * Retrieves the value of a PDF field.
 * @return Value as Object or null if not found
 * @throws IOException if an unknown type is encountered
 */","* This will get the value for the field. The return type will either be: <ul>
     * <li>String: for Checkboxes, Radio Button, Textfields</li>
     * <li>List&lt;String&gt;: for a Choice Field</li>
     * </ul>
     * @return The value of the field.
     * @throws IOException If there is an error getting the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,getRichText,org.apache.pdfbox.pdmodel.fdf.FDFField:getRichText(),743,758,"/**
 * Retrieves rich text from a field dictionary.
 * @return Rich text as a String or null if not found
 */","* This will set the rich text that is associated with this field.
     *
     * @return The rich text XHTML stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getBefore,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getBefore(),75,90,"/**
* Retrieves the ""Before"" attribute as a string.
* @return String representation of the ""Before"" attribute or null if not applicable
*/","* This will get the javascript that is executed before the import.
     *
     * @return Some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFJavaScript.java,getAfter,org.apache.pdfbox.pdmodel.fdf.FDFJavaScript:getAfter(),107,122,"/**
 * Retrieves the ""after"" value from a dictionary.
 * @return String representation of the ""after"" value or null if not found
 */","* This will get the javascript that is executed after the import.
     *
     * @return Some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,getAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:getAction(),77,92,"/**
 * Retrieves the action string from a PDF document.
 * @return The action as a string, or null if not found
 */",* @return The Javascript Code.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getRichContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getRichContents(),134,149,"/**
* Retrieves rich content from a PDF object.
* @return String representation of rich content or null if not applicable
*/","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getStringOrStream,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getStringOrStream(org.apache.pdfbox.cos.COSBase),258,269,"/**
* Converts COSBase to string or stream content.
* @param base COSBase object to convert
* @return String representation of the base, or empty string if not applicable
*/","* Get a text as text stream.
     *
     * Some dictionary entries allow either a text or a text stream.
     *
     * @param base the potential text or text stream
     * @return the text stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JBIG2Filter.java,decode,"org.apache.pdfbox.filter.JBIG2Filter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",141,146,"/**
 * Decodes input stream to output stream.
 * @param encoded InputStream containing encoded data
 * @param decoded OutputStream for decoded data
 * @param parameters COSDictionary with decoding parameters
 * @param index Index of the filter in a filter chain
 * @return DecodeResult indicating success or failure
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createLayoutPage,org.apache.pdfbox.multipdf.Overlay:createLayoutPage(org.apache.pdfbox.pdmodel.PDPage),316,326,"/**
* Creates a LayoutPage from a given PDPage.
* @param page the source PDF page
* @return a LayoutPage object
* @throws IOException if an I/O error occurs
*/","* Create a LayoutPage object from given PDPage object.
     *
     * @return
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,toByteArray,org.apache.pdfbox.pdmodel.common.PDStream:toByteArray(),400,406,"/**
* Converts input stream to byte array.
* @return byte array of input stream content
* @throws IOException if an I/O error occurs
*/","* This will copy the stream into a byte array.
     * 
     * @return The byte array of the filteredStream.
     * @throws IOException if an I/O error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getSamples,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:getSamples(),379,418,"/**
 * Retrieves and processes image samples from a PDF stream.
 * @return 2D array containing processed sample values
 */","* Get all sample values of this function.
         *
         * @return an array with all samples.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,initJPXValues,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:initJPXValues(),730,757,"/**
* Initializes JPX values from image stream.
* Updates COSStream with decoded parameters and sets color space if needed.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createInputStream,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createInputStream(),913,917,"/**
 * Creates an input stream.
 * @return InputStream object
 * @throws IOException if stream creation fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDMeshBasedShadingType.java,getBounds,"org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType:getBounds(java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,int)",247,266,"/**
 * Calculates bounding rectangle for transformed patches.
 * @param xform affine transformation applied to shapes
 * @param matrix additional transformation matrix
 * @param controlPoints number of control points per patch
 * @return Rectangle2D representing bounds or null if no patches
 * @throws IOException if an I/O error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PatchMeshesShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.PatchMeshesShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDMeshBasedShadingType,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle,int)",51,58,"/**
 * Initializes a PatchMeshesShadingContext with specified parameters.
 * @param shading PDMeshBasedShadingType for shading
 * @param colorModel ColorModel for rendering
 * @param xform AffineTransform for coordinate transformation
 * @param matrix Matrix for additional transformations
 * @param deviceBounds Rectangle defining the device bounds
 * @param controlPoints Number of control points for patch collection
 * @throws IOException if an I/O error occurs during initialization
 */","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @param controlPoints number of control points, 12 for type 6 shading and 16 for type 7 shading
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,58,"/**
* Initializes a Type4ShadingContext.
* @param shading PDShadingType4 instance
* @param cm ColorModel for rendering
* @param xform AffineTransform for coordinate conversion
* @param matrix transformation matrix
* @param deviceBounds bounding rectangle of the device
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",47,56,"/**
* Initializes a Type5ShadingContext for PDF rendering.
* @param shading PDShadingType5 object representing the shading
* @param cm ColorModel for color management
* @param xform AffineTransform for coordinate transformation
* @param matrix Matrix defining the shading pattern
* @param deviceBounds Rectangle specifying the device bounds
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param cm the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytesFromPacket,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytesFromPacket(org.apache.pdfbox.cos.COSArray),91,105,"/**
* Extracts byte data from a PDF packet.
* @param cosArray array containing PDF objects
* @return byte array of extracted data
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,addAttribute,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:addAttribute(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject),234,256,"/**
* Adds an attribute to the PDF structure.
* @param attributeObject the attribute to add
*/","* Adds an attribute object.
     * 
     * @param attributeObject the attribute object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserAttributeObject.java,addUserProperty,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserAttributeObject:addUserProperty(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty),92,97,"/**
* Adds a user property to the document.
* @param userProperty the property to add
*/","* Adds a user property.
     * 
     * @param userProperty the user property",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.pdmodel.PDDocument),75,81,"/**
* Initializes a PDICCBased object with a document.
* @param doc PDDocument to associate with the ICCBased object
*/","* Creates a new ICC color space with an empty stream.
     * @param doc the document to store the ICC data",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDPattern.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDPattern:<init>(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",59,66,"/**
* Initializes a PDPattern with given resources and color space.
* @param resources PDResources object for pattern
* @param colorSpace PDColorSpace for pattern colors
*/","* Creates a new uncolored tiling pattern color space.
     * 
     * @param resources The current resources.
     * @param colorSpace The underlying color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentMembershipDictionary.java,setOCGs,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentMembershipDictionary:setOCGs(java.util.List),93,101,"/**
* Sets the Optional Content Groups (OCGs) in the document.
* @param ocgs list of PDPropertyList objects representing OCGs
*/","* Set optional content groups as a list.
     * 
     * @param ocgs list of optional content groups to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeXs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeXs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),100,108,"/**
 * Sets the X values with number format dictionaries.
 * @param changeXs array of PDNumberFormatDictionary objects
 */","* This will set the changes along the x-axis.
     * 
     * @param changeXs changes along the x-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setChangeYs,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setChangeYs(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),137,145,"/**
* Sets the Y-axis number format dictionaries.
* @param changeYs array of PDNumberFormatDictionary objects for Y-axis
*/","* This will set the changes along the y-axis.
     * 
     * @param changeYs changes along the y-axis",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setDistances,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setDistances(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),174,182,"/**
* Sets an array of number format dictionaries.
* @param distances PDNumberFormatDictionary array to be set
*/","* This will set the distances.
     * 
     * @param distances distances",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAreas,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAreas(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),211,219,"/**
* Sets the number format areas.
* @param areas array of PDNumberFormatDictionary objects
*/","* This will set the areas.
     * 
     * @param areas areas",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setAngles,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setAngles(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),248,256,"/**
* Sets the angles in a PDF number format dictionary.
* @param angles array of PDNumberFormatDictionary objects
*/","* This will set the angles.
     * 
     * @param angles angles",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setLineSloaps,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setLineSloaps(org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary[]),285,293,"/**
* Sets line slope dictionaries.
* @param lineSloaps array of PDNumberFormatDictionary objects
*/","* This will set the sloaps of a line.
     * 
     * @param lineSloaps the sloaps of a line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSArray.java,growToSize,org.apache.pdfbox.cos.COSArray:growToSize(int),598,601,"/**
 * Grows the list to the specified size.
 * @param size desired size of the list
 */","* This will add null values until the size of the array is at least
     * as large as the parameter.  If the array is already larger than the
     * parameter then nothing is done.
     *
     * @param size The desired size of the array.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,getTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:getTextColor(),323,333,"/**
* Retrieves text color from PDF object.
* @return PDColor representing the text color
*/","* Get the RGB text color of this node.  Default is black and this method
     * will never return null.
     *
     * @return The structure element of this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",374,388,"/**
* Creates a clone of the given COSBase object.
* @param src source COSBase object to clone
* @param dstParent parent object in destination
* @param currentPageDict current page dictionary context
* @return cloned COSBase object or original if not an array/dictionary
*/","* Creates a clone of the source.
         *
         * @param src source dictionary or array.
         * @param dstParent for the /P entry; parameter needed because arrays don't keep a parent.
         * @param currentPageDict used to remember whether we have a page parent somewhere or not.
         * Starts with null.
         * @return a clone, or null if source is null or if there is no clone because it belongs to a
         * different page or to no page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processResources,"org.apache.pdfbox.multipdf.Splitter:processResources(org.apache.pdfbox.pdmodel.PDResources,java.util.Map,java.util.Map,java.util.Set)",586,620,"/**
 * Processes resources and clones structure elements.
 * @param res PDF resources to process
 * @param srcNumberTreeAsMap source number tree map
 * @param dstNumberTreeAsMap destination number tree map
 * @param visited set of visited COS objects to prevent recursion
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java,<init>,org.apache.pdfbox.pdfparser.PDFXrefStreamParser:<init>(org.apache.pdfbox.cos.COSStream),52,64,"/**
* Initializes a parser for a PDF XRef stream.
* @param stream the COSStream containing the XRef data
* @throws IOException if an I/O error occurs during initialization
*/","* Constructor.
     *
     * @param stream The stream to parse.
     *
     * @throws IOException If there is an error initializing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,internalGetDecodeParams,"org.apache.pdfbox.pdmodel.common.PDStream:internalGetDecodeParams(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",287,317,"/**
 * Retrieves and decodes parameters from a PDF stream.
 * @param name1 first key in the dictionary
 * @param name2 second key in the dictionary
 * @return list of decoded parameters or null if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,getNext,org.apache.pdfbox.pdmodel.interactive.action.PDAction:getNext(),126,147,"/**
* Retrieves the next action(s) from a PDF document.
* @return List of PDAction objects or null if none exist
*/","* This will get the next action, or sequence of actions, to be performed after this one.
     * The value is either a single action dictionary or an array of action dictionaries
     * to be performed in order.
     *
     * @return The Next action or sequence of actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:setDecodeParms(java.util.List),324,328,"/**
* Sets decode parameters for the stream.
* @param decodeParams list of decode parameters
*/","* This will set the list of decode parameters.
     * 
     * @param decodeParams The list of decode parameters.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,setFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:setFileDecodeParams(java.util.List),389,392,"/**
* Sets file decoding parameters.
* @param decodeParams list of decoding parameters
*/","* This will set the list of decode params.
     * 
     * @param decodeParams The list of decode params.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,setKids,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:setKids(java.util.List),140,144,"/**
* Sets the list of kids in the PDF document.
* @param kids List of kid objects to be set
*/","* Sets the kids (K).
     * 
     * @param kids the kids",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setOptions,org.apache.pdfbox.pdmodel.fdf.FDFField:setOptions(java.util.List),691,695,"/**
* Sets options for a PDF form field.
* @param options list of options to be set
*/","* This will set the options for the choice field.
     * The objects in the list should either be <code>String</code> or {@link FDFOptionElement}.
     *
     * @param options The options to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,getRangeForComponent,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:getRangeForComponent(int),441,449,"/**
* Retrieves the range for a specific component.
* @param n index of the component
* @return PDRange object representing the range or default if not found
*/","* Returns the range for a certain component number.
     * This will never return null.
     * If it is not present then the range 0..1 will be returned.
     * @param n the component number to get the range for
     * @return the range for this component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,getEncodeForParameter,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:getEncodeForParameter(int),191,200,"/**
* Retrieves the encoding range for a parameter.
* @param paramNum the index of the parameter
* @return PDRange object or null if not found
*/","* Get the encode for the input parameter.
     *
     * @param paramNum The function parameter number.
     *
     * @return The encode parameter range or null if none is set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,getColorOrFourColors,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:getColorOrFourColors(java.lang.String),399,417,"/**
 * Retrieves color or four colors based on array size.
 * @param name dictionary key for the color array
 * @return PDGamma or PDFourColours object, or null if invalid size
 */","* Gets a single colour or four colours.
     * 
     * @param name the attribute name
     * @return the single ({@link PDGamma}) or a ({@link PDFourColours})",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStreamElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStreamElement(org.w3c.dom.Element),185,283,"/**
 * Parses a stream element and populates a COSStream object.
 * @param streamEl the XML element representing the stream
 * @return a populated COSStream object
 * @throws IOException if an I/O error occurs during parsing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildWidths,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildWidths(org.apache.pdfbox.cos.COSDictionary),398,410,"/**
* Builds and sets CID font widths.
* @param cidFont COSDictionary representing the CID font
* @throws IOException if an I/O error occurs
*/",* Build widths with Identity CIDToGIDMap (for embedding full font).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineDashPattern,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineDashPattern(org.apache.pdfbox.pdmodel.graphics.PDLineDashPattern),324,327,"/**
* Sets line dash pattern.
* @param dashPattern line dash pattern to apply
*/","* This will set the dash pattern for the graphics state.
     *
     * @param dashPattern The dash pattern",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSName),43,51,"/**
* Initializes a color space with given name and sets up white point cache.
* @param cosName the name of the color space
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:<init>(org.apache.pdfbox.cos.COSArray),58,64,"/**
* Initializes color space with RGB array.
* @param rgb COSArray containing color space data
*/","* Creates a new CalRGB color space using the given COS array.
     *
     * @param rgb the cos array which represents this color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuideLineColor,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuideLineColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),106,114,"/**
* Sets the guide line color in a PDF document.
* @param color PDColor object representing the desired color
*/","* Set the color space instance for this box style.  This must be a
     * PDDeviceRGB!
     *
     * @param color The new colorspace value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),778,781,"/**
* Sets the color of the object.
* @param c PDColor object representing the new color
*/","* This will set the color used in drawing various elements. As of PDF 1.6 these are : Background of icon when
     * closed Title bar of popup window Border of a link annotation
     * 
     * Colour is in DeviceRGB colourspace
     * 
     * @param c colour in the DeviceRGB colourspace
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),230,233,"/**
* Sets the interior color of the PDF element.
* @param ic PDColor object representing the new interior color
*/","* This will set interior color of the line endings defined in the LE entry. color is in DeviceRGB color space.
     *
     * @param ic color in the DeviceRGB color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),66,69,"/**
* Sets the interior color.
* @param ic PDColor object representing the new interior color
*/","* This will set interior color.
     *
     * @param ic color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),136,139,"/**
* Sets the interior color.
* @param ic PDColor object representing the interior color
*/","* This will set interior color of the line endings defined in the LE entry.
     *
     * @param ic color.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setInteriorColor,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setInteriorColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),63,66,"/**
* Sets the interior color.
* @param ic PDColor object representing the new interior color
*/","* This will set interior color of the drawn area color is in DeviceRGB colorspace.
     *
     * @param ic color in the DeviceRGB color space.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBorderColour,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBorderColour(org.apache.pdfbox.pdmodel.graphics.color.PDColor),96,99,"/**
* Sets the border color of the PDF element.
* @param c PDColor object representing the new border color
*/","* This will set the border color.
     * 
     * @param c the border color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setBackground,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setBackground(org.apache.pdfbox.pdmodel.graphics.color.PDColor),116,119,"/**
* Sets the background color.
* @param c PDColor object representing the color
*/","* This will set the background color.
     * 
     * @param c the background color",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTextColor,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTextColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),340,343,"/**
 * Sets the text color.
 * @param textColor color to apply to text
 */","* Set the RGB text color for this node.
     *
     * @param textColor The text color for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,fallbackToAlternateColorSpace,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:fallbackToAlternateColorSpace(java.lang.Exception),226,240,"/**
* Sets fallback to alternate color space on exception.
* @param e the exception that triggered the fallback, can be null
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:toRGBImage(java.awt.image.WritableRaster),146,197,"/**
* Converts a raster to an RGB image using alternate color spaces.
* @param raster input raster data
* @return BufferedImage in RGB format
* @throws IOException if conversion fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isGray,org.apache.pdfbox.rendering.PageDrawer$TransparencyGroup:isGray(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),1964,1983,"/**
* Checks if the given color space is gray.
* @param colorSpace the color space to check
* @return true if the color space is gray, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getARange(),199,207,"/**
 * Retrieves a range from the dictionary.
 * @return PDRange object representing the range
 */","* This will get the valid range for the ""a"" component.
     * If none is found then the default will be returned, which is -100..100.
     * @return the ""a"" range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getBRange(),214,222,"/**
 * Retrieves the B-range from a PDF dictionary.
 * @return PDRange object representing the B-range
 */","* This will get the valid range for the ""b"" component.
     * If none is found  then the default will be returned, which is -100..100.
     * @return the ""b"" range.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setComponentRangeArray,"org.apache.pdfbox.pdmodel.graphics.color.PDLab:setComponentRangeArray(org.apache.pdfbox.pdmodel.common.PDRange,int)",244,264,"/**
* Sets the component range in the PDF dictionary.
* @param range the PDRange object or null to reset defaults
* @param index the position in the range array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/JPEGFactory.java,createFromStream,"org.apache.pdfbox.pdmodel.graphics.image.JPEGFactory:createFromStream(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",80,84,"/**
* Creates an image from an input stream.
* @param document PDF document to add the image to
* @param stream input stream containing image data
* @return PDImageXObject created from the input stream
* @throws IOException if there is an error reading the stream
*/","* Creates a new JPEG Image XObject from an input stream containing JPEG data.
     * 
     * The input stream data will be preserved and embedded in the PDF file without modification.
     * @param document the document where the image will be created
     * @param stream a stream of JPEG data
     * @return a new Image XObject
     * 
     * @throws IOException if the input stream cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,setFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:setFont(org.apache.pdfbox.pdmodel.font.PDFont),94,97,"/**
 * Sets the font for text rendering.
 * @param font PDFont object to be used for text
 */","* This will set the font for this font setting.
     *
     * @param font The new font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),577,581,"/**
* Sets the tint transformation function.
* @param tint PDFunction representing the tint transform
*/","* This will set the tint transform function.
     *
     * @param tint The tint transform function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,setTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:setTintTransform(org.apache.pdfbox.pdmodel.common.function.PDFunction),298,302,"/**
* Sets the tint transformation function.
* @param tint PDFunction representing the tint transform
*/","* Sets the tint transform function.
     * @param tint the tint transform function",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,setPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:setPage(org.apache.pdfbox.pdmodel.PDPage),85,88,"/**
 * Sets the first page in the document.
 * @param page the PDPage to be set as the first page
 */","* Set the page for a local destination. For an external destination, call {@link #setPageNumber(int) setPageNumber(int pageNumber)}.
     *
     * @param page The page for a local destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setUpperLimit(java.lang.Integer),297,315,"/**
 * Sets the upper limit in a COSArray.
 * @param upper the upper limit value to set
 */","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setLowerLimit(java.lang.Integer),338,356,"/**
* Sets the lower limit in a COSArray.
* @param lower the new lower limit value
*/","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setStartPointEndingStyle(java.lang.String),183,199,"/**
* Sets the start point line ending style for an annotation.
* @param style the line ending style to set; if null, sets to LE_NONE
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setEndPointEndingStyle(java.lang.String),217,233,"/**
* Sets the line ending style for an annotation.
* @param style the desired line ending style or null for no style
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setStartPointEndingStyle(java.lang.String),154,169,"/**
* Sets the starting style of an annotation line.
* @param style the starting style to be set or null for no style
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:setEndPointEndingStyle(java.lang.String),187,202,"/**
* Sets the endpoint style for a line annotation.
* @param style the style to set; null sets no style
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setStartPointEndingStyle(java.lang.String),156,171,"/**
* Sets the starting style of a line annotation.
* @param style the style to apply (null for no style)
*/","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setEndPointEndingStyle(java.lang.String),193,208,"/**
* Sets the end point style for a line annotation.
* @param style the style to apply; null sets it to none
*/","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setStartPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setStartPointEndingStyle(java.lang.String),62,77,"/**
 * Sets the starting style of a line annotation.
 * @param style the style to set; null sets it to LE_NONE
 */","* This will set the line ending style for the start point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,setEndPointEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:setEndPointEndingStyle(java.lang.String),99,114,"/**
 * Sets the end point style for an annotation line.
 * @param style the style of the end point (e.g., ""Square"", ""Circle"")
 */","* This will set the line ending style for the end point, see the LE_ constants for the possible values.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setUpperLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setUpperLimit(java.lang.String),350,361,"/**
* Sets the upper limit for a COSArray in a PDF node.
* @param upper the upper limit string to be set
*/","* Set the highest value for the key in the map.
     *
     * @param upper The new highest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setLowerLimit,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setLowerLimit(java.lang.String),384,395,"/**
* Sets the lower limit in a COSArray.
* @param lower the lower limit value as a String
*/","* Set the lowest value for the key in the map.
     *
     * @param lower The new lowest value for a key in the map.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFileAttachmentAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFileAttachmentAppearanceHandler:generateNormalAppearance(),48,90,"/**
 * Generates normal appearance for a file attachment annotation.
 * Adjusts rectangle and draws icon based on attachment name.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,adjustRectAndBBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:adjustRectAndBBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,float,float)",166,192,"/**
 * Adjusts the rectangle and bounding box of a text annotation.
 * @param annotation the text annotation to adjust
 * @param width new width for the rectangle and bounding box
 * @param height new height for the rectangle and bounding box
 * @return adjusted bounding box
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayStream,"org.apache.pdfbox.multipdf.Overlay:createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSName)",532,564,"/**
* Creates an overlay stream for a PDF page.
* @param page PDPage object to apply the overlay
* @param layoutPage LayoutPage containing overlay details
* @param xObjectId COSName of the XObject
* @return COSStream representing the overlay content
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,clipToMediaBox,org.apache.pdfbox.pdmodel.PDPage:clipToMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),564,573,"/**
 * Clips a rectangle to the media box.
 * @param box the rectangle to clip
 * @return clipped rectangle within media box bounds
 */",* Clips the given box to the bounds of the media box.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDRectangle.java,createRetranslatedRectangle,org.apache.pdfbox.pdmodel.common.PDRectangle:createRetranslatedRectangle(),192,198,"/**
* Creates a retranslated rectangle with current width and height.
* @return PDRectangle object representing the translated rectangle
*/","* This will create a translated rectangle based off of this rectangle, such
     * that the new rectangle retains the same dimensions(height/width), but the
     * lower left x,y values are zero. <br>
     * 100, 100, 400, 400 (llx, lly, urx, ury ) <br>
     * will be translated to 0,0,300,300
     *
     * @return A new rectangle that has been translated back to the origin.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureRectangle,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureRectangle(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner)",149,163,"/**
* Creates a signature rectangle for a PDF field.
* @param signatureField the PDF signature field to modify
* @param properties design properties for the signature rectangle
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createFormatterRectangle,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createFormatterRectangle(int[]),192,203,"/**
* Creates a formatter rectangle from given parameters.
* @param params array containing x and y coordinates [x1, y1, x2, y2]
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setBeforeColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setBeforeColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),76,79,"/**
 * Sets the before color.
 * @param colour PDGamma color to be set
 */","* Sets the colour for the before edge.
     * 
     * @param colour the colour for the before edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setAfterColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setAfterColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),96,99,"/**
* Sets the after color.
* @param colour PDGamma color to be set
*/","* Sets the colour for the after edge.
     * 
     * @param colour the colour for the after edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setStartColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setStartColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),116,119,"/**
* Sets the start color.
* @param colour PDGamma object representing the start color
*/","* Sets the colour for the start edge.
     * 
     * @param colour the colour for the start edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDFourColours.java,setEndColour,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours:setEndColour(org.apache.pdfbox.pdmodel.graphics.color.PDGamma),136,139,"/**
 * Sets the end color using PDGamma.
 * @param colour PDGamma object representing the color
 */","* Sets the colour for the end edge.
     * 
     * @param colour the colour for the end edge",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setItem,"org.apache.pdfbox.cos.COSDictionary:setItem(java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",243,246,"/**
 * Sets an item in the dictionary using a string key.
 * @param key the key to use for setting the item
 * @param value the COSObjectable value to associate with the key
 */","* This will set an item in the dictionary. If value is null then the result will be the same as removeItem( key ).
     *
     * @param key The key to the dictionary object.
     * @param value The value to the dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setAcroForm,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setAcroForm(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),153,157,"/**
* Sets the AcroForm for the PDF document.
* @param acroForm the new AcroForm to be set
*/","* Sets the AcroForm for this catalog.
     *
     * @param acroForm The new AcroForm.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setViewerPreferences,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setViewerPreferences(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences),186,189,"/**
* Sets viewer preferences for PDF document.
* @param prefs PDViewerPreferences object containing preferences
*/","* Sets the viewer preferences.
     *
     * @param prefs The new viewer preferences.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setDocumentOutline(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline),207,210,"/**
 * Sets the document outline.
 * @param outlines PDDocumentOutline object to be set
 */","* Sets the document outlines.
     *
     * @param outlines The new document outlines.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMetadata,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),263,266,"/**
 * Sets metadata for the document.
 * @param meta PDMetadata object containing metadata information
 */","* Sets the metadata for this object. This can be null.
     *
     * @param meta The meta data for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOpenAction,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOpenAction(org.apache.pdfbox.pdmodel.common.PDDestinationOrAction),273,276,"/**
 * Sets the open action for the document.
 * @param action the destination or action to be executed on opening
 */","* Sets the Document Open Action for this object.
     *
     * @param action The action you want to perform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setActions,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions),319,322,"/**
 * Sets additional actions for the document catalog.
 * @param actions PDDocumentCatalogAdditionalActions object containing actions
 */","* Sets the additional actions for the document.
     *
     * @param actions The actions that are associated with this document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setNames,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setNames(org.apache.pdfbox.pdmodel.PDDocumentNameDictionary),379,382,"/**
 * Sets document names dictionary.
 * @param names PDDocumentNameDictionary to be set
 */","* Sets the names dictionary for the document.
     *
     * @param names The names dictionary that is associated with this document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setMarkInfo,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setMarkInfo(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo),401,404,"/**
* Sets the mark information for the document.
* @param markInfo PDMarkInfo object containing mark details
*/","* Set information about the doc's usage of tagged features.
     *
     * @param markInfo The new MarkInfo data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setURI,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setURI(org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary),548,551,"/**
 * Sets the URI dictionary in the root.
 * @param uri PDURIDictionary object to be set
 */","* Sets the document level URI.
     *
     * @param uri The new document level URI.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setStructureTreeRoot,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setStructureTreeRoot(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot),569,572,"/**
 * Sets the structure tree root.
 * @param treeRoot PDStructureTreeRoot object to be set
 */","* Sets the document's structure tree root.
     *
     * @param treeRoot The new structure tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLabels(org.apache.pdfbox.pdmodel.common.PDPageLabels),631,634,"/**
 * Sets page labels for a PDF document.
 * @param labels PDPageLabels object containing page label information
 */","* Sets the page label descriptor for the document.
     *
     * @param labels the new page label descriptor to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setDests,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setDests(org.apache.pdfbox.pdmodel.PDDestinationNameTreeNode),96,105,"/**
* Sets destination names in the document.
* @param dests PDDestinationNameTreeNode containing destinations
*/","* Set the named destinations that are associated with this document.
     *
     * @param dests The destination names.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setEmbeddedFiles,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setEmbeddedFiles(org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode),124,127,"/**
* Sets embedded files in the document.
* @param ef node containing embedded file information
*/","* Set the named embedded files that are associated with this document.
     *
     * @param ef The new embedded files",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentNameDictionary.java,setJavascript,org.apache.pdfbox.pdmodel.PDDocumentNameDictionary:setJavascript(org.apache.pdfbox.pdmodel.PDJavascriptNameTreeNode),147,150,"/**
 * Sets JavaScript for the document.
 * @param js PDJavascriptNameTreeNode containing JavaScript names
 */","* Set the named javascript entries that are associated with this document.
     *
     * @param js The new Javascript entries.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(org.apache.pdfbox.pdmodel.common.PDRectangle),92,97,"/**
 * Creates a new PDF page with specified media box.
 * @param mediaBox dimensions and position of the page
 */","* Creates a new instance of PDPage for embedding.
     * 
     * @param mediaBox The MediaBox of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setResources,org.apache.pdfbox.pdmodel.PDPage:setResources(org.apache.pdfbox.pdmodel.PDResources),347,358,"/**
 * Sets the resources for the page.
 * @param resources PDResources object to be set
 */","* This will set the resources for this page.
     * 
     * @param resources The new resources for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMediaBox,org.apache.pdfbox.pdmodel.PDPage:setMediaBox(org.apache.pdfbox.pdmodel.common.PDRectangle),423,434,"/**
* Sets the media box for the page.
* @param mediaBox rectangle defining the page's dimensions
*/","* This will set the mediaBox for this page.
     * 
     * @param mediaBox The new mediaBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setBleedBox,org.apache.pdfbox.pdmodel.PDPage:setBleedBox(org.apache.pdfbox.pdmodel.common.PDRectangle),490,500,"/**
* Sets the bleed box for a PDF page.
* @param bleedBox rectangle defining the bleed area
*/","* This will set the BleedBox for this page.
     * 
     * @param bleedBox The new BleedBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTrimBox,org.apache.pdfbox.pdmodel.PDPage:setTrimBox(org.apache.pdfbox.pdmodel.common.PDRectangle),519,529,"/**
* Sets the trim box for a PDF page.
* @param trimBox rectangle defining crop area or null to remove it
*/","* This will set the TrimBox for this page.
     * 
     * @param trimBox The new TrimBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setArtBox,org.apache.pdfbox.pdmodel.PDPage:setArtBox(org.apache.pdfbox.pdmodel.common.PDRectangle),549,559,"/**
* Sets the art box for a PDF page.
* @param artBox rectangle defining the art box area
*/","* This will set the ArtBox for this page.
     * 
     * @param artBox The new ArtBox for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setContents,org.apache.pdfbox.pdmodel.PDPage:setContents(org.apache.pdfbox.pdmodel.common.PDStream),612,615,"/**
 * Sets the contents stream of a PDF page.
 * @param contents PDStream containing the page content
 */","* This will set the contents of this page.
     * 
     * @param contents The new contents of the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setMetadata,org.apache.pdfbox.pdmodel.PDPage:setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata),683,686,"/**
 * Sets metadata for the PDF document.
 * @param meta PDMetadata object containing metadata details
 */","* Set the metadata for this object. This can be null.
     * 
     * @param meta The meta data for this object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setActions,org.apache.pdfbox.pdmodel.PDPage:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions),709,712,"/**
 * Sets additional actions for the PDF page.
 * @param actions PDPageAdditionalActions object containing the actions
 */","* Set the page actions.
     * 
     * @param actions The actions for the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition),726,729,"/**
 * Sets the transition effect for the page.
 * @param transition PDTransition object representing the transition effect
 */",* @param transition The new transition to set on this page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setTransition,"org.apache.pdfbox.pdmodel.PDPage:setTransition(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition,float)",738,742,"/**
* Sets page transition effect and duration.
* @param transition PDTransition object defining the transition effect
* @param duration duration of the transition in seconds
*/","* Convenient method to set a transition and the display duration
     * 
     * @param transition The new transition to set on this page.
     * @param duration The maximum length of time, in seconds, that the page shall be displayed during presentations
     * before the viewer application shall automatically advance to the next page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.common.COSObjectable)",763,772,"/**
 * Adds an item to the resources dictionary.
 * @param kind type of resource category
 * @param name unique identifier for the resource
 * @param object the resource object to add
 */",* Sets the value of a given named resource.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),242,254,"/**
* Sets an embedded file.
* @param file the PDEmbeddedFile to be set
*/","* Set the embedded file for this spec. You should also call
     * {@link #setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFileUnicode(PDEmbeddedFile)}
     * for cross-platform and cross-language compatibility.
     *
     * @param file The file to be embedded.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setEmbeddedFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setEmbeddedFileUnicode(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile),324,336,"/**
* Sets the embedded file with Unicode name.
* @param file PDEmbeddedFile object to be set
*/","* Set the embedded Unicode file for this spec. If you call this, then do not forget to also
     * call
     * {@link #setEmbeddedFile(org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile) setEmbeddedFile(PDEmbeddedFile)}
     * or the attachment will not be visible on some viewers.
     *
     * @param file The Unicode file to be embedded.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setPage(org.apache.pdfbox.pdmodel.PDPage),79,82,"/**
 * Sets the PDF page.
 * @param page PDPage object to be set
 */","* Sets the page.
     * 
     * @param page the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),135,138,"/**
* Sets the referenced object in the COS dictionary.
* @param annotation PDAnnotation to be referenced
*/","* Sets the referenced annotation.
     * 
     * @param annotation the referenced annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setReferencedObject(org.apache.pdfbox.pdmodel.graphics.PDXObject),145,148,"/**
* Sets the referenced object.
* @param xobject PDXObject to be referenced
*/","* Sets the referenced XObject.
     * 
     * @param xobject the referenced XObject",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:setPage(org.apache.pdfbox.pdmodel.PDPage),172,175,"/**
 * Sets the page associated with this object.
 * @param page PDPage to be set
 */","* Sets the page on which the object shall be rendered. This is optional and overrides the /PG
     * entry in the structure element containing the object reference; shall be used if the
     * structure element contained no such entry.
     *
     * @param page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setParent,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setParent(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode),107,110,"/**
* Sets the parent node in the PDF document's structure.
* @param structureNode the new parent node to be assigned
*/","* Sets the parent in the structure hierarchy (P).
     * 
     * @param structureNode the parent in the structure hierarchy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setPage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setPage(org.apache.pdfbox.pdmodel.PDPage),151,154,"/**
 * Sets the page in the document.
 * @param page PDPage object to be set
 */","* Sets the page on which some or all of the content items designated by
     *  the K entry shall be rendered (Pg).
     * @param page the page on which some or all of the content items designated
     *  by the K entry shall be rendered.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAttributes,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAttributes(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),203,227,"/**
 * Sets attributes for a PDF structure element.
 * @param attributes list of attribute objects with revisions
 */","* Sets the attributes together with their revision numbers (A).
     * 
     * @param attributes the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setIDTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setIDTree(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),109,112,"/**
* Sets the ID tree node in the COS object.
* @param idTree PDNameTreeNode containing structure elements
*/","* Sets the ID tree.
     * 
     * @param idTree the ID tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTree,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTree(org.apache.pdfbox.pdmodel.common.PDNumberTreeNode),144,147,"/**
* Sets the parent tree node.
* @param parentTree PDNumberTreeNode representing the parent structure
*/","* Sets the parent tree.<p>
     * The keys correspond to a single page of the document or to an individual object, e.g. an
     * annotation or an XObject, which have a <b>/StructParent</b> or <b>/StructParents</b>
     * entry.<p>
     * The values of type {@link PDParentTreeValue} are either a dictionary or an array. It's a
     * dictionary for individual objects like an annotation or an XObject, and an array for a page
     * object or a content stream containing marked-content sequences identified by an MCID.
     * <p>
     * To create an empty parent tree, call {@code new PDNumberTreeNode(PDParentTreeValue.class)}.
     *
     * @param parentTree the parent tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setRectangle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),722,725,"/**
* Sets the annotation's bounding rectangle.
* @param rectangle PDRectangle defining the new bounds
*/","* Set the rectangle associated with this annotation.
     *
     * @param rectangle The annotation rectangle.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),887,890,"/**
 * Sets the border style of an annotation.
 * @param bs PDBorderStyleDictionary object defining the border style
 */","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the annotation.
     *
     * @param bs the border style dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setBorderEffect,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),911,914,"/**
* Sets the border effect for an annotation.
* @param be the border effect dictionary to apply
*/","* This will set the border effect dictionary, describing the effect applied to the border described by the BS
     * entry.
     *
     * @param be the border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),104,107,"/**
 * Sets the fringe rectangle of an annotation.
 * @param fringe PDRectangle defining the fringe area
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs.
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),141,144,"/**
 * Sets the fringe rectangle of the annotation.
 * @param fringe PDRectangle defining the fringe area
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),260,263,"/**
 * Sets the annotation's fringe rectangle.
 * @param fringe PDRectangle defining the fringe area
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle
     * and where the drawing occurs. (To take account of any effects applied through the BE entry
     * for example)
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,setFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:setFringe(org.apache.pdfbox.pdmodel.common.PDRectangle),142,145,"/**
 * Sets the annotation's fringe rectangle.
 * @param fringe PDRectangle defining the fringe area
 */","* This will set the fringe rectangle. Giving the difference between the annotations rectangle and where the drawing
     * occurs. (To take account of any effects applied through the BE entry for example)
     *
     * @param fringe the fringe",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setFDF(org.apache.pdfbox.pdmodel.fdf.FDFDictionary),137,140,"/**
* Sets FDF dictionary in document catalog.
* @param fdf FDFDictionary to be added
*/","* This will set the FDF document.
     *
     * @param fdf The new FDF dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setSignature,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),158,161,"/**
 * Sets the signature in the PDF document.
 * @param sig PDSignature object to be set
 */","* This will set the signature that is associated with this catalog.
     *
     * @param sig The new signature.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),295,298,"/**
 * Sets the file specification for the PDF document.
 * @param fs PDFileSpecification object representing the file
 */","* This will set the file specification.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setJavaScript,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setJavaScript(org.apache.pdfbox.pdmodel.fdf.FDFJavaScript),555,558,"/**
 * Sets JavaScript for FDF document.
 * @param js JavaScript object to be set
 */","* This will set the JavaScript entry.
     *
     * @param js The javascript entries.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,setCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:setCatalog(org.apache.pdfbox.pdmodel.fdf.FDFCatalog),161,165,"/**
* Sets the catalog in the PDF document.
* @param cat FDFCatalog to be set as the document's root catalog
*/","* This will set the FDF catalog for this FDF document.
     *
     * @param cat The FDF catalog.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceDictionary,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceDictionary(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),605,608,"/**
 * Sets the appearance dictionary for the field.
 * @param ap PDAppearanceDictionary object to be set
 */","* This will set the appearance dictionary.
     *
     * @param ap The appearance dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAppearanceStreamReference,org.apache.pdfbox.pdmodel.fdf.FDFField:setAppearanceStreamReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),626,629,"/**
* Sets appearance stream reference for a field.
* @param ref FDFNamedPageReference object representing the appearance stream
*/","* This will set the named page references.
     *
     * @param ref The named page references.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setIconFit,org.apache.pdfbox.pdmodel.fdf.FDFField:setIconFit(org.apache.pdfbox.pdmodel.fdf.FDFIconFit),647,650,"/**
 * Sets the icon fit for a form field.
 * @param fit the icon fit specification
 */","* This will set the icon fit 'IF' entry.
     *
     * @param fit The icon fit object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAction,org.apache.pdfbox.pdmodel.fdf.FDFField:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),712,715,"/**
 * Sets an action for the field.
 * @param a PDAction to be associated with the field
 */","* This will set the action that is associated with this field.
     *
     * @param a The new action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setAdditionalActions,org.apache.pdfbox.pdmodel.fdf.FDFField:setAdditionalActions(org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions),733,736,"/**
 * Sets additional actions for a PDF field.
 * @param aa PDAdditionalActions object containing actions
 */","* This will set the additional actions that are associated with this field.
     *
     * @param aa The additional actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setFractionalSpaceToAllocate(org.apache.pdfbox.pdmodel.common.PDRange),174,177,"/**
 * Sets the fractional space to allocate.
 * @param space PDRange defining the space allocation
 */","* This will set frational space to allocate.
     *
     * @param space The space to allocate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setFileSpecification(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),101,104,"/**
* Sets file specification.
* @param fs PDFileSpecification object to be set
*/","* This will set the file specification for this named page reference.
     *
     * @param fs The file specification to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFPage.java,setPageInfo,org.apache.pdfbox.pdmodel.fdf.FDFPage:setPageInfo(org.apache.pdfbox.pdmodel.fdf.FDFPageInfo),117,120,"/**
 * Sets page information.
 * @param info FDFPageInfo object containing page details
 */","* This will set the page info.
     *
     * @param info The new page info dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setTemplateReference,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setTemplateReference(org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference),82,85,"/**
* Sets the template reference.
* @param tRef FDFNamedPageReference object representing the template
*/","* This will set the template reference.
     *
     * @param tRef The template reference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDToGIDMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDToGIDMap(java.util.TreeMap),233,254,"/**
 * Builds a CID to GID map for the font.
 * @param cidToGid mapping of CIDs to GIDs
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile(org.apache.pdfbox.pdmodel.common.PDStream),737,740,"/**
* Sets the font file stream.
* @param type1Stream PDStream containing the font data
*/","* Set the type 1 font program.
     *
     * @param type1Stream The type 1 stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile2,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile2(org.apache.pdfbox.pdmodel.common.PDStream),758,761,"/**
* Sets the embedded TrueType font file.
* @param ttfStream stream containing the TrueType font data
*/","* Set the true type font program.
     *
     * @param ttfStream The true type stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontFile3,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontFile3(org.apache.pdfbox.pdmodel.common.PDStream),779,782,"/**
 * Sets the font file 3 stream.
 * @param stream PDF stream containing the font data
 */","* Set a stream containing a font program that is not true type or type 1.
     *
     * @param stream The font program stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCIDSet,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCIDSet(org.apache.pdfbox.pdmodel.common.PDStream),800,803,"/**
 * Sets the CID set stream in the dictionary.
 * @param stream the PDStream containing the CID set data
 */","* Set a stream containing a CIDSet.
     *
     * @param stream The font program stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setWhitePoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setWhitePoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),155,163,"/**
* Sets the white point for color calibration.
* @param whitepoint tristimulus values representing the white point
*/","* This will set the whitepoint tristimulus. As this is a required field, null should not be
     * passed into this function.
     *
     * @param whitepoint the whitepoint tristimulus.
     * @throws IllegalArgumentException if null is passed as argument.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java,setBlackPoint,org.apache.pdfbox.pdmodel.graphics.color.PDCIEDictionaryBasedColorSpace:setBlackPoint(org.apache.pdfbox.pdmodel.graphics.color.PDTristimulus),170,173,"/**
* Sets the black point for color calibration.
* @param blackpoint PDTristimulus object representing the black point
*/","* This will set the BlackPoint tristimulus.
     *
     * @param blackpoint the BlackPoint tristimulus",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",43,50,"/**
* Initializes a PDOutputIntent with a document and color profile.
* @param doc the PDF document to associate with the output intent
* @param colorProfile input stream of the color profile
* @throws IOException if an I/O error occurs while processing the color profile
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setExtendedGraphicsState,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setExtendedGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),79,83,"/**
* Sets the extended graphics state.
* @param extendedGraphicsState the new graphics state to apply
*/","* This will set the external graphics state for this pattern.
     * @param extendedGraphicsState The new extended graphics state for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,setShading,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:setShading(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),107,111,"/**
* Sets the shading resource.
* @param shadingResources the shading resource to be set
*/","* This will set the shading resources for this pattern.
     * @param shadingResources The new shading resources for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setResources,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setResources(org.apache.pdfbox.pdmodel.PDResources),209,212,"/**
* Sets PDF resources.
* @param resources PDResources object to be set
*/","* This will set the resources for this pattern.
     * @param resources The new resources for this pattern.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setFunction(org.apache.pdfbox.pdmodel.common.function.PDFunction),312,317,"/**
* Sets a new PDF function.
* @param newFunction the new PDFunction to use
*/","* This will set the function for the color conversion.
     *
     * @param newFunction the new function",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFontSetting,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFontSetting(org.apache.pdfbox.pdmodel.graphics.PDFontSetting),448,451,"/**
 * Sets the font setting in the dictionary.
 * @param fs PDFontSetting object to be set
 */","* This will set the font setting for this graphics state.
     *
     * @param fs The new font setting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),82,99,"/**
* Sets the destination for a PDF action.
* @param d the destination object to set
*/","* This will set the destination to jump to.
     *
     * @param d The destination.
     *
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),118,121,"/**
 * Sets the file specification.
 * @param fs PDFileSpecification object to be set
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),184,187,"/**
* Sets the target directory.
* @param targetDirectory PDTargetDirectory object to be set
*/","* Sets the target directory.
     * 
     * @param targetDirectory the target directory",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,setDestination,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),78,95,"/**
* Sets the destination for an action.
* @param d the destination object to set
*/","* This will set the destination to jump to.
     *
     * @param d The destination.
     * 
     * @throws IllegalArgumentException if the destination is not a page dictionary object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),71,74,"/**
 * Sets the file specification for an action.
 * @param fs PDFileSpecification object representing the file
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),84,87,"/**
 * Sets the file specification for the PDF document.
 * @param fs file specification object to be set
 */","* This will set the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setWinLaunchParams,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setWinLaunchParams(org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams),105,108,"/**
* Sets Windows launch parameters.
* @param win PDWindowsLaunchParams object containing launch settings
*/","* This will set a dictionary containing Windows-specific launch parameters.
     *
     * @param win The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),76,79,"/**
 * Sets the file specification for an action.
 * @param fs file specification to be set
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),74,77,"/**
 * Sets the file specification for an action.
 * @param fs PDF file specification to be set
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,setFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),92,95,"/**
 * Sets the file specification for an action.
 * @param fs PDFileSpecification object representing the file
 */","* This will set the file in which the destination is located.
     *
     * @param fs The file specification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),76,79,"/**
 * Sets an action for field F.
 * @param action PDAction to be associated with field F
 */","* Set the F action.
     *
     * @param action Get the F action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setE,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setE(org.apache.pdfbox.pdmodel.interactive.action.PDAction),81,84,"/**
 * Sets the E action in PDF document.
 * @param e PDAction to be set
 */","* This will set an action to be performed when the cursor
     * enters the annotation's active area.
     *
     * @param e The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setX,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setX(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
 * Sets the X action.
 * @param x PDAction to be set
 */","* This will set an action to be performed when the cursor
     * exits the annotation's active area.
     *
     * @param x The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setD(org.apache.pdfbox.pdmodel.interactive.action.PDAction),129,132,"/**
 * Sets the D action in the PDF document.
 * @param d PDAction object representing the action to be set
 */","* This will set an action to be performed when the mouse button
     * is pressed inside the annotation's active area.
     * The name D stands for ""down"".
     *
     * @param d The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setU,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setU(org.apache.pdfbox.pdmodel.interactive.action.PDAction),154,157,"/**
 * Sets the user action.
 * @param u PDAction object representing the user action
 */","* This will set an action to be performed when the mouse button
     * is released inside the annotation's active area.
     * The name U stands for ""up"".
     *
     * @param u The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setFo,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setFo(org.apache.pdfbox.pdmodel.interactive.action.PDAction),177,180,"/**
 * Sets the action associated with FO.
 * @param fo PDAction object to be set
 */","* This will set an action to be performed when the annotation
     * receives the input focus.
     *
     * @param fo The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setBl,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setBl(org.apache.pdfbox.pdmodel.interactive.action.PDAction),202,205,"/**
 * Sets the action to be performed.
 * @param bl PDAction object representing the action
 */","* This will set an action to be performed when the annotation
     * loses the input focus.
     * The name Bl stands for ""blurred"".
     *
     * @param bl The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPO,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),229,232,"/**
 * Sets the PO action.
 * @param po PDAction object to be set
 */","* This will set an action to be performed when the page containing
     * the annotation is opened. The action is executed after the O action
     * in the page's additional actions dictionary and the OpenAction entry
     * in the document catalog, if such actions are present.
     *
     * @param po The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPC,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),254,257,"/**
 * Sets the action associated with the ""PC"" key.
 * @param pc the PDAction to be set
 */","* This will set an action to be performed when the page containing
     * the annotation is closed. The action is executed before the C action
     * in the page's additional actions dictionary, if present.
     *
     * @param pc The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPV,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),277,280,"/**
 * Sets the action to be performed.
 * @param pv PDAction object representing the action
 */","* This will set an action to be performed when the page containing
     * the annotation becomes visible in the viewer application's user interface.
     *
     * @param pv The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAnnotationAdditionalActions.java,setPI,org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions:setPI(org.apache.pdfbox.pdmodel.interactive.action.PDAction),300,303,"/**
 * Sets the PI action.
 * @param pi PDAction object to be set
 */","* This will set an action to be performed when the page containing the annotation
     * is no longer visible in the viewer application's user interface.
     *
     * @param pi The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWC,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),83,86,"/**
* Sets the WC action.
* @param wc PDAction object to be set
*/","* This will set a JavaScript action to be performed
     * before closing a document.
     * The name WC stands for ""will close"".
     *
     * @param wc The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),108,111,"/**
 * Sets the WS action.
 * @param ws PDAction object to be set
 */","* This will set a JavaScript action to be performed
     * before saving a document.
     * The name WS stands for ""will save"".
     *
     * @param ws The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDS,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDS(org.apache.pdfbox.pdmodel.interactive.action.PDAction),133,136,"/**
 * Sets the digital signature action.
 * @param ds the digital signature action to set
 */","* This will set a JavaScript action to be performed
     * after saving a document.
     * The name DS stands for ""did save"".
     *
     * @param ds The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setWP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setWP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),158,161,"/**
 * Sets the WP action in the PDF document.
 * @param wp PDAction object representing the WP action
 */","* This will set a JavaScript action to be performed
     * before printing a document.
     * The name WP stands for ""will print"".
     *
     * @param wp The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDDocumentCatalogAdditionalActions.java,setDP,org.apache.pdfbox.pdmodel.interactive.action.PDDocumentCatalogAdditionalActions:setDP(org.apache.pdfbox.pdmodel.interactive.action.PDAction),183,186,"/**
 * Sets the default action for a PDF form field.
 * @param dp PDAction object representing the action
 */","* This will set a JavaScript action to be performed
     * after printing a document.
     * The name DP stands for ""did print"".
     *
     * @param dp The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setK,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setK(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
 * Sets the action associated with key 'K'.
 * @param k PDAction object to be set
 */","* This will set a JavaScript action to be performed when the user
     * types a keystroke into a text field or combo box or modifies the
     * selection in a scrollable list box. This allows the keystroke to
     * be checked for validity and rejected or modified.
     *
     * @param k The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setF(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
* Sets an action associated with key 'F'.
* @param f PDAction to be set
*/","* This will set a JavaScript action to be performed before
     * the field is formatted to display its current value. This
     * allows the field's value to be modified before formatting.
     *
     * @param f The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setV,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setV(org.apache.pdfbox.pdmodel.interactive.action.PDAction),137,140,"/**
 * Sets an action associated with key 'V'.
 * @param v PDAction to be set
 */","* This will set a JavaScript action to be performed
     * when the field's value is changed. This allows the
     * new value to be checked for validity.
     * The name V stands for ""validate"".
     *
     * @param v The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDFormFieldAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),166,169,"/**
 * Sets an action associated with key 'C'.
 * @param c PDAction to be set
 */","* This will set a JavaScript action to be performed in order to recalculate
     * the value of this field when that of another field changes. The order in which
     * the document's fields are recalculated is defined by the CO entry in the
     * interactive form dictionary.
     * The name C stands for ""calculate"".
     *
     * @param c The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setO(org.apache.pdfbox.pdmodel.interactive.action.PDAction),85,88,"/**
 * Sets the action associated with key 'O'.
 * @param o PDAction to be set
 */","* This will set an action to be performed when the page
     * is opened. This action is independent of any that may be
     * defined by the OpenAction entry in the document catalog,
     * and is executed after such an action.
     *
     * @param o The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDPageAdditionalActions.java,setC,org.apache.pdfbox.pdmodel.interactive.action.PDPageAdditionalActions:setC(org.apache.pdfbox.pdmodel.interactive.action.PDAction),110,113,"/**
 * Sets the action associated with key 'C'.
 * @param c PDAction to be set
 */","* This will set an action to be performed when the page
     * is closed. This action applies to the page being closed,
     * and is executed before any other page opened.
     *
     * @param c The action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setTargetDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setTargetDirectory(org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory),138,141,"/**
 * Sets the target directory for a PDF document.
 * @param targetDirectory PDTargetDirectory object representing the target directory
 */","* Sets the target directory.
     *
     * @param targetDirectory the target directory or null if the current document is the target
     * file containing the destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setNamedDestination,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setNamedDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDNamedDestination),194,204,"/**
* Sets a named destination in the document.
* @param dest PDNamedDestination object to set or null to remove
*/","* This will set a named destination in the current document that provides the page number of
     * the file attachment annotation.
     *
     * @param dest a named destination or null if the entry is to be removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary),355,358,"/**
 * Sets the appearance dictionary.
 * @param appearance PDAppearanceDictionary object to be set
 */","* This will set the appearance associated with this annotation.
     * 
     * @param appearance The appearance dictionary for this annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setOptionalContent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setOptionalContent(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),716,719,"/**
* Sets optional content properties.
* @param oc PDPropertyList object containing optional content settings
*/","* Sets the optional content group or optional content membership dictionary for the annotation.
     *
     * @param oc The optional content group or optional content membership dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPage,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPage(org.apache.pdfbox.pdmodel.PDPage),831,834,"/**
 * Sets the current page.
 * @param page PDPage object to be set
 */","* This will set the corresponding page for this annotation. This is optional but recommended.
     * Not doing it <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when
     * PDFs get signed</a>.
     *
     * @param page is the corresponding page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification),94,97,"/**
* Sets the file specification for this object.
* @param file PDFileSpecification to be set
*/","* Set the attached file.
     *
     * @param file The file that is attached.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),242,245,"/**
* Sets border effect dictionary.
* @param be PDBorderEffectDictionary object representing the border effect
*/","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.6 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),267,270,"/**
 * Sets the rectangle difference.
 * @param rd PDRectangle representing the rectangle difference
 */","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),104,107,"/**
 * Sets the action associated with this PDF object.
 * @param action PDAction to be set
 */","* Set the annotation action. Either this or the destination entry should be set, but not both.
     *
     * @param action The annotation action.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),115,118,"/**
* Sets the border style dictionary.
* @param bs border style to be applied
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set. 
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setDestination,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),150,153,"/**
 * Sets the destination for this action.
 * @param dest PDDestination object representing the target location
 */","* The new destination value. Either this or the action entry should be set, but not both.
     *
     * @param dest The updated destination.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setPreviousURI,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setPreviousURI(org.apache.pdfbox.pdmodel.interactive.action.PDActionURI),180,183,"/**
* Sets the previous URI action.
* @param pa PDActionURI object representing the URI action
*/","* This will set the previous URI action, in case it needs to be retrieved at later date.
     *
     * @param pa The previous URI.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setPopup(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup),104,107,"/**
* Sets the annotation's associated popup.
* @param popup PDAnnotationPopup object to associate
*/","* This will set the popup annotation used for entering/editing the text for this annotation.
     *
     * @param popup the popup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setInReplyTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),200,203,"/**
* Sets the annotation in reply to another.
* @param irt PDAnnotation representing the annotation being replied to
*/","* This will set the annotation to which this one is ""In Reply To"" the actual relationship is specified by the RT
     * entry.
     *
     * @param irt the annotation this one is ""In Reply To"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setExternalData,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setExternalData(org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary),285,288,"/**
 * Sets external data dictionary.
 * @param externalData PDExternalDataDictionary to be set
 */","* This will set the external data dictionary.
     * 
     * @param externalData the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),296,299,"/**
* Sets border style dictionary.
* @param bs border style to apply
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),88,91,"/**
 * Sets the border effect dictionary.
 * @param be the border effect dictionary to apply
 */","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setBorderEffect,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setBorderEffect(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary),85,88,"/**
* Sets the border effect dictionary.
* @param be the border effect dictionary to apply
*/","* This will set the border effect dictionary, specifying effects to be applied when drawing the
     * line. This is supported by PDF 1.5 and higher.
     *
     * @param be The border effect dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifference,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifference(org.apache.pdfbox.pdmodel.common.PDRectangle),110,113,"/**
* Sets the rectangle difference.
* @param rd PDRectangle object representing the difference
*/","* This will set the rectangle difference rectangle. Giving the difference between the
     * annotations rectangle and where the drawing occurs. (To take account of any effects applied
     * through the BE entry for example)
     *
     * @param rd the rectangle difference
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAppearanceCharacteristics,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAppearanceCharacteristics(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary),131,135,"/**
* Sets the appearance characteristics.
* @param appearanceCharacteristics dictionary containing appearance settings
*/","* Sets the appearance characteristics dictionary.
     * 
     * @param appearanceCharacteristics the appearance characteristics dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setAction,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),153,156,"/**
 * Sets an action associated with this object.
 * @param action PDAction to be set
 */","* Set the annotation action. As of PDF 1.6 this is only used for Widget Annotations
     * 
     * @param action The annotation action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setActions,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDAnnotationAdditionalActions),175,178,"/**
* Sets additional actions for annotation.
* @param actions PDAnnotationAdditionalActions object to be set
*/","* Set the actions of the field.
     *
     * @param actions The field actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setBorderStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setBorderStyle(org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary),186,189,"/**
* Sets the border style of the PDF object.
* @param bs border style dictionary to apply
*/","* This will set the border style dictionary, specifying the width and dash pattern used in drawing the line.
     *
     * @param bs the border style dictionary to set.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setParent(org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField),224,231,"/**
* Sets the parent field.
* @param field the parent PDTerminalField object
* @throws IllegalArgumentException if field shares a dictionary with its only widget
*/","* Set the parent field of a widget annotation. This is only required if this widget annotation
     * is one of multiple children in a field, and not to be set otherwise. You will usually not
     * need this, because in most cases, fields have only one widget and share a common dictionary.
     * A usage can be found in the CreateMultiWidgetsForm example.
     *
     * @param field the parent field.
     * @throws IllegalArgumentException if setParent() was called for a field that shares a
     * dictionary with its only widget.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),77,80,"/**
 * Sets normal appearance for an entry.
 * @param entry PDAppearanceEntry to be set as normal appearance
 */","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setNormalAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),87,90,"/**
 * Sets the normal appearance of a form field.
 * @param ap the appearance stream to set
 */","* This will set the normal appearance when there is only one appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),111,114,"/**
* Sets rollover appearance for a button.
* @param entry PDAppearanceEntry object defining the appearance
*/","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setRolloverAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),121,124,"/**
* Sets the rollover appearance for a button.
* @param ap PDAppearanceStream object representing the appearance
*/","* This will set the rollover appearance when there is rollover appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry),145,148,"/**
 * Sets the down appearance for a PDF annotation.
 * @param entry PDAppearanceEntry containing appearance details
 */","* This will set a list of appearances. If you would like to set the single appearance then you should use the key
     * ""default"", and when the PDF is written back to the filesystem then there will only be one stream.
     *
     * @param entry appearance stream or subdictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceDictionary.java,setDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary:setDownAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),155,158,"/**
 * Sets the down appearance stream.
 * @param ap appearance stream to be set
 */","* This will set the down appearance when there is down appearance to be shown.
     *
     * @param ap The appearance stream to show.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildFilter,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildFilter(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),92,95,"/**
* Sets the property build filter.
* @param filter PDPropBuildDataDict object to be set as filter
*/","* Set the build data dictionary for the signature handler.
     * This entry is optional but is highly recommended for the signatures.
     *
     * @param filter is the PDPropBuildFilter",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildPubSec,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildPubSec(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),119,122,"/**
 * Sets publication security properties.
 * @param pubSec PDPropBuildDataDict containing security settings
 */","* Set the build data dictionary for the PubSec Software module.
     *
     * @param pubSec is the PDPropBuildPubSec",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuild.java,setPDPropBuildApp,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild:setPDPropBuildApp(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict),147,150,"/**
* Sets the application property in the dictionary.
* @param app PDPropBuildDataDict object representing the application data
*/","* Set the build data dictionary for the viewing application
     * software module.
     *
     * @param app is the PDPropBuildApp",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSeedValueCertificate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSeedValueCertificate(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate),453,456,"/**
* Sets the seed value certificate in the dictionary.
* @param certificate PDSeedValueCertificate to be set
*/","* (Optional) A certificate seed value dictionary containing information about the certificate
     * to be used when signing.
     *
     * @param certificate dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setPropBuild,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setPropBuild(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuild),460,463,"/**
* Sets property build in dictionary.
* @param propBuild PDPropBuild object to be set
*/","* PDF signature build dictionary. Provides information about the signature handler.
     *
     * @param propBuild the prop build",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setPreviousSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setPreviousSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),137,140,"/**
 * Sets the previous sibling node in an outline.
 * @param outlineNode the sibling node to be set
 */","* Set the previous sibling, this will be maintained by this class.
     *
     * @param outlineNode The new previous sibling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setNextSibling,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setNextSibling(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),155,158,"/**
 * Sets the next sibling in the PDF outline hierarchy.
 * @param outlineNode the next sibling node to be linked
 */","* Set the next sibling, this will be maintained by this class.
     *
     * @param outlineNode The new next sibling.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDDestination),196,199,"/**
* Sets the destination for this action.
* @param dest PDDestination object representing the target location
*/","* Set the page destination for this node.
     *
     * @param dest The new page destination for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setAction,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setAction(org.apache.pdfbox.pdmodel.interactive.action.PDAction),291,294,"/**
 * Sets an action for this object.
 * @param action the action to be set
 */","* Set the action for this node.
     *
     * @param action The new action for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setStructureElement,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setStructureElement(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),312,315,"/**
* Sets the structure element.
* @param structureElement the new structure element to set
*/","* Set the structure element for this node.
     *
     * @param structureElement The new structure element for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setParent(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),67,70,"/**
 * Sets the parent outline node.
 * @param parent PDOutlineNode representing the parent
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setFirstChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setFirstChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),194,197,"/**
 * Sets the first child node in an outline.
 * @param outlineNode the PDOutlineNode to be set as the first child
 */","* Set the first child, this will be maintained by this class.
     *
     * @param outlineNode The new first child.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setLastChild,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setLastChild(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode),212,215,"/**
* Sets the last child node in an outline.
* @param outlineNode the PDOutlineNode to be set as the last child
*/","* Set the last child, this will be maintained by this class.
     *
     * @param outlineNode The new last child.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultResources,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultResources(org.apache.pdfbox.pdmodel.PDResources),554,557,"/**
* Sets default resources.
* @param dr PDResources object to be set as default
*/","* This will set the default resources for the acroform.
     *
     * @param dr The new default resources.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setXFA,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setXFA(org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource),595,598,"/**
* Sets XFA resource in the dictionary.
* @param xfa PDXFAResource object to be set
*/","* Set the XFA resource, this is only used for PDF 1.5+ forms.
     *
     * @param xfa The xfa resource.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),104,108,"/**
 * Sets the signature value.
 * @param value PDSignature object to be set
 * @throws IOException if an I/O error occurs
 */","* Sets the value of this field to be the given signature.
     * 
     * @param value is the PDSignatureField
     * 
     * @throws IOException if the new value could not be applied",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setDefaultValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),131,134,"/**
* Sets default signature value.
* @param value PDSignature object to be set as default
*/","* Sets the default value of this field to be the given signature.
     *
     * @param value is the PDSignatureField",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDSignatureField.java,setSeedValue,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField:setSeedValue(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue),185,191,"/**
* Sets the seed value in the PDF document.
* @param sv PDSeedValue object containing the seed data
*/","* <p>(Optional; PDF 1.) A seed value dictionary containing information
     * that constrains the properties of a signature that is applied to the
     * field.</p>
     *
     * @param sv is the seed value dictionary as PDSeedValue",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setActions,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setActions(org.apache.pdfbox.pdmodel.interactive.action.PDFormFieldAdditionalActions),66,69,"/**
* Sets additional actions for the form field.
* @param actions PDFormFieldAdditionalActions object containing actions to be set
*/","* Set the actions of the field.
     * 
     * @param actions The field actions.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,setWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:setWidgets(java.util.List),192,200,"/**
* Sets the list of child widgets.
* @param children list of PDAnnotationWidget objects
*/","* Sets the field's widget annotations.
     *
     * @param children The list of widget annotations.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setBBox,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),95,98,"/**
 * Sets the bounding box for the PDF object.
 * @param rectangle PDRectangle defining the bounding box
 */","* This will set the rectangle specifying the location of the viewport.
     * 
     * @param rectangle the rectangle specifying the location.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setMeasure,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setMeasure(org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary),136,139,"/**
* Sets the measurement dictionary.
* @param measure PDMeasureDictionary object to be set
*/","* This will set the measure dictionary.
     * 
     * @param measure the measure dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setThreadInfo,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setThreadInfo(org.apache.pdfbox.pdmodel.PDDocumentInformation),82,85,"/**
 * Sets document information in the thread.
 * @param info document information to be set
 */","* Set the thread info, can be null.
     *
     * @param info The info dictionary about this thread.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setThread,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setThread(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread),89,92,"/**
 * Sets the thread for the bead.
 * @param thread PDThread object to be assigned
 */","* Set the thread that this bead is part of.  This is only required for the
     * first bead in a thread.  Note: This property is set for you by the PDThread.setFirstBead() method.
     *
     * @param thread The thread that this bead is part of.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setNextBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setNextBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),110,113,"/**
* Sets the next thread bead.
* @param next the next bead in the sequence
*/","* Set the next bead in the thread.
     *
     * @param next The next bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPreviousBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPreviousBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),131,134,"/**
* Sets the previous thread bead.
* @param previous the previous bead to set
*/","* Set the previous bead in the thread.
     *
     * @param previous The previous bead.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setPage,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setPage(org.apache.pdfbox.pdmodel.PDPage),169,172,"/**
 * Sets the current page.
 * @param page the PDF page to set
 */","* Set the page that this bead is part of.  This is a required property and must be
     * set when creating a new bead.  The PDPage object also has a list of beads in the natural
     * reading order.  It is recommended that you add this object to that list as well.
     *
     * @param page The page that this bead is on.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,setRectangle,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:setRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),190,193,"/**
* Sets the rectangle for the bead.
* @param rect PDRectangle defining the area
*/","* Set the rectangle on the page that this bead covers.
     *
     * @param rect The portion of the page that this bead covers.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setMarked,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setMarked(boolean),77,80,"/**
 * Sets the marked status.
 * @param value true if marked, false otherwise
 */","* Set if this is a tagged PDF.
     *
     * @param value The new marked value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setUserProperties,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setUserProperties(boolean),97,100,"/**
 * Sets user properties flag.
 * @param userProps boolean indicating if user properties are enabled
 */","* Set if the structure elements contain user properties.
     *
     * @param userProps The new value for this property.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkInfo.java,setSuspect,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkInfo:setSuspect(boolean),120,123,"/**
 * Sets the suspect status in the dictionary.
 * @param suspect boolean indicating if the entity is a suspect
 */","* Set the value of the suspects property.  See PDF Reference 1.6
     * section 10.6 ""Logical Structure"" for more information about this
     * property.
     *
     * @param suspect The new ""Suspects"" value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setTrackMousePosition,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setTrackMousePosition(boolean),117,120,"/**
 * Sets whether to track mouse position.
 * @param value true to enable tracking, false otherwise
 */","* This will specify whether to track the mouse position when the URI is
     * resolved.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:setOpen(boolean),64,67,"/**
 * Sets the ""Open"" status in the COS object.
 * @param open boolean value indicating openness
 */","* This will set the initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFD,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFD(boolean),211,214,"/**
* Sets the FD flag in the COS object.
* @param fd boolean value to set the FD flag
*/","* This will set the value indication if the denominator of the fractional value is reduced/truncated .
     * The denominator may not be reduced/truncated if true
     * @param fd fd",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setVolatile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setVolatile(boolean),205,208,"/**
* Sets the volatile flag of a file.
* @param fileIsVolatile true if the file is volatile, false otherwise
*/","* Tell if the underlying file is volatile and should not be cached by the
     * reader application.  Default: false
     *
     * @param fileIsVolatile The new value for the volatility of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setHidden,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setHidden(boolean),138,142,"/**
* Sets the hidden state of the object.
* @param hidden true to hide, false to show
*/","* Specifies whether the property shall be hidden.
     * 
     * @param hidden <code>true</code> if the property shall be hidden,
     * <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setEncryptMetaData,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setEncryptMetaData(boolean),134,137,"/**
* Sets encryption metadata flag.
* @param encryptMetaData true to enable encryption metadata, false otherwise
*/","* Set the EncryptMetaData dictionary info.
     *
     * @param encryptMetaData true if EncryptMetaData shall be set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaption(boolean),286,289,"/**
 * Sets the annotation's caption visibility.
 * @param cap true to show caption, false to hide
 */","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleToFitAnnotation,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleToFitAnnotation(boolean),194,197,"/**
 * Sets whether annotations should scale to fit.
 * @param value true if annotations should scale; false otherwise
 */","* This will tell the icon to scale.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFTemplate.java,setRename,org.apache.pdfbox.pdmodel.fdf.FDFTemplate:setRename(boolean),132,135,"/**
 * Sets the rename flag in the PDF template.
 * @param value true to enable renaming, false otherwise
 */","* This will set if the fields can be renamed.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setInterpolate,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setInterpolate(boolean),235,239,"/**
 * Sets interpolation flag in PDF parameters.
 * @param value true to enable interpolation, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setStencil,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setStencil(boolean),290,294,"/**
* Sets stencil flag in PDF parameters.
* @param isStencil boolean indicating if stencil should be enabled
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setAntiAlias,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setAntiAlias(boolean),218,221,"/**
* Enables or disables anti-aliasing.
* @param antiAlias true to enable, false to disable
*/","* This will set the AntiAlias value.
     *
     * @param antiAlias the new AntiAlias value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingOverprintControl(boolean),372,375,"/**
* Sets stroking overprint control.
* @param op true to enable, false to disable
*/","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingOverprintControl,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingOverprintControl(boolean),393,396,"/**
* Sets non-stroking overprint control.
* @param op true to enable, false to disable
*/","* This will set the overprint control(OP).
     *
     * @param op The overprint control.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAutomaticStrokeAdjustment,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAutomaticStrokeAdjustment(boolean),508,511,"/**
 * Sets automatic stroke adjustment.
 * @param sa true to enable, false to disable
 */","* This will set the automatic stroke adjustment flag.
     *
     * @param sa The new automatic stroke adjustment flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setAlphaSourceFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setAlphaSourceFlag(boolean),572,575,"/**
 * Sets the alpha source flag.
 * @param alpha true to enable alpha source, false otherwise
 */","* This will set the alpha source flag (“alpha is shape”), that specifies whether the current
     * soft mask and alpha constant shall be interpreted as shape values (true) or opacity values
     * (false).
     *
     * @param alpha The alpha source flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setTextKnockoutFlag,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setTextKnockoutFlag(boolean),625,628,"/**
 * Sets the knockout flag in the dictionary.
 * @param tk true to enable knockout, false otherwise
 */","* This will set the text knockout flag.
     *
     * @param tk The text knockout flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),144,166,"/**
* Sets open mode for a document.
* @param value OpenMode specifying how to open the document
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),227,249,"/**
* Sets open mode for a document.
* @param value OpenMode specifying how to open the document
*/","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,setOpenInNewWindow,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:setOpenInNewWindow(org.apache.pdfbox.pdmodel.interactive.action.OpenMode),134,156,"/**
 * Sets open mode for a document.
 * @param value OpenMode specifying how to open the document
 */","* This will specify whether to open the destination document in a new window.
     *
     * @param value The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setSynchronous,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setSynchronous(boolean),110,113,"/**
 * Sets the action to be synchronous or asynchronous.
 * @param synchronous true if the action should be synchronous, false otherwise
 */","* A flag specifying whether to play the sound synchronously or asynchronously. When true, the
     * reader allows no further user interaction other than canceling the sound until the sound has
     * been completely played.
     *
     * @param synchronous Whether to play the sound synchronously (true) or asynchronously (false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setRepeat,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setRepeat(boolean),133,136,"/**
 * Sets the repeat flag for an action.
 * @param repeat true to enable repeating, false otherwise
 */","* A flag specifying whether to repeat the sound indefinitely.
     *
     * @param repeat Whether to repeat the sound indefinitely.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setMix,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setMix(boolean),156,159,"/**
 * Sets the mix flag in the action.
 * @param mix boolean value to enable or disable mixing
 */","* The flag specifying whether to mix this sound with any other sound already playing. If this
     * flag is false, any previously playing sound shall be stopped before starting this sound; this
     * can be used to stop a repeating sound (see Repeat). Default value: false.
     *
     * @param mix whether to mix this sound with any other sound already playing.
     * (false).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaption(boolean),251,254,"/**
 * Sets the caption flag.
 * @param cap boolean value to enable or disable caption
 */","* This will set if the contents are shown as a caption to the line.
     *
     * @param cap Boolean value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setOpen,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setOpen(boolean),146,149,"/**
 * Sets the open state of the PDF object.
 * @param open boolean indicating if the object should be open
 */","* This will set initial state of the annotation, open or closed.
     *
     * @param open Boolean value, true = open false = closed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setPreRelease,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setPreRelease(boolean),202,205,"/**
 * Sets the pre-release flag in the dictionary.
 * @param preRelease boolean indicating if it's a pre-release version
 */","* A flag that can be used by the signature handler or software module to
     * indicate that this signature was created with unrelease software.
     *
     * @param preRelease is true if the signature was created with a unrelease
     *                   software, otherwise false.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setNonEFontNoWarn,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setNonEFontNoWarn(boolean),284,287,"/**
* Sets whether to suppress non-embedded font warnings.
* @param noEmbedFontWarning flag to disable warnings
*/","* If true, the reader should not display a warning about fonts not being embedded.
     *
     * @param noEmbedFontWarning true if there is a Legal dictionary in the catalog and the
     * NonEmbeddedFonts attribute has a non-zero value
     *
     * Documentation says: (Optional; PDF 1.5) If there is a LegalPDF dictionary in the catalog of
     * the PDF file and the NonEmbeddedFonts attribute in this dictionary has a non zero value, and
     * the viewing application has a preference set to suppress the display of this warning then the
     * value of this attribute will be set to true.
     *
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/Acrobat_Signature_BuildDict.pdf#page=6"">Digital
     * Signature Build Dictionary Specification</a>
     * @see #getNonEFontNoWarn()
     * @see COSName#NON_EFONT_NO_WARN",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setTrustedMode,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setTrustedMode(boolean),305,308,"/**
* Sets trusted mode in the dictionary.
* @param trustedMode flag indicating trusted mode status
*/","* If true, the application was in trusted mode when signing took place.
     *
     * @param trustedMode true if the application is in trusted mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setNeedAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setNeedAppearances(java.lang.Boolean),532,535,"/**
* Sets the need for appearances flag.
* @param value boolean indicating if appearance streams are needed
*/","* Set the NeedAppearances value. If this is false, PDFBox will create appearances for all field
     * widget.
     * 
     * @param value the value for NeedAppearances",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideToolbar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideToolbar(boolean),177,180,"/**
 * Sets the toolbar visibility preference.
 * @param value true to hide the toolbar, false to show it
 */","* Set the toolbar preference.
     *
     * @param value Set the toolbar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideMenubar,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideMenubar(boolean),197,200,"/**
* Sets whether to hide the menu bar.
* @param value true to hide, false to show
*/","* Set the menubar preference.
     *
     * @param value Set the menubar preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setHideWindowUI,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setHideWindowUI(boolean),217,220,"/**
* Sets whether to hide window UI.
* @param value true to hide, false otherwise
*/","* Set the window UI preference.
     *
     * @param value Set the window UI preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setFitWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setFitWindow(boolean),237,240,"/**
 * Sets whether to fit window on PDF open.
 * @param value true to fit window, false otherwise
 */","* Set the fit window preference.
     *
     * @param value Set the fit window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setCenterWindow,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setCenterWindow(boolean),257,260,"/**
* Sets the center window preference.
* @param value true to center window, false otherwise
*/","* Set the center window preference.
     *
     * @param value Set the center window preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDisplayDocTitle,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDisplayDocTitle(boolean),277,280,"/**
* Sets whether to display document title.
* @param value true to enable, false to disable
*/","* Set the display doc title preference.
     *
     * @param value Set the display doc title preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfString(java.lang.String,java.lang.String[])",125,136,"/**
 * Sets an array of strings in the COS object.
 * @param name key for the array in the COS dictionary
 * @param values array of string values to set
 */","* Sets an array of strings.
     * 
     * @param name the attribute name
     * @param values the array of strings",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfName(java.lang.String,java.lang.String[])",212,223,"/**
 * Sets an array of names in the COS object.
 * @param name key for the dictionary entry
 * @param values array of string values to be set
 */","* Sets an array of name values.
     * 
     * @param name the attribute name
     * @param values the array of name values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setArrayOfNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setArrayOfNumber(java.lang.String,float[])",364,375,"/**
 * Sets an array of numbers in the PDF dictionary.
 * @param name key for the array in the dictionary
 * @param values float array to be set
 */","* Sets an array of float numbers.
     * 
     * @param name the attribute name
     * @param values the float numbers",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setName,"org.apache.pdfbox.cos.COSDictionary:setName(java.lang.String,java.lang.String)",288,291,"/**
 * Sets the name-value pair in the document.
 * @param key   The key as a string.
 * @param value The value to be set for the key.
 */","* This is a convenience method that will convert the value to a COSName object. If it is null then the object will
     * be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageMode,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageMode(org.apache.pdfbox.pdmodel.PageMode),494,497,"/**
 * Sets the page mode of the document.
 * @param mode the desired page mode to set
 */","* Sets the page mode.
     *
     * @param mode The new page mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setPageLayout,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setPageLayout(org.apache.pdfbox.pdmodel.PageLayout),527,530,"/**
 * Sets the page layout for the document.
 * @param layout the desired page layout configuration
 */","* Sets the page layout.
     *
     * @param layout The new page layout.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setVersion,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setVersion(java.lang.String),609,612,"/**
 * Sets the document version.
 * @param version the version string to be set
 */","* Sets the PDF specification version this document conforms to.
     *
     * @param version the PDF version (e.g. ""1.4"")",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTrapped,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTrapped(java.lang.String),304,316,"/**
* Sets the trapped status.
* @param value must be ""True"", ""False"", or ""Unknown""
*/","* This will set the trapped of the document.  This will be
     * 'True', 'False', or 'Unknown'.
     *
     * @param value The new trapped value for the document.
     * 
     * @throws IllegalArgumentException if the parameter is invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStyle,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStyle(java.lang.String),116,126,"/**
* Sets or removes the style attribute.
* @param style new style value or null to remove it
*/","* Sets the numbering style for this page range.
     * 
     * @param style
     *            one of the STYLE_* constants or {@code null} if no page
     *            numbering is desired.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDTypedDictionaryWrapper.java,<init>,org.apache.pdfbox.pdmodel.common.PDTypedDictionaryWrapper:<init>(java.lang.String),36,40,"/**
* Initializes a new dictionary with a specified type.
* @param type the type of the dictionary
*/","* Creates a new instance with a given type.
     * 
     * @param type the type (Type)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,setOwner,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:setOwner(java.lang.String),132,135,"/**
 * Sets the owner of the document.
 * @param owner The name of the document owner
 */","* Sets the owner of the attributes.
     * 
     * @param owner the owner of the attributes",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:<init>(),38,42,"/**
* Initializes a PDMarkedContentReference with a new dictionary.
*/",* Default constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:<init>(),58,62,"/**
* Constructs a new PDObjectReference with an initialized dictionary.
*/","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setStructureType,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setStructureType(java.lang.String),86,89,"/**
* Sets the structure type of the PDF object.
* @param structureType the new structure type to be set
*/","* Sets the structure type (S).
     * 
     * @param structureType the structure type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setClassNames,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setClassNames(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.Revisions),368,394,"/**
* Sets class names with revisions.
* @param classNames Revisions containing class names and their revision numbers
*/","* Sets the class names together with their revision numbers (C).
     * 
     * @param classNames the class names",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:<init>(java.lang.String),45,49,"/**
* Initializes a PDStructureNode with a specified type.
* @param type node type as a string
*/","* Constructor.
     *
     * @param type the type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setName,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setName(java.lang.String),73,77,"/**
* Sets the name and notifies of change if different.
* @param name new name to set
*/","* Sets the property name.
     * 
     * @param name the property name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineStyle,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineStyle(java.lang.String),156,159,"/**
 * Sets the guideline style.
 * @param style the new guideline style
 */","* Set the style for the box.
     *
     * @param style The style for the box line.
     * @see PDBoxStyle#GUIDELINE_STYLE_DASHED
     * @see PDBoxStyle#GUIDELINE_STYLE_SOLID",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setSubFilter,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setSubFilter(java.lang.String),179,182,"/**
 * Sets the sub-filter name in the dictionary.
 * @param subfilter the sub-filter string to be set
 */","* Set the subfilter entry of the encryption dictionary.
     *
     * @param subfilter The value of the subfilter field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setIntent,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setIntent(java.lang.String),846,849,"/**
 * Sets the annotation's intent.
 * @param intent the purpose or type of the annotation
 */","* The intent of the annotation.
     * 
     * @param intent The annotation's intent.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setLineEndingStyle(java.lang.String),282,285,"/**
 * Sets line ending style.
 * @param style line ending style as a string
 */","* This will set the line ending style.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setIcon,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setIcon(java.lang.String),92,95,"/**
 * Sets the icon name.
 * @param icon the new icon name to be set
 */","* This will set the icon (and hence appearance, AP taking precedence) For this annotation. See the
     * PDAnnotationText.NAME_XXX constants for valid values.
     *
     * @param icon The name of the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,setVersion,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:setVersion(java.lang.String),106,109,"/**
 * Sets the version of the catalog.
 * @param version the version string to be set
 */","* This will set the version of the FDF document.
     *
     * @param version The new version for the FDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setEncoding,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setEncoding(java.lang.String),424,427,"/**
 * Sets the encoding for the FDF document.
 * @param encoding the character encoding to be used
 */","* This will set the encoding.
     *
     * @param encoding The new encoding.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleOption,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleOption(java.lang.String),110,113,"/**
 * Sets the scaling option for the PDF document.
 * @param option scaling option to be applied
 */","* This will set the scale option for the icon. Set the SCALE_OPTION_XXX constants.
     *
     * @param option The scale option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,setScaleType,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:setScaleType(java.lang.String),136,139,"/**
 * Sets the scaling type for an image.
 * @param scale scaling type as a string
 */","* This will set the scale type. See the SCALE_TYPE_XXX constants.
     *
     * @param scale The scale type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:<init>(),71,75,"/**
* Initializes a new pattern dictionary.
*/",* Creates a new Pattern dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setType(java.lang.String),94,97,"/**
 * Sets the type of the action.
 * @param type the new type to be set
 */","* This will set the type of PDF object that the actions dictionary describes.
     * If present must be Action for an action dictionary.
     *
     * @param type The new Type for the PDF object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,setSubType,org.apache.pdfbox.pdmodel.interactive.action.PDAction:setSubType(java.lang.String),114,117,"/**
 * Sets the subtype of an action.
 * @param s the subtype string to be set
 */","* This will set the type of action that the actions dictionary describes.
     *
     * @param s The new type of action.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setSubtype(java.lang.String),234,237,"/**
* Sets the subtype of the PDF object.
* @param subType the subtype to be set
*/","* This will set the sub type (and hence appearance, AP taking precedence) For this annotation. See the SUB_TYPE_XXX
     * constants for valid values.
     *
     * @param subType The subtype of the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAppearanceState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAppearanceState(java.lang.String),334,337,"/**
 * Sets the appearance state.
 * @param as the appearance state to set
 */","* This will set the annotations appearance state name.
     * 
     * @param as The name of the appearance stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,setAttachmentName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:setAttachmentName(java.lang.String),114,117,"/**
 * Sets the attachment name.
 * @param name the new attachment name
 */","* Set the name used to draw the attachment icon. See the ATTACHMENT_NAME_XXX constants.
     *
     * @param name The name of the visual icon to draw.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setLineEndingStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setLineEndingStyle(java.lang.String),219,222,"/**
 * Sets the line ending style.
 * @param style the line ending style to be set
 */","* This will set the line ending style.
     *
     * @param style The new style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setCaptionPositioning,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setCaptionPositioning(java.lang.String),342,345,"/**
* Sets the caption positioning.
* @param captionPositioning new caption positioning value
*/","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionPositioning caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,setHighlightMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:setHighlightMode(java.lang.String),170,173,"/**
 * Sets the highlight mode.
 * @param mode the highlight mode to apply
 */","* Set the highlight mode. See the HIGHLIGHT_MODE_XXX constants.
     *
     * @param mode The new highlight mode.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setReplyType,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setReplyType(java.lang.String),242,245,"/**
 * Sets the reply type in the COS object.
 * @param rt the reply type to be set
 */","* This will set the Reply Type (relationship) with the annotation in the IRT entry See the RT_* constants for the
     * available values.
     *
     * @param rt the reply type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setIntent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setIntent(java.lang.String),264,267,"/**
 * Sets the intent of the document.
 * @param it the intent string to be set
 */","* This will set the intent of the annotation The values and meanings are specific to the actual annotation See the
     * IT_* constants for the annotation classes.
     *
     * @param it the intent",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:setName(java.lang.String),120,123,"/**
 * Sets the name of the COS object.
 * @param name the new name to set
 */","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the rubber stamp.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setName(java.lang.String),167,170,"/**
 * Sets the name of the COS object.
 * @param name the new name to set
 */","* This will set the name (and hence appearance, AP taking precedence) For this annotation. See the NAME_XXX
     * constants for valid values.
     *
     * @param name The name of the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,setHighlightingMode,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:setHighlightingMode(java.lang.String),100,113,"/**
* Sets the highlighting mode for a link.
* @param highlightingMode valid modes: 'N', 'I', 'O', 'P', 'T'
*/","* Sets the highlighting mode.
     * <dl>
     * <dt><code>N</code></dt>
     * <dd>(None) No highlighting.</dd>
     * <dt><code>I</code></dt>
     * <dd>(Invert) Invert the contents of the annotation rectangle.</dd>
     * <dt><code>O</code></dt>
     * <dd>(Outline) Invert the annotation's border.</dd>
     * <dt><code>P</code></dt>
     * <dd>(Push) Display the annotation's down appearance, if any. If no down appearance is defined, the contents of
     * the annotation rectangle shall be offset to appear as if it were pushed below the surface of the page</dd>
     * <dt><code>T</code></dt>
     * <dd>(Toggle) Same as <code>P</code> (which is preferred).</dd>
     * </dl>
     * 
     * @param highlightingMode the highlighting mode the defined values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setStyle(java.lang.String),140,143,"/**
 * Sets the style of the PDF object.
 * @param s the style string to be applied
 */","* This will set the border style, see the STYLE_* constants for valid values.
     *
     * @param s the border style to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:<init>(),35,39,"/**
* Constructs a new PDExternalDataDictionary instance.
* Initializes with a COSDictionary and sets its type to ""ExData"".
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDExternalDataDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.annotation.PDExternalDataDictionary:setSubtype(java.lang.String),87,90,"/**
* Sets the subtype of the COS object.
* @param subtype the new subtype value to be set
*/","* This will set the subtype of the external data dictionary.
     * 
     * @param subtype the subtype of the external data dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setName(java.lang.String),81,84,"/**
 * Sets the name in the dictionary.
 * @param name the new name to set
 */","* The name of the software module that was used to create the signature.
     *
     * @param name is the name of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLType,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLType(java.lang.String),622,625,"/**
 * Sets the URL type in the dictionary.
 * @param urlType the type of URL to be set
 */","* (Optional; PDF 1.7) A name indicating the usage of the URL entry. There are standard uses and
     * there can be implementation-specific uses for this URL. The following value specifies a valid
     * standard usage:
     * <ul>
     * <li>Browser, The URL references content that should be displayed in a web browser to allow
     * enrolling for a new credential if a matching credential is not found. The Ff attribute’s URL
     * bit is ignored for this usage.</li>
     * <li>ASSP, The URL references a signature web service that can be used for server-based
     * signing. If the Ff attribute’s URL bit indicates that this is a required constraint, this
     * implies that the credential used when signing must come from this server.</li>
     * </ul>
     * Third parties can extend the use of this attribute with their own attribute values, which
     * must conform to the guidelines specified in
     * <a href=""http://www.adobe.com/content/dam/acom/en/devnet/pdf/PDF32000_2008.pdf#page=681"">PDF
     * Spec 1.7 Appendix E (PDF Name Registry)</a>
     * if urlType is not set the default is Browser for URL
     *
     * @param urlType String of the urlType",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(),33,36,"/**
* Initializes a new PDF document outline.
* Sets the type to ""Outlines"" in the underlying COS object.
*/",* Default Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDDocumentOutline.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDDocumentOutline:<init>(org.apache.pdfbox.cos.COSDictionary),43,47,"/**
* Initializes a new PDDocumentOutline from a COSDictionary.
* @param dic dictionary containing outline data
*/","* Constructor for an existing document outline.
     *
     * @param dic The storage dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setDefaultValue(java.lang.String),217,221,"/**
* Sets default value for COS object.
* @param value default string value to be set
*/","* Sets the default value.
     *
     * @param value Name of option to select
     * @throws IllegalArgumentException if the value is not a valid option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByValue(java.lang.String),389,410,"/**
 * Updates field value and appearance state.
 * @param value new value for the field
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:<init>(),39,43,"/**
* Initializes a new PDMeasureDictionary with a COSDictionary.
* Sets the type to ""Measure"".
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDMeasureDictionary.java,setSubtype,org.apache.pdfbox.pdmodel.interactive.measurement.PDMeasureDictionary:setSubtype(java.lang.String),92,95,"/**
 * Sets the subtype of the COS object.
 * @param subtype the subtype to be set
 */","* This will set the subtype of the measure dictionary.
     * @param subtype the subtype of the measure dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:<init>(),66,70,"/**
 * Initializes a new number format dictionary.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDViewportDictionary.java,setName,org.apache.pdfbox.pdmodel.interactive.measurement.PDViewportDictionary:setName(java.lang.String),115,118,"/**
 * Sets the name of the COSObject.
 * @param name the new name to set
 */","* This will set the name of the viewport.
    *  
    * @param name the name of the viewport",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionStyle),49,54,"/**
* Creates a new transition with the specified style.
* @param style the transition effect style
*/","* creates a new transition with the given style.
     * 
     * @param style the style to be used to create the new transition",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setDimension,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setDimension(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionDimension),91,94,"/**
* Sets the transition dimension.
* @param dimension the new transition dimension to be set
*/","* Sets the dimension in which the specified transition effect shall occur. Only for {@link PDTransitionStyle#Split}
     * and {@link PDTransitionStyle#Blinds}.
     * 
     * @param dimension the dimension in which the specified transition effect shall occur",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,setMotion,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:setMotion(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransitionMotion),112,115,"/**
 * Sets the transition motion.
 * @param motion the transition motion to apply
 */","* Sets the direction of motion for the specified transition effect. Only for {@link PDTransitionStyle#Split},
     * {@link PDTransitionStyle#Blinds} and {@link PDTransitionStyle#Fly}.
     * 
     * @param motion the direction of motion for the specified transition effect",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setNonFullScreenPageMode,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setNonFullScreenPageMode(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$NON_FULL_SCREEN_PAGE_MODE),298,301,"/**
* Sets non-full screen page mode.
* @param value the mode to be set
*/","* Set the non full screen page mode preference.
     *
     * @param value Set the non full screen page mode preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setReadingDirection,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setReadingDirection(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$READING_DIRECTION),318,321,"/**
* Sets the reading direction preference.
* @param value the desired reading direction
*/","* Set the reading direction preference.
     *
     * @param value Set the reading direction preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),338,341,"/**
* Sets the view area preference.
* @param value boundary value to define the view area
*/","* Set the ViewArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewArea preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setViewClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setViewClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),358,361,"/**
* Sets the view clipping boundary.
* @param value the new clipping boundary to apply
*/","* Set the ViewClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the ViewClip preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintArea,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintArea(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),378,381,"/**
* Sets the print area boundary.
* @param value boundary value to be set
*/","* Set the PrintArea preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintArea preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintClip,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintClip(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$BOUNDARY),398,401,"/**
* Sets print clipping boundary.
* @param value boundary value to be set
*/","* Set the PrintClip preference.  See BOUNDARY enumeration.
     *
     * @param value Set the PrintClip preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setDuplex,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setDuplex(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$DUPLEX),418,421,"/**
* Sets duplex printing preference.
* @param value duplex mode to be set
*/","* Set the Duplex preference.  See DUPLEX enumeration.
     *
     * @param value Set the Duplex preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/viewerpreferences/PDViewerPreferences.java,setPrintScaling,org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences:setPrintScaling(org.apache.pdfbox.pdmodel.interactive.viewerpreferences.PDViewerPreferences$PRINT_SCALING),438,441,"/**
 * Sets the print scaling preference.
 * @param value the desired print scaling option
 */","* Set the PrintScaling preference.  See PRINT_SCALING enumeration.
     *
     * @param value Set the PrintScaling preference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(org.apache.pdfbox.cos.COSName,java.util.Calendar)",327,330,"/**
 * Sets a date value in the PDF document.
 * @param key the COSName key to associate with the date
 * @param date the Calendar object representing the date
 */","* Set the date object.
     *
     * @param key The key to the date.
     * @param date The date to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setString,"org.apache.pdfbox.cos.COSDictionary:setString(java.lang.String,java.lang.String)",360,363,"/**
* Sets a string value in the PDF dictionary.
* @param key the key under which to store the value
* @param value the string value to store
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedString,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedString(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.lang.String)",390,402,"/**
* Sets a string value in an embedded dictionary.
* @param embedded the name of the embedded dictionary
* @param key the key under which to store the value
* @param value the string value to set
*/","* This is a convenience method that will convert the value to a COSString object. If it is null then the object
     * will be removed.
     *
     * @param embedded The embedded dictionary to set the item in.
     * @param key The key to the object,
     * @param value The string value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setLanguage,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setLanguage(java.lang.String),589,592,"/**
 * Sets the document's language.
 * @param language ISO 639-1 language code (e.g., ""en"" for English)
 */","* Sets the Language for the document.
     *
     * @param language The new document language.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setTitle,org.apache.pdfbox.pdmodel.PDDocumentInformation:setTitle(java.lang.String),100,103,"/**
 * Sets the document's title.
 * @param title the new title for the document
 */","* This will set the title of the document.
     *
     * @param title The new title for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setAuthor,org.apache.pdfbox.pdmodel.PDDocumentInformation:setAuthor(java.lang.String),120,123,"/**
 * Sets the document's author.
 * @param author name of the document author
 */","* This will set the author of the document.
     *
     * @param author The new author for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setSubject,org.apache.pdfbox.pdmodel.PDDocumentInformation:setSubject(java.lang.String),140,143,"/**
 * Sets document subject.
 * @param subject document subject string
 */","* This will set the subject of the document.
     *
     * @param subject The new subject for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setKeywords,org.apache.pdfbox.pdmodel.PDDocumentInformation:setKeywords(java.lang.String),160,163,"/**
 * Sets document keywords.
 * @param keywords comma-separated list of keywords
 */","* This will set the keywords of the document.
     *
     * @param keywords The new keywords for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreator,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreator(java.lang.String),180,183,"/**
* Sets the document creator.
* @param creator name of the document creator
*/","* This will set the creator of the document.
     *
     * @param creator The new creator for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setProducer,org.apache.pdfbox.pdmodel.PDDocumentInformation:setProducer(java.lang.String),200,203,"/**
* Sets the PDF producer.
* @param producer name of the producer application
*/","* This will set the producer of the document.
     *
     * @param producer The new producer for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setPrefix,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setPrefix(java.lang.String),174,184,"/**
 * Sets or removes the prefix in the root configuration.
 * @param prefix the new prefix to set, or null to remove it
 */","* Sets the page label prefix for this page range.
     * 
     * @param prefix
     *            the page label prefix for this page range, or {@code null} to
     *            unset the prefix.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileUnicode,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileUnicode(java.lang.String),140,143,"/**
 * Sets the Unicode filename.
 * @param file Unicode filename to be set
 */","* This will set the unicode file name. If you call this, then do not forget to also call
     * {@link #setFile(java.lang.String) setFile(String)} or the attachment will not be visible on
     * some viewers.
     *
     * @param file The name of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFile,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFile(java.lang.String),163,167,"/**
 * Sets the file path in the PDF document.
 * @param file the path to the file
 */","* This will set the file name. You should also call
     * {@link #setFileUnicode(java.lang.String) setFileUnicode(String)} for cross-platform and
     * cross-language compatibility.
     *
     * @param file The name of the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDComplexFileSpecification.java,setFileDescription,org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification:setFileDescription(java.lang.String),343,346,"/**
 * Sets the file description.
 * @param description the description to be set
 */","* Set the file description.
     * 
     * @param description The file description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setElementIdentifier,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setElementIdentifier(java.lang.String),127,130,"/**
 * Sets the identifier for the element.
 * @param id unique identifier string
 */","* Sets the element identifier (ID).
     * 
     * @param id the element identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setTitle,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setTitle(java.lang.String),512,515,"/**
 * Sets the document title.
 * @param title new title for the document
 */","* Sets the title (T).
     * 
     * @param title the title",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setLanguage,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setLanguage(java.lang.String),532,535,"/**
 * Sets the language attribute in the COS object.
 * @param language the language to be set
 */","* Sets the language (Lang).
     * 
     * @param language the language",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setAlternateDescription,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setAlternateDescription(java.lang.String),552,555,"/**
* Sets an alternate description.
* @param alternateDescription alternative text description
*/","* Sets the alternate description (Alt).
     * 
     * @param alternateDescription the alternate description",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setExpandedForm,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setExpandedForm(java.lang.String),572,575,"/**
* Sets the expanded form of the object.
* @param expandedForm string representing the expanded form
*/","* Sets the expanded form (E).
     * 
     * @param expandedForm the expanded form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setActualText,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setActualText(java.lang.String),592,595,"/**
* Sets the actual text for a PDF annotation.
* @param actualText the text to be displayed
*/","* Sets the actual text (ActualText).
     * 
     * @param actualText the actual text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDUserProperty.java,setFormattedValue,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDUserProperty:setFormattedValue(java.lang.String),115,119,"/**
* Sets the formatted value and notifies of change if different.
* @param formattedValue new formatted string value to set
*/","* Sets the string for the property value.
     * 
     * @param formattedValue the string for the property value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setDate(java.lang.String),492,495,"/**
 * Sets the modification date.
 * @param date the new modification date as a string
 */","* The annotation modification date.
     *
     * @param date The date to store in the FDF annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setName(java.lang.String),702,705,"/**
 * Sets the name of an annotation.
 * @param name the new name to set
 */","* Set a unique name for an annotation.
     *
     * @param name The unique annotation name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setContents(java.lang.String),743,746,"/**
 * Sets the annotation's content text.
 * @param contents the text to be set as the annotation's content
 */","* Set the contents, or a description, for an annotation.
     *
     * @param contents The annotation contents, or a description.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setTitle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setTitle(java.lang.String),763,766,"/**
 * Sets the title of an annotation.
 * @param title the new title for the annotation
 */","* Set a unique title for an annotation.
     *
     * @param title The annotation title.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setSubject,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setSubject(java.lang.String),826,829,"/**
 * Sets the document's subject.
 * @param subject the subject to be set
 */","* A short description of the annotation.
     *
     * @param subject The annotation subject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,setSymbol,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:setSymbol(java.lang.String),126,134,"/**
* Sets the annotation symbol.
* @param symbol the type of symbol to set (""paragraph"" or other)
*/","* This will set the symbol that shall be associated with the caret.
     * 
     * @param symbol the symbol",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultAppearance(java.lang.String),217,220,"/**
 * Sets the default appearance string.
 * @param appearance appearance string to be set
 */","* Set the default appearance string.
     *
     * @param appearance The new default appearance string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setDefaultStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setDefaultStyle(java.lang.String),238,241,"/**
 * Sets the default style for annotations.
 * @param style the style to be applied
 */","* Set the default style string.
     *
     * @param style The new default style string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setCaptionStyle,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setCaptionStyle(java.lang.String),376,379,"/**
 * Sets the caption style.
 * @param captionStyle the style to be applied to captions
 */","* This will set the caption positioning. Allowed values are: ""Inline"" and ""Top""
     * 
     * @param captionStyle caption positioning",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setState,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setState(java.lang.String),123,126,"/**
 * Sets the state of an annotation.
 * @param state the new state value to set
 */","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:setStateModel(java.lang.String),143,146,"/**
 * Sets the state model.
 * @param stateModel the state model to set
 */","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setStatus,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setStatus(java.lang.String),366,369,"/**
* Sets the document's status.
* @param status new status string to be set
*/","* This will set the status string.
     *
     * @param status The new status string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,setTarget,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:setTarget(java.lang.String),499,502,"/**
 * Sets the target string for the PDF document.
 * @param target the target destination as a string
 */","* This will set the target frame in the browser to open this document.
     *
     * @param target The new target frame.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setPartialFieldName,org.apache.pdfbox.pdmodel.fdf.FDFField:setPartialFieldName(java.lang.String),221,224,"/**
 * Sets the partial field name.
 * @param partial the partial field name to be set
 */","* This will set the partial field name.
     *
     * @param partial The partial field name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,setName,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:setName(java.lang.String),79,82,"/**
 * Sets the name attribute in the COS dictionary.
 * @param name the new name to be set
 */","* This will set the name of the referenced page.
     *
     * @param name The referenced page name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setInfo,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setInfo(java.lang.String),73,76,"/**
 * Sets the document information.
 * @param value string containing document info
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputCondition,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputCondition(java.lang.String),83,86,"/**
 * Sets the output condition in the dictionary.
 * @param value the output condition string to be set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setOutputConditionIdentifier,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setOutputConditionIdentifier(java.lang.String),93,96,"/**
 * Sets the output condition identifier.
 * @param value identifier string to be set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDOutputIntent.java,setRegistryName,org.apache.pdfbox.pdmodel.graphics.color.PDOutputIntent:setRegistryName(java.lang.String),103,106,"/**
 * Sets the registry name in the dictionary.
 * @param value the registry name to be set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,setName,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:setName(java.lang.String),110,113,"/**
 * Sets the name in the dictionary.
 * @param name the name to be set
 */","* Sets the name of the optional content group.
     * @param name the name",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:<init>(),87,97,"/**
* Initializes PDOptionalContentProperties with default settings.
*/",* Creates a new optional content properties dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getD,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getD(),126,138,"/**
* Retrieves or creates the D dictionary in a COSDictionary.
* @return The D dictionary, creating it if necessary with default settings.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,setAction,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:setAction(java.lang.String),69,72,"/**
 * Sets the JavaScript action.
 * @param sAction JavaScript code to be executed
 */",* @param sAction The JavaScript.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setF,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setF(java.lang.String),131,134,"/**
 * Sets the file path.
 * @param f file path as a string
 */","* This will set the file name to be launched or the document to be opened
     * or printed, in standard Windows pathname format. If the name string includes
     * a backslash character (\), the backslash must itself be preceded by a backslash.
     * This value must be a single string; it is not a file specification.
     *
     * @param f The file name to be launched.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setD,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setD(java.lang.String),151,154,"/**
 * Sets the 'D' attribute in the action.
 * @param d value to be set for the 'D' attribute
 */","* This will set the string specifying the default directory in standard DOS syntax.
     *
     * @param d The default directory.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setO,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setO(java.lang.String),179,182,"/**
 * Sets the ""O"" string in the action.
 * @param o the value to be set
 */","* This will set the string specifying the operation to perform:
     * open to open a document
     * print to print a document
     * If the F entry designates an application instead of a document, this entry
     * is ignored and the application is launched. Default value: open.
     *
     * @param o The operation to perform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,setP,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:setP(java.lang.String),201,204,"/**
 * Sets the print permission.
 * @param p permission string to be set
 */","* This will set a parameter string to be passed to the application designated by the F entry.
     * This entry should be omitted if F designates a document.
     *
     * @param p The parameter string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,setURI,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:setURI(java.lang.String),92,95,"/**
 * Sets the URI for an action.
 * @param uri the new URI to be set
 */","* This will set the uniform resource identifier to resolve, encoded in
     * 7-bit ASCII.
     *
     * @param uri The uniform resource identifier.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setFilename(java.lang.String),114,117,"/**
 * Sets the filename in the dictionary.
 * @param filename the name of the file to be set
 */","* Sets the name of the file as found in the EmbeddedFiles name tree. This is only to be used if
     * the target is a child of the current document.
     *
     * @param filename a filename or null if the entry is to be deleted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationName(java.lang.String),252,255,"/**
 * Sets the annotation's name.
 * @param name the name to be assigned to the annotation
 */","* This will get the value of the /NM entry in the annotation dictionary.
     *
     * @param name the /NM value of an annotation dictionary or null if the entry is to be removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setFilename,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setFilename(java.lang.String),89,92,"/**
 * Sets the filename in the PDF document parameters.
 * @param file the name of the file to be set
 */","* Set the file to launch.
     *
     * @param file The executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setDirectory,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setDirectory(java.lang.String),109,112,"/**
 * Sets the directory path.
 * @param dir directory path to be set
 */","* Set the dir to launch from.
     *
     * @param dir The dir of the executable/document to launch.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setOperation,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setOperation(java.lang.String),132,135,"/**
 * Sets the operation string in parameters.
 * @param op the operation to be set
 */","* Set the operation to perform..
     *
     * @param op The operation to perform on the file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDWindowsLaunchParams.java,setExecuteParam,org.apache.pdfbox.pdmodel.interactive.action.PDWindowsLaunchParams:setExecuteParam(java.lang.String),152,155,"/**
 * Sets execution parameter.
 * @param param parameter value to be set
 */","* Set the parameter to pass the executable.
     *
     * @param param The parameter for the executable.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setContents(java.lang.String),616,619,"/**
 * Sets the contents of the document.
 * @param value the content string to be set
 */","* Set the ""contents"" of the field.
     * 
     * @param value the value of the contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.lang.String),640,643,"/**
 * Sets the modified date of the PDF document.
 * @param m date string to be set
 */","* This will set the date and time the annotation was modified.
     *
     * @param m the date and time the annotation was created. Date values used in a PDF shall
     * conform to a standard date format, which closely follows that of the international standard
     * ASN.1 (Abstract Syntax Notation One), defined in ISO/IEC 8824. A date shall be a text string
     * of the form (D:YYYYMMDDHHmmSSOHH'mm). Alternatively, use
     * {@link #setModifiedDate(java.util.Calendar)}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationName,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationName(java.lang.String),672,675,"/**
 * Sets the annotation name.
 * @param nm the new annotation name
 */","* This will set the name, a string intended to uniquely identify each annotation within a page. Not to be confused
     * with some annotations Name entry which impact the default image drawn for them.
     * 
     * @param nm The identifying name for the annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultAppearance(java.lang.String),86,89,"/**
* Sets default appearance value.
* @param daValue default appearance string to be set
*/","* Set the default appearance.
     *
     * @param daValue a string describing the default appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setDefaultStyleString,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setDefaultStyleString(java.lang.String),110,113,"/**
* Sets the default style string in the COS object.
* @param defaultStyleString the style string to be set
*/","* Set the default style string.
     *
     * Providing null as the value will remove the default style string.
     *
     * @param defaultStyleString a string describing the default style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setTitlePopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setTitlePopup(java.lang.String),83,86,"/**
 * Sets the title of a popup.
 * @param t the title string to set
 */","* Set the string used as the title of the popup window shown when open and active (by convention this identifies
     * who added the annotation).
     *
     * @param t The title of the popup.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setSubject,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setSubject(java.lang.String),220,223,"/**
 * Sets the subject of the document.
 * @param subj the subject string to be set
 */","* This will set the short description of the subject of the annotation.
     *
     * @param subj short description of the subject.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setState,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setState(java.lang.String),198,201,"/**
 * Sets the state of the COS object.
 * @param state new state value to set
 */","* This will set the annotation state.
     * 
     * @param state the annotation state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,setStateModel,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:setStateModel(java.lang.String),218,221,"/**
* Sets the state model of the COS object.
* @param stateModel the state model to be set
*/","* This will set the annotation state model. Allowed values are ""Marked"" and ""Review""
     * 
     * @param stateModel the annotation state model",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setNormalCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setNormalCaption(java.lang.String),136,139,"/**
* Sets the normal text caption.
* @param caption the caption string to be set
*/","* This will set the normal caption.
     * 
     * @param caption the normal caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRolloverCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRolloverCaption(java.lang.String),156,159,"/**
* Sets the rollover caption for an object.
* @param caption text to display on rollover
*/","* This will set the rollover caption.
     * 
     * @param caption the rollover caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setAlternateCaption,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setAlternateCaption(java.lang.String),176,179,"/**
 * Sets an alternate caption.
 * @param caption the new alternate caption text
 */","* This will set the alternate caption.
     * 
     * @param caption the alternate caption",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setDate(java.lang.String),103,106,"/**
 * Sets the date in the dictionary.
 * @param date the date string to set
 */","* The build date of the software module. This string is normally produced by the compiler.
     *
     * @param date is the build date of the software module",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURL(java.lang.String),577,580,"/**
 * Sets the URL in the dictionary.
 * @param url the URL to be stored
 */","* (Optional) A URL, the use for which is defined by the URLType entry.
     *
     * @param url String of the URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setURL,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setURL(java.lang.String),76,79,"/**
 * Sets the URL in the dictionary.
 * @param url the URL to be set
 */","* Sets the URL.
     * @param url the URL to be set as URL",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setName,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setName(java.lang.String),154,157,"/**
 * Sets the name in the dictionary.
 * @param name the new name to be set
 */","* Sets the name of the person or authority signing the document. According to the PDF
     * specification, this value should be used only when it is not possible to extract the name
     * from the signature.
     *
     * @param name the name to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setLocation,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setLocation(java.lang.String),164,167,"/**
* Sets the document's location.
* @param location the location string to set
*/","* Sets the CPU host name or physical location of the signing.
     *
     * @param location the location to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setReason,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setReason(java.lang.String),174,177,"/**
 * Sets the reason for an action.
 * @param reason description of the action's purpose
 */","* Sets the reason for the signing, such as (I agree...).
     *
     * @param reason the reason to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setContactInfo,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setContactInfo(java.lang.String),185,188,"/**
* Sets the contact information.
* @param contactInfo the contact details to be stored
*/","* Sets the contact info provided by the signer to enable a recipient to contact the signer to
     * verify the signature, e.g. a phone number.
     *
     * @param contactInfo the contact info to be used",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setTitle,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setTitle(java.lang.String),175,178,"/**
 * Sets the title of the PDF document.
 * @param title the new title to be set
 */","* Set the title for this node.
     *
     * @param title The new title for this node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setDefaultAppearance(java.lang.String),510,513,"/**
 * Sets default appearance value in dictionary.
 * @param daValue default appearance string to be set
 */","* Set the default appearance.
     * 
     * @param daValue a string describing the default appearance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDefaultValue(java.lang.String),390,393,"/**
 * Sets default value for a field.
 * @param value the default value to be set
 */","* Sets the default value of this field.
     *
     * @param value The name of the selected item.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setPartialName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setPartialName(java.lang.String),391,399,"/**
* Sets the partial name for a dictionary entry.
* @param name the partial name to set; must not contain a period
*/","* This will set the partial name of the field.
     * 
     * @param name The new name for the field.
     * @throws IllegalArgumentException If the name contains a period character.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setAlternateFieldName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setAlternateFieldName(java.lang.String),444,447,"/**
 * Sets the alternate field name.
 * @param alternateFieldName the new alternate field name to be set
 */","* This will set the alternate name of the field (""shall be used in place of the actual field
     * name wherever the field shall be identified in the user interface (such as in error or status
     * messages referring to the field)""). The text appears as a tool tip in Adobe Reader. Because
     * of the usage for error or status messages, it should be different for each field.
     *
     * @param alternateFieldName the alternate name of the field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setMappingName,org.apache.pdfbox.pdmodel.interactive.form.PDField:setMappingName(java.lang.String),467,470,"/**
 * Sets the mapping name in the dictionary.
 * @param mappingName the name to be mapped
 */","* This will set the mapping name of the field.
     * 
     * @param mappingName the mapping name of the field",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:setValue(java.lang.String),227,233,"/**
* Sets the string value of a PDF field.
* @param value the new string value for the field
*/","* Sets the plain text value of this field.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setValue(java.lang.String),214,219,"/**
* Sets the value of the COS object.
* @param value the new value to set
* @throws IOException if an I/O error occurs
*/","* Set the plain text value of this field, and try to update the visual appearance.
     * 
     * @param value Plain text
     * @throws IOException if the value could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDefaultValue,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDefaultValue(java.lang.String),226,229,"/**
 * Sets default value for COS object.
 * @param value default string value to be set
 */","* Sets the default value of this field.
     *
     * @param value Plain text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setDefaultAppearance,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setDefaultAppearance(java.lang.String),128,144,"/**
* Sets default appearance for annotations.
* @param daValue the new default appearance string
*/","* Set the default appearance.
     * 
     * This will set the local default appearance for the variable text field only, not 
     * affecting a default appearance in the parent hierarchy.
     * 
     * Providing null as the value will remove the local default appearance.
     * <p>
     * This method can also be used to change the font of a field, by replacing the font name from
     * this string with another font name found in the AcroForm default resources <u>before</u>
     * calling {@link #setValue(java.lang.String) setValue(String)}, see also
     * <a href=""https://stackoverflow.com/questions/47995062/pdfbox-api-how-to-handle-cyrillic-values"">this
     * stackoverflow answer</a>. For example, ""/Helv 10 Tf 0 g"" can be replaced with ""/F1 10 Tf 0
     * g"". Performance may go down (see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4508"">PDFBOX-4508)</a> if this is done
     * for many fields and with a very large font (e.g. ArialUni); to avoid this, save and reload
     * the file after changing all fields.
     *
     * @param daValue a string describing the default appearance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setScaleRatio,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setScaleRatio(java.lang.String),68,71,"/**
* Sets the scale ratio in the COS object.
* @param scaleRatio the scaling ratio as a string
*/","* This will set the scale ration.
     * 
     * @param scaleRatio the scale ratio.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setInt,"org.apache.pdfbox.cos.COSDictionary:setInt(java.lang.String,int)",410,413,"/**
 * Sets an integer value in PDF document.
 * @param key the key associated with the integer value
 * @param value the integer value to be set
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedInt,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedInt(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,int)",456,465,"/**
 * Sets an integer value in a nested dictionary.
 * @param embeddedDictionary name of the embedded dictionary
 * @param key name of the key to set
 * @param value integer value to store
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param embeddedDictionary The embedded dictionary.
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFlag,"org.apache.pdfbox.cos.COSDictionary:setFlag(org.apache.pdfbox.cos.COSName,int,boolean)",497,509,"/**
* Sets a specific bit flag for a given field.
* @param field the COSName representing the field
* @param bitFlag the bit flag to set or clear
* @param value true to set the flag, false to clear it
*/","* Sets the given boolean value at bitPos in the flags.
     *
     * @param field The COSName of the field to set the value into.
     * @param bitFlag the bit position to set the value in.
     * @param value the value the bit position should have.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,readJPX,"org.apache.pdfbox.filter.JPXFilter:readJPX(java.io.InputStream,org.apache.pdfbox.filter.DecodeOptions,org.apache.pdfbox.filter.DecodeResult)",116,203,"/**
* Reads a JPEG 2000 (JPX) image from an input stream.
* @param input the input stream containing the JPX data
* @param options decoding options for the image
* @param result object to store additional information about the decoded image
* @return BufferedImage object of the decoded image
* @throws IOException if an I/O error occurs during reading
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPagesDictionary,"org.apache.pdfbox.pdfparser.COSParser:checkPagesDictionary(org.apache.pdfbox.cos.COSDictionary,java.util.Set)",955,999,"/**
* Recursively checks and counts pages in a PDF dictionary.
* @param pagesDict PDF dictionary containing page information
* @param set set of processed COSObjects to avoid cycles
* @return number of pages found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setStructParents,org.apache.pdfbox.pdmodel.PDPage:setStructParents(int),376,379,"/**
 * Sets the number of structure parent objects.
 * @param structParents count of structure parent objects
 */","* This will set the key for this page in the structural parent tree.
     * 
     * @param structParents The new key for this page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setRotation,org.apache.pdfbox.pdmodel.PDPage:setRotation(int),602,605,"/**
* Sets the rotation of a PDF page.
* @param rotation angle in degrees (0, 90, 180, or 270)
*/","* This will set the rotation for this page.
     * 
     * @param rotation The new rotation for this page in degrees.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,"org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.PDDocument)",79,99,"/**
* Initializes a PDPageTree with a given root dictionary and document.
* @param root the COSDictionary representing the page tree root
* @param document the PDDocument containing this page tree
*/","* Constructor for reading.
     *
     * @param root A page tree root.
     * @param document The document which contains ""root"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.cos.COSDictionary),473,491,"/**
* Removes a node from the PDF structure.
* @param node the COSDictionary node to remove
*/",* Removes the given COS page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,add,org.apache.pdfbox.pdmodel.PDPageTree:add(org.apache.pdfbox.pdmodel.PDPage),498,520,"/**
 * Adds a page to the PDF document.
 * @param page PDPage object to be added
 */","* Adds the given page to this page tree.
     * 
     * @param page The page to add.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,increaseParents,org.apache.pdfbox.pdmodel.PDPageTree:increaseParents(org.apache.pdfbox.cos.COSDictionary),586,595,"/**
* Recursively increments the count of parents in a dictionary.
* @param parentDict starting dictionary containing parent information
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabelRange.java,setStart,org.apache.pdfbox.pdmodel.common.PDPageLabelRange:setStart(int),146,154,"/**
* Sets the starting index for pagination.
* @param start positive integer representing the starting index
*/","* Sets the start value for page numbering in this page range.
     * 
     * @param start
     *            a positive integer representing the start value.
     * @throws IllegalArgumentException
     *             if {@code start} is not a positive integer",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,setBitsPerSample,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:setBitsPerSample(int),134,137,"/**
* Sets bits per sample in COS object.
* @param bps number of bits per sample
*/","* Set the number of bits that the output value will take up. Valid values
     * are 1,2,4,8,12,16,24,32.
     *
     * @param bps The number of bits for each output value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDMarkedContentReference.java,setMCID,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDMarkedContentReference:setMCID(int),99,102,"/**
* Sets the MCID value for the COS object.
* @param mcid the Marked Content Identifier to be set
*/","* Sets the marked content identifier.
     * 
     * @param mcid the marked content identifier",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,setRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:setRevisionNumber(int),480,487,"/**
* Sets the revision number for a COS object.
* @param revisionNumber non-negative integer representing the revision number
*/","* Sets the revision number (R).
     * 
     * @param revisionNumber the revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setParentTreeNextKey,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setParentTreeNextKey(int),166,169,"/**
 * Sets the next key in the parent tree.
 * @param parentTreeNextkey the new value for the next key
 */","* Sets the next key in the parent tree. This is a number greater than any existing key, and
     * which shall be used for the next entry to be added to the tree.
     * 
     * @param parentTreeNextkey The next key in the parent tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDCryptFilterDictionary.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary:setLength(int),73,76,"/**
 * Sets the length in the cryptographic filter dictionary.
 * @param length the new length value to be set
 */","* This will set the number of bits to use for the crypt filter algorithm.
     *
     * @param length The new key length.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setVersion,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setVersion(int),192,195,"/**
* Sets the version of the dictionary.
* @param version the new version number to be set
*/","* This will set the V entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.13.  <br><br>
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param version The new encryption version.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setLength,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setLength(int),213,216,"/**
 * Sets the length of the dictionary.
 * @param length new length value to be set
 */","* This will set the number of bits to use for the encryption algorithm.
     *
     * @param length The new key length.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setRevision,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setRevision(int),238,241,"/**
 * Sets the document revision number.
 * @param revision new revision number to be set
 */","* This will set the R entry of the encryption dictionary.<br><br>
     * See PDF Reference 1.4 Table 3.14.  <br><br>
     *
     * <b>Note: This value is used to decrypt the pdf document.  If you change this when
     * the document is encrypted then decryption will fail!.</b>
     *
     * @param revision The new encryption version.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setPermissions,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setPermissions(int),397,400,"/**
 * Sets document permissions.
 * @param permissions permission flags as integer
 */","* This will set the permissions bit mask.
     *
     * @param permissions The new permissions bit mask",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPage,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPage(int),437,440,"/**
 * Sets the current page number.
 * @param page the page number to set
 */","* This will set the page.
     *
     * @param page The page number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setJustification,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setJustification(java.lang.String),168,180,"/**
* Sets text justification for annotations.
* @param justification ""left"", ""centered"", or ""right""
*/","* This will set the form of quadding (justification) of the annotation text.
     * 
     * @param justification The quadding of the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,setRotation,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:setRotation(int),197,200,"/**
 * Sets the rotation of an annotation.
 * @param rotation degrees to rotate (0, 90, 180, or 270)
 */","* This will set the clockwise rotation in degrees.
     * 
     * @param rotation The number of degrees of clockwise rotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setFieldFlags(int),364,367,"/**
 * Sets field flags.
 * @param ff integer representing field flags
 */","* This will set the field flags that are associated with this field.
     * The 'Ff' entry in the FDF field dictionary.
     *
     * @param ff The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetFieldFlags(int),408,411,"/**
 * Sets field flags in COSName.
 * @param ff integer representing field flags
 */","* This will set the field flags that are associated with this field.
     * The 'SetFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearFieldFlags(int),452,455,"/**
 * Sets clear field flags.
 * @param ff flag value to set
 */","* This will set the field flags that are associated with this field.
     * The 'ClrFf' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setWidgetFieldFlags(int),496,499,"/**
* Sets widget field flags.
* @param f flag value to be set
*/","* This will set the field flags that are associated with this field.
     * The 'F' entry in the FDF field dictionary.
     *
     * @param f The new value for the field flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setSetWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setSetWidgetFieldFlags(int),540,543,"/**
 * Sets widget field flags.
 * @param ff flag values to be set
 */","* This will set the widget field flags that are associated with this field.
     * The 'SetF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""set widget field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,setClearWidgetFieldFlags,org.apache.pdfbox.pdmodel.fdf.FDFField:setClearWidgetFieldFlags(int),584,587,"/**
 * Sets widget field flags.
 * @param ff integer representing field flags
 */","* This will set the field flags that are associated with this field.
     * The 'ClrF' entry in the FDF field dictionary.
     *
     * @param ff The new value for the ""clear field flags"".",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,toCIDSystemInfo,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:toCIDSystemInfo(java.lang.String,java.lang.String,int)",181,188,"/**
* Creates a CIDSystemInfo dictionary.
* @param registry system registry name
* @param ordering system ordering name
* @param supplement system supplement number
* @return COSDictionary representing CIDSystemInfo
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDSystemInfo.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDSystemInfo:<init>(java.lang.String,java.lang.String,int)",34,40,"/**
* Initializes PDCIDSystemInfo with registry, ordering, and supplement.
* @param registry the registry name
* @param ordering the ordering value
* @param supplement the supplement number
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlags,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlags(int),400,404,"/**
* Sets document flags.
* @param flags flag values to be set
*/","* This will set the font flags.
     *
     * @param flags The new font flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,setWidths,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:setWidths(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.font.encoding.GlyphList)",76,116,"/**
* Sets character widths in a PDF font dictionary.
* @param font the font dictionary to update
* @param glyphList mapping of glyph names to Unicode
* @throws IOException if an I/O error occurs
*/",* Sets the glyph widths in the font dictionary.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,prepareImageXObject,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:prepareImageXObject(org.apache.pdfbox.pdmodel.PDDocument,byte[],int,int,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",137,155,"/**
 * Prepares an image XObject for a PDF document.
 * @param document the PDF document to add the image to
 * @param byteArray the byte array containing image data
 * @param width the width of the image in pixels
 * @param height the height of the image in pixels
 * @param initColorSpace the color space for the image
 * @return a PDImageXObject representing the encoded image
 * @throws IOException if an I/O error occurs during encoding or creation
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,extractFromTiff,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:extractFromTiff(org.apache.pdfbox.io.RandomAccessRead,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",235,455,"/**
 * Extracts data from a TIFF file.
 * @param reader input stream for reading the TIFF file
 * @param os output stream to write extracted data
 * @param params dictionary to store TIFF parameters
 * @param number page number to extract
 * @throws IOException if an I/O error occurs or TIFF is invalid
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setBitsPerComponent(int),124,128,"/**
* Sets bits per color component.
* @param bitsPerComponent number of bits per component
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setHeight,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setHeight(int),211,215,"/**
 * Sets the height parameter.
 * @param height new height value to be set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,setWidth,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:setWidth(int),223,227,"/**
 * Sets the width parameter.
 * @param width new width value to be set
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPaintType(int),100,103,"/**
 * Sets the paint type.
 * @param paintType the paint type to be set
 */","* This will set the paint type.
     * @param paintType The new paint type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDAbstractPattern.java,setPatternType,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern:setPatternType(int),118,121,"/**
 * Sets the pattern type.
 * @param patternType the type of pattern to be set
 */","* This will set the pattern type.
     * @param patternType The new pattern type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setPaintType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setPaintType(int),100,104,"/**
* Sets the paint type for the object.
* @param paintType the type of painting to apply
*/","* This will set the paint type.
     * @param paintType The new paint type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setTilingType,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setTilingType(int),119,122,"/**
* Sets the tiling type.
* @param tilingType the tiling type value to set
*/","* This will set the tiling type.
     * @param tilingType The new tiling type.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,setShadingType,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:setShadingType(int),125,128,"/**
 * Sets the shading type in the dictionary.
 * @param shadingType the type of shading to apply
 */","* This will set the shading type.
     *
     * @param shadingType the new shading type",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType4.java,setBitsPerFlag,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerFlag(int),79,82,"/**
* Sets the number of bits per flag.
* @param bitsPerFlag the number of bits to be set for each flag
*/","* Set the number of bits per flag.
     *
     * @param bitsPerFlag the number of bits per flag",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShadingType5.java,setVerticesPerRow,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setVerticesPerRow(int),75,78,"/**
* Sets the number of vertices per row.
* @param verticesPerRow the number of vertices to be set
*/","* Set the number of vertices per row.
     *
     * @param verticesPerRow the number of vertices per row",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerComponent(int),75,79,"/**
* Sets the number of bits per color component.
* @param bitsPerComponent number of bits for each color component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDTriangleBasedShadingType:setBitsPerCoordinate(int),102,106,"/**
* Sets the number of bits per coordinate.
* @param bitsPerCoordinate number of bits to set
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineCapStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineCapStyle(int),252,255,"/**
* Sets line cap style.
* @param style line cap style to be set
*/","* This will set the line cap style for the graphics state.
     *
     * @param style The new line cap style to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineJoinStyle,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineJoinStyle(int),272,275,"/**
 * Sets line join style.
 * @param style join style to be applied
 */","* This will set the line join style.
     *
     * @param style The new line join style.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setOverprintMode,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setOverprintMode(java.lang.Integer),420,430,"/**
* Sets the overprint mode.
* @param overprintMode the new overprint mode value or null to remove it
*/","* This will set the overprint mode(OPM).
     *
     * @param overprintMode The overprint mode",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:setFlags(int),85,88,"/**
 * Sets action flags.
 * @param flags integer representing action flags
 */",* @param flags the flags,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,setFlags,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:setFlags(int),111,114,"/**
 * Sets action flags.
 * @param flags integer representing action flags
 */",* @param flags the flags,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setPageNumber,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setPageNumber(int),160,170,"/**
* Sets the page number in a dictionary.
* @param pageNumber the new page number to set
*/","* Set the page number (zero-based) in the current document containing the file attachment
     * annotation.
     *
     * @param pageNumber the zero based page number. If this is &lt; 0 then the entry is removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDTargetDirectory.java,setAnnotationIndex,org.apache.pdfbox.pdmodel.interactive.action.PDTargetDirectory:setAnnotationIndex(int),223,233,"/**
* Sets annotation index in dictionary.
* @param index the annotation index to set
*/","* This will set the index (zero-based) of the annotation in the /Annots array of the page
     * specified by the /P entry.
     *
     * @param index the zero based index. If this is &lt; 0 then the entry is removed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setAnnotationFlags,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setAnnotationFlags(int),302,305,"/**
 * Sets annotation flags.
 * @param flags integer representing annotation flags
 */","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setStructParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setStructParent(int),693,696,"/**
* Sets the structure parent index.
* @param structParent index of the parent structure element
*/","* This will set the key for this annotation in the structural parent tree.
     * 
     * @param structParent The new key for this annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setQ,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setQ(int),136,139,"/**
 * Sets the Q attribute in the COS object.
 * @param q value to be set for Q
 */","* This will set the quadding/justification of the text. Please see the QUADDING_CONSTANTS
     * in {@link PDVariableText }.
     *
     * @param q The new text justification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAppearanceCharacteristicsDictionary.java,setRotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary:setRotation(int),76,79,"/**
* Sets the rotation of the PDF page.
* @param rotation angle in degrees (0, 90, 180, or 270)
*/","* This will set the rotation.
     * 
     * @param rotation the rotation as a multiple of 90",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueMDP.java,setP,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueMDP:setP(int),77,84,"/**
* Sets the value of P in the dictionary.
* @param p integer value; must be between 0 and 3
*/","* Set the P value.
     * 
     * @param p the value to be set as P",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueTimeStamp.java,setTimestampRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueTimeStamp:setTimestampRequired(boolean),96,99,"/**
* Sets whether timestamp is required.
* @param flag true if timestamp is required, false otherwise
*/","* Sets if a timestamp is reuqired or not.
     * 
     * @param flag true if a timestamp is required",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,setOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:setOpenCount(int),234,237,"/**
 * Sets the number of times the document has been opened.
 * @param openCount the new count of document openings
 */","* Set the open count. This number is automatically managed for you when you add items to the outline.
     *
     * @param openCount The new open count.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setQ(int),622,625,"/**
* Sets the Q value in the dictionary.
* @param q integer value to be set
*/","* This will set the document-wide default value for the quadding/justification of variable text
     * fields. See the QUADDING constants of {@link PDVariableText}.
     *
     * @param q The justification of the variable text fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setFieldFlags,org.apache.pdfbox.pdmodel.interactive.form.PDField:setFieldFlags(int),213,216,"/**
 * Sets field flags in the dictionary.
 * @param flags integer representing field flags
 */","* This will set the flags for this field.
     * 
     * @param flags The new flags.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,setTopIndex,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:setTopIndex(java.lang.Integer),69,79,"/**
* Sets the top index of a PDF annotation.
* @param topIndex the new top index value; null removes the entry
*/","* This will set top index ""TI"" value.
     *
     * @param topIndex the value for the top index, null will remove the value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMaxLen,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMaxLen(int),203,206,"/**
* Sets maximum length.
* @param maxLen new maximum length value
*/","* Sets the maximum number of characters of the text field.
     * 
     * @param maxLen the maximum number of characters",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,setQ,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:setQ(int),208,211,"/**
 * Sets the Q value in the COS object.
 * @param q the value to be set
 */","* This will set the quadding/justification of the text.  See QUADDING constants.
     *
     * @param q The new text justification.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setLong,"org.apache.pdfbox.cos.COSDictionary:setLong(java.lang.String,long)",432,435,"/**
 * Sets a long value in PDF document.
 * @param key the key associated with the value
 * @param value the long value to be set
 */","* This is a convenience method that will convert the value to a COSInteger object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteTrailer,org.apache.pdfbox.pdfwriter.COSWriter:doWriteTrailer(org.apache.pdfbox.cos.COSDocument),678,708,"/**
 * Writes the trailer to a PDF document.
 * @param doc the COSDocument to write the trailer to
 * @throws IOException if an I/O error occurs
 */","* This will write the trailer to the PDF document.
     *
     * @param doc The document to create the trailer for.
     *
     * @throws IOException If there is an IOError while writing the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setRevision(long),151,154,"/**
 * Sets the document revision number.
 * @param revision new revision number to be set
 */","* The software module revision number, corresponding to the Date attribute.
     *
     * @param revision is the software module revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setMinimumRevision,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setMinimumRevision(long),179,182,"/**
 * Sets the minimum revision number.
 * @param revision the new minimum revision value
 */","* The software module revision number, used to determinate the minimum version of software that
     * is required in order to process this signature.
     * <p>
     * NOTE: this entry is deprecated for PDF v1.7
     * </p>
     *
     * @param revision is the software module revision number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setFloat,"org.apache.pdfbox.cos.COSDictionary:setFloat(java.lang.String,float)",473,476,"/**
 * Sets a float value in the PDF document.
 * @param key the key associated with the float value
 * @param value the float value to be set
 */","* This is a convenience method that will convert the value to a COSFloat object.
     *
     * @param key The key to the object,
     * @param value The int value for the name.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,setUserUnit,org.apache.pdfbox.pdmodel.PDPage:setUserUnit(float),890,897,"/**
* Sets the user unit for a PDF page.
* @param userUnit the scaling factor for user space coordinates (must be positive)
*/","* Get the user unit. This is a positive number that shall give the size of default user space
     * units, in multiples of 1/72 inch. This is supported by PDF 1.6 and higher.
     *
     * @param userUnit
     * throws IllegalArgumentException if the parameter is not positive.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/prepress/PDBoxStyle.java,setGuidelineWidth,org.apache.pdfbox.pdmodel.documentinterchange.prepress.PDBoxStyle:setGuidelineWidth(float),132,135,"/**
* Sets guideline width.
* @param width new guideline width value
*/","* Set the guideline width.
     *
     * @param width The width in default user space units.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setOpacity,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setOpacity(float),805,808,"/**
 * Sets the opacity of an annotation.
 * @param opacity float value representing the opacity (0.0 to 1.0)
 */","* Set the annotation opacity.
     *
     * @param opacity The new opacity value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderLength,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderLength(float),316,319,"/**
 * Sets the leader line length.
 * @param leaderLength the length of the leader line
 */","* This will set the length of the leader line.
     * 
     * @param leaderLength length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderExtend,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderExtend(float),336,339,"/**
 * Sets the leader line extension.
 * @param leaderExtend length of the leader line extension
 */","* This will set the length of the leader line extensions.
     * 
     * @param leaderExtend length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,setLeaderOffset,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:setLeaderOffset(float),356,359,"/**
 * Sets the leader line offset.
 * @param leaderOffset the new offset value
 */","* This will set the length of the leader line offset.
     * 
     * @param leaderOffset length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFontWeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFontWeight(float),347,350,"/**
* Sets the font weight.
* @param fontWeight the font weight value to set
*/","* Set the weight of the font.
     *
     * @param fontWeight The new weight of the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalicAngle,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalicAngle(float),452,455,"/**
 * Sets the italic angle of the font.
 * @param angle the italic angle value to be set
 */","* This will set the italic angle for the font.
     *
     * @param angle The new italic angle for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAscent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAscent(float),472,475,"/**
 * Sets the font ascent value.
 * @param ascent the ascent value to be set
 */","* This will set the ascent for the font.
     *
     * @param ascent The new ascent for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setDescent,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setDescent(float),492,495,"/**
 * Sets the descent value for font metrics.
 * @param descent the descent value to be set
 */","* This will set the descent for the font.
     *
     * @param descent The new descent for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setLeading,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setLeading(float),512,515,"/**
* Sets the leading (line spacing) in the dictionary.
* @param leading the line spacing value to be set
*/","* This will set the leading for the font.
     *
     * @param leading The new leading for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setCapHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setCapHeight(float),541,545,"/**
* Sets the cap height of the font.
* @param capHeight the new cap height value
*/","* This will set the cap height for the font.
     *
     * @param capHeight The new cap height for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setXHeight,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setXHeight(float),570,574,"/**
* Sets the X-height value.
* @param xHeight the new X-height value to be set
*/","* This will set the x height for the font.
     *
     * @param xHeight The new x height for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemV,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemV(float),591,594,"/**
* Sets the vertical stem width.
* @param stemV the vertical stem width value
*/","* This will set the stem V for the font.
     *
     * @param stemV The new stem v for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setStemH,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setStemH(float),611,614,"/**
* Sets the stem height.
* @param stemH new stem height value
*/","* This will set the stem H for the font.
     *
     * @param stemH The new stem h for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAverageWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAverageWidth(float),631,634,"/**
 * Sets the average width of characters.
 * @param averageWidth the average width to be set
 */","* This will set the average width for the font.
     *
     * @param averageWidth The new average width for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMaxWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMaxWidth(float),651,654,"/**
 * Sets the maximum width.
 * @param maxWidth the maximum width value to set
 */","* This will set the max width for the font.
     *
     * @param maxWidth The new max width for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setMissingWidth,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setMissingWidth(float),691,694,"/**
* Sets the missing width in the dictionary.
* @param missingWidth the width value to be set
*/","* This will set the missing width for the font.
     *
     * @param missingWidth The new missing width for the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setXStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setXStep(float),137,140,"/**
* Sets the X step value.
* @param xStep the new X step value to be set
*/","* This will set the XStep value.
     * @param xStep The new XStep value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,setYStep,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:setYStep(float),155,158,"/**
* Sets Y step value.
* @param yStep new Y step value to be set
*/","* This will set the YStep value.
     * @param yStep The new YStep value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,setVolume,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:setVolume(float),83,90,"/**
* Sets the audio volume.
* @param volume audio level from -1.0 (mute) to 1.0 (max)
*/","* Gets the volume at which to play the sound, in the range −1.0 to 1.0.
     *
     * @param volume The volume at which to play the sound, in the range −1.0 to 1.0.
     * 
     * @throws IllegalArgumentException if the volume parameter is outside of the range −1.0 to 1.0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineLength(float),282,285,"/**
* Sets the length of the leader line.
* @param leaderLineLength the desired length of the leader line
*/","* This will set the length of the leader line.
     * 
     * @param leaderLineLength length of the leader line",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineExtensionLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineExtensionLength(float),302,305,"/**
* Sets the leader line extension length.
* @param leaderLineExtensionLength the new length for leader lines
*/","* This will set the length of the leader line extensions.
     * 
     * @param leaderLineExtensionLength length of the leader line extensions",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,setLeaderLineOffsetLength,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:setLeaderLineOffsetLength(float),322,325,"/**
* Sets the leader line offset length.
* @param leaderLineOffsetLength the new offset length for leader lines
*/","* This will set the length of the leader line offset.
     * 
     * @param leaderLineOffsetLength length of the leader line offset",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setConstantOpacity,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setConstantOpacity(float),124,127,"/**
* Sets constant opacity.
* @param ca opacity value (0.0 to 1.0)
*/","* This will set the constant opacity value used when rendering the annotation (excluing any popup).
     *
     * @param ca the constant opacity value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderStyleDictionary.java,setWidth,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary:setWidth(float),106,117,"/**
* Sets the width of a PDF object.
* @param w width value to be set
*/","* This will set the border width in points, 0 = no border.
     *
     * There is a bug in Adobe Reader DC, float values are ignored for text field widgets. As a
     * workaround, floats that are integers (e.g. 2.0) are written as integer in the PDF.
     * <p>
     * In Adobe Acrobat DC, the values are shown as ""0 = Invisible, 1 = Thin, 2 = Medium, 3 = Thick""
     * for widget and link annotations.
     *
     * @param w float the width in points",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setV,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setV(float),363,366,"/**
 * Sets the minimum required capability.
 * @param minimumRequiredCapability the capability value to set
 */","* (Optional) The minimum required capability of the signature field seed value
     * dictionary parser. A value of 1 specifies that the parser shall be able to
     * recognize all seed value dictionary entries in a PDF 1.5 file. A value of 2
     * specifies that it shall be able to recognize all seed value dictionary entries
     * specified.
     *
     * @param minimumRequiredCapability is the minimum required capability of the
     * signature field seed value dictionary parser",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,setCYX,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:setCYX(float),331,334,"/**
* Sets the CYX value in the COS object.
* @param cyx the float value to be set
*/","* This will set the CYX factor.
     * 
     * @param cyx CYX factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseCOSStream,org.apache.pdfbox.pdfparser.COSParser:parseCOSStream(org.apache.pdfbox.cos.COSDictionary),713,777,"/**
* Parses a COSStream from a dictionary.
* @param dic dictionary containing stream information
* @return parsed COSStream object
* @throws IOException if parsing fails or required data is missing
*/","* This will read a COSStream from the input stream using length attribute within dictionary. If
     * length attribute is a indirect reference it is first resolved to get the stream length. This
     * means we copy stream data without testing for 'endstream' or 'endobj' and thus it is no
     * problem if these keywords occur within stream. We require 'endstream' to be found after
     * stream data is read.
     *
     * @param dic dictionary that goes with this stream.
     *
     * @return parsed pdf stream.
     *
     * @throws IOException if an error occurred reading the stream, like problems with reading
     * length attribute, stream does not end with 'endstream' after data read, stream too short etc.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFCloneUtility.java,cloneCOSBaseForNewDocument,org.apache.pdfbox.multipdf.PDFCloneUtility:cloneCOSBaseForNewDocument(org.apache.pdfbox.cos.COSBase),105,124,"/**
 * Clones a COSBase object for use in a new document.
 * @param base the original COSBase object to be cloned
 * @return the cloned COSBase object or the original if not cloneable
 * @throws IOException if an I/O error occurs during cloning
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.cos.COSArray,java.util.Map)",1480,1496,"/**
 * Recursively updates page references in a PDF document.
 * @param cloner utility for cloning PDF objects
 * @param parentTreeEntry array containing PDF structure entries
 * @param objMapping mapping of original to cloned objects
 * @throws IOException if an I/O error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSDictionary,org.apache.pdfbox.pdfparser.BaseParser:parseCOSDictionary(boolean),281,328,"/**
* Parses a COSDictionary from the input stream.
* @param isDirect indicates if the dictionary is direct
* @return parsed COSDictionary object
* @throws IOException on parsing error
*/","* This will parse a PDF dictionary.
     *
     * @param isDirect indicates whether the dictionary to be read is a direct object
     * @return The parsed dictionary, never null.
     *
     * @throws IOException If there is an error reading the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(boolean),149,186,"/**
* Parses a PDF or FDF file.
* @param lenient whether to parse leniently
* @return PDDocument object representing the parsed PDF
* @throws IOException if parsing fails
*/","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing.
     *
     * @param lenient activate leniency if set to true
     * @return the populated PDDocument
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStreamOperators,org.apache.pdfbox.contentstream.PDFStreamEngine:processStreamOperators(org.apache.pdfbox.contentstream.PDContentStream),531,571,"/**
* Processes operators in a PDF content stream.
* @param contentStream the PDF content stream to process
*/","* Processes the operators of the given content stream.
     *
     * @param contentStream to content stream to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFStreamParser.java,parse,org.apache.pdfbox.pdfparser.PDFStreamParser:parse(),79,88,"/**
* Parses input into a list of tokens.
* @return List containing parsed objects or null if no more tokens are available
* @throws IOException if an I/O error occurs during parsing
*/","* This will parse all the tokens in the stream. This will close the stream when it is finished parsing.
     *
     * @return All of the tokens in the stream.
     * @throws IOException If there is an error while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getGlyphBBox,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getGlyphBBox(),114,152,"/**
* Parses PDF stream to extract glyph bounding box.
* @return PDRectangle representing the glyph bounds or null if not found
*/","* Calculate the bounding box of this glyph. This will work only if the first operator in the
     * stream is d1.
     *
     * @return the bounding box of this glyph, or null if the first operator is not d1.
     * @throws IOException If an io error occurs while parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3CharProc.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3CharProc:getWidth(),167,185,"/**
 * Parses PDF to get width.
 * @return float value representing width
 * @throws IOException if parsing fails
 */","* Get the width from a type3 charproc stream.
     *
     * @return the glyph width.
     * @throws IOException if the stream could not be read, or did not have d0 or d1 as first
     * operator, or if their first argument was not a number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractNonStrokingColor,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractNonStrokingColor(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),364,428,"/**
* Extracts non-stroking color from a free text annotation.
* @param annotation PDF annotation to extract color from
* @return PDColor object representing the non-stroking color
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.pdmodel.PDDocument),1463,1466,"/**
 * Writes a PDF document.
 * @param doc PDDocument to be written
 * @throws IOException if an I/O error occurs
 */","* This will write the pdf document. If signature should be created externally,
     * {@link #writeExternalSignature(byte[])} should be invoked to set signature after calling this method.
     *
     * @param doc The document to write.
     *
     * @throws IOException If an error occurs while generating the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream),1105,1114,"/**
 * Saves incremental PDF to output stream.
 * @param output destination for the saved PDF
 * @throws IOException if an I/O error occurs
 */","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. There must be a path of objects that have
     * {@link COSUpdateInfo#isNeedToBeUpdated()} set, starting from the document catalog. For signatures this is taken
     * care by PDFBox itself.
     * <p>
     * Other usages of this method are for experienced users only. You will usually never need it. It is useful only if
     * you are required to keep the current revision and append the changes. A typical use case is changing a signed
     * file without invalidating the signature.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Another problem with page-based modifications can occur if the page tree isn't flat: there
     * won't be an closed update path from the catalog to the page. To fix this, add code like this:
     * <pre>{@code
     * COSDictionary parent = page.getCOSObject().getCOSDictionary(COSName.PARENT);
     * while (parent != null)
     * {
     *     parent.setNeedToBeUpdated(true);
     *     parent = parent.getCOSDictionary(COSName.PARENT);
     * }
     * }</pre>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncremental,"org.apache.pdfbox.pdmodel.PDDocument:saveIncremental(java.io.OutputStream,java.util.Set)",1142,1151,"/**
 * Saves incremental PDF changes to output stream.
 * @param output destination for the PDF data
 * @param objectsToWrite set of COSDictionary objects to write
 * @throws IOException if an I/O error occurs
 */","* Save the PDF as an incremental update. This is only possible if the PDF was loaded from a file or a stream, not
     * if the document was created in PDFBox itself. This allows to include objects even if there is no path of objects
     * that have {@link COSUpdateInfo#isNeedToBeUpdated()} set so the incremental update gets smaller. Only dictionaries
     * are supported; if you need to update other objects classes, then add their parent dictionary.
     * <p>
     * This method is for experienced users only. You will usually never need it. It is useful only if you are required
     * to keep the current revision and append the changes. A typical use case is changing a signed file without
     * invalidating the signature. To know which objects are getting changed, you need to have some understanding of the
     * PDF specification, and look at the saved file with an editor to verify that you are updating the correct objects.
     * You should also inspect the page and document structures of the file with PDFDebugger.
     * <p>
     * If your modification includes annotations, make sure these link back to their page by calling
     * {@link PDAnnotation#setPage(PDPage)}. Although this is optional,
     * not doing it
     * <a href=""https://stackoverflow.com/questions/74836898/"">can cause trouble when PDFs get
     * signed</a>. (PDFBox already does this for signature widget annotations)
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write to. It will be closed when done. It <i><b>must never</b></i> point to the source
     * file or that one will be harmed!
     * @param objectsToWrite objects that <b>must</b> be part of the incremental saving.
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,<init>,org.apache.pdfbox.pdmodel.PDDocument:<init>(),162,165,"/**
* Initializes a new PDDocument with an in-memory cache.
* Uses IOUtils to create a memory-only stream cache.
*/","* Creates an empty PDF document.
     * You need to add at least one page for the document to be valid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareVisibleSignature,"org.apache.pdfbox.pdmodel.PDDocument:prepareVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.cos.COSDocument)",557,598,"/**
 * Prepares visible signature by extracting annotation and appearance dictionary.
 * @param firstWidget PDF annotation widget
 * @param acroForm form containing the signature field
 * @param visualSignature document with visual signature data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocument:getDocumentCatalog(),789,805,"/**
* Retrieves the document catalog.
* Initializes it if not already created.
* @return PDDocumentCatalog object
*/","* This will get the document CATALOG. This is guaranteed to not return null.
     * 
     * @return The documents /Root dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOutputIntents,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOutputIntents(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",1341,1369,"/**
 * Merges output intents from source to destination catalog.
 * @param srcCatalog source PDF document catalog
 * @param destCatalog destination PDF document catalog
 * @param cloner utility for cloning PDF objects
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,enqueueKids,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:enqueueKids(org.apache.pdfbox.cos.COSDictionary),190,222,"/**
 * Recursively enqueues child nodes of a PDF page tree.
 * @param node current node in the page tree
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,"org.apache.pdfbox.pdmodel.PDPageTree:get(int,org.apache.pdfbox.cos.COSDictionary,int)",295,366,"/**
 * Retrieves a COSDictionary representing a PDF page by its 1-based index.
 * @param pageNum 1-based index of the page to retrieve
 * @param node current node in the PDF structure tree
 * @param encountered number of pages already processed
 * @return COSDictionary of the specified page or throws an exception if not found
 */","* Returns the given COS page using a depth-first search.
     *
     * @param pageNum 1-based page number
     * @param node page tree node to search
     * @param encountered number of pages encountered so far
     * @return COS dictionary of the Page object
     * @throws IllegalStateException if the requested page number isn't found
     * @throws IndexOutOfBoundsException if the requested page number is higher than the page count",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,findPage,"org.apache.pdfbox.pdmodel.PDPageTree:findPage(org.apache.pdfbox.pdmodel.PDPageTree$SearchContext,org.apache.pdfbox.cos.COSDictionary)",396,414,"/**
 * Recursively searches for a page in the PDF structure.
 * @param context search context containing state and results
 * @param node current node in the PDF tree
 * @return true if page is found, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,next,org.apache.pdfbox.pdmodel.PDPageTree$PageIterator:next(),230,243,"/**
* Returns the next page in the document.
* @return PDPage object or throws NoSuchElementException if no more pages
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDEmbeddedFilesNameTreeNode.java,convertCOSToPD,org.apache.pdfbox.pdmodel.PDEmbeddedFilesNameTreeNode:convertCOSToPD(org.apache.pdfbox.cos.COSBase),49,57,"/**
* Converts a COSBase to a PDComplexFileSpecification.
* @param base the COSBase object to convert
* @return PDComplexFileSpecification created from the COSDictionary
* @throws IOException if base is not a COSDictionary
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDFileSpecification.java,createFS,org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification:createFS(org.apache.pdfbox.cos.COSBase),45,65,"/**
* Creates a PDF file specification from a COSBase object.
* @param base the COSBase object representing the file specification
* @return PDFileSpecification object or null if base is null
* @throws IOException if the base type is unknown
*/","* A file specification can either be a COSString or a COSDictionary.  This
     * will create the file specification either way.
     *
     * @param base The cos object that describes the fs.
     *
     * @return The file specification for the COSBase object.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,notifyChanged,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:notifyChanged(),185,191,"/**
* Notifies attribute change to associated structure element.
*/","* Notifies the attribute object change listeners about a change in this
     * attribute object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),162,169,"/**
* Appends a COSObjectable as a kid.
* @param objectable the object to append
*/","* Appends an objectable kid.
     * 
     * @param objectable the objectable",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertObjectableBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertObjectableBefore(org.apache.pdfbox.pdmodel.common.COSObjectable,java.lang.Object)",219,226,"/**
* Inserts a COSObjectable before another.
* @param newKid the object to insert
* @param refKid reference object for insertion point
*/","* Inserts an objectable kid before a reference kid.
     * 
     * @param newKid the objectable
     * @param refKid the reference kid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeObjectableKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeObjectableKid(org.apache.pdfbox.pdmodel.common.COSObjectable),294,301,"/**
* Removes an object from the list of kids.
* @param objectable the COSObjectable to remove
* @return true if removal was successful, false otherwise
*/","* Removes an objectable kid.
     * 
     * @param objectable the objectable
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setStdCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setStdCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),530,534,"/**
* Sets the standard crypt filter dictionary.
* @param cryptFilterDictionary dictionary containing encryption settings
*/","* Sets the standard crypt filter.
     * 
     * @param cryptFilterDictionary the standard crypt filter to set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PDEncryption.java,setDefaultCryptFilterDictionary,org.apache.pdfbox.pdmodel.encryption.PDEncryption:setDefaultCryptFilterDictionary(org.apache.pdfbox.pdmodel.encryption.PDCryptFilterDictionary),541,545,"/**
* Sets the default cryptographic filter dictionary.
* @param defaultFilterDictionary the cryptographic filter to be set as default
*/","* Sets the default crypt filter (for public-key security handler).
     *
     * @param defaultFilterDictionary the standard crypt filter to set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(),42,46,"/**
 * Constructs an FDF annotation caret.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(),43,47,"/**
 * Creates a new circle annotation.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(),40,44,"/**
* Constructs a new file attachment annotation.
* Initializes the annotation with the subtype ""FileAttachment"".
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(),49,52,"/**
 * Initializes a new free text annotation.
 * Sets the subtype to ""FreeText"".
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(),54,58,"/**
 * Constructs an FDFAnnotationInk.
 * Sets the subtype to ""INK"".
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(),46,49,"/**
 * Initializes a new FDFAnnotationLine with default subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(),52,55,"/**
 * Initializes a new FDF annotation link.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(),50,54,"/**
 * Constructs a new polygon annotation.
 * Sets the subtype to ""Polygon"".
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(),51,55,"/**
* Constructs a new polyline annotation.
* Initializes the annotation with the subtype ""PolyLine"".
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(),40,44,"/**
 * Constructs a new sound annotation.
 * Initializes the annotation with the specified subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(),44,48,"/**
* Creates a new FDF annotation of type square.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(),62,65,"/**
* Creates a new FDF annotation of type stamp.
* Initializes the subtype to STAMP.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(),42,46,"/**
 * Creates a new FDF annotation text instance.
 * Sets the subtype to ""Text"".
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(),36,38,"/**
 * Default constructor for FDFAnnotationTextMarkup.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initCallout,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initCallout(org.w3c.dom.Element),121,134,"/**
 * Initializes callout values from element attribute.
 * @param element XML element containing callout data
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:initVertices(org.w3c.dom.Element),87,109,"/**
* Initializes vertex coordinates from XML element.
* @param element XML element containing 'vertices' data
* @throws IOException if 'vertices' is missing or malformed
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initVertices,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initVertices(org.w3c.dom.Element),83,105,"/**
* Initializes vertex data from XML element.
* @param element XML element containing vertex information
* @throws IOException if 'vertices' element is missing or invalid
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(java.util.TreeMap),337,393,"/**
* Builds vertical metrics for CID font.
* @param cidToGid mapping of CID to GID
* @throws IOException if I/O error occurs
*/",* Builds vertical metrics with a custom CIDToGIDMap (for embedding font subset).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildVerticalMetrics,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildVerticalMetrics(org.apache.pdfbox.cos.COSDictionary),516,545,"/**
* Builds vertical metrics for CID font.
* @param cidFont CID font dictionary to update
* @throws IOException if an I/O error occurs
*/",* Build vertical metrics with Identity CIDToGIDMap (for embedding full font).,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(),57,59,"/**
 * Constructs a new instance of PDSimpleFont.
 */",* Constructor for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,addNameTag,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:addNameTag(java.lang.String),223,231,"/**
* Adds a prefix to the font name and updates relevant objects.
* @param tag prefix to add to the font name
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,toRGB,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:toRGB(float[]),77,114,"/**
* Converts color values to RGB.
* @param value input color values array
* @return RGB color values array
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,initColorConversionCache,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:initColorConversionCache(org.apache.pdfbox.pdmodel.PDResources),111,175,"/**
* Initializes color conversion cache for given resources.
* @param resources PDF document resources
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceNAttributes.java,toString,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceNAttributes:toString(),137,171,"/**
 * Generates a string representation of the device N.
 * @return String describing the device N, including subtype and colorants
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getGroup(java.lang.String),146,163,"/**
* Retrieves an optional content group by name.
* @param name the name of the group to find
* @return PDOptionalContentGroup object or null if not found
*/","* Returns the first optional content group of the given name.
     *
     * @param name the group name
     * @return the optional content group or null, if there is no such group",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getOptionalContentGroups,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getOptionalContentGroups(),188,201,"/**
 * Retrieves optional content groups from the document.
 * @return Collection of PDOptionalContentGroup objects
 */","* Returns the collection of all optional content groups.
     * @return the optional content groups",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets decode values for the object.
* @param decodeValues array of decode values to be set
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setDecodeValues,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setDecodeValues(org.apache.pdfbox.cos.COSArray),145,149,"/**
* Sets decoding values for PDF object.
* @param decodeValues array of decoding parameters
*/","* This will set the decode values.
     *
     * @param decodeValues the new decode values",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setLineWidth,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setLineWidth(java.lang.Float),232,235,"/**
 * Sets the line width for PDF drawing.
 * @param width the width of the line
 */","* This will set the line width.
     *
     * @param width The line width for the object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setMiterLimit,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setMiterLimit(java.lang.Float),293,296,"/**
* Sets the miter limit for line joins.
* @param miterLimit the miter limit value to set
*/","* This will set the miter limit for the graphics state.
     *
     * @param miterLimit The new miter limit value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setFlatnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setFlatnessTolerance(java.lang.Float),468,471,"/**
* Sets the flatness tolerance.
* @param flatness new flatness value to be set
*/","* This will set the flatness tolerance.
     *
     * @param flatness The new flatness tolerance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setSmoothnessTolerance,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setSmoothnessTolerance(java.lang.Float),488,491,"/**
* Sets the smoothness tolerance.
* @param smoothness the smoothness value to be set
*/","* This will set the smoothness tolerance.
     *
     * @param smoothness The new smoothness tolerance",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setStrokingAlphaConstant(java.lang.Float),528,531,"/**
* Sets the stroking alpha constant.
* @param alpha the new alpha value
*/","* This will set the stroking alpha constant.
     *
     * @param alpha The new stroking alpha constant.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setNonStrokingAlphaConstant,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setNonStrokingAlphaConstant(java.lang.Float),548,551,"/**
* Sets non-stroking alpha constant.
* @param alpha transparency value (0.0 to 1.0)
*/","* This will set the non stroking alpha constant.
     *
     * @param alpha The new non stroking alpha constant.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(),71,74,"/**
 * Creates a new link annotation.
 * Sets the subtype to 'Link' in the COS object.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(),52,54,"/**
 * Constructs a new PDAnnotationMarkup instance.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(),44,47,"/**
* Creates a new PDAnnotationPopup with subtype ""PopUp"".
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(),43,46,"/**
 * Constructs a new PDAnnotationWidget.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLink:<init>(org.apache.pdfbox.cos.COSDictionary),81,84,"/**
 * Creates a new link annotation.
 * @param field dictionary containing annotation properties
 */","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),61,64,"/**
 * Constructs a PDAnnotationMarkup from a COSDictionary.
 * @param dict The dictionary containing annotation properties.
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:<init>(org.apache.pdfbox.cos.COSDictionary),54,57,"/**
 * Constructs a new PDAnnotationPopup from a COSDictionary.
 * @param field dictionary representing the annotation
 */","* Creates a popup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnknown.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnknown:<init>(org.apache.pdfbox.cos.COSDictionary),35,38,"/**
 * Constructs an unknown annotation from a COS dictionary.
 * @param dic COS dictionary representing the annotation
 */","* Creates an arbitrary annotation from a COSDictionary, expected to be a correct object definition for some sort of
     * annotation.
     *
     * @param dic The dictionary which represents this Annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationWidget.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget:<init>(org.apache.pdfbox.cos.COSDictionary),53,57,"/**
* Constructs a new PDAnnotationWidget from a COSDictionary.
* @param field the COSDictionary representing the annotation field
*/","* Creates a PDWidget from a COSDictionary, expected to be a correct object definition for a field in PDF.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:setRectDifferences(float),62,64,"/**
 * Sets equal differences for all sides of a rectangle.
 * @param difference uniform difference value for all sides
 */","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and boundaries of the underlying.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:setRectDifferences(float),149,151,"/**
 * Sets equal differences for all sides of a rectangle.
 * @param difference the uniform difference value to apply
 */","* This will set the difference between the annotations ""outer"" rectangle defined by
     * /Rect and the border.
     * 
     * <p>This will set an equal difference for all sides</p>
     * 
     * @param difference from the annotations /Rect entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,setRectDifferences,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:setRectDifferences(float),137,140,"/**
 * Sets uniform differences for all sides of a rectangle.
 * @param difference the uniform difference value to apply to all sides
 */","* This will set the difference between the annotations ""outer"" rectangle defined by /Rect and
     * the border.
     *
     * <p>
     * This will set an equal difference for all sides</p>
     *
     * @param difference from the annotations /Rect entry",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAppearanceContentStream.java,setBorderLine,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setBorderLine(float,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary,org.apache.pdfbox.cos.COSArray)",206,229,"/**
 * Sets the border line properties.
 * @param lineWidth width of the border line
 * @param bs border style dictionary
 * @param border COSArray representing the border
 * @throws IOException if an I/O error occurs
 */","* Convenience method for annotations: sets the line with and dash style.
     *
     * @param lineWidth The line width.
     * @param bs The border style, may be null.
     * @param border The border array, must have at least three entries. This is
     * only used if the border style is null.
     *
     * @throws IOException If there is an error writing to the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,addKeyUsage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:addKeyUsage(char,char,char,char,char,char,char,char,char)",421,437,"/**
 * Adds key usage flags to a certificate.
 * @param digitalSignature, nonRepudiation, etc. - boolean flags for key usage
 */","* works like {@link #addKeyUsage(String)} but enters each character separately
     *
     * @param digitalSignature char that is one of {0, 1, X}
     * @param nonRepudiation char that is one of {0, 1, X}
     * @param keyEncipherment char that is one of {0, 1, X}
     * @param dataEncipherment char that is one of {0, 1, X}
     * @param keyAgreement char that is one of {0, 1, X}
     * @param keyCertSign char that is one of {0, 1, X}
     * @param cRLSign char that is one of {0, 1, X}
     * @param encipherOnly char that is one of {0, 1, X}
     * @param decipherOnly char that is one of {0, 1, X}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDCheckBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDCheckBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),41,44,"/**
 * Constructs a PDCheckBox associated with a PDAcroForm.
 * @param acroForm the form to which this checkbox belongs
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
 * Creates a new PDComboBox.
 * @param acroForm parent form to add combo box to
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),37,40,"/**
 * Constructs a PDListBox from an existing PDAcroForm.
 * @param acroForm the form to which this list box belongs
 */","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.lang.String),374,383,"/**
* Sets the value of a form field.
* @param value the new value to set
* @throws IOException if an I/O error occurs
*/","* Set the selected value of this field, and try to update the visual appearance.
     *
     * @param value The name of the selected item.
     * @throws IOException if the value could not be set",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,updateSelectedOptionsIndex,"org.apache.pdfbox.pdmodel.interactive.form.PDChoice:updateSelectedOptionsIndex(java.util.List,java.util.List)",474,486,"/**
* Updates selected options index based on provided values.
* @param values list of selected option values
* @param options list of available option values
*/",* Update the 'I' key based on values set.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureField,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureField(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),106,112,"/**
* Creates a signature field in the PDF form.
* @param acroForm the PDF form to add the signature field to
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,addOriginalContent,"org.apache.pdfbox.multipdf.Overlay:addOriginalContent(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSArray)",431,450,"/**
 * Adds original content to the content array.
 * @param contents the content to add, can be a COSStream or COSArray
 * @throws IOException if an unknown content type is encountered
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeKEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeKEntries(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",968,1039,"/**
 * Merges structure tree entries from source to destination PDF.
 * @param cloner utility for cloning PDF objects
 * @param srcStructTree source structure tree root
 * @param destStructTree destination structure tree root
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,createColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:createColorSpace(org.apache.pdfbox.cos.COSBase),168,192,"/**
 * Creates a PDColorSpace from a COSBase.
 * @param cs the COSBase object representing the color space
 * @return a PDColorSpace instance
 * @throws IOException if the COSBase is not a valid color space type
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,getBorder,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:getBorder(),731,757,"/**
* Retrieves or creates a border array for a PDF object.
* @return COSArray representing the border, defaulting to [0, 0, 1] if none exists
*/","* This will retrieve the border array. If none is available then it will create and return a
     * default array, which is [0 0 1]. The array consists of at least three numbers defining the
     * horizontal corner radius, vertical corner radius, and border width. The array may have a
     * fourth element, an optional dash array defining a pattern of dashes and gaps that shall be
     * used in drawing the border. If the array has less than three elements, the original array
     * will be copied and missing elements with value 0 will be added.
     *
     * @return the border array, never null.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/compress/COSWriterCompressionPool.java,<init>,"org.apache.pdfbox.pdfwriter.compress.COSWriterCompressionPool:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",74,90,"/**
 * Initializes a COSWriterCompressionPool with given document and parameters.
 * @param document PDDocument to be compressed
 * @param parameters compression settings, defaults to new CompressParameters if null
 * @throws IOException if an I/O error occurs during initialization
 */","* <p>
     * Constructs an object that can be used to compress the contents of a given {@link PDDocument}. It provides the
     * means to:
     * </p>
     * <ul>
     * <li>Compress the COSStructure of the document, by streaming {@link COSBase}s to compressed
     * {@link COSWriterObjectStream}s</li>
     * </ul>
     *
     * @param document The document, that shall be compressed.
     * @param parameters The configuration of the compression operations, that shall be applied.
     * @throws IOException Shall be thrown if a compression operation failed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType0.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType0:getNormalizedPath(int),340,344,"/**
 * Retrieves normalized path for a given code.
 * @param code identifier for the path
 * @return GeneralPath object
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getPath(int),438,453,"/**
* Retrieves the GeneralPath for a given glyph code.
* @param code glyph identifier
* @return GeneralPath object or empty path if not found
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/CCITTFaxFilter.java,decode,"org.apache.pdfbox.filter.CCITTFaxFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",37,124,"/**
 * Decodes CCITT Fax encoded data to an OutputStream.
 * @param encoded InputStream containing encoded data
 * @param decoded OutputStream for the decoded data
 * @param parameters COSDictionary with decode parameters
 * @param index Index of the decode parameter set
 * @return DecodeResult object
 * @throws IOException if decoding fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,getEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:getEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName)",852,855,"/**
* Retrieves an embedded date from a PDF document.
* @param embedded name of the embedded object
* @param key key for the date value
* @return Calendar object representing the embedded date or null if not found
*/","* This is a convenience method that will get the dictionary object that is expected to be a name and convert it to
     * a string. Null is returned if the entry does not exist in the dictionary.
     *
     * @param embedded The embedded dictionary to get.
     * @param key The key to the item in the dictionary.
     * @return The name converted to a string.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,addCornerCurl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:addCornerCurl(double,double,double,double,double,double,double,boolean)",428,439,"/**
* Adds a corner curl effect.
* @param anglePrev previous angle in radians
* @param angleCur current angle in radians
* @param radius curvature radius
* @param cx center x-coordinate
* @param cy center y-coordinate
* @param alpha angular offset
* @param alphaPrev previous angular offset
* @param addMoveTo flag to add move-to command
* @throws IOException if I/O error occurs
*/",* Creates a corner curl for polygons and ellipses.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,drawBasicEllipse,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:drawBasicEllipse(double,double,double,double)",1000,1008,"/**
* Draws a basic ellipse on the graphics context.
* @param left x-coordinate of the left boundary
* @param bottom y-coordinate of the bottom boundary
* @param right x-coordinate of the right boundary
* @param top y-coordinate of the top boundary
* @throws IOException if an I/O error occurs
*/",* Draws an ellipse without a cloudy border effect.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/PlainTextFormatter.java,format,org.apache.pdfbox.pdmodel.interactive.PlainTextFormatter:format(),144,190,"/**
* Formats text content by processing paragraphs and lines.
* Throws IOException if an I/O error occurs during formatting.
*/","* Format the text block.
     * 
     * @throws IOException if there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,calculateFontSize,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:calculateFontSize(org.apache.pdfbox.pdmodel.font.PDFont,org.apache.pdfbox.pdmodel.common.PDRectangle)",890,958,"/**
 * Calculates font size for text within a content rectangle.
 * @param font PDFont used for rendering text
 * @param contentRect PDRectangle defining the area for text
 * @return Calculated font size or default if auto-sizing is enabled
 * @throws IOException if an I/O error occurs
 */","* My ""not so great"" method for calculating the fontsize. It does not work superb, but it
     * handles ok.
     * 
     * @return the calculated font-size
     * @throws IOException If there is an error getting the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,readEncoding,org.apache.pdfbox.pdmodel.font.PDSimpleFont:readEncoding(),86,138,"/**
 * Reads and sets the encoding for a font.
 * Handles different types of encoding bases and provides fallbacks.
 * @throws IOException if an I/O error occurs
 */","* Reads the Encoding from the Font dictionary or the embedded or substituted font file.
     * Must be called at the end of any subclass constructors.
     *
     * @throws IOException if the font file could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isFontSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isFontSymbolic(),197,253,"/**
 * Determines if the font is symbolic.
 * @return Boolean indicating if the font is symbolic, or null if uncertain
 */","* Internal implementation of isSymbolic, allowing for the fact that the result may be indeterminate.
     * 
     * @return true if isSymbolic",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getTrueTypeFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getTrueTypeFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",314,335,"/**
 * Retrieves a TrueType font mapping.
 * @param baseFont preferred base font name
 * @param fontDescriptor PDF font descriptor for fallback
 * @return FontMapping containing the TrueTypeFont or last resort font
 */","* Finds a TrueType font with the given PostScript name, or a suitable substitute, or null.
     *
     * @param fontDescriptor FontDescriptor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/FontMapperImpl.java,getFontBoxFont,"org.apache.pdfbox.pdmodel.font.FontMapperImpl:getFontBoxFont(java.lang.String,org.apache.pdfbox.pdmodel.font.PDFontDescriptor)",343,364,"/**
* Retrieves a FontBoxFont for the given base font or descriptor.
* @param baseFont base font name
* @param fontDescriptor PDFontDescriptor containing font details
* @return FontMapping with found FontBoxFont or last resort font if none found
*/","* Finds a font with the given PostScript name, or a suitable substitute, or null. This allows
     * any font to be substituted with a PFB, TTF or OTF.
     *
     * @param fontDescriptor the FontDescriptor of the font to find",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,xfaIsDynamic,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:xfaIsDynamic(),574,577,"/**
* Checks if XFA is dynamic.
* @return true if XFA is present and no fields are defined, false otherwise
*/","* This will tell if the AcroForm is a dynamic XFA form.
     *
     * @return true if the AcroForm is a dynamic XFA form",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,enqueueKids,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:enqueueKids(org.apache.pdfbox.pdmodel.interactive.form.PDField),108,129,"/**
* Adds a field and its children to the queue and set.
* @param node the PDField to process
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,getRichContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:getRichContents(),866,869,"/**
 * Retrieves rich content from annotation.
 * @return Rich content as string or null if not available
 */","* This will retrieve the rich text stream which is displayed in the popup window.
     *
     * @return the rich text stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFField:writeXML(java.io.Writer),117,158,"/**
* Writes XML representation of a field to the given writer.
* @param output Writer object to write XML data
* @throws IOException if an I/O error occurs
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getRichTextValue,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getRichTextValue(),218,221,"/**
 * Retrieves rich text value as a string.
 * @return Rich text content or null if not available
 */","* Get the fields rich text value.
     * 
     * @return the rich text value string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType4.java,<init>,org.apache.pdfbox.pdmodel.common.function.PDFunctionType4:<init>(org.apache.pdfbox.cos.COSBase),48,54,"/**
* Initializes a Type 4 PDFunction from a COSBase stream.
* @param functionStream the PDF stream containing the function instructions
* @throws IOException if an I/O error occurs while reading the stream
*/","* Constructor.
     *
     * @param functionStream The function stream.
     * @throws IOException if an I/O error occurs while reading the function",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readLookupData,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readLookupData(),256,278,"/**
* Reads lookup data from a PDF array.
* @throws IOException if an I/O error occurs or unknown type is encountered
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpol,"org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpol(int[],int)",299,343,"/**
* Recursively interpolates values based on coordinates.
* @param coord current coordinate array
* @param step current interpolation step
* @return interpolated float array
*/","* Do a linear interpolation if the two coordinates can be known, or
         * call itself recursively twice.
         *
         * @param coord coord partially set coordinate (not set from step
         * upwards); gets fully filled in the last call (""leaf""), where it is
         * used to get the correct sample
         * @param step between 0 (first call) and dimension - 1
         * @return interpolated result sample",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getBitsPerComponent(),848,860,"/**
* Returns bits per component.
* @return Number of bits per component or 1 if stencil is enabled
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getColorSpace(),868,911,"/**
 * Retrieves the color space of the image.
 * @return PDColorSpace object representing the image's color space
 * @throws IOException if the color space cannot be determined
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getHeight,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getHeight(),945,950,"/**
 * Retrieves the height value of the object.
 * Initializes JPX values before fetching.
 * @return The height as an integer
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getWidth,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getWidth(),958,963,"/**
* Retrieves width value from COS object.
* Initializes JPX values if not already done.
* @return width as integer
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType6,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Initializes a Type6ShadingContext.
* @param shading PDShadingType6 object
* @param colorModel ColorModel for rendering
* @param xform AffineTransform for coordinate mapping
* @param matrix transformation matrix
* @param deviceBounds bounding rectangle of the device
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingContext.java,<init>,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingContext:<init>(org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType7,java.awt.image.ColorModel,java.awt.geom.AffineTransform,org.apache.pdfbox.util.Matrix,java.awt.Rectangle)",42,46,"/**
* Constructs a Type7ShadingContext.
* @param shading PDShadingType7 instance
* @param colorModel ColorModel for rendering
* @param xform AffineTransform for coordinate conversion
* @param matrix Matrix defining the shading space
* @param deviceBounds Rectangle of the device area
* @throws IOException if an I/O error occurs
*/","* Constructor creates an instance to be used for fill operations.
     *
     * @param shading the shading type to be used
     * @param colorModel the color model to be used
     * @param xform transformation for user to device space
     * @param matrix the pattern matrix concatenated with that of the parent content stream
     * @param deviceBounds device bounds
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type4ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type4ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a PaintContext for rendering.
* @param cm the ColorModel to be used for color conversion
* @param deviceBounds the bounding box of the device space
* @param userBounds the bounding box of the user space
* @param xform the AffineTransform from user space to device space
* @param hints the RenderingHints that control the rendering process
* @return a PaintContext instance or a transparent context if an error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type5ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type5ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",55,68,"/**
* Creates a paint context for rendering.
* @param cm color model to use
* @param deviceBounds bounding box of the device space
* @param userBounds bounding box of the user space
* @param xform transformation from user space to device space
* @param hints rendering hints
* @return PaintContext object or a transparent context if an error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getBytes,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getBytes(),74,86,"/**
 * Retrieves bytes from XFA.
 * @return byte array of XFA content or empty if not found
 * @throws IOException on I/O error
 */","* Get the XFA content as byte array.
     * 
     * The XFA is either a stream containing the entire XFA resource or an array specifying individual packets that
     * together make up the XFA resource.
     * 
     * A packet is a pair of a string and stream. The string contains the name of the XML element and the stream
     * contains the complete text of this XML element. Each packet represents a complete XML element, with the exception
     * of the first and last packet, which specify begin and end tags for the xdp:xdp element. [IS0 32000-1:2008:
     * 12.7.8]
     * 
     * @return the XFA content
     * @throws IOException if the XFA content could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,preparePredictorPDImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:preparePredictorPDImage(java.io.ByteArrayOutputStream,int)",566,620,"/**
* Prepares a PDImageXObject with predictor encoding.
* @param stream ByteArrayOutputStream containing image data
* @param bitsPerComponent number of bits per color component
* @return PDImageXObject with encoded image and parameters
* @throws IOException if I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:<init>(),42,47,"/**
* Initializes a PDPageFitDestination.
* Sets up internal array and names it.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitDestination:setFitBoundingBox(boolean),74,85,"/**
* Sets whether to use bounding box fitting.
* @param fitBoundingBox flag to enable or disable bounding box fitting
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:<init>(),42,47,"/**
* Initializes a PDPageFitHeightDestination with specific settings.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setLeft(int),75,86,"/**
* Sets the left value in the array.
* @param x integer value to set or -1 to clear
*/","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitHeightDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitHeightDestination:setFitBoundingBox(boolean),103,114,"/**
* Sets fit bounding box flag.
* @param fitBoundingBox true to set bounded type, false otherwise
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:<init>(),38,43,"/**
* Initializes a new PDPageFitRectangleDestination with specific settings.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setLeft(int),71,82,"/**
* Sets the left position in the array.
* @param x left position value or -1 to clear
*/","* Set the left x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setBottom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setBottom(int),100,111,"/**
* Sets the bottom position.
* @param y vertical coordinate or -1 to clear
*/","* Set the bottom y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The bottom y coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setRight,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setRight(int),129,140,"/**
* Sets the right value in the array.
* @param x integer value to set, or -1 to clear
*/","* Set the right x-coordinate, a value of -1 implies that the current x-coordinate
     * will be used.
     * @param x The right x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitRectangleDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitRectangleDestination:setTop(int),159,170,"/**
* Sets the top position in the array.
* @param y vertical position value or -1 to clear
*/","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:<init>(),43,48,"/**
* Initializes a new PDPageFitWidthDestination.
* Sets up an array with specific size and type.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setTop(int),77,88,"/**
* Sets the top value in the array.
* @param y integer value to set or -1 to clear
*/","* Set the top y-coordinate, a value of -1 implies that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageFitWidthDestination.java,setFitBoundingBox,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageFitWidthDestination:setFitBoundingBox(boolean),105,116,"/**
* Sets the bounding box fitting option.
* @param fitBoundingBox true to fit, false otherwise
*/","* Set if this page destination should just fit the bounding box.  The default is false.
     *
     * @param fitBoundingBox A flag indicating if this should fit the bounding box.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,<init>,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:<init>(),42,46,"/**
* Initializes a new PDPageXYZDestination with default settings.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setLeft,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setLeft(int),74,85,"/**
* Sets the left value in the array.
* @param x the value to set, or -1 to clear
*/","* Set the left x-coordinate, values 0 or -1 imply that the current x-coordinate
     * will be used.
     * @param x The left x coordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setTop,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setTop(int),103,114,"/**
* Sets the top value in the array.
* @param y integer value to set or -1 to clear
*/","* Set the top y-coordinate, values 0 or -1 imply that the current y-coordinate
     * will be used.
     * @param y The top ycoordinate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageXYZDestination.java,setZoom,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageXYZDestination:setZoom(float),137,148,"/**
* Sets zoom level in the array.
* @param zoom zoom factor to be set
*/","* Set the zoom value for the page, values 0 or -1 imply that the current zoom
     * will be used.
     * @param zoom The zoom value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getDecodeParms,org.apache.pdfbox.pdmodel.common.PDStream:getDecodeParms(),269,273,"/**
 * Retrieves decode parameters for the object.
 * @return List of decode parameters or empty list if not found
 * @throws IOException if an I/O error occurs
 */","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFileDecodeParams,org.apache.pdfbox.pdmodel.common.PDStream:getFileDecodeParams(),282,285,"/**
 * Retrieves file decode parameters.
 * @return List of decode parameters or empty list if none found
 * @throws IOException if an I/O error occurs
 */","* Get the list of decode parameters. Each entry in the list will refer to
     * an entry in the filters list.
     * 
     * @return The list of decode parameters.
     * @throws IOException if there is an error retrieving the parameters.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,loadICCProfile,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:loadICCProfile(),164,224,"/**
 * Loads ICC profile from stream or falls back to alternate color space.
 * @throws IOException if an I/O error occurs
 */","* Load the ICC profile, or init alternateColorSpace color space.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseStampAnnotationAppearanceXML,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseStampAnnotationAppearanceXML(org.w3c.dom.Element),142,183,"/**
* Parses stamp annotation appearance XML and builds a COSDictionary.
* @param appearanceXML XML element representing the appearance
* @return COSDictionary containing parsed data or empty if not handled
*/","* This will create an Appearance dictionary from an appearance XML element.
     *
     * @param appearanceXML The XML element that contains the appearance data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,parseDictElement,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:parseDictElement(org.w3c.dom.Element),357,423,"/**
* Parses a dictionary element from XML to COSDictionary.
* @param dictEl the XML element representing a dictionary
* @return COSDictionary object containing parsed data
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(),44,47,"/**
* Constructs a PDF color space for grayscale.
* Initializes with COSName.CALGRAY.
*/",* Create a new CalGray color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(),39,42,"/**
 * Constructs a new PDCalRGB instance.
 */",* Creates a new CalRGB color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(),41,44,"/**
 * Constructs a new PDLab instance.
 */",* Creates a new Lab color space.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalGray.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalGray:<init>(org.apache.pdfbox.cos.COSArray),54,57,"/**
 * Constructs a PDCalGray from a COSArray.
 * @param array underlying COSArray
 */","* Creates a new CalGray color space using the given COS array.
     *
     * @param array the COS array which represents this color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDCalRGB.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDCalRGB:<init>(org.apache.pdfbox.cos.COSArray),48,51,"/**
 * Constructs a PDCalRGB object from a COSArray.
 * @param rgb RGB color values array
 */","* Creates a new CalRGB color space using the given COS array.
     * @param rgb the cos array which represents this color space",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDLab:<init>(org.apache.pdfbox.cos.COSArray),50,53,"/**
 * Constructs a PDLab object.
 * @param lab COSArray containing lab data
 */","* Creates a new Lab color space from a PDF array.
     * @param lab the color space array",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBWithAttributes,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBWithAttributes(java.awt.image.WritableRaster),193,281,"/**
* Converts a raster to an RGB image with color attributes.
* @param raster input WritableRaster to be converted
* @return BufferedImage in RGB format or throws IOException if processing fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDLab:toRGBImage(java.awt.image.WritableRaster),64,112,"/**
 * Converts a WritableRaster to an RGB BufferedImage.
 * @param raster input raster data
 * @return RGB BufferedImage representation
 * @throws IOException if conversion fails
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getDefaultDecode,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getDefaultDecode(int),158,164,"/**
* Returns default decode array for color conversion.
* @param bitsPerComponent number of bits per component
* @return float array with decode values
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,getInitialColor,org.apache.pdfbox.pdmodel.graphics.color.PDLab:getInitialColor(),166,178,"/**
 * Returns the initial color based on range minimum values.
 * @return PDColor object representing the initial color
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setARange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setARange(org.apache.pdfbox.pdmodel.common.PDRange),229,232,"/**
 * Sets the range for the first component.
 * @param range PDRange object defining the new range
 */","* This will set the a range for the ""a"" component.
     * @param range the new range for the ""a"" component, 
     * or null if defaults (-100..100) are to be set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDLab.java,setBRange,org.apache.pdfbox.pdmodel.graphics.color.PDLab:setBRange(org.apache.pdfbox.pdmodel.common.PDRange),239,242,"/**
 * Sets the B component range.
 * @param range PDRange object representing the new range
 */","* This will set the ""b"" range for this color space.
     * @param range the new range for the ""b"" component,
     * or null if defaults (-100..100) are to be set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setKids(java.util.List),112,130,"/**
* Sets the list of child nodes (kids) for a PDF tree node.
* @param kids list of PDNumberTreeNode objects representing child nodes
*/","* Set the children of this number tree.
     *
     * @param kids The children of this number tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNumbers(Map)} with a map and pass a single
     * element list here.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNumberTreeNode.java,setNumbers,org.apache.pdfbox.pdmodel.common.PDNumberTreeNode:setNumbers(java.util.Map),245,274,"/**
* Sets numbers and limits in the node.
* @param numbers map of COSObjectable values by integer keys
*/","* Set the numbers for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param numbers The map of numbers to objects, or <code>null</code> for nothing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,initStyles,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:initStyles(org.w3c.dom.Element),107,126,"/**
 * Initializes styles for an element based on attribute values.
 * @param element the XML element containing style attributes
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,calculateLimits,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:calculateLimits(),160,204,"/**
* Calculates and sets limits for the node.
* Sets lower and upper limits based on children or names.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNote,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNote(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",194,217,"/**
* Draws a note annotation with rounded edges.
* @param annotation text annotation to draw
* @param contentStream stream for drawing content
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawInsert,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawInsert(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",263,276,"/**
* Draws an insert icon for a text annotation.
* @param annotation the annotation to draw
* @param contentStream the content stream to render on
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",416,434,"/**
 * Draws an upward arrow for a text annotation.
 * @param annotation the text annotation to draw the arrow for
 * @param contentStream the stream to draw on
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawUpLeftArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawUpLeftArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",436,456,"/**
 * Draws an upward-left pointing arrow on a PDF annotation.
 * @param annotation the text annotation to draw on
 * @param contentStream the content stream for rendering
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawKey,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawKey(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",549,590,"/**
 * Draws a key icon on the PDF annotation.
 * @param annotation PDAnnotationText to draw on
 * @param contentStream PDAppearanceContentStream for rendering
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getCropBox,org.apache.pdfbox.pdmodel.PDPage:getCropBox(),442,453,"/**
 * Retrieves the crop box of a page.
 * @return PDRectangle representing the crop box or media box if crop box is not set
 */","* A rectangle, expressed in default user space units, defining the visible region of default user space. When the
     * page is displayed or printed, its contents are to be clipped (cropped) to this rectangle.
     * 
     * @return the cropbox of the page",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveBoundingBox,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveBoundingBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",1028,1037,"/**
* Determines the bounding box for a form field widget.
* @param fieldWidget the widget associated with the form field
* @param appearanceStream the appearance stream of the field
* @return PDRectangle representing the bounding box, or retranslated rectangle if null
*/","* Resolve the bounding box.
     * 
     * @param fieldWidget the annotation widget.
     * @param appearanceStream the annotations appearance stream.
     * @return the resolved boundingBox.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDLayoutAttributeObject.java,setBBox,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDLayoutAttributeObject:setBBox(org.apache.pdfbox.pdmodel.common.PDRectangle),857,864,"/**
* Sets the bounding box for the PDF object.
* @param bbox PDRectangle representing the new bounding box
*/","* Sets the bounding box.
     * 
     * @param bbox the bounding box",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setColor,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setColor(java.lang.String,org.apache.pdfbox.pdmodel.graphics.color.PDGamma)",425,431,"/**
* Sets the color for a named entry.
* @param name key for the color setting
* @param value PDGamma object representing the color
*/","* Sets a colour.
     * 
     * @param name the attribute name
     * @param value the colour",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setFourColors,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setFourColors(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDFourColours)",439,445,"/**
* Sets four colors for a PDF object.
* @param name key for the color setting
* @param value PDFourColours object representing the colors
*/","* Sets four colours.
     * 
     * @param name the attribute name
     * @param value the four colours",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,<init>,org.apache.pdfbox.pdmodel.PDPage:<init>(),82,85,"/**
 * Creates a new instance of PDPage with letter size.
 */","* Creates a new PDPage instance for embedding, with a size of U.S. Letter (8.5 x 11 inches).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createPage,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createPage(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),67,74,"/**
* Creates a new PDF page with specified dimensions.
* @param properties object containing page width and height
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.PDResources)",127,200,"/**
 * Initializes a content stream for a PDF page.
 * @param document The PDF document to add the content to.
 * @param sourcePage The page to which content will be added.
 * @param appendContent Specifies how to handle existing content.
 * @param compress Whether to compress the stream.
 * @param resetContext Whether to reset the graphics context.
 * @param stream The content stream to use.
 * @param resources The resources for the content stream.
 * @throws IOException If an I/O error occurs.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.cos.COSName,java.lang.String,org.apache.pdfbox.pdmodel.common.COSObjectable)",708,735,"/**
 * Adds an object to the resources dictionary.
 * @param kind type of resource (e.g., FONT)
 * @param prefix prefix for the generated key
 * @param object object to add
 * @return COSName representing the key of the added or existing object
 */",* Adds the given resource if it does not already exist.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.font.PDFont)",780,783,"/**
 * Associates a font with a given name in the document.
 * @param name the key under which to store the font
 * @param font the PDFont object to be stored
 */","* Sets the font resource with the given name.
     *
     * @param name the name of the resource
     * @param font the font to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",791,794,"/**
 * Sets a color space in the dictionary.
 * @param name the key for the color space
 * @param colorSpace the color space to set
 */","* Sets the color space resource with the given name.
     *
     * @param name the name of the resource
     * @param colorSpace the color space to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState)",802,805,"/**
* Associates an extended graphics state with a given name.
* @param name key for the graphics state
* @param extGState the graphics state to associate
*/","* Sets the extended graphics state resource with the given name.
     *
     * @param name the name of the resource
     * @param extGState the extended graphics state to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.shading.PDShading)",813,816,"/**
 * Adds a shading to the resource dictionary.
 * @param name key under which to store the shading
 * @param shading PDShading object to add
 */","* Sets the shading resource with the given name.
     *
     * @param name the name of the resource
     * @param shading the shading to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern)",824,827,"/**
 * Associates a pattern with a name in the dictionary.
 * @param name the key under which to store the pattern
 * @param pattern the pattern object to associate
 */","* Sets the pattern resource with the given name.
     *
     * @param name the name of the resource
     * @param pattern the pattern to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",835,838,"/**
 * Adds or updates a property list under a specified name.
 * @param name key for the property list
 * @param properties PDPropertyList object to be stored
 */","* Sets the property list resource with the given name.
     *
     * @param name the name of the resource
     * @param properties the property list to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,put,"org.apache.pdfbox.pdmodel.PDResources:put(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.graphics.PDXObject)",846,849,"/**
 * Adds an XObject to the resources.
 * @param name  COSName key for the XObject
 * @param xobject PDXObject to add
 */","* Sets the XObject resource with the given name.
     *
     * @param name the name of the resource
     * @param xobject the XObject to be added",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeIDTree,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeIDTree(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",1084,1127,"/**
 * Merges source ID tree into destination structure tree.
 * @param cloner utility for cloning PDF objects
 * @param srcStructTree source structure tree root
 * @param destStructTree destination structure tree root
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneIDTree,"org.apache.pdfbox.multipdf.Splitter:cloneIDTree(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot)",252,278,"/**
* Clones ID tree from source to destination structure tree.
* @param srcStructTree source structure tree root
* @param destStructTree destination structure tree root
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:initFringe(org.w3c.dom.Element),79,96,"/**
* Initializes fringe rectangle from XML element.
* @param element XML element containing 'fringe' attribute
* @throws IOException if 'fringe' format is incorrect
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:initFringe(org.w3c.dom.Element),81,98,"/**
 * Initializes fringe rectangle from element attribute.
 * @param element XML element containing fringe data
 * @throws IOException if fringe format is incorrect
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:initFringe(org.w3c.dom.Element),102,119,"/**
 * Initializes fringe rectangle from XML element.
 * @param element XML element containing fringe attribute
 * @throws IOException if fringe format is incorrect
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,initFringe,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:initFringe(org.w3c.dom.Element),82,99,"/**
* Initializes fringe rectangle from element attribute.
* @param element XML element containing 'fringe' attribute
* @throws IOException if 'fringe' format is incorrect
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,getFDF,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:getFDF(),116,130,"/**
* Retrieves the FDF dictionary; creates a new one if none exists.
* @return FDFDictionary object
*/","* This will get the FDF dictionary.
     *
     * @return The FDF dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(),60,73,"/**
* Initializes a new FDFDocument with default settings.
*/","* Constructor, creates a new FDF document.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,getCatalog,org.apache.pdfbox.pdmodel.fdf.FDFDocument:getCatalog(),139,154,"/**
 * Retrieves the FDF catalog from a document.
 * @return FDFCatalog object representing the catalog
 */","* This will get the FDF Catalog. This is guaranteed to not return null.
     *
     * @return The documents /Root dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFIconFit.java,getFractionalSpaceToAllocate,org.apache.pdfbox.pdmodel.fdf.FDFIconFit:getFractionalSpaceToAllocate(),151,167,"/**
* Retrieves or creates the fractional space allocation range.
* @return PDRange object representing the allocation
*/","* This is guaranteed to never return null.<br>
     *
     * To quote the PDF Spec ""An array of two numbers between 0.0 and 1.0 indicating the fraction of leftover space to
     * allocate at the left and bottom of the icon. A value of [0.0 0.0] positions the icon at the bottom-left corner of
     * the annotation rectangle; a value of [0.5 0.5] centers it within the rectangle. This entry is used only if the
     * icon is scaled proportionally. Default value: [0.5 0.5].""
     *
     * @return The fractional space to allocate.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildCIDSet,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildCIDSet(java.util.TreeMap),260,274,"/**
 * Builds a CID set from a mapping of CIDs to GIDs.
 * @param cidToGid map of CID to GID
 * @throws IOException if an I/O error occurs
 */","* Builds the CIDSet entry, required by PDF/A. This lists all CIDs in the font, including those
     * that don't have a GID.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDTilingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern:<init>(),59,68,"/**
 * Constructs a new PDTilingPattern.
 * Initializes with a COSStream and sets necessary attributes.
 */",* Creates a new tiling pattern.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getAppearance(),120,129,"/**
* Retrieves or creates the appearance dictionary for an annotation.
* @return PDAppearanceDictionary object associated with the annotation
*/","* Get the annotations appearance dictionary.
     * 
     * <p>
     * This will get the annotations appearance dictionary. If this is not
     * existent an empty appearance dictionary will be created.
     * 
     * @return the annotations appearance dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,prepareNonVisibleSignature,org.apache.pdfbox.pdmodel.PDDocument:prepareNonVisibleSignature(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),542,555,"/**
* Prepares a non-visible signature annotation.
* @param firstWidget the widget to configure for invisible signature
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAppearanceDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAppearanceDictionary(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",235,249,"/**
* Creates a PDF appearance dictionary for a signature field.
* @param holderForml form containing the signature field
* @param signatureField the signature field to apply the appearance to
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingBefore,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingBefore(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),102,120,"/**
* Inserts a sibling before the current outline item.
* @param newSibling the new sibling to insert
*/","* Insert a single sibling before this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,insertSiblingAfter,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:insertSiblingAfter(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),75,93,"/**
 * Inserts a sibling outline item after the current one.
 * @param newSibling the new sibling to insert
 */","* Insert a single sibling after this node.
     *
     * @param newSibling The item to insert.
     * @throws IllegalArgumentException if the given sibling node is part of a list 
     * (i.e. if it has a previous or a next sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,append,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:append(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),119,133,"/**
 * Adds a child to the outline.
 * @param newChild item to be added as a child
 */","* Appends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,prepend,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:prepend(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),141,155,"/**
 * Prepends a child to the outline.
 * @param newChild the new child item to add
 */","* Prepends the child to the linked list of children. This method only adjust pointers but doesn't take care of the
     * Count key in the parent hierarchy.
     * 
     * @param newChild",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThread.java,setFirstBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThread:setFirstBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),105,112,"/**
* Sets the first bead in the thread.
* @param bead the first bead to set
*/","* This will set the first bead in the thread.  When this is set it will
     * also set the thread property of the bead object.
     *
     * @param bead The first bead in the thread.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:<init>(),52,58,"/**
* Initializes a new PDThreadBead with default settings.
*/","* Default constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDThreadBead.java,appendBead,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead:appendBead(org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDThreadBead),142,149,"/**
* Appends a bead to the thread.
* @param append bead to be added
*/","* Append a bead after this bead.  This will correctly set the next/previous beads in the
     * linked list.
     *
     * @param append The bead to insert.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeMarkInfo,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeMarkInfo(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",950,966,"/**
 * Merges mark information from source catalog to destination catalog.
 * @param destCatalog destination PDF document catalog
 * @param srcCatalog source PDF document catalog
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeViewerPreferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeViewerPreferences(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",894,936,"/**
 * Merges viewer preferences from source catalog to destination catalog.
 * @param destCatalog destination PDF document catalog
 * @param srcCatalog source PDF document catalog
 * @param cloner utility for cloning PDF objects
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,setRoleMap,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:setRoleMap(java.util.Map),198,203,"/**
* Sets the role map dictionary.
* @param roleMap mapping of role names to values
*/","* Sets the role map.
     * 
     * @param roleMap the role map",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setName,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setName(java.lang.String,java.lang.String)",198,204,"/**
* Sets a name-value pair in the COS object.
* @param name key for the dictionary entry
* @param value value to be set for the given key
*/","* Sets a name value.
     * 
     * @param name the attribute name
     * @param value the name value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,setRenderingIntent,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:setRenderingIntent(java.lang.String),352,355,"/**
 * Sets the rendering intent.
 * @param ri rendering intent string to be set
 */","* This will set the rendering intent for the graphics state.
     *
     * @param ri The new rendering intent",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,setN,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:setN(java.lang.String),64,67,"/**
 * Sets the name attribute.
 * @param name the new name to be set
 */","* This will set the name of the action to be performed.
     *
     * @param name The name of the action to be performed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setStyle,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setStyle(java.lang.String),101,104,"/**
 * Sets the style of the PDF element.
 * @param s the style string to be applied
 */","* This will set the border effect, see the STYLE_* constants for valid values.
     *
     * @param s the border effect to use",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument),62,69,"/**
* Initializes page labels for a PDF document.
* @param document the PDDocument to apply labels to
*/","* Creates an empty page label dictionary for the given document.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,<init>,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:<init>(java.lang.String,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode)",53,58,"/**
* Constructs a new PDStructureElement with specified type and parent.
* @param structureType the type of the structure element
* @param parent the parent node in the structure hierarchy
*/","* Constructor with required values.
     *
     * @param structureType The structure type. Constants are available in the
     * {@link StandardStructureTypes} class.
     * @param parent The parent structure node.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureTreeRoot.java,<init>,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureTreeRoot:<init>(),57,60,"/**
 * Constructs a new PDStructureTreeRoot with a specified type.
 * @param TYPE the type of structure tree root
 */","* Default Constructor.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/pattern/PDShadingPattern.java,<init>,org.apache.pdfbox.pdmodel.graphics.pattern.PDShadingPattern:<init>(),38,41,"/**
* Initializes a new shading pattern.
* Sets the pattern type to shading in the COS object.
*/",* Creates a new shading pattern.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDAction.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDAction:<init>(),50,54,"/**
* Initializes a new PDAction with a default COSDictionary.
* Sets the type of the action to a predefined constant.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getDocumentOutline,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getDocumentOutline(),196,200,"/**
* Retrieves document outline.
* @return PDDocumentOutline object or null if not found
*/","* Get the outline associated with this document or null if it does not exist.
     *
     * @return The document's outline.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,getParent,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:getParent(),53,65,"/**
 * Retrieves the parent outline node.
 * @return PDOutlineNode or null if no parent exists
 */",* @return The parent of this node or null if there is no parent.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(int),178,190,"/**
* Sets value at specified index.
* @param index position in the export values list
* @throws IOException if an I/O error occurs
*/","* Set the selected option given its index, and try to update the visual appearance.
     * 
     * NOTE: this method is only usable if there are export values and used for 
     * radio buttons with FLAG_RADIOS_IN_UNISON not set.
     * 
     * @param index index of option to be selected
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the index provided is not a valid index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,updateByOption,org.apache.pdfbox.pdmodel.interactive.form.PDButton:updateByOption(java.lang.String),412,439,"/**
* Updates widget by option value.
* @param value the option value to update
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDRectlinearMeasureDictionary.java,<init>,org.apache.pdfbox.pdmodel.interactive.measurement.PDRectlinearMeasureDictionary:<init>(),38,41,"/**
 * Initializes a new PDRectlinearMeasureDictionary with a specific subtype.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/pagenavigation/PDTransition.java,<init>,org.apache.pdfbox.pdmodel.interactive.pagenavigation.PDTransition:<init>(),39,42,"/**
 * Constructs a PDTransition with default style R.
 */","* creates a new transition with default ""replace"" style {@link PDTransitionStyle#R}",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setDate,"org.apache.pdfbox.cos.COSDictionary:setDate(java.lang.String,java.util.Calendar)",316,319,"/**
 * Sets a date value in the document.
 * @param key the key under which to store the date
 * @param date the Calendar object representing the date
 */","* Set the value of a date entry in the dictionary.
     *
     * @param key The key to the date value.
     * @param date The date value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/cos/COSDictionary.java,setEmbeddedDate,"org.apache.pdfbox.cos.COSDictionary:setEmbeddedDate(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSName,java.util.Calendar)",339,351,"/**
* Sets a date in the embedded dictionary.
* @param embedded name of the embedded dictionary
* @param key dictionary key for the date
* @param date Calendar object to set
*/","* Set the date object.
     *
     * @param embedded The embedded dictionary.
     * @param key The key to the date.
     * @param date The date to set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCreationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setCreationDate(java.util.Calendar),220,223,"/**
 * Sets the creation date of an object.
 * @param date calendar instance representing the creation date
 */","* This will set the creation date of the document.
     *
     * @param date The new creation date for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setModificationDate,org.apache.pdfbox.pdmodel.PDDocumentInformation:setModificationDate(java.util.Calendar),240,243,"/**
 * Sets the modification date.
 * @param date new modification date
 */","* This will set the modification date of the document.
     *
     * @param date The new modification date for the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setCreationDate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setCreationDate(java.util.Calendar),795,798,"/**
 * Sets the creation date of an annotation.
 * @param date Calendar object representing the creation date
 */","* Set the creation date.
     *
     * @param date The date the annotation was created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setModifiedDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setModifiedDate(java.util.Calendar),650,653,"/**
 * Sets the modified date of the object.
 * @param c Calendar instance representing the new modification date
 */","* This will set the date and time the annotation was modified.
     *
     * @param c the date and time the annotation was created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,setCreationDate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:setCreationDate(java.util.Calendar),176,179,"/**
* Sets the creation date of the COS object.
* @param creationDate Calendar representing the creation date
*/","* This will set the date and time the annotation was created.
     *
     * @param creationDate the date and time the annotation was created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSignature.java,setSignDate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature:setSignDate(java.util.Calendar),195,198,"/**
 * Sets the signing date in the dictionary.
 * @param cal Calendar object representing the signing date
 */","* Set the sign date.
     *
     * @param cal the date to be used as sign date",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentInformation.java,setCustomMetadataValue,"org.apache.pdfbox.pdmodel.PDDocumentInformation:setCustomMetadataValue(java.lang.String,java.lang.String)",291,294,"/**
 * Sets custom metadata value.
 * @param fieldName name of the field
 * @param fieldValue value to be set
 */","* Set the custom metadata value.
     *
     * @param fieldName The name of the custom metadata field.
     * @param fieldValue The value to the custom metadata field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setString,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setString(java.lang.String,java.lang.String)",89,95,"/**
* Sets a string value in the COS object.
* @param name key for the dictionary entry
* @param value string to be set
*/","* Sets a string attribute value.
     * 
     * @param name the attribute name
     * @param value the string attribute value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDURIDictionary.java,setBase,org.apache.pdfbox.pdmodel.interactive.action.PDURIDictionary:setBase(java.lang.String),85,88,"/**
 * Sets the base string in the COS object.
 * @param base the base string to be set
 */","* This will set the base URI to be used in resolving relative URI references.
     * URI actions within the document may specify URIs in partial form, to be interpreted
     * relative to this base address. If no base URI is specified, such partial URIs
     * will be interpreted relative to the location of the document itself.
     * The use of this entry is parallel to that of the body element &lt;BASE&gt;, as described
     * in the HTML 4.01 Specification.
     *
     * @param base The base URI to be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDPropBuildDataDict.java,setVersion,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDPropBuildDataDict:setVersion(java.lang.String),119,122,"/**
 * Sets the application version in the dictionary.
 * @param applicationVersion the version string to be stored
 */","* A text string indicating the version of the application implementation, as described by the
     * <code>Name</code> attribute in this dictionary. When set by Adobe Acrobat, this entry is in
     * the format: major.minor.micro (for example 7.0.7).
     * <p>
     * NOTE: Version value is specific for build data dictionary when used as the <code>App</code>
     * dictionary in a build properties dictionary.
     * </p>
     *
     * @param applicationVersion the application implementation version",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setUnits,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setUnits(java.lang.String),119,122,"/**
 * Sets the units for the COS object.
 * @param units the unit string to be set
 */","* This will set the label for the units.
     * 
     * @param units the label for the units",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setFractionalDisplay,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setFractionalDisplay(java.lang.String),160,174,"/**
* Sets the fractional display format.
* @param fractionalDisplay format type (""D"", ""F"", ""R"", ""T"", or null)
*/","* This will set the value for the manner to display a fractional value.
     * Allowed values are ""D"", ""F"", ""R"", ""T"" and null.
     * 
     * @param fractionalDisplay the manner to display a fractional value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setThousandsSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setThousandsSeparator(java.lang.String),231,234,"/**
* Sets the thousands separator for number formatting.
* @param thousandsSeparator character used to separate thousands
*/","* This will set the text to be used between orders of thousands in display of numerical values.
     * 
     * @param thousandsSeparator thousands separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDecimalSeparator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDecimalSeparator(java.lang.String),251,254,"/**
 * Sets the decimal separator in the COS object.
 * @param decimalSeparator the new decimal separator string
 */","* This will set the text to be used as the decimal point in displaying numerical values.
     * 
     * @param decimalSeparator decimal separator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPrefixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPrefixString(java.lang.String),269,272,"/**
* Sets the label prefix string.
* @param labelPrefixString the prefix to be set
*/","* This will set the text to be concatenated to the left of the label specified by U.
     * @param labelPrefixString label prefix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelSuffixString,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelSuffixString(java.lang.String),289,292,"/**
 * Sets the label suffix string.
 * @param labelSuffixString the suffix to be appended to labels
 */","* This will set the text to be concatenated after the label specified by U.
     * 
     * @param labelSuffixString label suffix",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setLabelPositionToValue,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setLabelPositionToValue(java.lang.String),310,322,"/**
* Sets the label position to a specified value.
* @param labelPositionToValue ""S"" for suffix, ""P"" for prefix, or null
*/","* This will set the value indicating the ordering of the label specified by U to the calculated
     * unit value. Possible values are ""S"", ""P"" and null.
     *
     * @param labelPositionToValue label position",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacSubtype,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacSubtype(java.lang.String),190,202,"/**
 * Sets the MAC subtype in the PDF document.
 * @param macSubtype the MAC subtype to set
 */","* Set the mac subtype.
     *
     * @param macSubtype The mac subtype.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacCreator,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacCreator(java.lang.String),220,232,"/**
* Sets the MAC creator in PDF parameters.
* @param macCreator MAC creator string to be set
*/","* Set the mac Creator.
     *
     * @param macCreator The mac Creator.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/filespecification/PDEmbeddedFile.java,setMacResFork,org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile:setMacResFork(java.lang.String),250,262,"/**
* Sets the Mac resource fork in PDF parameters.
* @param macResFork the Mac resource fork string to set
*/","* Set the mac ResFork.
     *
     * @param macResFork The mac ResFork.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeLanguage,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeLanguage(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",938,948,"/**
* Merges language from source catalog to destination catalog.
* @param destCatalog the destination PDF document catalog
* @param srcCatalog the source PDF document catalog
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFField.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFField:<init>(org.w3c.dom.Element),75,108,"/**
* Constructs an FDFField from XML.
* @param fieldXML XML element representing the field
* @throws IOException if I/O error occurs during processing
*/","* This will create an FDF field from an XFDF XML document.
     *
     * @param fieldXML The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:exportFDF(),100,116,"/**
 * Exports field data to FDF format.
 * @return FDFField object representing the field and its children
 * @throws IOException if an I/O error occurs during export
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:exportFDF(),141,152,"/**
* Exports field data to FDF format.
* @return FDFField object containing field name and value
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentGroup.java,<init>,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup:<init>(java.lang.String),33,37,"/**
* Creates an optional content group with a specified name.
* @param name the name of the content group
*/","* Creates a new optional content group (OCG).
     * @param name the name of the content group",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,addGroup,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:addGroup(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),169,182,"/**
 * Adds a PDF optional content group to the document.
 * @param ocg the optional content group to add
 */","* Adds an optional content group (OCG).
     * @param ocg the optional content group",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,getBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:getBaseState(),207,212,"/**
* Retrieves base state from dictionary.
* @return BaseState enum value or null if not found
*/","* Returns the base state for optional content groups.
     * @return the base state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setBaseState,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setBaseState(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties$BaseState),218,222,"/**
 * Sets the base state in the dictionary.
 * @param state BaseState object to be set
 */","* Sets the base state for optional content groups.
     * @param state the base state",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup,boolean)",400,460,"/**
 * Enables or disables a PDF group.
 * @param group the group to enable/disable
 * @param enable true to enable, false to disable
 * @return true if the group was successfully toggled, false otherwise
 */","* Enables or disables an optional content group.
     * @param group the group object
     * @param enable true to enable, false to disable
     * @return true if the group already had an on or off setting, false otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setInteger,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setInteger(java.lang.String,int)",264,270,"/**
* Sets an integer value in the COS dictionary.
* @param name key for the value
* @param value integer to set
*/","* Sets an integer.
     * 
     * @param name the attribute name
     * @param value the integer",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,int)",350,356,"/**
* Sets an integer value in the COS object.
* @param name key for the dictionary entry
* @param value integer to set
*/","* Sets an integer number.
     * 
     * @param name the attribute name
     * @param value the integer number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setDenominator,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setDenominator(int),191,194,"/**
 * Sets the denominator value in the COS object.
 * @param denominator the denominator to be set
 */","* This will set the precision or denominator of a fractional amount.
     * 
     * @param denominator the precision or denominator",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setInvisible(boolean),512,515,"/**
 * Sets the annotation visibility.
 * @param invisible true to make annotation invisible, false otherwise
 */","* Set the invisible flag.
     *
     * @param invisible The new invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setHidden(boolean),532,535,"/**
 * Sets the annotation's visibility.
 * @param hidden true to hide, false to show
 */","* Set the hidden flag.
     *
     * @param hidden The new hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setPrinted(boolean),552,555,"/**
* Sets the printed flag of an annotation.
* @param printed boolean indicating if the document is printed
*/","* Set the printed flag.
     *
     * @param printed The new printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoZoom(boolean),572,575,"/**
* Sets zoom restriction.
* @param noZoom true to disable zooming, false otherwise
*/","* Set the noZoom flag.
     *
     * @param noZoom The new noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoRotate(boolean),592,595,"/**
* Sets the no rotate flag for an annotation.
* @param noRotate true to disable rotation, false otherwise
*/","* Set the noRotate flag.
     *
     * @param noRotate The new noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setNoView(boolean),612,615,"/**
* Sets the ""no view"" flag for an annotation.
* @param noView true to hide annotation, false otherwise
*/","* Set the noView flag.
     *
     * @param noView The new noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setReadOnly(boolean),632,635,"/**
 * Sets the read-only flag of an annotation.
 * @param readOnly true to make the annotation read-only, false otherwise
 */","* Set the readOnly flag.
     *
     * @param readOnly The new readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLocked(boolean),652,655,"/**
 * Sets the locked state of an annotation.
 * @param locked true to lock, false to unlock
 */","* Set the locked flag.
     *
     * @param locked The new locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setToggleNoView(boolean),672,675,"/**
* Sets whether to toggle no view.
* @param toggleNoView flag indicating if no view should be toggled
*/","* Set the toggleNoView flag.
     *
     * @param toggleNoView The new toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:setLockedContents(boolean),692,695,"/**
* Sets the locked contents flag.
* @param lockedContents true to lock contents, false otherwise
*/","* Set the LockedContents flag.
     * 
     * @param lockedContents The new LockedContents flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setInvisible,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setInvisible(boolean),407,410,"/**
 * Sets the visibility of an object.
 * @param invisible true to make the object invisible, false otherwise
 */","* Set the invisible flag.
     * 
     * @param invisible The new invisible flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setHidden,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setHidden(boolean),427,430,"/**
 * Sets the hidden flag of the PDF object.
 * @param hidden true to hide, false to show
 */","* Set the hidden flag.
     * 
     * @param hidden The new hidden flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setPrinted,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setPrinted(boolean),447,450,"/**
* Sets the printed flag of the PDF document.
* @param printed boolean indicating if the document is printed
*/","* Set the printed flag.
     * 
     * @param printed The new printed flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoZoom,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoZoom(boolean),467,470,"/**
* Sets the ""no zoom"" flag in the PDF document.
* @param noZoom true to disable zooming, false otherwise
*/","* Set the noZoom flag.
     * 
     * @param noZoom The new noZoom flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoRotate,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoRotate(boolean),487,490,"/**
* Sets the rotate flag.
* @param noRotate if true, disables rotation
*/","* Set the noRotate flag.
     * 
     * @param noRotate The new noRotate flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setNoView(boolean),507,510,"/**
* Sets the ""no view"" flag in the COS object.
* @param noView boolean indicating whether to set or clear the flag
*/","* Set the noView flag.
     * 
     * @param noView The new noView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setReadOnly(boolean),527,530,"/**
* Sets the read-only flag of the COS object.
* @param readOnly true to make the object read-only, false otherwise
*/","* Set the readOnly flag.
     * 
     * @param readOnly The new readOnly flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLocked,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLocked(boolean),547,550,"/**
* Sets the locked status of the object.
* @param locked true to lock, false to unlock
*/","* Set the locked flag.
     * 
     * @param locked The new locked flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setToggleNoView,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setToggleNoView(boolean),567,570,"/**
* Sets the toggle no view flag.
* @param toggleNoView boolean value to enable or disable the flag
*/","* Set the toggleNoView flag.
     * 
     * @param toggleNoView The new toggleNoView flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,setLockedContents,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:setLockedContents(boolean),596,599,"/**
* Sets the locked contents flag.
* @param lockedContents true if contents are locked, false otherwise
*/","* Set the LockedContents flag. If set, do not allow the contents of the annotation to be
     * modified by the user. This flag does not restrict deletion of the annotation or changes to
     * other annotation properties, such as position and size.
     *
     * @param lockedContents The new LockedContents flag value.
     * @see
     * <a href=""https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/PDF32000_2008.pdf#page=393"">PDF
     * 32000-1:2008 12.5.3, Table 165</a>
     * @see #isLockedContents()
     * @see #FLAG_LOCKED_CONTENTS
     * @since PDF 1.7",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setFilterRequired(boolean),126,129,"/**
* Sets whether filtering is required.
* @param flag true if filter is required, false otherwise
*/","* set true if the filter shall be required.
     * 
     * @param flag if true, the specified Filter shall be used when signing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setSubFilterRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setSubFilterRequired(boolean),145,148,"/**
* Sets whether subfilter is required.
* @param flag true if subfilter is required, false otherwise
*/","* set true if the subfilter shall be required.
     * 
     * @param flag if true, the first supported SubFilter in the array shall be used when signing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setDigestMethodRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setDigestMethodRequired(boolean),164,167,"/**
* Sets whether digest method is required.
* @param flag true if digest method is required, false otherwise
*/","* set true if the DigestMethod shall be required.
     * 
     * @param flag if true, one digest from the array shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setVRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setVRequired(boolean),183,186,"/**
* Sets the required flag for validation.
* @param flag true if validation is required, false otherwise
*/","* set true if the V entry shall be required.
     * 
     * @param flag if true, the V entry shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setReasonRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setReasonRequired(boolean),202,205,"/**
 * Sets whether reason is required.
 * @param flag true if reason is required, false otherwise
 */","* set true if the Reason shall be required.
     * 
     * @param flag if true, the Reason entry shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setLegalAttestationRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setLegalAttestationRequired(boolean),221,224,"/**
* Sets legal attestation requirement.
* @param flag true to require legal attestation, false otherwise
*/","* set true if the LegalAttestation shall be required.
     * 
     * @param flag if true, the LegalAttestation entry shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValue.java,setAddRevInfoRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValue:setAddRevInfoRequired(boolean),240,243,"/**
 * Sets whether to add revision information.
 * @param flag true to enable, false to disable
 */","* set true if the AddRevInfo shall be required.
     * 
     * @param flag if true, the AddRevInfo shall be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectRequired(boolean),114,117,"/**
 * Sets whether the subject field is required.
 * @param flag true if subject is required, false otherwise
 */","* set true if subject shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setIssuerRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setIssuerRequired(boolean),133,136,"/**
* Sets whether issuer is required.
* @param flag true if issuer is required, false otherwise
*/","* set true if Issuer shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Issuer shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setOIDRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setOIDRequired(boolean),152,155,"/**
 * Sets whether OID is required.
 * @param flag true if OID is required, false otherwise
 */","* set true if OID shall be required as a constraint on signature.
     *
     * @param flag if true, the specified OID shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setSubjectDNRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setSubjectDNRequired(boolean),171,174,"/**
* Sets whether subject DN is required.
* @param flag true if subject DN is required, false otherwise
*/","* set true if subject DN shall be required as a constraint on signature.
     *
     * @param flag if true, the specified Subject DN shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setKeyUsageRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setKeyUsageRequired(boolean),190,193,"/**
* Sets key usage requirement.
* @param flag indicates if key usage is required
*/","* set true if KeyUsage shall be required as a constraint on signature.
     *
     * @param flag if true, the specified KeyUsage shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/PDSeedValueCertificate.java,setURLRequired,org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSeedValueCertificate:setURLRequired(boolean),209,212,"/**
* Sets whether URL is required.
* @param flag true if URL is required, false otherwise
*/","* set true if URL shall be required as a constraint on signature.
     *
     * @param flag if true, the specified URL shall be enforced as a constraint.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setItalic,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setItalic(boolean),374,377,"/**
 * Sets the italic style of the text.
 * @param italic true to enable italic, false otherwise
 */","* Set the italic property of the text.
     *
     * @param italic The new italic flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setBold,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setBold(boolean),394,397,"/**
* Sets the font to bold.
* @param bold true if the font should be bold, false otherwise
*/","* Set the bold property of the text.
     *
     * @param bold The new bold flag.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setSignaturesExist,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setSignaturesExist(boolean),642,645,"/**
* Sets whether signatures exist in the document.
* @param signaturesExist true if signatures are present, false otherwise
*/","* Set the SignaturesExist bit.
     *
     * @param signaturesExist The value for SignaturesExist.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setAppendOnly,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setAppendOnly(boolean),682,685,"/**
* Sets the append-only flag.
* @param appendOnly true to enable, false to disable
*/","* Set the AppendOnly bit.
     *
     * @param appendOnly The value for AppendOnly.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setSort,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setSort(boolean),283,286,"/**
* Sets sorting flag for form fields.
* @param sort true to enable sorting, false otherwise
*/","* Set the Sort bit.
     * 
     * @see #isSort()
     * @param sort The value for Sort.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setMultiSelect,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setMultiSelect(boolean),303,306,"/**
 * Sets whether the field supports multiple selections.
 * @param multiSelect true if multiple selections are allowed, false otherwise
 */","* Set the MultiSelect bit.
     *
     * @param multiSelect The value for MultiSelect.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setDoNotSpellCheck(boolean),323,326,"/**
* Sets whether spell checking is disabled.
* @param doNotSpellCheck flag to disable spell checking
*/","* Set the DoNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for DoNotSpellCheck.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCommitOnSelChange,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCommitOnSelChange(boolean),343,346,"/**
 * Sets whether to commit on selection change.
 * @param commitOnSelChange flag indicating if commit should occur on selection change
 */","* Set the CommitOnSelChange bit.
     *
     * @param commitOnSelChange The value for CommitOnSelChange.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setCombo,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setCombo(boolean),363,366,"/**
* Sets the combo flag in the COS object.
* @param combo boolean value to set the flag
*/","* Set the Combo bit.
     *
     * @param combo The value for Combo.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,setEdit,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:setEdit(boolean),73,76,"/**
* Sets the editable flag of a PDF form field.
* @param edit true to enable editing, false otherwise
*/","* Set the Edit bit.
     *
     * @param edit The value for Edit.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setReadOnly,org.apache.pdfbox.pdmodel.interactive.form.PDField:setReadOnly(boolean),148,151,"/**
 * Sets the read-only flag of the dictionary.
 * @param readonly true to make the dictionary read-only, false otherwise
 */","* sets the field to be read-only.
     * 
     * @param readonly The new flag for readonly.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setRequired,org.apache.pdfbox.pdmodel.interactive.form.PDField:setRequired(boolean),168,171,"/**
 * Sets whether the field is required.
 * @param required true if the field must be filled out, false otherwise
 */","* sets the flag whether the field is to be required to have a value at the time it is exported
     * by a submit-form action.
     *
     * @param required The new flag for required.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,setNoExport,org.apache.pdfbox.pdmodel.interactive.form.PDField:setNoExport(boolean),187,190,"/**
* Sets export flag for the dictionary.
* @param noExport true to prevent export, false otherwise
*/","* sets the field to be not exported.
     * 
     * @param noExport The new flag for noExport.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDPushButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),40,44,"/**
* Creates a push button on a PDF form.
* @param acroForm the parent form containing the button
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),43,47,"/**
* Initializes a radio button with an AcroForm.
* @param acroForm the form containing this radio button
*/","* @see PDField#PDField(PDAcroForm)
     *
     * @param acroForm The acroform.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java,setRadiosInUnison,org.apache.pdfbox.pdmodel.interactive.form.PDRadioButton:setRadiosInUnison(boolean),69,72,"/**
* Sets whether radio buttons are in unison.
* @param radiosInUnison true if radios should be synchronized, false otherwise
*/","* From the PDF Spec <br>
     * If set, a group of radio buttons within a radio button field that use the same value for the on state will turn
     * on and off in unison; that is if one is checked, they are all checked. If clear, the buttons are mutually
     * exclusive (the same behavior as HTML radio buttons).
     *
     * @param radiosInUnison The new flag for radiosInUnison.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setMultiline,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setMultiline(boolean),75,78,"/**
* Sets multiline flag for form field.
* @param multiline true to enable multiline, false otherwise
*/","* Set the multiline bit.
     *
     * @param multiline The value for the multiline.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setPassword,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setPassword(boolean),93,96,"/**
* Sets the password flag for the form field.
* @param password true to enable password protection, false otherwise
*/","* Set the password bit.
     *
     * @param password The value for the password.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setFileSelect,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setFileSelect(boolean),111,114,"/**
 * Sets the file select flag.
 * @param fileSelect true to enable file selection, false otherwise
 */","* Set the file select bit.
     *
     * @param fileSelect The value for the fileSelect.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotSpellCheck,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotSpellCheck(boolean),129,132,"/**
* Sets whether to disable spell checking.
* @param doNotSpellCheck true to disable spell checking, false otherwise
*/","* Set the doNotSpellCheck bit.
     *
     * @param doNotSpellCheck The value for the doNotSpellCheck.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setDoNotScroll,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setDoNotScroll(boolean),147,150,"/**
* Sets whether scrolling is disabled.
* @param doNotScroll true to disable scrolling, false otherwise
*/","* Set the doNotScroll bit.
     *
     * @param doNotScroll The value for the doNotScroll.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setComb,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setComb(boolean),165,168,"/**
* Sets the 'comb' flag in the COS object.
* @param comb true to enable comb mode, false otherwise
*/","* Set the comb bit.
     *
     * @param comb The value for the comb.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,setRichText,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:setRichText(boolean),183,186,"/**
* Sets rich text flag.
* @param richText true to enable rich text, false otherwise
*/","* Set the richText bit.
     *
     * @param richText The value for the richText.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int,org.apache.pdfbox.filter.DecodeOptions)",61,106,"/**
 * Decodes JPX encoded image data.
 * @param encoded input stream containing encoded data
 * @param decoded output stream for decoded image data
 * @param parameters decoding parameters
 * @param index image index (not used)
 * @param options decode options
 * @return DecodeResult object with decoding info
 * @throws IOException if an I/O error occurs
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,checkPages,org.apache.pdfbox.pdfparser.COSParser:checkPages(org.apache.pdfbox.cos.COSDictionary),938,953,"/**
 * Checks and rebuilds page objects in the PDF document.
 * @param root the root dictionary of the PDF
 * @throws IOException if page tree is missing or invalid
 */","* Check if all entries of the pages dictionary are present. Those which can't be dereferenced are removed.
     * 
     * @param root the root dictionary of the pdf
     * @throws java.io.IOException if the page tree root is null",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPages,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPages(),164,168,"/**
* Retrieves the page tree from the PDF document.
* @return PDPageTree containing all pages of the document
*/","* Returns all pages in the document, as a page tree.
     * 
     * @return PDPageTree providing all pages of the document",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,<init>,org.apache.pdfbox.pdmodel.PDPageTree:<init>(org.apache.pdfbox.cos.COSDictionary),68,71,"/**
* Constructs a PDPageTree from a COSDictionary.
* @param root dictionary representing the page tree root
*/","* Constructor for reading.
     *
     * @param root A page tree root.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(org.apache.pdfbox.pdmodel.PDPage),465,468,"/**
 * Removes a page from the document.
 * @param page PDPage object to be removed
 */","* Removes the given page from the page tree.
     *
     * @param page The page to remove.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertBefore,"org.apache.pdfbox.pdmodel.PDPageTree:insertBefore(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",530,552,"/**
* Inserts a new page before an existing page in a PDF document.
* @param newPage the page to be inserted
* @param nextPage the page after which the new page will be inserted
*/","* Insert a page before another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param nextPage the page that is to be after the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,insertAfter,"org.apache.pdfbox.pdmodel.PDPageTree:insertAfter(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPage)",562,584,"/**
 * Inserts a new page after an existing page in a PDF document.
 * @param newPage the page to be inserted
 * @param prevPage the existing page after which the new page is inserted
 */","* Insert a page after another page within a page tree.
     *
     * @param newPage the page to be inserted.
     * @param prevPage the page that is to be before the new page.
     * @throws IllegalArgumentException if one attempts to insert a page that isn't part of a page
     * tree.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureElement.java,incrementRevisionNumber,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement:incrementRevisionNumber(),492,495,"/**
 * Increments the revision number by one.
 */",* Increments th revision number.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFlagBit,"org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFlagBit(int,boolean)",255,267,"/**
* Sets a specific flag bit.
* @param bit the bit position to update
* @param value true to set, false to clear the bit
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",60,91,"/**
* Creates a PDImageXObject from a BufferedImage.
* @param document PDDocument to add the image to
* @param image 1-bit black and white BufferedImage
* @return PDImageXObject created from the image
* @throws IOException if an I/O error occurs
*/","* Creates a new CCITT group 4 (T6) compressed image XObject from a b/w BufferedImage. This
     * compression technique usually results in smaller images than those produced by {@link LosslessFactory#createFromImage(PDDocument, BufferedImage)
     * }.
     *
     * @param document the document to create the image as part of.
     * @param image the image.
     * @return a new image XObject.
     * @throws IOException if there is an error creating the image.
     * @throws IllegalArgumentException if the BufferedImage is not a b/w image.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromRandomAccessImpl,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromRandomAccessImpl(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,int)",209,232,"/**
* Creates an image from a TIFF file.
* @param document PDF document to add the image
* @param reader RandomAccessRead for reading the TIFF file
* @param number page number in the TIFF file
* @return PDImageXObject or null if no data is extracted
*/","* Creates a new CCITT Fax compressed image XObject from a TIFF file.
     * 
     * @param document the document to create the image as part of.
     * @param reader the random access TIFF file which contains a suitable CCITT
     * compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject, or null if no such page
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerComponent(int),75,79,"/**
* Sets bits per color component.
* @param bitsPerComponent number of bits per component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerComponent,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerComponent(int),75,79,"/**
* Sets bits per color component.
* @param bitsPerComponent number of bits for each color component
*/","* Set the number of bits per component.
     *
     * @param bitsPerComponent the number of bits per component",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType4:setBitsPerCoordinate(int),102,106,"/**
* Sets bits per coordinate.
* @param bitsPerCoordinate number of bits for each coordinate
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDTriangleBasedShadingType.java,setBitsPerCoordinate,org.apache.pdfbox.pdmodel.graphics.shading.PDShadingType5:setBitsPerCoordinate(int),102,106,"/**
* Sets bits per coordinate.
* @param bitsPerCoordinate number of bits for each coordinate
*/","* Set the number of bits per coordinate.
     *
     * @param bitsPerCoordinate the number of bits per coordinate",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteXRefInc,org.apache.pdfbox.pdfwriter.COSWriter:doWriteXRefInc(org.apache.pdfbox.cos.COSDocument),710,750,"/**
 * Writes cross-reference information for the PDF document.
 * @param doc the PDF document to update
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/taggedpdf/PDStandardAttributeObject.java,setNumber,"org.apache.pdfbox.pdmodel.documentinterchange.taggedpdf.PDStandardAttributeObject:setNumber(java.lang.String,float)",336,342,"/**
* Sets a float value in the COS object.
* @param name key for the value
* @param value float value to set
*/","* Sets a float number.
     * 
     * @param name the attribute name
     * @param value the float number",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDBorderEffectDictionary.java,setIntensity,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderEffectDictionary:setIntensity(float),81,84,"/**
 * Sets intensity value.
 * @param i intensity level to be set
 */","* This will set the intensity of the applied effect.
     *
     * @param i the intensity of the effect values 0 to 2",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/measurement/PDNumberFormatDictionary.java,setConversionFactor,org.apache.pdfbox.pdmodel.interactive.measurement.PDNumberFormatDictionary:setConversionFactor(float),139,142,"/**
 * Sets the conversion factor in the COS object.
 * @param conversionFactor the new conversion factor value to be set
 */","* This will set the conversion factor.
     * 
     * @param conversionFactor the conversion factor",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,bfSearchForObjStreams,org.apache.pdfbox.pdfparser.BruteForceParser:bfSearchForObjStreams(java.util.Map),303,373,"/**
 * Searches for object streams using brute force.
 * @param xrefTable map to store object keys and their offsets
 * @throws IOException if an I/O error occurs
 */","* Brute force search for all objects streams of a pdf.
     * 
     * @param xrefTable the cross reference table of the document
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseFileObject,"org.apache.pdfbox.pdfparser.COSParser:parseFileObject(java.lang.Long,org.apache.pdfbox.cos.COSObjectKey)",525,611,"/**
 * Parses a PDF file object.
 * @param objOffset offset of the object in the file
 * @param objKey key identifying the object
 * @return COSBase object or null if parsing fails
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXrefObjStream,"org.apache.pdfbox.pdfparser.XrefParser:parseXrefObjStream(long,boolean)",265,286,"/**
* Parses an XRef object stream.
* @param objByteOffset byte offset of the object
* @param isStandalone true if parsing a standalone XRef stream
* @return previous XRef byte offset or -1 if not found
* @throws IOException on I/O errors during parsing
*/","* Parses an xref object stream starting with indirect object id.
     * 
     * @return value of PREV item in dictionary or <code>-1</code> if no such item exists",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updatePageReferences,"org.apache.pdfbox.multipdf.PDFMergerUtility:updatePageReferences(org.apache.pdfbox.multipdf.PDFCloneUtility,java.util.Map,java.util.Map)",1398,1419,"/**
 * Updates page references in a PDF document.
 * @param cloner utility for cloning PDF objects
 * @param numberTreeAsMap map of number tree entries
 * @param objMapping mapping of original to cloned objects
 * @throws IOException if an I/O error occurs
 */",* Update the Pg and Obj references to the new (merged) page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseDirObject,org.apache.pdfbox.pdfparser.BaseParser:parseDirObject(),948,1016,"/**
* Parses a directory object from the input source.
* @return COSBase object or null if unknown type
* @throws IOException if an I/O error occurs
*/","* This will parse a directory object from the stream.
     *
     * @return The parsed object.
     *
     * @throws IOException If there is an error during parsing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,parse,org.apache.pdfbox.pdfparser.PDFParser:parse(),134,137,"/**
 * Parses document with default settings.
 * @return PDDocument instance representing parsed PDF
 * @throws IOException if parsing fails
 */","* This will parse the stream and populate the PDDocument object. This will close the keystore stream when it is
     * done parsing. Lenient mode is active by default.
     *
     * @return the populated PDDocument
     *
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException If there is an error reading from the stream or corrupt data is found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:processTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),227,269,"/**
* Processes a transparency group in the current page.
* @param group PDTransparencyGroup to be processed
* @throws IOException if an I/O error occurs during processing
*/","* Processes a transparency group stream.
     * 
     * @param group transparency group to be processed
     * @throws IOException if the transparency group cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processType3Stream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processType3Stream(org.apache.pdfbox.pdmodel.font.PDType3CharProc,org.apache.pdfbox.util.Matrix)",278,310,"/**
 * Processes Type 3 character stream.
 * @param charProc character procedure to process
 * @param textRenderingMatrix text rendering matrix
 * @throws IOException if an I/O error occurs
 */","* Processes a Type 3 character stream.
     *
     * @param charProc Type 3 character procedure
     * @param textRenderingMatrix the Text Rendering Matrix
     * @throws IOException if there is an error reading or parsing the character content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processAnnotation,"org.apache.pdfbox.contentstream.PDFStreamEngine:processAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",319,370,"/**
 * Processes annotation appearance by adjusting transformation matrix.
 * @param annotation PDF annotation to process
 * @param appearance appearance stream associated with the annotation
 * @throws IOException if an I/O error occurs
 */","* Process the given annotation with the specified appearance stream.
     *
     * @param annotation The annotation containing the appearance stream to process.
     * @param appearance The appearance stream to process.
     * @throws IOException If there is an error reading or parsing the appearance content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace,org.apache.pdfbox.util.Matrix)",396,442,"/**
 * Processes a tiling pattern with given color and matrix.
 * @param tilingPattern the pattern to process
 * @param color the color for non-colored patterns
 * @param colorSpace the color space of the pattern
 * @param patternMatrix the transformation matrix for the pattern
 * @throws IOException if an I/O error occurs
 */","* Process the given tiling pattern. Allows the pattern matrix to be overridden for custom
     * rendering.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @param patternMatrix the pattern matrix, may be overridden for custom rendering.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processStream,org.apache.pdfbox.contentstream.PDFStreamEngine:processStream(org.apache.pdfbox.contentstream.PDContentStream),496,523,"/**
* Processes a PDF content stream.
* @param contentStream the PDF content stream to process
*/","* Process a content stream.
     *
     * @param contentStream the content stream
     * @throws IOException if there is an exception while processing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,generateBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:generateBoundingBox(),324,373,"/**
* Generates a bounding box for the font.
* @return BoundingBox object representing the font's bounds
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidthFromFont,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidthFromFont(int),184,193,"/**
 * Retrieves width from font for a given character code.
 * @param code character code
 * @return width of the character or 0 if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,write,org.apache.pdfbox.pdfwriter.COSWriter:write(org.apache.pdfbox.cos.COSDocument),1449,1453,"/**
 * Writes PDF document to output.
 * @param doc COSDocument to be written
 * @throws IOException if an I/O error occurs
 */","* This will write the pdf document.
     *
     * @throws IOException If an error occurs while generating the data.
     * @param doc The document to write.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1044,1060,"/**
* Saves the document to an output stream with specified compression.
* @param output target output stream for saving
* @param compressParameters configuration for compression
* @throws IOException if an I/O error occurs or document is closed
*/","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getVersion,org.apache.pdfbox.pdmodel.PDDocument:getVersion(),1415,1441,"/**
* Retrieves the highest version from document and catalog.
* @return float representing the maximum version found
*/","* Returns the PDF specification version this document conforms to.
     *
     * @return the PDF version (e.g. 1.4f)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,extractFontDetails,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:extractFontDetails(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText),432,489,"/**
 * Extracts font details from a free text annotation.
 * @param annotation PDF annotation to extract font details from
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroForm,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroForm(org.apache.pdfbox.pdmodel.PDDocument),91,98,"/**
 * Creates an AcroForm in a PDF document.
 * @param template the PDDocument to add the AcroForm to
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,get,org.apache.pdfbox.pdmodel.PDPageTree:get(int),261,269,"/**
 * Retrieves a page by index.
 * @param index zero-based page index
 * @return PDPage object or throws exception if not found
 */","* Returns the page at the given index.
     *
     * @param index zero-based index
     * @return the page at the given index
     * 
     * @throws IllegalStateException if the requested index isn't found or doesn't point to a valid page dictionary
     * @throws IndexOutOfBoundsException if the requested index is higher than the page count",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,remove,org.apache.pdfbox.pdmodel.PDPageTree:remove(int),454,458,"/**
* Removes element at specified index.
* @param index position of element to remove
*/","* Removes the page with the given index from the page tree.
     * @param index zero-based page index",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageTree.java,indexOf,org.apache.pdfbox.pdmodel.PDPageTree:indexOf(org.apache.pdfbox.pdmodel.PDPage),386,394,"/**
* Finds index of a page in the document hierarchy.
* @param page PDPage to search for
* @return Index of the page or -1 if not found
*/","* Returns the index of the given page, or -1 if it does not exist.
     *
     * @param page The page to search for.
     * @return the zero-based index of the given page, or -1 if the page is not found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDStream.java,getFile,org.apache.pdfbox.pdmodel.common.PDStream:getFile(),337,341,"/**
* Retrieves file specification from PDF stream.
* @return PDFileSpecification object representing the file
*/","* This will get the file specification for this stream. This is only
     * required for external files.
     * 
     * @return The file specification.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getFile,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getFile(),285,288,"/**
 * Retrieves file specification from FDF document.
 * @return PDFileSpecification object representing the file
 * @throws IOException if an I/O error occurs while accessing the file
 */","* The source file or target file: the PDF document file that this FDF file was exported from or is intended to be
     * imported into.
     *
     * @return The F entry of the FDF dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,getEmbeddedFDFs,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:getEmbeddedFDFs(),512,526,"/**
* Retrieves embedded FDF files.
* @return List of PDFileSpecification objects or null if none found
*/","* This will get the list of embedded FDF entries, or null if the entry is null. This will return a list of
     * PDFileSpecification objects.
     *
     * @return A list of embedded FDF files.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFNamedPageReference.java,getFileSpecification,org.apache.pdfbox.pdmodel.fdf.FDFNamedPageReference:getFileSpecification(),91,94,"/**
* Retrieves file specification from reference.
* @return PDFileSpecification object
* @throws IOException if an I/O error occurs
*/","* This will get the file specification of this reference. An optional parameter.
     *
     * @return The F entry for this dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:getFile(),108,111,"/**
* Retrieves file specification from PDF object.
* @return PDFileSpecification object representing the file
* @throws IOException if an I/O error occurs
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific embedded go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:getFile(),61,64,"/**
 * Retrieves file specification from action dictionary.
 * @return PDFileSpecification object representing the file
 * @throws IOException if an I/O error occurs
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:getFile(),70,73,"/**
 * Retrieves file specification from PDF dictionary.
 * @return PDFileSpecification object representing the file
 * @throws IOException if an I/O error occurs while accessing the file
 */","* This will get the application to be launched or the document
     * to be opened or printed. It is required if none of the entries
     * Win, Mac or Unix is present. If this entry is absent and the
     * viewer application does not understand any of the alternative
     * entries it should do nothing.
     *
     * @return The F entry of the specific launch action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:getFile(),66,69,"/**
 * Retrieves file specification from action dictionary.
 * @return PDFileSpecification object representing the file
 * @throws IOException if an I/O error occurs
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific remote go-to action dictionary.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:getFile(),64,67,"/**
* Retrieves file specification from action dictionary.
* @return PDFileSpecification object
* @throws IOException if an I/O error occurs
*/","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific Submit-From action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,getFile,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:getFile(),82,85,"/**
 * Retrieves file specification from action dictionary.
 * @return PDFileSpecification object
 * @throws IOException if an I/O error occurs
 */","* This will get the file in which the destination is located.
     *
     * @return The F entry of the specific thread action dictionary.
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,getFile,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:getFile(),84,87,"/**
 * Retrieves file specification from COS object.
 * @return PDFileSpecification object representing the file
 * @throws IOException if an I/O error occurs
 */","* Return the attached file.
     *
     * @return The attached file.
     *
     * @throws IOException If there is an error creating the file spec.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDAttributeObject.java,potentiallyNotifyChanged,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDAttributeObject:potentiallyNotifyChanged(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase)",156,162,"/**
* Notifies change if values differ.
* @param oldBase the original base object
* @param newBase the updated base object
*/","* Notifies the attribute object change listeners if the attribute is changed.
     * 
     * @param oldBase old value
     * @param newBase new value",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,appendKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:appendKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),151,155,"/**
* Appends a child structure element.
* @param structureElement the child element to add
*/","* Appends a structure element kid and sets the parent property (/P) to this.
     * 
     * @param structureElement the structure element",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,insertBefore,"org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:insertBefore(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement,java.lang.Object)",208,211,"/**
 * Inserts a new structure element before a reference element.
 * @param newKid the new PDStructureElement to insert
 * @param refKid the reference PDStructureElement before which to insert
 */","* Inserts a structure element kid before a reference kid.
     * 
     * @param newKid the structure element
     * @param refKid the reference kid",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDStructureNode.java,removeKid,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureNode:removeKid(org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDStructureElement),278,286,"/**
* Removes a child element from the structure.
* @param structureElement the child element to remove
* @return true if removal was successful, false otherwise
*/","* Removes a structure element kid and if successful also removes the parent property (/P).
     *
     * @param structureElement the structure element
     * @return <code>true</code> if the kid was removed, <code>false</code> otherwise.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName)",562,571,"/**
 * Prepares AES encryption dictionary.
 * @param encryptionDictionary PDF encryption settings
 * @param aesVName AES crypt filter method name
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareEncryptionDictAES,"org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareEncryptionDictAES(org.apache.pdfbox.pdmodel.encryption.PDEncryption,org.apache.pdfbox.cos.COSName,byte[][])",414,431,"/**
* Prepares AES encryption dictionary for PDF.
* @param encryptionDictionary the encryption dictionary to configure
* @param aesVName the AES version name
* @param recipients array of recipient byte arrays
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(),40,44,"/**
 * Creates a new highlight annotation.
 * Initializes the annotation with the subtype ""Highlight"".
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(),40,44,"/**
* Creates a new FDFAnnotationSquiggly instance.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(),40,44,"/**
 * Creates a new strike-out annotation.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(),40,44,"/**
 * Creates a new underline annotation.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,createCIDFont,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:createCIDFont(),190,221,"/**
* Creates a CID font dictionary.
* @return A COSDictionary representing the CID font
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(),39,42,"/**
 * Constructs a new PDAnnotationCaret with subtype set to ""Text"".
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(),62,65,"/**
 * Creates a new file attachment annotation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(),56,59,"/**
 * Constructs a new free text annotation.
 * Sets the subtype to ""FreeText"" in the COS object.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(),43,46,"/**
 * Constructs a new PDAnnotationInk annotation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(),113,118,"/**
* Creates a new PDAnnotationLine.
* Initializes the annotation subtype and sets an arbitrary line.
*/",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(),43,46,"/**
 * Creates a new polygon annotation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(),42,45,"/**
 * Constructs a new PDAnnotationPolyline instance.
 * Sets the annotation subtype to ""PolyLine"".
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(),99,102,"/**
 * Creates a new rubber stamp annotation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(),37,40,"/**
 * Creates a new sound annotation.
 * Sets the subtype to ""Sound"".
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(java.lang.String),39,42,"/**
 * Creates a square or circle annotation.
 * @param subType subtype of the annotation (""Square"" or ""Circle"")
 */","* Creates a Circle or Square annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(),126,129,"/**
 * Creates a new text annotation.
 * Sets the subtype to ""Text"" in the COS object.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(java.lang.String),36,42,"/**
* Creates a text markup annotation.
* @param subType specific subtype of text markup (e.g., ""Highlight"", ""Underline"")
*/","* Creates a TextMarkup annotation of the specified sub type.
     *
     * @param subType the subtype the annotation represents",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCaret:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a new PDAnnotationCaret from a COSDictionary.
 * @param field Dictionary containing annotation properties
 */","* Creates a Caret annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFileAttachment:<init>(org.apache.pdfbox.cos.COSDictionary),72,75,"/**
 * Constructs a file attachment annotation.
 * @param field COSDictionary representing the annotation
 */","* Creates a Link annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationFreeText:<init>(org.apache.pdfbox.cos.COSDictionary),66,69,"/**
 * Constructs a free text annotation from a COS dictionary.
 * @param field COS dictionary representing the annotation
 */","* Creates a FreeText annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationInk:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Constructs an ink annotation from a dictionary.
 * @param dict COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationLine:<init>(org.apache.pdfbox.cos.COSDictionary),125,128,"/**
 * Constructs a PDAnnotationLine from a COSDictionary.
 * @param field dictionary containing annotation properties
 */","* Creates a Line annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolygon:<init>(org.apache.pdfbox.cos.COSDictionary),53,56,"/**
 * Creates a polygon annotation from a COS dictionary.
 * @param dict the COS dictionary containing the annotation data
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPolyline:<init>(org.apache.pdfbox.cos.COSDictionary),52,55,"/**
 * Constructs a new PDAnnotationPolyline from a COSDictionary.
 * @param dict the COS dictionary that holds the annotation information
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationRubberStamp.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp:<init>(org.apache.pdfbox.cos.COSDictionary),109,112,"/**
 * Creates a rubber stamp annotation from a COS dictionary.
 * @param field the COS dictionary representing the annotation
 */","* Creates a Rubber Stamp annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSound:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Constructs a new sound annotation.
 * @param field the COS dictionary representing the sound annotation
 */","* Creates a sound annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquareCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a square/circle annotation from a COS dictionary.
 * @param dict the COS dictionary representing the annotation
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText:<init>(org.apache.pdfbox.cos.COSDictionary),136,139,"/**
 * Constructs a text annotation from a COS dictionary.
 * @param field dictionary containing annotation properties
 */","* Creates a Text annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationTextMarkup:<init>(org.apache.pdfbox.cos.COSDictionary),49,52,"/**
 * Constructs a text markup annotation from a COS dictionary.
 * @param field COS dictionary representing the annotation
 */","* Creates a TextMarkup annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getPopup,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getPopup(),93,97,"/**
 * Retrieves the associated popup annotation.
 * @return PDAnnotationPopup object or null if none exists
 */","* This will retrieve the popup annotation used for entering/editing the text for this annotation.
     *
     * @return the popup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,getWidgets,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:getWidgets(),162,185,"/**
 * Retrieves all annotation widgets.
 * @return List of PDAnnotationWidget objects representing the widgets
 */","* Returns the widget annotations associated with this field.
     *
     * @return The list of widget annotations. Be aware that this list is <i>not</i> backed by the
     * actual widget collection of the field, so adding or deleting has no effect on the PDF
     * document until you call {@link #setWidgets(java.util.List) setWidgets()} with the modified
     * list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,handleBorderBox,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:handleBorderBox(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquareCircle,float)",518,549,"/**
* Calculates the border box for a square or circle annotation.
* @param annotation PDAnnotationSquareCircle instance
* @param lineWidth width of the line used to draw the border
* @return PDRectangle representing the border box
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLinkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLinkAppearanceHandler:generateNormalAppearance(),54,145,"/**
* Generates normal appearance for a link annotation.
* Handles rectangle and quad points validation.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDChoice.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDChoice:setValue(java.util.List),401,424,"/**
 * Sets the selected values for a multi-select list box.
 * @param values List of selected option strings
 * @throws IOException if an I/O error occurs
 */","* Sets the entry ""V"" to the given values. Requires {@link #isMultiSelect()} to be true.
     * 
     * @param values the list of values
     * @throws IOException if the appearance couldn't be generated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getColorSpace,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getColorSpace(),130,148,"/**
 * Retrieves the color space for the image.
 * @return PDColorSpace object representing the color space
 * @throws IOException if unable to determine the color space
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/AnnotationBorder.java,getAnnotationBorder,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.AnnotationBorder:getAnnotationBorder(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDBorderStyleDictionary)",38,87,"/**
 * Creates an AnnotationBorder from a PDF annotation and border style.
 * @param annotation the PDF annotation
 * @param borderStyle the border style dictionary
 * @return AnnotationBorder object with border properties
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteBodyCompressed,org.apache.pdfbox.pdfwriter.COSWriter:doWriteBodyCompressed(org.apache.pdfbox.cos.COSDocument),457,525,"/**
 * Writes compressed body of the PDF document.
 * @param document PDF document to write
 * @throws IOException if an I/O error occurs
 */","* This will write the compressed body of the document.
     *
     * @param document The document to write the body for.
     * @throws IOException If there is an error writing the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2.java,getNormalizedPath,org.apache.pdfbox.pdmodel.font.PDCIDFontType2:getNormalizedPath(int),455,489,"/**
 * Retrieves and normalizes the glyph path for a given character code.
 * @param code character code of the glyph
 * @return normalized GeneralPath object or empty path if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyPolygonImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyPolygonImpl(java.awt.geom.Point2D$Double[],boolean)",279,393,"/**
* Implements cloudy polygon rendering.
* @param vertices array of polygon vertices
* @param isEllipse flag indicating if shape is an ellipse
* @throws IOException if an I/O error occurs
*/","* Cloudy polygon implementation.
     *
     * @param vertices polygon vertices; first and last point must be equal
     * @param isEllipse specifies if the polygon represents an ellipse",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,isSymbolic,org.apache.pdfbox.pdmodel.font.PDSimpleFont:isSymbolic(),174,190,"/**
* Checks if the font is symbolic.
* @return true if the font is symbolic, false otherwise
*/","* Returns true if the font is a symbolic (that is, it does not use the Adobe Standard Roman character set).
     * 
     * @return true if the font is a symbolic",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,isDynamicXfa,org.apache.pdfbox.multipdf.PDFMergerUtility:isDynamicXfa(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),1531,1534,"/**
* Checks if the PDF form is dynamic XFA.
* @param acroForm the PDF form to check
* @return true if the form is dynamic XFA, false otherwise
*/","* Test for dynamic XFA content.
     * 
     * @param acroForm the AcroForm
     * @return true if there is a dynamic XFA form.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree$FieldIterator:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),76,83,"/**
* Initializes iterator with fields from a PDF form.
* @param form PDAcroForm containing the fields to iterate over
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunction.java,create,org.apache.pdfbox.pdmodel.common.function.PDFunction:create(org.apache.pdfbox.cos.COSBase),115,147,"/**
* Creates a PDF function from a COSBase object.
* @param function the COSBase object representing the function
* @return PDFunction instance based on the function type
* @throws IOException if the function is invalid or unknown
*/","* Create the correct PD Model function based on the COS base function.
     *
     * @param function The COS function dictionary.
     *
     * @return The PDModel Function object, never null.
     *
     * @throws IOException If we are unable to create the PDFunction object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,readColorTable,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:readColorTable(),283,306,"/**
* Reads and processes color table data.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,rinterpolate,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0$Rinterpol:rinterpolate(),284,287,"/**
 * Interpolates values using recursive function.
 * @return interpolated float array
 */","* Calculate the interpolation.
         *
         * @return interpolated result sample",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getRawImage(),519,523,"/**
 * Returns raw image data.
 * @return BufferedImage containing raw pixel data
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,extractMatte,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:extractMatte(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),538,556,"/**
* Extracts matte values from soft mask image.
* @param softMask the source image object
* @return float array of RGB matte values or null if invalid
*/","* Extract the matte color from a softmask.
     * 
     * @param softMask
     * @return the matte color.
     * @throws IOException if the color conversion fails.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildTransparencyMaskFromIndexedData,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildTransparencyMaskFromIndexedData(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",257,302,"/**
 * Builds a transparency mask from indexed image data.
 * @param doc PDF document to add the image to
 * @param image source image object
 * @param state conversion state containing PNG metadata
 * @return PDImageXObject with applied transparency mask
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type6ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type6ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a paint context for the shading pattern.
* @param cm color model for the context
* @param deviceBounds bounding box of the device area
* @param userBounds bounding box of the user space
* @param xform transformation from user to device space
* @param hints rendering hints
* @return PaintContext object or a transparent one if an error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/Type7ShadingPaint.java,createContext,"org.apache.pdfbox.pdmodel.graphics.shading.Type7ShadingPaint:createContext(java.awt.image.ColorModel,java.awt.Rectangle,java.awt.geom.Rectangle2D,java.awt.geom.AffineTransform,java.awt.RenderingHints)",57,70,"/**
* Creates a PaintContext for rendering.
* @param cm the color model to use
* @param deviceBounds bounding box of the device space
* @param userBounds bounding box of the user space
* @param xform transformation from user space to device space
* @param hints rendering hints
* @return PaintContext object or a transparent one if an error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDXFAResource.java,getDocument,org.apache.pdfbox.pdmodel.interactive.form.PDXFAResource:getDocument(),128,132,"/**
* Parses and returns the document as an XML object.
* @return Document representing the parsed content
* @throws IOException if parsing fails
*/","* Get the XFA content as W3C document.
     * 
     * @see #getBytes()
     * 
     * @return the XFA content
     * 
     * @throws IOException if something went wrong when reading the XFA content.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,encode,org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory$PredictorEncoder:encode(),343,500,"/**
* Encodes image data using PNG predictors and compression.
* @return PDImageXObject containing encoded image or null if unsupported format
*/","* Tries to compress the image using a predictor.
         *
         * @return the image or null if it is not possible to encoded the image (e.g. not supported
         * raster format etc.)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,setDestination,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:setDestination(org.apache.pdfbox.pdmodel.PDPage),206,215,"/**
* Sets the destination to a specified page.
* @param page target PDF page
*/","* A convenience method that will create an XYZ destination using only the defaults.
     *
     * @param page The page to refer to.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:<init>(org.apache.pdfbox.cos.COSArray),90,97,"/**
* Initializes ICC-based color space from PDF array.
* @param iccArray PDF array containing ICC profile data
* @throws IOException if an I/O error occurs during initialization
*/","* Creates a new ICC color space using the PDF array.
     *
     * @param iccArray the ICC stream object.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,toRGBImage,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:toRGBImage(java.awt.image.WritableRaster),177,188,"/**
* Converts a WritableRaster to an RGB BufferedImage.
* @param raster the input image data
* @return BufferedImage in RGB format
* @throws IOException if conversion fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setParent,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setParent(org.apache.pdfbox.pdmodel.common.PDNameTreeNode),93,97,"/**
 * Sets the parent node and recalculates limits.
 * @param parentNode the parent node to be set
 */","* Sets the parent to the given node.
     * 
     * @param parentNode the node to be set as parent",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setKids,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setKids(java.util.List),138,158,"/**
* Sets child nodes and updates parent references.
* @param kids list of child nodes to set
*/","* Set the children of this named tree.
     *
     * @param kids The children of this named tree. These have to be in sorted order. Because of
     * that, it is usually easier to call {@link #setNames(Map)} with a map and pass a single
     * element list here.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDNameTreeNode.java,setNames,org.apache.pdfbox.pdmodel.common.PDNameTreeNode:setNames(java.util.Map),307,327,"/**
* Sets the names map in the PDF node.
* @param names map of string keys to T values
*/","* Set the names for this node. This method will set the appropriate upper and lower limits
     * based on the keys in the map and take care of the ordering.
     *
     * @param names map of names to objects, or <code>null</code> for nothing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,initPage,org.apache.pdfbox.contentstream.PDFStreamEngine:initPage(org.apache.pdfbox.pdmodel.PDPage),120,131,"/**
* Initializes the current page for processing.
* @param page the PDF page to be initialized
*/",* Initializes the stream engine for the given page.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBBox,org.apache.pdfbox.pdmodel.PDPage:getBBox(),381,385,"/**
 * Returns the bounding box of the PDF page.
 * @return PDRectangle representing the bounding box
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getBleedBox,org.apache.pdfbox.pdmodel.PDPage:getBleedBox(),479,483,"/**
* Retrieves the bleed box of a PDF page.
* @return PDRectangle representing the bleed box or crop box if bleed box is not present
*/","* A rectangle, expressed in default user space units, defining the region to which the contents
     * of the page should be clipped when output in a production environment. The default is the
     * CropBox.
     * 
     * @return The BleedBox attribute.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getTrimBox,org.apache.pdfbox.pdmodel.PDPage:getTrimBox(),508,512,"/**
* Retrieves the trim box of a PDF page.
* @return PDRectangle representing the trim box or crop box if trim box is null
*/","* A rectangle, expressed in default user space units, defining the intended dimensions of the
     * finished page after trimming. The default is the CropBox.
     * 
     * @return The TrimBox attribute.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getArtBox,org.apache.pdfbox.pdmodel.PDPage:getArtBox(),538,542,"/**
* Retrieves the art box of the page, clipping it to the media box if present.
* @return PDRectangle representing the art box or crop box if art box is not defined
*/","* A rectangle, expressed in default user space units, defining the extent of the page's
     * meaningful content (including potential white space) as intended by the page's creator The
     * default is the CropBox.
     * 
     * @return The ArtBox attribute.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,getRotatedCropBox,org.apache.pdfbox.printing.PDFPrintable:getRotatedCropBox(org.apache.pdfbox.pdmodel.PDPage),327,340,"/**
* Returns the crop box of a page, rotated if necessary.
* @param page PDF page to process
* @return Rotated PDRectangle or original crop box
*/","* This will find the CropBox with rotation applied, for this page by looking up the hierarchy
     * until it finds them.
     *
     * @return The CropBox at this level in the hierarchy.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,fillBeadRectangles,org.apache.pdfbox.text.PDFTextStripper:fillBeadRectangles(org.apache.pdfbox.pdmodel.PDPage),386,421,"/**
 * Populates bead rectangles for a page, adjusting for PDF to image coordinate conversion.
 * @param page the PDPage object containing thread beads
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean,boolean)",120,125,"/**
* Creates a content stream for a page.
* @param document PDF document
* @param sourcePage page to add content to
* @param appendContent mode to determine if content is appended or overwritten
* @param compress whether to compress the content
* @param resetContext whether to reset the graphics context
* @throws IOException if an I/O error occurs
*/","* Create a new PDPage content stream.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @param resetContext Tell if the graphic context should be reset. This is only relevant when
     * the appendContent parameter is set to {@link AppendMode#APPEND}. You should use this when
     * appending to an existing stream, because the existing stream may have changed graphic
     * properties (e.g. scaling, rotation).
     * @throws IOException If there is an error writing to the page contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.font.PDFont),596,599,"/**
* Adds a PDF font to the document.
* @param font the PDFont object to be added
* @return the COSName associated with the added font
*/","* Adds the given font to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param font the font to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),608,611,"/**
* Adds a color space to the document.
* @param colorSpace the PDColorSpace object to be added
* @return the COSName associated with the added color space
*/","* Adds the given color space to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param colorSpace the color space to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),620,623,"/**
 * Adds an extended graphics state.
 * @param extGState graphics state to add
 * @return COSName of the added graphics state
 */","* Adds the given extended graphics state to the resources of the current page and returns the
     * name for the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param extGState the extended graphics state to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),632,635,"/**
* Adds a shading to the document.
* @param shading PDShading object to be added
* @return COSName representing the added shading
*/","* Adds the given shading to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param shading the shading to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.pattern.PDAbstractPattern),644,647,"/**
* Adds a pattern to the resources.
* @param pattern PDAbstractPattern object to be added
* @return COSName representing the added pattern
*/","* Adds the given pattern to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param pattern the pattern to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),656,666,"/**
* Adds a property list to the document.
* @param properties PDPropertyList object to be added
* @return COSName key under which the property is stored
*/","* Adds the given property list to the resources of the current page and returns the name for
     * the new resources. Returns the existing resource name if the given item already exists.
     *
     * @param properties the property list to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject),675,678,"/**
* Adds an image to the document.
* @param image PDImageXObject to be added
* @return COSName of the added image
*/","* Adds the given image to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param image the image to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),687,690,"/**
* Adds a form as an XObject to the resources.
* @param form PDFormXObject to be added
* @return COSName representing the added form
*/","* Adds the given form to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param form the form to add
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,add,"org.apache.pdfbox.pdmodel.PDResources:add(org.apache.pdfbox.pdmodel.graphics.PDXObject,java.lang.String)",700,703,"/**
* Adds an XObject with a specified prefix.
* @param xobject PDXObject to be added
* @param prefix naming prefix for the object
* @return COSName of the added object
*/","* Adds the given XObject to the resources of the current page and returns the name for the
     * new resources. Returns the existing resource name if the given item already exists.
     *
     * @param xobject the XObject to add
     * @param prefix the prefix to be used when creating the resource name
     * @return the name of the resource in the resources dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,insertInnerFormToHolderResources,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:insertInnerFormToHolderResources(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,org.apache.pdfbox.pdmodel.PDResources)",281,288,"/**
 * Inserts an inner form into a holder's resources.
 * @param innerForm the form to be inserted
 * @param holderFormResources the resources of the holder form
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createBackgroundLayerForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createBackgroundLayerForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDRectangle)",328,339,"/**
* Creates a background layer form.
* @param innerFormResource resources for the inner form
* @param bbox bounding box for the form
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,exportFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:exportFDF(),151,172,"/**
* Exports form fields to an FDF document.
* @return FDFDocument containing exported fields
* @throws IOException if I/O error occurs
*/","* This will export all FDF form data.
     *
     * @return An FDF document used to export the document.
     * @throws IOException If there is an error when exporting the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDownAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDownAppearance(),172,184,"/**
 * Retrieves or creates the down appearance entry.
 * @return PDAppearanceEntry for down state
 */","* Get the annotations down appearance.
     * 
     * <p>
     * This will get the annotations down appearance. If this is not existent an
     * empty appearance entry will be created.
     * 
     * @return the appearance entry representing the down appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getRolloverAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getRolloverAppearance(),195,207,"/**
 * Retrieves or creates the rollover appearance entry.
 * @return PDAppearanceEntry for rollover state
 */","* Get the annotations rollover appearance.
     * 
     * <p>
     * This will get the annotations rollover appearance. If this is not
     * existent an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the rollover appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearance(),477,489,"/**
* Retrieves or creates the normal appearance entry.
* @return PDAppearanceEntry for normal state
*/","* Get the annotations normal appearance.
     * 
     * <p>
     * This will get the annotations normal appearance. If this is not existent
     * an empty appearance entry will be created.
     * 
     * @return the appearance entry representing the normal appearance.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addLast,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addLast(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),79,84,"/**
* Adds a new outline item as the last child.
* @param newChild the new outline item to add
*/","* Adds the given node to the bottom of the children list.
     *
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,addFirst,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:addFirst(org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem),93,98,"/**
 * Adds a new child node to the beginning of the list.
 * @param newChild the PDOutlineItem to be added
 */","* Adds the given node to the top of the children list.
     * 
     * @param newChild The node to add.
     * @throws IllegalArgumentException if the given node is part of a list (i.e. if it has a previous or a next
     * sibling)",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,<init>,"org.apache.pdfbox.pdmodel.common.PDPageLabels:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary)",89,98,"/**
* Initializes page labels for a document.
* @param document the PDDocument to set labels for
* @param dict dictionary containing label data
* @throws IOException if an I/O error occurs
*/","* Creates an page label dictionary for a document using the information in
     * the given COS dictionary.
     * 
     * <p>
     * Note that the page label dictionary won't be automatically added to the
     * document; you will still need to do it manually (see
     * {@link org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)}.
     * </p>
     * 
     * @param document
     *            The document the page label dictionary is created for.
     * @param dict
     *            an existing page label dictionary
     * @see org.apache.pdfbox.pdmodel.PDDocumentCatalog#setPageLabels(PDPageLabels)
     * @throws IOException
     *             If something goes wrong during the number tree conversion.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionEmbeddedGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionEmbeddedGoTo:<init>(),48,51,"/**
 * Constructs a new PDActionEmbeddedGoTo action.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionGoTo:<init>(),44,47,"/**
* Initializes a new PDActionGoTo with a specific subtype.
* @param SUB_TYPE predefined subtype constant
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionHide.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionHide:<init>(),40,43,"/**
* Initializes a new instance of PDActionHide.
* Sets the subtype to SUB_TYPE.
*/",* Default Constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionImportData.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionImportData:<init>(),40,43,"/**
 * Initializes a new instance of PDActionImportData with a specific subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(),40,43,"/**
 * Constructs a new PDActionJavaScript with a specified subtype.
 */",* Constructor #1.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionLaunch.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionLaunch:<init>(),44,47,"/**
 * Initializes a new PDActionLaunch with a specific subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionMovie.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionMovie:<init>(),36,39,"/**
* Initializes a new PDActionMovie with a predefined subtype.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionNamed.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionNamed:<init>(),34,37,"/**
* Constructs a PDActionNamed with a predefined subtype.
*/",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionRemoteGoTo.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionRemoteGoTo:<init>(),44,47,"/**
 * Constructs a PDActionRemoteGoTo with a specific subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionResetForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionResetForm:<init>(),38,41,"/**
 * Initializes a reset form action.
 * Sets the subtype to SUB_TYPE.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSound.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSound:<init>(),41,44,"/**
 * Constructs a PDActionSound with a predefined subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionSubmitForm.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionSubmitForm:<init>(),43,46,"/**
 * Initializes a new PDActionSubmitForm with a specific subtype.
 */",* Default Constructor,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionThread.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionThread:<init>(),44,47,"/**
 * Constructs a new PDActionThread with a predefined subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionURI.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionURI:<init>(),41,44,"/**
 * Constructs a PDActionURI with a predefined subtype.
 */",* Default constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,updateParentOpenCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:updateParentOpenCount(int),284,305,"/**
* Updates the open count of parent nodes recursively.
* @param delta amount to adjust open count by
*/","* The count parameter needs to be updated when you add, remove, open or close outline items.
     *
     * @param delta The amount to update by.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java,setValue,org.apache.pdfbox.pdmodel.interactive.form.PDButton:setValue(java.lang.String),149,166,"/**
* Sets a new value, applying specific logic based on export values.
* @param value the new value to set
* @throws IOException if an I/O error occurs during setting
*/","* Set the selected option given its name, and try to update the visual appearance.
     * 
     * @param value Name of option to select
     * @throws IOException if the value could not be set
     * @throws IllegalArgumentException if the value is not a valid option.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),304,346,"/**
* Checks if a PDF group is enabled.
* @param group the PDOptionalContentGroup to check
* @return true if the group is enabled, false otherwise
*/","* Indicates whether an optional content group is enabled.
     * @param group the group object
     * @return true if the group is enabled",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,setGroupEnabled,"org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:setGroupEnabled(java.lang.String,boolean)",374,392,"/**
* Enables or disables a group by name.
* @param groupName name of the group to modify
* @param enable true to enable, false to disable
* @return true if operation successful, false otherwise
*/","* Enables or disables all optional content groups with the given name.
     *
     * @param groupName the group name
     * @param enable true to enable, false to disable
     * @return true if at least one group with this name already had an on or off setting, false
     * otherwise",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createAcroFormDictionary,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createAcroFormDictionary(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField)",131,147,"/**
 * Creates an AcroForm dictionary with a signature field.
 * @param acroForm the PDF AcroForm to modify
 * @param signatureField the signature field to add
 * @throws IOException if I/O operations fail
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/filter/JPXFilter.java,decode,"org.apache.pdfbox.filter.JPXFilter:decode(java.io.InputStream,java.io.OutputStream,org.apache.pdfbox.cos.COSDictionary,int)",108,113,"/**
* Decodes input stream using default options.
* @param encoded InputStream containing encoded data
* @param decoded OutputStream for decoded data
* @param parameters COSDictionary of decoding parameters
* @param index Index of the decode operation
* @return DecodeResult object
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPages,org.apache.pdfbox.pdmodel.PDDocument:getPages(),1246,1249,"/**
* Retrieves the pages of the PDF document.
* @return PDPageTree containing all pages in the document
*/","* Returns the page tree.
     * 
     * @return the page tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getNumberOfPages,org.apache.pdfbox.pdmodel.PDDocument:getNumberOfPages(),1256,1259,"/**
 * Returns the number of pages in the document.
 * @return integer count of pages
 */","* This will return the total page count of the PDF document.
     * 
     * @return The total number of pages in the PDF document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setFixedPitch,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setFixedPitch(boolean),85,88,"/**
 * Sets the fixed pitch flag.
 * @param flag true to enable fixed pitch, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSerif,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSerif(boolean),105,108,"/**
 * Sets serif font style.
 * @param flag true to enable serif, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSymbolic(boolean),125,128,"/**
* Sets the symbolic flag.
* @param flag true to enable symbolic mode, false otherwise
*/","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setScript,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setScript(boolean),145,148,"/**
 * Sets script execution flag.
 * @param flag true to enable script execution, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setNonSymbolic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setNonSymbolic(boolean),165,168,"/**
 * Sets the non-symbolic flag.
 * @param flag true to enable non-symbolic mode, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setItalic,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setItalic(boolean),185,188,"/**
 * Sets the italic style.
 * @param flag true to enable italic, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setAllCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setAllCap(boolean),205,208,"/**
 * Sets the all capitalization flag.
 * @param flag true to enable all caps, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setSmallCap,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setSmallCap(boolean),225,228,"/**
 * Sets the small cap flag.
 * @param flag true to enable small cap, false otherwise
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontDescriptor.java,setForceBold,org.apache.pdfbox.pdmodel.font.PDFontDescriptor:setForceBold(boolean),245,248,"/**
 * Sets force bold flag.
 * @param flag true to enable, false to disable
 */","* A convenience method that sets the flag bit.
     *
     * @param flag The flag value.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],int)",128,135,"/**
* Creates an image object from a byte array.
* @param document PDF document to add the image to
* @param byteArray byte array containing image data
* @param number image number in the document
* @return PDImageXObject created from the byte array
* @throws IOException if there's an error processing the image
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,int)",190,197,"/**
* Creates an image object from a file.
* @param document PDF document to add the image
* @param file source image file
* @param number image index in case of multi-image files
* @return PDImageXObject created from the file
* @throws IOException if file reading fails
*/","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the TIFF file which contains a suitable CCITT compressed image
     * @param number TIFF image number, starting from 0
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotation.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotation:<init>(org.w3c.dom.Element),130,314,"/**
 * Initializes an FDFAnnotation from an XML element.
 * @param element XML element containing annotation attributes
 * @throws IOException if required attributes are missing or invalid
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting data from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BruteForceParser.java,rebuildTrailer,org.apache.pdfbox.pdfparser.BruteForceParser:rebuildTrailer(java.util.Map),820,859,"/**
* Rebuilds the document's trailer using an xref table.
* @param xrefTable map of COSObjectKey to object offsets
* @return rebuilt COSDictionary trailer
*/","* Rebuild the trailer dictionary if startxref can't be found.
     *
     * @param xrefTable the cross reference table of the pdf
     * 
     * @return the rebuild trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,parseObjectDynamically,"org.apache.pdfbox.pdfparser.COSParser:parseObjectDynamically(org.apache.pdfbox.cos.COSObjectKey,boolean)",465,496,"/**
* Parses a PDF object dynamically from the document.
* @param objKey key of the object to parse
* @param requireExistingNotCompressedObj flag to check for existing non-compressed objects
* @return parsed COSBase object or null if not found
*/","* Parse the object for the given object key.
     * 
     * @param objKey key of object to be parsed
     * @param requireExistingNotCompressedObj if <code>true</code> the object to be parsed must be defined in xref
     * (comment: null objects may be missing from xref) and it must not be a compressed object within object stream
     * (this is used to circumvent being stuck in a loop in a malicious PDF)
     * 
     * @return the parsed object (which is also added to document object)
     * 
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/XrefParser.java,parseXref,"org.apache.pdfbox.pdfparser.XrefParser:parseXref(org.apache.pdfbox.cos.COSDocument,long)",90,198,"/**
* Parses XRef table and trailer in PDF document.
* @param document PDF document to parse
* @param startXRefOffset starting offset for XRef parsing
* @return COSDictionary containing parsed trailer
* @throws IOException if an I/O error occurs during parsing
*/","* Parses cross reference tables.
     * 
     * @param document the corresponding COS document of the pdf.
     * @param startXRefOffset start offset of the first table
     * 
     * @return the trailer dictionary
     * 
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/BaseParser.java,parseCOSArray,org.apache.pdfbox.pdfparser.BaseParser:parseCOSArray(),755,822,"/**
 * Parses a COSArray from the input source.
 * @return COSArray object parsed from the source
 * @throws IOException if an I/O error occurs during parsing
 */","* This will parse a PDF array object.
     *
     * @return The parsed PDF array.
     *
     * @throws IOException If there is an error parsing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",223,239,"/**
* Loads a PDF document from byte array.
* @param input PDF content as byte array
* @param password document password, may be null
* @param keyStore InputStream for keystore, may be null
* @param alias keystore alias, may be null
* @param streamCacheCreateFunction function to create cache, may be null
* @return PDDocument object
* @throws IOException if loading fails
*/","* Parses a PDF.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",474,481,"/**
* Loads a PDF document from a random access read source.
* @param randomAccessRead input source for the PDF
* @param password optional password for encrypted PDFs
* @param keyStore key store for decryption if needed
* @param alias alias for the key in the key store
* @param streamCacheCreateFunction function to create stream caches
* @return PDDocument representing the loaded PDF
* @throws IOException if an error occurs during loading
*/","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,initFromRandomAccessRead,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:initFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead),96,101,"/**
 * Initializes document from a random access read source.
 * @param rar RandomAccessRead object containing PDF data
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTransparencyGroup,org.apache.pdfbox.contentstream.PDFStreamEngine:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),169,172,"/**
 * Processes and displays a transparency group.
 * @param form PDTransparencyGroup object to be processed
 * @throws IOException if an I/O error occurs during processing
 */","* Shows a transparency group from the content stream.
     *
     * @param form transparency group (form) XObject
     * @throws IOException if the transparency group cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processSoftMask,org.apache.pdfbox.contentstream.PDFStreamEngine:processSoftMask(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),199,219,"/**
* Processes a soft mask for the given transparency group.
* @param group PDTransparencyGroup to be processed
*/","* Processes a soft mask transparency group stream.
     * 
     * @param group transparency group used for the soft mask
     * @throws IOException if the transparency group cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showType3Glyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showType3Glyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDType3Font,int,org.apache.pdfbox.util.Vector)",867,875,"/**
* Renders a Type 3 glyph using the specified matrix and font.
* @param textRenderingMatrix transformation matrix for rendering
* @param font Type 3 font containing character procedures
* @param code character code to render
* @param displacement vector for additional positioning (unused)
*/","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showAnnotation,org.apache.pdfbox.contentstream.PDFStreamEngine:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),450,457,"/**
* Displays an annotation using its appearance stream.
* @param annotation the PDF annotation to display
* @throws IOException if there is an error processing the annotation
*/","* Shows the given annotation.
     *
     * @param annotation An annotation on the current page.
     * @throws IOException If an error occurred reading the annotation",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processTilingPattern,"org.apache.pdfbox.contentstream.PDFStreamEngine:processTilingPattern(org.apache.pdfbox.pdmodel.graphics.pattern.PDTilingPattern,org.apache.pdfbox.pdmodel.graphics.color.PDColor,org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace)",380,384,"/**
* Processes a tiling pattern with specified color and colorspace.
* @param tilingPattern the tiling pattern to process
* @param color the color to apply
* @param colorSpace the colorspace for the color
*/","* Process the given tiling pattern.
     *
     * @param tilingPattern the tiling pattern
     * @param color color to use, if this is an uncoloured pattern, otherwise null.
     * @param colorSpace color space to use, if this is an uncoloured pattern, otherwise null.
     * @throws IOException if there is an error reading or parsing the tiling pattern content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showForm,org.apache.pdfbox.contentstream.PDFStreamEngine:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),180,191,"/**
* Displays a form on the current PDF page.
* @param form PDFormXObject to be displayed
* @throws IOException if an I/O error occurs
*/","* Shows a form from the content stream.
     *
     * @param form form XObject
     * @throws IOException if the form cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getBoundingBox,org.apache.pdfbox.pdmodel.font.PDType3Font:getBoundingBox(),314,322,"/**
* Returns the bounding box for the font.
* Generates it if not already created.
* @return BoundingBox object representing the font's dimensions
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getWidth,org.apache.pdfbox.pdmodel.font.PDType3Font:getWidth(int),155,182,"/**
 * Retrieves the width of a character by its code.
 * @param code character code
 * @return width of the character in PDF units, or 0 if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,getVisualSignatureAsStream,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:getVisualSignatureAsStream(org.apache.pdfbox.cos.COSDocument),157,165,"/**
 * Converts a COSDocument to an InputStream.
 * @param visualSignature the document to convert
 * @return InputStream containing the document data
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.OutputStream),975,978,"/**
 * Saves data to an OutputStream with default compression.
 * @param output destination OutputStream
 * @throws IOException if an I/O error occurs
 */","* This will save the document to an output stream.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param output The stream to write to. It is recommended to wrap it in a {@link java.io.BufferedOutputStream},
     * unless it is already buffered.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",994,1007,"/**
* Saves data to a file with compression.
* @param file the target file to save to
* @param compressParameters parameters for compression
* @throws IOException if an I/O error occurs
*/","* Save the document using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param file The file to save as.
     * @param compressParameters The parameters for the document's compression.
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocument,org.apache.pdfbox.multipdf.Splitter:createNewDocument(),743,783,"/**
* Creates a new PDF document with metadata and preferences copied from the source document.
* @return PDDocument object representing the newly created document
*/","* Create a new document to write the split contents to.
     *
     * @return the newly created PDDocument. 
     * @throws IOException If there is an problem creating the new document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,setVersion,org.apache.pdfbox.pdmodel.PDDocument:setVersion(float),1449,1473,"/**
* Sets the document version.
* @param newVersion the new version to set
*/","* Sets the PDF specification version for this document.
     *
     * @param newVersion the new PDF version (e.g. 1.4f)
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getPage,org.apache.pdfbox.pdmodel.PDDocument:getPage(int),1236,1239,"/**
* Retrieves a page from the document by index.
* @param pageIndex zero-based index of the page
* @return PDPage object or null if index is out of bounds
*/","* Returns the page at the given 0-based index.
     * <p>
     * This method is too slow to get all the pages from a large PDF document
     * (1000 pages or more). For such documents, use the iterator of
     * {@link PDDocument#getPages()} instead.
     *
     * @param pageIndex the 0-based page index
     * @return the page at the given index.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeOpenAction,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeOpenAction(org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.multipdf.PDFCloneUtility)",849,892,"/**
 * Merges the open action from source catalog to destination catalog.
 * @param srcCatalog source PDF document catalog
 * @param dstCatalog destination PDF document catalog
 * @param cloner utility for cloning PDF objects
 * @throws IOException if an error occurs during processing
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createDictionaryClone,"org.apache.pdfbox.multipdf.Splitter$KCloner:createDictionaryClone(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.cos.COSDictionary)",413,533,"/**
* Creates a clone of a PDF structure dictionary.
* @param src source dictionary to clone
* @param dstParent parent dictionary for the cloned dictionary
* @param currentPageDict current page dictionary context
* @return cloned COSDictionary or null if cloning fails
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,indexOfPageTree,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:indexOfPageTree(org.apache.pdfbox.cos.COSDictionary),138,158,"/**
 * Finds index of page in the PDF document.
 * @param pageDict dictionary representing the page
 * @return index of the page or -1 if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:writeXML(java.io.Writer),239,264,"/**
* Writes XML representation of the FDF document.
* @param output Writer to write XML data
* @throws IOException if an I/O error occurs
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev6,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev6(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int)",426,515,"/**
* Prepares encryption dictionary for PDF with AES.
* @param ownerPassword owner password
* @param userPassword user password
* @param encryptionDictionary encryption dictionary to populate
* @param permissionInt permissions integer
* @throws IOException on security exception
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareEncryptionDictRev234,"org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareEncryptionDictRev234(java.lang.String,java.lang.String,org.apache.pdfbox.pdmodel.encryption.PDEncryption,int,org.apache.pdfbox.pdmodel.PDDocument,int,int)",517,560,"/**
 * Prepares encryption dictionary for PDF document.
 * @param ownerPassword Owner's password
 * @param userPassword User's password
 * @param encryptionDictionary Encryption dictionary to configure
 * @param permissionInt Permissions integer
 * @param document PDF document
 * @param revision Revision number
 * @param length Key length
 * @throws IOException If an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/PublicKeySecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.PublicKeySecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),322,412,"/**
 * Prepares a PDF document for encryption.
 * @param doc the PDDocument to encrypt
 * @throws IOException if an I/O error occurs
 */","* Prepare the document for encryption.
     *
     * @param doc The document that will be encrypted.
     *
     * @throws IOException If there is an error while encrypting.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(),36,39,"/**
 * Creates a new circle annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(),37,40,"/**
 * Creates a new square annotation.
 * Initializes with the specified subtype.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(),40,43,"/**
 * Constructs a new PDAnnotationHighlight.
 * Initializes with the specified sub-type.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(),40,43,"/**
 * Creates a new PDAnnotationSquiggly annotation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(),40,43,"/**
 * Creates a new instance of PDAnnotationStrikeout.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(),40,43,"/**
 * Constructs a new underline annotation.
 */",* Constructor.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationCircle:<init>(org.apache.pdfbox.cos.COSDictionary),46,49,"/**
 * Constructs a PDAnnotationCircle from a COSDictionary.
 * @param field dictionary representing annotation properties
 */","* Creates a circle annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquare:<init>(org.apache.pdfbox.cos.COSDictionary),47,50,"/**
 * Creates a new square annotation.
 * @param field COSDictionary containing annotation properties
 */","* Creates a square annotation from a COSDictionary, expected to be a correct object definition.
     *
     * @param field the PDF object to represent as a field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationHighlight:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a highlight annotation from a COS dictionary.
 * @param dict the COS dictionary containing annotation data
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationSquiggly:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
* Creates a new PDAnnotationSquiggly from a COSDictionary.
* @param dict the COS dictionary representing the annotation
*/","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationStrikeout.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationStrikeout:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs a strikeout annotation from a dictionary.
 * @param dict COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationUnderline:<init>(org.apache.pdfbox.cos.COSDictionary),50,53,"/**
 * Constructs an underline annotation from a dictionary.
 * @param dict COSDictionary containing annotation properties
 */","* Constructor.
     *
     * @param dict The annotations dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),236,305,"/**
 * Imports FDF field values and flags.
 * @param fdfField the FDF field to import
 * @throws IOException if an error occurs during import
 */","* This will import a fdf field from a fdf document.
     * 
     * @param fdfField The fdf field to import.
     * @throws IOException If there is an error importing the data for this field.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws an inline image at specified position and size.
* @param inlineImage the image to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
* @throws IOException if an I/O error occurs
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDInlineImage.java,getRawImage,org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage:getRawImage(),365,369,"/**
* Retrieves raw image data.
* @return BufferedImage containing raw pixel data
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolylineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolylineAppearanceHandler:generateNormalAppearance(),50,198,"/**
 * Generates the normal appearance of a polyline annotation.
 * Adjusts rectangle and draws line with specified styles.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyPolygon,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyPolygon(float[][]),104,125,"/**
 * Creates a cloudy polygon from a path of points.
 * @param path 2D float array representing the polygon's vertices
 * @throws IOException if an I/O error occurs during polygon creation
 */","* Creates a cloudy border for a Polygon annotation.
     *
     * @param path polygon path
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyRectangleImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyRectangleImpl(double,double,double,double,boolean)",225,271,"/**
* Draws a cloudy rectangle or ellipse.
* @param left x-coordinate of the rectangle's left edge
* @param bottom y-coordinate of the rectangle's bottom edge
* @param right x-coordinate of the rectangle's right edge
* @param top y-coordinate of the rectangle's top edge
* @param isEllipse true if drawing an ellipse, false for rectangle
* @throws IOException if output fails
*/","* Cloudy rectangle implementation is based on converting the rectangle
     * to a polygon.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDFieldTree.java,iterator,org.apache.pdfbox.pdmodel.interactive.form.PDFieldTree:iterator(),58,62,"/**
 * Returns an iterator over form fields.
 * @return Iterator of PDField objects
 */","* Returns an iterator which walks all fields in the tree, in order.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType3.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType3:eval(float[]),61,126,"/**
* Evaluates input through a stitching function.
* @param input single-value input array
* @return evaluated result as float array
* @throws IOException on invalid partition or function evaluation
*/",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",91,108,"/**
* Constructs a PDDeviceN with specified device N array and resources.
* @param deviceN COSArray representing the device N color space
* @param resources PDResources containing color space definitions
* @throws IOException if an error occurs during initialization
*/","* Creates a new DeviceN color space from the given COS array.
     * 
     * @param deviceN an array containing the color space information
     * @param resources resources, can be null.
     * 
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDDeviceN.java,getTintTransform,org.apache.pdfbox.pdmodel.graphics.color.PDDeviceN:getTintTransform(),563,570,"/**
* Retrieves or creates the tint transformation function.
* @return PDFunction representing the tint transform
* @throws IOException if an I/O error occurs during creation
*/","* This will get the tint transform function.
     *
     * @return The tint transform function.
     *
     * @throws IOException if there is an error creating the function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDSeparation.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDSeparation:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",85,98,"/**
 * Initializes a PDSeparation object.
 * @param separation COSArray containing separation details
 * @param resources PDResources for color space creation
 * @throws IOException if tint transform has invalid output parameters
 */","* Creates a new Separation color space from a PDF color space array.
     * @param separation an array containing all separation information.
     * @param resources resources, can be null.
     * @throws IOException if the color space or the function could not be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunction(),337,348,"/**
* Retrieves the PDF function.
* @return PDFunction object or null if not found
* @throws IOException if an I/O error occurs
*/","* This will return the function used to convert the color values.
     *
     * @return the function
     * @throws java.io.IOException if we were not able to create the function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,getFunctionsArray,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:getFunctionsArray(),356,382,"/**
 * Retrieves the array of PDFunction objects.
 * @return Array of PDFunction objects
 * @throws IOException if mandatory /Function element is invalid
 */","* Provide the function(s) of the shading dictionary as array.
     *
     * @return an array containing the function(s).
     * @throws IOException if we were unable to create a function.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDSoftMask.java,getTransferFunction,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask:getTransferFunction(),187,198,"/**
* Retrieves the transfer function for image processing.
* @return PDFunction object or null if not available
* @throws IOException if an error occurs during retrieval
*/","* Returns the transfer function.
     * 
     * @return the transfer function
     * @throws IOException If we are unable to create the PDFunction object.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applyTransferFunction,"org.apache.pdfbox.rendering.PageDrawer:applyTransferFunction(java.awt.image.BufferedImage,org.apache.pdfbox.cos.COSBase)",1397,1484,"/**
 * Applies a transfer function to an image.
 * @param image source BufferedImage to process
 * @param transfer COSBase object defining the transfer function
 * @return new BufferedImage with applied transfer function
 * @throws IOException if there is an error processing the transfer function
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,"org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",88,96,"/**
 * Initializes a PDIndexed color space.
 * @param indexedArray the COS array representing the indexed color space
 * @param resources the resources for creating the base color space
 * @throws IOException if an error occurs during initialization
 */","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @param resources the resources, can be null. Allows to use its cache for the colorspace.
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/function/PDFunctionType0.java,eval,org.apache.pdfbox.pdmodel.common.function.PDFunctionType0:eval(float[]),424,467,"/**
 * Evaluates input using linear interpolation.
 * @param input array of input values
 * @return array of interpolated output values
 * @throws IOException if range missing in function /Decode entry
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(java.awt.Rectangle,int)",467,517,"/**
 * Retrieves an image from a PDF page.
 * @param region the rectangular area to extract or null for full image
 * @param subsampling level of detail (1 for full resolution)
 * @return BufferedImage of the specified region and subsampling
 * @throws IOException if an I/O error occurs during image processing
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/LosslessFactory.java,createFromImage,"org.apache.pdfbox.pdmodel.graphics.image.LosslessFactory:createFromImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",79,116,"/**
 * Creates a PDImageXObject from a BufferedImage.
 * @param document PDF document to add the image to
 * @param image source BufferedImage
 * @return PDImageXObject created from the image
 * @throws IOException if an I/O error occurs
 */","* Creates a new lossless encoded image XObject from a BufferedImage.
     * <p>
     * <u>New for advanced users from 2.0.12 on:</u><br>
     * If you created your image with a non standard ICC colorspace, it will be
     * preserved. (If you load images in java using ImageIO then no need to read
     * this segment) However a new colorspace will be created for each image. So
     * if you create a PDF with several such images, consider replacing the
     * colorspace with a common object to save space. This is done with
     * {@link PDImageXObject#getColorSpace()} and
     * {@link PDImageXObject#setColorSpace(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace) PDImageXObject.setColorSpace()}
     *
     * @param document the document where the image will be created
     * @param image the BufferedImage to embed
     * @return a new image XObject
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDICCBased.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDICCBased:create(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDResources)",108,132,"/**
 * Creates a PDICCBased color space from an ICC array.
 * @param iccArray ICC profile as COSArray
 * @param resources PDF document resources
 * @return PDICCBased color space instance
 * @throws IOException if an I/O error occurs
 */","* Creates a new ICC color space using the PDF array, optionally using a resource cache.
     *
     * @param iccArray the ICC stream object.
     * @param resources resources to use as cache, or null for no caching.
     * @return an ICC color space.
     * @throws IOException if there is an error reading the ICC profile or if the parameter is
     * invalid.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processPage,org.apache.pdfbox.contentstream.PDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),152,161,"/**
* Processes a PDF page.
* @param page the PDPage to be processed
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws IOException if there is an error accessing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,processChildStream,"org.apache.pdfbox.contentstream.PDFStreamEngine:processChildStream(org.apache.pdfbox.contentstream.PDContentStream,org.apache.pdfbox.pdmodel.PDPage)",478,488,"/**
 * Processes child content stream for a given page.
 * @param contentStream the PDContentStream to be processed
 * @param page the PDPage associated with the content stream
 * @throws IOException if an I/O error occurs during processing
 */","* Process a child stream of the given page. Cannot be used with {@link #processPage(PDPage)}.
     *
     * @param contentStream the child content stream
     * @param page the page to be used for processing
     * @throws IOException if there is an exception while processing the stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",80,87,"/**
* Initializes a new PDPageContentStream to overwrite page contents.
* @param document PDF document containing the page
* @param sourcePage page to modify
* @throws IOException if there's an issue writing to the page
*/","* Create a new PDPage content stream. This constructor overwrites all existing content streams
     * of this page.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @throws IOException If there is an error writing to the page contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPageContentStream.java,<init>,"org.apache.pdfbox.pdmodel.PDPageContentStream:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.PDPageContentStream$AppendMode,boolean)",101,105,"/**
* Initializes content stream for a page.
* @param document PDF document containing the page
* @param sourcePage page to add content to
* @param appendContent mode to determine if content is appended or overwritten
* @param compress flag to enable compression of content streams
*/","* Create a new PDPage content stream. If the appendContent parameter is set to
     * {@link AppendMode#APPEND}, you may want to use
     * {@link #PDPageContentStream(PDDocument, PDPage, PDPageContentStream.AppendMode, boolean, boolean)}
     * instead, with the fifth parameter set to true.
     *
     * @param document The document the page is part of.
     * @param sourcePage The page to write the contents to.
     * @param appendContent Indicates whether content will be overwritten, appended or prepended.
     * @param compress Tell if the content stream should compress the page contents.
     * @throws IOException If there is an error writing to the page contents.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the font and size for PDF text.
* @param font the PDFont to use
* @param fontSize the size of the font
* @throws IOException if an I/O error occurs
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,getName,org.apache.pdfbox.pdmodel.PDAbstractContentStream:getName(org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace),637,649,"/**
* Retrieves the PDF name for standard color spaces or adds custom color space to resources.
* @param colorSpace the color space to process
* @return COSName of the color space or newly added resource entry
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
* @param state PDExtendedGraphicsState object to apply
* @throws IOException if an I/O error occurs
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAbstractContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading pattern to the current graphics state.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Begins marked content with a tag and property list.
* @param tag the marked content identifier
* @param propertyList properties for the marked content
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Writes marked content point with properties to PDF.
* @param tag COSName representing the mark tag
* @param propertyList PDPropertyList containing properties
* @throws IOException if I/O error occurs during writing
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws an image on the page.
* @param image PDImageXObject to be drawn
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
* @throws IOException if an I/O error occurs
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image on the PDF canvas.
 * @param image PDImageXObject to be drawn
 * @param matrix transformation matrix for positioning and scaling
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
 * Draws a PDF form on the current page.
 * @param form PDFormXObject to be drawn
 * @throws IOException if an I/O error occurs
 */","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,createOverlayXObject,"org.apache.pdfbox.multipdf.Overlay:createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.multipdf.PDFCloneUtility)",501,530,"/**
* Creates an overlay XObject for a PDF page.
* @param page the target PDF page
* @param layoutPage the layout information for the overlay
* @param cloner utility for cloning PDF resources
* @return COSName of the created XObject
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createImageForm,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createImageForm(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.common.PDStream,org.apache.pdfbox.pdmodel.common.PDRectangle,java.awt.geom.AffineTransform,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject)",306,326,"/**
* Creates an image form in a PDF document.
* @param imageFormResources resources for the image form
* @param innerFormResource resources for the inner form
* @param imageFormStream stream containing the image form data
* @param bbox bounding box of the image form
* @param at affine transformation matrix
* @param img image object to be added
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(boolean),157,161,"/**
* Retrieves normal appearance as content stream.
* @param compress indicates if the stream should be compressed
* @return PDAppearanceContentStream object
* @throws IOException if an I/O error occurs
*/","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to.
     * 
     * @param compress whether the content stream is to be compressed. Set this to true when
     * creating long content streams.
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,getPageLabels,org.apache.pdfbox.pdmodel.PDDocumentCatalog:getPageLabels(),620,624,"/**
 * Retrieves page labels from the document.
 * @return PDPageLabels object or null if not found
 * @throws IOException if an I/O error occurs
 */","* Returns the page labels descriptor of the document.
     *
     * @return the page labels descriptor of the document.
     * @throws IOException If there is a problem retrieving the page labels.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/action/PDActionJavaScript.java,<init>,org.apache.pdfbox.pdmodel.interactive.action.PDActionJavaScript:<init>(java.lang.String),50,54,"/**
 * Constructs a PDActionJavaScript with the given JavaScript action.
 * @param js JavaScript code to be executed
 */","* Constructor.
     *
     * @param js Some javascript code.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,switchNodeCount,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:switchNodeCount(),264,269,"/**
* Switches node count to negative.
* Updates parent node count accordingly.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/optionalcontent/PDOptionalContentProperties.java,isGroupEnabled,org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties:isGroupEnabled(java.lang.String),279,297,"/**
* Checks if a group is enabled by name.
* @param groupName the name of the group to check
* @return true if the group is enabled, false otherwise
*/","* Indicates whether <em>at least one</em> optional content group with this name is enabled.
     * There may be disabled optional content groups with this name even if this function returns
     * true.
     *
     * @param groupName the group name
     * @return true if at least one group is enabled",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,isGroupEnabled,org.apache.pdfbox.rendering.PDFRenderer:isGroupEnabled(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentGroup),448,452,"/**
* Checks if an optional content group is enabled.
* @param group the group to check
* @return true if enabled, false otherwise
*/","* Indicates whether an optional content group is enabled.
     * @param group the group
     * @return true if the group is enabled",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPages,org.apache.pdfbox.multipdf.Overlay:getLayoutPages(org.apache.pdfbox.pdmodel.PDDocument),328,338,"/**
* Extracts and maps pages from a PDF document.
* @param doc PDDocument object representing the PDF
* @return Map of page indices to LayoutPage objects
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,fixDestinations,org.apache.pdfbox.multipdf.Splitter:fixDestinations(org.apache.pdfbox.pdmodel.PDDocument),160,185,"/**
* Fixes page destinations in a PDF document.
* Updates destination pages based on a mapping.
*/","* Replace the page destinations, if the source and destination pages are in the target
     * document. This must be called after all pages (and its annotations) are processed.
     *
     * @param destinationDocument",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addPage,org.apache.pdfbox.pdmodel.PDDocument:addPage(org.apache.pdfbox.pdmodel.PDPage),240,244,"/**
* Adds a new page to the document.
* @param page PDPage object to be added
*/","* This will add a page to the document. This is a convenience method, that will add the page to the root of the
     * hierarchy and set the parent of the page to the root.
     * 
     * @param page The page to add to the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(org.apache.pdfbox.pdmodel.PDPage),656,659,"/**
 * Removes a specified page from the document.
 * @param page PDPage object to be removed
 */","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     *
     * @param page The page to remove from the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,removePage,org.apache.pdfbox.pdmodel.PDDocument:removePage(int),668,671,"/**
 * Removes a page from the document by its number.
 * @param pageNumber index of the page to be removed
 */","* Remove the page from the document. Do not use this method if other pages link to this one or
     * if your document has a structure tree for accessibility unless you are able to fix these as
     * well. In such cases it is better to use the splitter() class which will do these fixes.
     * 
     * @param pageNumber 0 based index to page number.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean,org.apache.pdfbox.rendering.PDFRenderer)",139,148,"/**
* Initializes a new PDFPrintable instance.
* @param document PDDocument to be printed
* @param scaling scaling strategy for printing
* @param showPageBorder flag to indicate if page borders should be shown
* @param dpi dots per inch for rendering quality
* @param center flag to center the content on the page
* @param renderer PDFRenderer used for rendering pages
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).
     * @param renderer the document renderer. Useful if {@link PDFRenderer} has been subclassed.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,<init>,org.apache.pdfbox.rendering.PDFRenderer:<init>(org.apache.pdfbox.pdmodel.PDDocument),71,75,"/**
 * Initializes a PDF renderer with a given document.
 * @param document PDDocument to be rendered
 */","* Creates a new PDFRenderer.
     * @param document the document to render",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,<init>,org.apache.pdfbox.multipdf.PageExtractor:<init>(org.apache.pdfbox.pdmodel.PDDocument),42,46,"/**
* Initializes a PageExtractor with a given document.
* @param sourceDocument the PDF document to extract pages from
*/","* Creates a new instance of PageExtractor
     * @param sourceDocument The document to split.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getPageIndicesByLabels,org.apache.pdfbox.pdmodel.common.PDPageLabels:getPageIndicesByLabels(),208,214,"/**
* Maps page labels to their respective indices.
* @return A map of page labels to page indices
*/","* Returns a mapping with computed page labels as keys and corresponding
     * 0-based page indices as values. The returned map will contain at most as
     * much entries as the document has pages.
     * 
     * <p>
     * <strong>NOTE:</strong> If the document contains duplicate page labels,
     * the returned map will contain <em>less</em> entries than the document has
     * pages. The page index returned in this case is the <em>highest</em> index
     * among all pages sharing the same label.
     * </p>
     * 
     * @return a mapping from labels to 0-based page indices.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/common/PDPageLabels.java,getLabelsByPageIndices,org.apache.pdfbox.pdmodel.common.PDPageLabels:getLabelsByPageIndices(),223,235,"/**
* Retrieves labels for each page in the document.
* @return array of page labels
*/","* Returns a mapping with 0-based page indices as keys and corresponding
     * page labels as values as an array. The array will have exactly as much
     * entries as the document has pages.
     * 
     * @return an array mapping from 0-based page indices to labels.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float,boolean)",106,115,"/**
 * Initializes a PDFPageable with specified document and rendering options.
 * @param document the PDDocument to be rendered
 * @param orientation page orientation (e.g., portrait, landscape)
 * @param showPageBorder flag to indicate if page borders should be shown
 * @param dpi dots per inch for rendering quality
 * @param center flag to center content on pages
 */","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero, and optionally be centered.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.type1.Type1Font),110,127,"/**
* Builds a font descriptor from a Type1Font.
* @param type1 the source Type1Font
* @return a new PDFontDescriptor with properties set from the Type1Font
*/","* Returns a PDFontDescriptor for the given PFB.
     * 
     * @throws IOException if the font bounding box isn't available",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,buildFontDescriptor,org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:buildFontDescriptor(org.apache.fontbox.afm.FontMetrics),134,153,"/**
* Builds a PDFontDescriptor from FontMetrics.
* @param metrics font metrics data
* @return PDFontDescriptor object configured with metrics
*/","* Returns a PDFontDescriptor for the given AFM. Used only for Standard 14 fonts.
     *
     * @param metrics AFM",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,createFontDescriptor,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:createFontDescriptor(org.apache.fontbox.ttf.TrueTypeFont),182,279,"/**
* Creates a PDFontDescriptor from TrueTypeFont.
* @param ttf TrueTypeFont object
* @return PDFontDescriptor object
* @throws IOException if required font tables are missing
*/",* Creates a new font descriptor dictionary for the given TTF.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[])",107,111,"/**
 * Creates an image from a byte array.
 * @param document PDF document to add the image to
 * @param byteArray byte array containing image data
 * @return PDImageXObject created from the byte array
 * @throws IOException if there is an error processing the image data
 */","* Creates a new CCITT Fax compressed image XObject from a specific image of a TIFF file stored
     * in a byte array. Only single-strip CCITT T4 or T6 compressed TIFF files are supported. If
     * you're not sure what TIFF files you have, use
     * {@link LosslessFactory#createFromImage(PDDocument, BufferedImage) }
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param byteArray the TIFF file in a byte array which contains a suitable CCITT compressed
     * image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/CCITTFactory.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.CCITTFactory:createFromFile(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",170,174,"/**
* Creates an image from a file.
* @param document PDF document to add the image to
* @param file source image file
* @return PDImageXObject representing the image
* @throws IOException if there's an issue reading the file
*/","* Creates a new CCITT Fax compressed image XObject from the first image of a TIFF file. Only
     * single-strip CCITT T4 or T6 compressed TIFF files are supported. If you're not sure what TIFF
     * files you have, use
     * {@link LosslessFactory#createFromImage(org.apache.pdfbox.pdmodel.PDDocument, java.awt.image.BufferedImage)}
     * or {@link CCITTFactory#createFromImage(PDDocument, BufferedImage) }
     * instead.
     *
     * @param document the document to create the image as part of.
     * @param file the  TIFF file which contains a suitable CCITT compressed image
     * @return a new Image XObject
     * @throws IOException if there is an error reading the TIFF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCaret.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCaret:<init>(org.w3c.dom.Element),65,77,"/**
* Constructs a FDFAnnotationCaret from an XML Element.
* @param element XML element representing the annotation
* @throws IOException if there's an issue processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationCircle.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationCircle:<init>(org.w3c.dom.Element),66,79,"/**
* Constructs a circle annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if an I/O error occurs during processing
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFileAttachment.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFileAttachment:<init>(org.w3c.dom.Element),63,67,"/**
* Constructs an FDF annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if there is an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationFreeText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationFreeText:<init>(org.w3c.dom.Element),71,100,"/**
* Constructs a FDFAnnotationFreeText object from an XML element.
* @param element XML element representing the annotation
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationInk.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationInk:<init>(org.w3c.dom.Element),77,113,"/**
 * Initializes FDFAnnotationInk from an XML element.
 * @param element XML element representing the annotation
 * @throws IOException if required elements are missing or parsing fails
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLine.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLine:<init>(org.w3c.dom.Element),68,155,"/**
* Initializes a line annotation from an XML element.
* @param element XML element containing annotation attributes
* @throws IOException if required attributes are missing or invalid
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationLink.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationLink:<init>(org.w3c.dom.Element),74,101,"/**
* Constructs a FDFAnnotationLink from an XML element.
* @param element the XML element representing the annotation
* @throws IOException if there is an error reading the XML or creating the action
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolygon.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolygon:<init>(org.w3c.dom.Element),73,85,"/**
* Constructs a polygon annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if an I/O error occurs during processing
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationPolyline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationPolyline:<init>(org.w3c.dom.Element),74,81,"/**
* Constructs a polyline annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if there's an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSound.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSound:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs an FDF annotation sound.
 * @param element PDF element representing the annotation
 * @throws IOException if an I/O error occurs
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquare.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquare:<init>(org.w3c.dom.Element),67,80,"/**
* Initializes a square annotation from an XML element.
* @param element XML element containing annotation data
* @throws IOException if I/O error occurs during initialization
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStamp:<init>(org.w3c.dom.Element),84,135,"/**
* Initializes a FDFAnnotationStamp from an XML element.
* @param element XML element representing the stamp annotation
* @throws IOException if there's an error processing the appearance data
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationText.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationText:<init>(org.w3c.dom.Element),65,84,"/**
* Constructs an FDFAnnotationText from an XML Element.
* @param element the XML Element representing the annotation
* @throws IOException if an I/O error occurs during processing
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationTextMarkup.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationTextMarkup:<init>(org.w3c.dom.Element),57,77,"/**
 * Initializes a text markup annotation from an XML element.
 * @param element XML element representing the annotation
 * @throws IOException if required attributes are missing or invalid
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,dereferenceCOSObject,org.apache.pdfbox.pdfparser.COSParser:dereferenceCOSObject(org.apache.pdfbox.cos.COSObject),428,444,"/**
 * Dereferences a COSObject by parsing it.
 * @param obj the COSObject to dereference
 * @return the parsed COSBase object or null if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/COSParser.java,retrieveTrailer,org.apache.pdfbox.pdfparser.COSParser:retrieveTrailer(),241,295,"/**
 * Retrieves the PDF document's trailer dictionary.
 * @return COSDictionary representing the trailer or null if rebuild is required
 * @throws IOException if an I/O error occurs
 */","* Read the trailer information and provide a COSDictionary containing the trailer information.
     * 
     * @return a COSDictionary containing the trailer information
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String,java.io.InputStream,java.lang.String)",201,205,"/**
* Loads a PDF document from byte array with optional encryption.
* @param input PDF data as byte array
* @param password decryption password (null if not encrypted)
* @param keyStore InputStream to keystore for decryption (optional)
* @param alias alias for the keystore entry (optional)
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",348,363,"/**
* Loads a PDF document from a file.
* @param file the input PDF file
* @param password the PDF password, if any
* @param keyStore the input stream for the keystore, if needed
* @param alias the keystore alias, if applicable
* @param streamCacheCreateFunction function to create stream cache
* @return PDDocument object
* @throws IOException if an I/O error occurs
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead),376,379,"/**
* Loads a PDF document from a RandomAccessRead source.
* @param randomAccessRead the source of the PDF data
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF new streams.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",394,399,"/**
* Loads a PDF document from a random access source.
* @param randomAccessRead the source of the PDF data
* @param streamCacheCreateFunction function to create cache for streams
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF.
     * 
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String)",413,417,"/**
* Loads a PDF document from a RandomAccessRead source with a given password.
* @param randomAccessRead the source of the PDF data
* @param password the password for decrypting the PDF
* @return the loaded PDDocument object
* @throws IOException if an I/O error occurs
*/","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     *
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,java.io.InputStream,java.lang.String)",432,437,"/**
* Loads a PDF document from a RandomAccessRead source.
* @param randomAccessRead source of the PDF file
* @param password document password (optional)
* @param keyStore keystore for decryption (optional)
* @param alias key alias in the keystore (optional)
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs
*/","* Parses a PDF. Unrestricted main memory will be used for buffering new/altered PDF streams.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(org.apache.pdfbox.io.RandomAccessRead,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",453,457,"/**
* Loads a PDF document from a RandomAccessRead source.
* @param randomAccessRead the source of the PDF data
* @param password the password for encrypted PDFs (null if not encrypted)
* @param streamCacheCreateFunction function to create cache for streams (optional)
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF.
     *
     * @param randomAccessRead random access read representing the pdf to be loaded. To pass an
     * InputStream, wrap it into a {@link RandomAccessReadBuffer}.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.File),80,83,"/**
 * Sets visual signature from file.
 * @param file File containing the visual signature data
 * @throws IOException if an I/O error occurs while reading the file
 */","* Reads the visual signature from the given file.
     *
     * @param file the file containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(java.io.InputStream),91,94,"/**
 * Sets visual signature from input stream.
 * @param is input stream containing visual signature data
 * @throws IOException if an I/O error occurs
 */","* Reads the visual signature from the given input stream.
     *
     * @param is the input stream containing the visual signature
     * @throws IOException when something went wrong during parsing",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showGlyph,"org.apache.pdfbox.contentstream.PDFStreamEngine:showGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",828,839,"/**
 * Renders a glyph using the specified font and matrix.
 * @param textRenderingMatrix transformation matrix for text rendering
 * @param font PDFont object representing the font
 * @param code character code of the glyph to render
 * @param displacement vector for additional positioning
 * @throws IOException if an I/O error occurs during rendering
 */","* Called when a glyph is to be processed. This method is intended for overriding in subclasses,
     * the default implementation does nothing.
     *
     * @param textRenderingMatrix the current text rendering matrix, T<sub>rm</sub>
     * @param font the current font
     * @param code internal PDF character code for the glyph
     * @param displacement the displacement (i.e. advance) of the glyph in text space
     * @throws IOException if the glyph cannot be processed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",45,92,"/**
* Processes an operator with arguments, handling form and transparency groups.
* @param operator the PDF operator to process
* @param arguments list of COSBase arguments for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/markedcontent/DrawObject.java,process,"org.apache.pdfbox.contentstream.operator.markedcontent.DrawObject:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",51,92,"/**
* Processes an operator with arguments, handling XObjects and transparency.
* @param operator the PDF operator to process
* @param arguments list of COSBase arguments for the operator
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveGlyphHeight,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveGlyphHeight(org.apache.pdfbox.pdmodel.font.PDFont,int)",979,1019,"/**
 * Resolves the glyph height for a given font and character code.
 * @param font PDFont object representing the font
 * @param code character code of the glyph
 * @return height of the glyph or -1 if not found
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,getDisplacement,org.apache.pdfbox.pdmodel.font.PDType3Font:getDisplacement(int),149,153,"/**
* Retrieves displacement vector for a character.
* @param code character code
* @return transformed vector representing displacement
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDFTemplateCreator.java,buildPDF,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDFTemplateCreator:buildPDF(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner),76,155,"/**
 * Builds a PDF document with a visible signature.
 * @param properties design properties for the signature
 * @return InputStream containing the generated PDF
 * @throws IOException if an I/O error occurs
 */","* Build a PDF with a visible signature step by step, and return it as a stream.
     *
     * @param properties properties to be used for the creation
     * @return InputStream stream containing the pdf holding the visible signature
     * @throws IOException if the PDF could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.io.File),955,958,"/**
 * Saves data to a file with default compression.
 * @param file the target file for saving
 * @throws IOException if an I/O error occurs
 */","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param file The file to save as.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,"org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",1024,1027,"/**
* Saves data to a file with specified compression parameters.
* @param fileName name of the file to save
* @param compressParameters parameters for compression
* @throws IOException if an I/O error occurs
*/","* Save the document to a file using the given compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     * 
     * @param fileName The file to save as.
     * @param compressParameters The parameters for the document's compression.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,createNewDocumentIfNecessary,org.apache.pdfbox.multipdf.Splitter:createNewDocumentIfNecessary(),704,715,"/**
 * Creates a new document if necessary.
 * @throws IOException if an I/O error occurs
 */","* Helper method for creating new documents at the appropriate pages.
     *
     * @throws IOException If there is an error creating the new document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,doWriteHeader,org.apache.pdfbox.pdfwriter.COSWriter:doWriteHeader(org.apache.pdfbox.cos.COSDocument),644,668,"/**
 * Writes the header to a PDF or FDF document.
 * @param doc COSDocument object to write the header to
 * @throws IOException if an I/O error occurs
 */","* This will write the header to the PDF document.
     *
     * @param doc The document to get the data from.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocumentCatalog.java,setOCProperties,org.apache.pdfbox.pdmodel.PDDocumentCatalog:setOCProperties(org.apache.pdfbox.pdmodel.graphics.optionalcontent.PDOptionalContentProperties),653,662,"/**
 * Sets optional content properties for the document.
 * @param ocProperties properties to be set
 */","* Sets the optional content properties dictionary. The document version is incremented to 1.5
     * if lower.
     *
     * @param ocProperties the optional properties dictionary",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildToUnicodeCMap,org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildToUnicodeCMap(java.util.Map),124,179,"/**
 * Builds a ToUnicode CMap for font subsetting.
 * @param newGIDToOldCID mapping of new GIDs to old CIDs
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,getLayoutPage,org.apache.pdfbox.multipdf.Overlay:getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument),305,308,"/**
 * Retrieves and creates layout page from the first document page.
 * @param doc PDF document object
 * @return LayoutPage object representing the first page
 * @throws IOException if an I/O error occurs during processing
 */","* Create a LayoutPage object from the first page of the given document.
     *
     * @param doc
     * @return
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSize,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSize(org.apache.pdfbox.pdmodel.PDDocument,int)",195,208,"/**
* Calculates page size and properties for a given PDF page.
* @param document The PDF document to process.
* @param page Page number (1-based index).
*/","* Each page of document can be different sizes. This method calculates the page size based on
     * the page media box.
     * 
     * @param document
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IllegalArgumentException if the page argument is lower than 0.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineItem.java,findDestinationPage,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem:findDestinationPage(org.apache.pdfbox.pdmodel.PDDocument),228,274,"/**
* Finds the destination page in a PDF document.
* @param doc the PDF document to search within
* @return the destination PDPage or null if not found
* @throws IOException if an I/O error occurs
*/","* This method will attempt to find the page in this PDF document that this outline points to.
     * If the outline does not point to anything then this method will return null. If the outline
     * is an action that is not a GoTo action then this method will also return null.
     *
     * @param doc The document to get the page from.
     *
     * @return The page that this outline will go to when activated or null if it does not point to
     * anything.
     * @throws IOException If there is an error when trying to find the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPageFormat,org.apache.pdfbox.printing.PDFPageable:getPageFormat(int),177,233,"/**
 * Retrieves page format for a given index.
 * @param pageIndex zero-based index of the page
 * @return PageFormat object with normalized orientation and size
 */","* {@inheritDoc}
     * 
     * Returns the actual physical size of the pages in the PDF file. May not fit the local printer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/destination/PDPageDestination.java,retrievePageNumber,org.apache.pdfbox.pdmodel.interactive.documentnavigation.destination.PDPageDestination:retrievePageNumber(),119,135,"/**
 * Retrieves the page number from an array.
 * @return the page number or -1 if not found
 */","* Returns the page number for this destination, regardless of whether this is a page number or
     * a reference to a page.
     *
     * @see org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineItem
     * @return the 0-based page number, or -1 if the destination type is unknown.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:writeXML(java.io.Writer),74,78,"/**
* Writes FDF data to XML format.
* @param output Writer object to write XML data
* @throws IOException if writing fails
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/encryption/StandardSecurityHandler.java,prepareDocumentForEncryption,org.apache.pdfbox.pdmodel.encryption.StandardSecurityHandler:prepareDocumentForEncryption(org.apache.pdfbox.pdmodel.PDDocument),365,424,"/**
* Prepares a PDF document for encryption.
* @param document the PDDocument to be encrypted
* @throws IOException if an I/O error occurs
*/","* Prepare document for encryption.
     *
     * @param document The document to encrypt.
     *
     * @throws IOException If there is an error accessing data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotation.java,createAnnotation,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation:createAnnotation(org.apache.pdfbox.cos.COSBase),106,168,"/**
* Creates a PDF annotation from a COSBase object.
* @param base the COSBase object representing the annotation
* @return PDAnnotation instance or throws IOException if unsupported
*/","* Create the correct annotation from the base COS object.
     *
     * @param base The COS object that is the annotation.
     * @return The correctly typed annotation object, never null.
     *
     * @throws IOException If the annotation type is unknown.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDNonTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDNonTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),75,98,"/**
* Imports FDF field data into the PDF form.
* @param fdfField FDF field containing data to import
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTerminalField.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDTerminalField:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFField),98,139,"/**
 * Imports FDF field data and updates annotation flags.
 * @param fdfField FDF field to import
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Draws an image at a specified position.
* @param inlineImage the image to be drawn
* @param x the x-coordinate of the top-left corner
* @param y the y-coordinate of the top-left corner
* @throws IOException if an I/O error occurs
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified position and size.
 * @param inlineImage the image to draw
 * @param x the x-coordinate of the top-left corner
 * @param y the y-coordinate of the top-left corner
 * @param width the width of the image
 * @param height the height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
 * Draws an inline image at specified position and size.
 * @param inlineImage the image to draw
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws an inline image at specified position and size.
* @param inlineImage the image to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
* @throws IOException if an I/O error occurs
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float,float,float)",489,545,"/**
* Draws an inline image at specified position and size.
* @param inlineImage the image to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
* @throws IOException if an I/O error occurs
*/","* Draw an inline image at the x,y coordinates and a certain width and height.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     * @param width The width of the inline image to draw.
     * @param height The height of the inline image to draw.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDPolygonAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDPolygonAppearanceHandler:generateNormalAppearance(),55,155,"/**
 * Generates the normal appearance of a polygon annotation.
 * Adjusts rectangle bounds and draws shape with specified styles.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyRectangle,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyRectangle(org.apache.pdfbox.pdmodel.common.PDRectangle),86,96,"/**
* Draws a cloudy rectangle on the PDF.
* @param rd PDRectangle defining the boundary of the rectangle
* @throws IOException if an I/O error occurs
*/","* Creates a cloudy border for a rectangular annotation.
     * The rectangle is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     * <p>
     * This can be used for Square and FreeText annotations. However, this does
     * not produce the text and the callout line for FreeTexts.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,cloudyEllipseImpl,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:cloudyEllipseImpl(double,double,double,double)",743,935,"/**
 * Draws a cloudy ellipse with specified dimensions.
 * @param leftOrig bottom-left x-coordinate
 * @param bottomOrig bottom-left y-coordinate
 * @param rightOrig top-right x-coordinate
 * @param topOrig top-right y-coordinate
 * @throws IOException if drawing fails
 */",* Cloudy ellipse implementation.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureFields,org.apache.pdfbox.pdmodel.PDDocument:getSignatureFields(),866,881,"/**
* Retrieves all signature fields from the document.
* @return List of PDSignatureField objects
*/","* Retrieve all signature fields from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,refreshAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:refreshAppearances(),339,348,"/**
* Refreshes appearances for all terminal fields.
* @throws IOException if an I/O error occurs
*/","* Refreshes the appearance streams and appearance dictionaries for the widget annotations of all fields.
     * 
     * @throws IOException if the appearance streams could not be refreshed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getFieldIterator,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getFieldIterator(),419,422,"/**
 * Returns an iterator over all fields in the PDF document.
 * @return Iterator of PDField objects
 */","* Returns an iterator which walks all fields in the field tree, in order.
     * 
     * @return an iterator which walks all fields in the field tree",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,setCacheFields,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:setCacheFields(boolean),442,457,"/**
* Enables or disables caching of fields.
* @param cache true to enable caching, false to disable
*/","* This will tell this form to cache the fields into a Map structure
     * for fast access via the getField method.  The default is false.  You would
     * want this to be false if you were changing the COSDictionary behind the scenes,
     * otherwise setting this to true is acceptable.
     *
     * @param cache A boolean telling if we should cache the fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,getField,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:getField(java.lang.String),475,493,"/**
 * Retrieves a PDField by its fully qualified name.
 * @param fullyQualifiedName the unique identifier of the field
 * @return PDField object or null if not found
 */","* This will get a field by name, possibly using the cache if setCache is true.
     *
     * @param fullyQualifiedName The name of the field to get.
     * @return The field with that name of null if one was not found.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float[]),403,436,"/**
* Evaluates input through a series of functions.
* @param input float array representing the input values
* @return float array with evaluated results, clamped between 0 and 1
* @throws IOException if an I/O error occurs during function evaluation
*/","* Convert the input values using the functions of the shading dictionary.
     *
     * @param input the input values
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,applySoftMaskToPaint,"org.apache.pdfbox.rendering.PageDrawer:applySoftMaskToPaint(java.awt.Paint,org.apache.pdfbox.pdmodel.graphics.state.PDSoftMask)",604,653,"/**
* Applies a soft mask to a parent paint.
* @param parentPaint the original paint object
* @param softMask the soft mask to apply
* @return Paint with applied soft mask or original if invalid
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDIndexed.java,<init>,org.apache.pdfbox.pdmodel.graphics.color.PDIndexed:<init>(org.apache.pdfbox.cos.COSArray),76,79,"/**
* Constructor initializes with COSArray and default color space.
* @param indexedArray array containing indexed data
* @throws IOException if an I/O error occurs
*/","* Creates a new indexed color space from the given PDF array.
     * 
     * @param indexedArray the array containing the indexed parameters
     * @throws IOException if the colorspace could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,getImage,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:getImage(),458,462,"/**
 * Retrieves an image.
 * @return BufferedImage object
 * @throws IOException if an I/O error occurs
 */","* {@inheritDoc}
     * The returned images are cached via a SoftReference.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignatureImage,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignatureImage(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage)",185,190,"/**
* Sets a signature image in the PDF document.
* @param template PDDocument to modify
* @param image BufferedImage representing the signature
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/color/PDColorSpace.java,create,"org.apache.pdfbox.pdmodel.graphics.color.PDColorSpace:create(org.apache.pdfbox.cos.COSBase,org.apache.pdfbox.pdmodel.PDResources,boolean)",89,242,"/**
 * Creates a PDColorSpace from a COSBase object.
 * @param colorSpace the COSBase representing the color space
 * @param resources PDF resources containing additional color spaces
 * @param wasDefault flag indicating if this is a default color space
 * @return PDColorSpace instance or throws IOException if invalid
 */","* Creates a color space given a name or array. Abbreviated device color names are not supported
     * here, please replace them first. This method is for PDFBox internal use only, others should
     * use {@link #create(COSBase, PDResources)}.
     *
     * @param colorSpace the color space COS object
     * @param resources the current resources.
     * @param wasDefault if current color space was used by a default color space.
     * @return a new color space.
     * @throws MissingResourceException if the color space is missing in the resources dictionary
     * @throws IOException if the color space is unknown or cannot be created.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildImageObject,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildImageObject(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",329,407,"/**
 * Builds a PDImageXObject from PNG data.
 * @param document PDF document to add the image to
 * @param state PNG conversion state containing image metadata
 * @return PDImageXObject or null if creation fails
 * @throws IOException on I/O errors during image processing
 */",* Build the base image object from the IDATs and profile information,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.LegacyPDFStreamEngine:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
* Processes a PDF page, setting rotation and handling crop box.
* @param page the PDPage to process
* @throws IOException if an I/O error occurs
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the font and size for text rendering.
* @param font PDFont object to be set
* @param fontSize size of the font
* @throws IOException if an I/O error occurs
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDFormContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the font and size for PDF text.
* @param font PDFont object representing the font
* @param fontSize float value specifying the font size
* @throws IOException if an I/O error occurs
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPageContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
* Sets the current font and size for PDF text.
* @param font the PDFont to use
* @param fontSize the font size in points
* @throws IOException if an I/O error occurs
*/","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setFont,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setFont(org.apache.pdfbox.pdmodel.font.PDFont,float)",168,218,"/**
 * Sets the font and size for PDF text.
 * @param font the PDFont to use
 * @param fontSize the font size in points
 * @throws IOException if an I/O error occurs
 */","* Set the font and font size to draw text with.
     *
     * @param font The font to use.
     * @param fontSize The font size to draw the text.
     * @throws IOException If there is an error writing the font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color for PDF graphics.
* @param color PDColor object representing the color to set
* @throws IOException if an I/O error occurs while writing to the stream
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Sets the non-stroking color for PDF content.
* @param color PDColor object to be set
* @throws IOException if an I/O error occurs
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
* @param state PDExtendedGraphicsState object to apply
* @throws IOException if an I/O error occurs
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDFormContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
* @param state PDExtendedGraphicsState object to apply
* @throws IOException if an I/O error occurs
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPageContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
* @param state graphics state configuration to apply
* @throws IOException if an I/O error occurs
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setGraphicsStateParameters,org.apache.pdfbox.pdmodel.PDPatternContentStream:setGraphicsStateParameters(org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState),1407,1411,"/**
* Sets graphics state parameters.
* @param state PDExtendedGraphicsState object to apply
* @throws IOException if an I/O error occurs
*/","* Set an extended graphics state.
     * 
     * @param state The extended graphics state to be added to the content stream
     * @throws IOException If the content stream could not be written.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading fill to the current graphics state.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDFormContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading pattern to the graphics context.
* @param shading PDShading object representing the gradient or pattern
* @throws IOException if an I/O error occurs while writing to the output stream
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPageContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading pattern to the current graphics state.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs during processing
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,shadingFill,org.apache.pdfbox.pdmodel.PDPatternContentStream:shadingFill(org.apache.pdfbox.pdmodel.graphics.shading.PDShading),1160,1169,"/**
* Applies a shading pattern to the current graphics state.
* @param shading PDShading object representing the shading pattern
* @throws IOException if an I/O error occurs during processing
*/","* Fills the clipping area with the given shading.
     *
     * @param shading Shading resource
     * @throws IOException If the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Begins marked content with a tag and property list.
* @param tag COSName representing the tag
* @param propertyList PDPropertyList containing properties
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDFormContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Begins marked content with a tag and property list.
* @param tag the marked content identifier
* @param propertyList the properties associated with the content
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPageContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
 * Begins marked content with a tag and property list.
 * @param tag the content tag
 * @param propertyList properties associated with the content
 * @throws IOException if an I/O error occurs
 */","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,beginMarkedContent,"org.apache.pdfbox.pdmodel.PDPatternContentStream:beginMarkedContent(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1347,1363,"/**
* Begins marked content with a tag and property list.
* @param tag the COSName tag for marking content
* @param propertyList the PDPropertyList containing properties
* @throws IOException if an I/O error occurs
*/","* Begin a marked content sequence with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Sets marked content point with properties.
* @param tag COSName representing the tag
* @param propertyList PDPropertyList containing properties
* @throws IOException if an I/O error occurs
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDFormContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Sets a marked content point with properties.
* @param tag COSName representing the tag
* @param propertyList PDPropertyList containing properties
* @throws IOException if writing fails
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPageContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Sets marked content point with properties.
* @param tag COSName representing the tag
* @param propertyList PDPropertyList containing properties
* @throws IOException if an I/O error occurs
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setMarkedContentPointWithProperties,"org.apache.pdfbox.pdmodel.PDPatternContentStream:setMarkedContentPointWithProperties(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList)",1394,1399,"/**
* Sets marked content point with properties.
* @param tag COSName representing the tag
* @param propertyList PDPropertyList containing properties
* @throws IOException if an I/O error occurs
*/","* Set a marked content point with a reference to an entry in the page resources' Properties dictionary.
     *
     * @param tag the tag to be added to the content stream
     * @param propertyList property list to be added to the content stream
     * @throws IOException If the content stream could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAbstractContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
 * Draws an image at specified coordinates.
 * @param image PDImageXObject to be drawn
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws an image at specified position and size.
* @param image PDImageXObject to be drawn
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
* @throws IOException if an I/O error occurs
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image on the PDF at specified coordinates and dimensions.
 * @param image PDImageXObject to be drawn
 * @param x horizontal coordinate of the top-left corner
 * @param y vertical coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs during drawing
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
* Draws an image on the PDF page.
* @param image PDImageXObject to be drawn
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
* @param width width of the image
* @param height height of the image
* @throws IOException if an I/O error occurs while drawing the image
*/","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float,float,float)",418,434,"/**
 * Draws an image on the PDF at specified position and size.
 * @param image PDImageXObject to draw
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @param width width of the image
 * @param height height of the image
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the given size.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     * @param width The width to draw the image.
     * @param height The height to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image on the PDF canvas.
 * @param image PDImageXObject to be drawn
 * @param matrix transformation matrix for positioning and scaling
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
* Draws an image at specified position.
* @param image PDImageXObject to draw
* @param matrix transformation matrix for positioning
* @throws IOException if error occurs during drawing
*/","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image on the PDF canvas.
 * @param image PDImageXObject to be drawn
 * @param matrix transformation matrix for positioning and scaling
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,org.apache.pdfbox.util.Matrix)",445,461,"/**
 * Draws an image using a specified transformation matrix.
 * @param image the PDImageXObject to draw
 * @param matrix the transformation matrix for positioning and scaling
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the origin with the given transformation matrix.
     *
     * @param image The image to draw.
     * @param matrix The transformation matrix to apply to the image.
     *
     * @throws IOException If there is an error writing to the stream.
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form.
* @param form PDFormXObject to be drawn
* @throws IOException if an I/O error occurs
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDFormContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form on the page.
* @param form PDFormXObject to be drawn
* @throws IOException if an I/O error occurs
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPageContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
* Draws a PDF form object.
* @param form PDFormXObject to be drawn
* @throws IOException if an I/O error occurs
*/","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawForm,org.apache.pdfbox.pdmodel.PDPatternContentStream:drawForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),554,563,"/**
 * Draws a PDF form on the current page.
 * @param form PDFormXObject to be drawn
 * @throws IOException if an I/O error occurs
 */","* Draws the given Form XObject at the current location.
     *
     * @param form Form XObject
     * @throws IOException if the content stream could not be written
     * @throws IllegalStateException If the method was called within a text block.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayPage,"org.apache.pdfbox.multipdf.Overlay:overlayPage(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.multipdf.Overlay$LayoutPage,org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.multipdf.PDFCloneUtility)",452,464,"/**
* Overlays content from a layout page onto a PDF page.
* @param page the target PDF page
* @param layoutPage the source layout page
* @param array array to add overlay stream reference
* @param cloner utility for cloning PDF objects
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getNormalAppearanceAsContentStream,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getNormalAppearanceAsContentStream(),141,144,"/**
* Retrieves normal appearance content stream.
* @return PDAppearanceContentStream object
* @throws IOException if an I/O error occurs
*/","* Get the annotations normal appearance content stream.
     * 
     * <p>
     * This will get the annotations normal appearance content stream, to 'draw' to. It will be
     * uncompressed.
     *
     * @return the appearance entry representing the normal appearance.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,openNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:openNode(),243,250,"/**
* Opens a node if it's not already open.
*/","* This will set this node to be open when it is shown in the viewer. By default, when a new node is created it will
     * be closed. This will do nothing if the node is already open.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/documentnavigation/outline/PDOutlineNode.java,closeNode,org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline.PDOutlineNode:closeNode(),256,262,"/**
 * Closes the node if it is open.
 */","* Close this node.
     *",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOCG,org.apache.pdfbox.rendering.PageDrawer:isHiddenOCG(org.apache.pdfbox.pdmodel.documentinterchange.markedcontent.PDPropertyList),2123,2146,"/**
* Checks if an OCG or OCMD is hidden.
* @param propertyList the optional content group or membership dictionary
* @return true if hidden, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,importPage,org.apache.pdfbox.pdmodel.PDDocument:importPage(org.apache.pdfbox.pdmodel.PDPage),698,716,"/**
 * Imports a page from another PDF document.
 * @param page the PDPage object to import
 * @return the imported PDPage object
 * @throws IOException if an I/O error occurs during import
 */","* This will import and copy the contents from another location. Currently the content stream is
     * stored in a scratch file. The scratch file is associated with the document. If you are adding
     * a page to this document from another document and want to copy the contents to this
     * document's scratch file then use this method otherwise just use the {@link #addPage addPage()}
     * method.
     * <p>
     * Unlike {@link #addPage addPage()}, this method creates a new PDPage object. If your page has
     * annotations, and if these link to pages not in the target document, then the target document
     * might become huge. What you need to do is to delete page references of such annotations. See
     * <a href=""http://stackoverflow.com/a/35477351/535646"">here</a> for how to do this.
     * <p>
     * Inherited (global) resources are ignored because these can contain resources not needed for
     * this page which could bloat your document, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-28"">PDFBOX-28</a> and related issues.
     * If you need them, call <code>importedPage.setResources(page.getResources());</code>
     * <p>
     * This method should only be used to import a page from a loaded document, not from a generated
     * document because these can contain unfinished parts, e.g. font subsetting information.
     *
     * @param page The page to import.
     * @return The page that was imported.
     *
     * @throws IOException If there is an error copying the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createTemplate,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createTemplate(org.apache.pdfbox.pdmodel.PDPage),83,89,"/**
* Creates a PDF template with a given page.
* @param page PDPage to be added to the template
* @throws IOException if an I/O error occurs
*/","* Creates a PDDocument and adds the page parameter to it and keeps this as a template in the PDF template
     * Structure.
     *
     * @param page the page to be added
     * @throws IOException if the document could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float,boolean)",121,125,"/**
* Initializes a PDFPrintable with specified settings.
* @param document PDDocument to be printed
* @param scaling Scaling method for the document
* @param showPageBorder flag to indicate if page borders should be shown
* @param dpi dots per inch for rendering
* @param center flag to center the document
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.
     * @param center true if the content is to be centered on the page (otherwise top-left).",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument),50,53,"/**
 * Constructs a PDFPageable with default settings.
 * @param document PDDocument to be paginated
 */","* Creates a new PDFPageable.
     *
     * @param document the document to print",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation)",61,64,"/**
 * Initializes a new PDFPageable with specified document and orientation.
 * @param document PDDocument to be used for printing
 * @param orientation page orientation (e.g., PORTRAIT or LANDSCAPE)
 */","* Creates a new PDFPageable with the given page orientation.
     *
     * @param document the document to print
     * @param orientation page orientation policy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean)",74,77,"/**
* Constructs a PDFPageable object.
* @param document PDDocument to be processed
* @param orientation page orientation (e.g., portrait, landscape)
* @param showPageBorder flag to indicate if page borders should be shown
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,<init>,"org.apache.pdfbox.printing.PDFPageable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Orientation,boolean,float)",89,93,"/**
* Constructs a PDFPageable with specified parameters.
* @param document PDDocument object to be printed
* @param orientation page orientation (e.g., portrait or landscape)
* @param showPageBorder flag to indicate if page border should be shown
* @param dpi dots per inch for rendering
*/","* Creates a new PDFPageable with the given page orientation and with optional page borders
     * shown. The image will be rasterized at the given DPI before being sent to the printer if
     * non-zero.
     *
     * @param document the document to print
     * @param orientation page orientation policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if non-zero then the image will be rasterized at the given DPI",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1FontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1FontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",56,103,"/**
 * Embeds a Type1 font into a PDF document.
 * @param doc PDF document to embed the font into
 * @param dict Font dictionary
 * @param pfbStream InputStream containing PFB data
 * @param encoding Font encoding
 * @throws IOException if an I/O error occurs
 */","* This will load a PFB to be embedded into a document.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param dict The Font dictionary to write to.
     * @param pfbStream The pfb input.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),85,98,"/**
* Initializes a PDFont with a base font.
* @param baseFont the base font to use
*/",* Constructor for Standard 14.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,loadFontDescriptor,org.apache.pdfbox.pdmodel.font.PDFont:loadFontDescriptor(),116,132,"/**
 * Loads font descriptor from dictionary or builds it from AFM.
 * @return PDFontDescriptor object or null if not found
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean)",70,114,"/**
* Embeds TrueType font into PDF document.
* @param document PDF document to embed font into
* @param dict COSDictionary for font settings
* @param ttf TrueTypeFont object
* @param embedSubset whether to embed a subset of the font
* @throws IOException if embedding is not permitted or fails
*/",* Creates a new TrueType font for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/TrueTypeEmbedder.java,buildFontFile2,org.apache.pdfbox.pdmodel.font.TrueTypeEmbedder:buildFontFile2(java.io.InputStream),116,135,"/**
 * Builds a font file from an input stream.
 * @param ttfStream TTF font input stream
 * @throws IOException if embedding is not permitted or I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByExtension,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByExtension(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",213,250,"/**
* Creates PDImageXObject from file based on its extension.
* @param file the image file
* @param doc the PDDocument to add the image to
* @return PDImageXObject created from the file
* @throws IOException if an error occurs during file processing
*/","* Create a PDImageXObject from an image file. The file format is determined by the file name
     * suffix. The following suffixes are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This is
     * a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFileByContent,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFileByContent(java.io.File,org.apache.pdfbox.pdmodel.PDDocument)",273,317,"/**
 * Creates a PDImageXObject from a file by content.
 * @param file the image file to process
 * @param doc the PDF document to add the image to
 * @return PDImageXObject created from the file
 * @throws IOException if there is an error reading the file or creating the image
 */","* Create a PDImageXObject from an image file. The file format is determined by the file
     * content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG. This
     * is a convenience method that calls {@link JPEGFactory#createFromStream},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param file the image file.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationHighlight.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationHighlight:<init>(org.w3c.dom.Element),63,67,"/**
* Creates a highlight annotation from an XML element.
* @param element XML element representing the annotation
* @throws IOException if there is an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationSquiggly.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationSquiggly:<init>(org.w3c.dom.Element),63,67,"/**
* Constructs a FDFAnnotationSquiggly from an XML element.
* @param element the XML element representing the annotation
* @throws IOException if there is an error processing the element
*/","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStrikeOut.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationStrikeOut:<init>(org.w3c.dom.Element),63,67,"/**
 * Creates a strike-out annotation from an XML element.
 * @param element XML element representing the annotation
 * @throws IOException if there is an error processing the element
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationUnderline.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFAnnotationUnderline:<init>(org.w3c.dom.Element),63,67,"/**
 * Constructs an underline annotation.
 * @param element PDF element to annotate
 * @throws IOException if there is a problem with the input stream
 */","* Constructor.
     *
     * @param element An XFDF element.
     *
     * @throws IOException If there is an error extracting information from the element.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(byte[],java.lang.String)",182,185,"/**
* Loads a PDF document from byte array.
* @param input byte array containing PDF data
* @param password password for encrypted PDFs
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",270,274,"/**
* Loads a PDF document from a file.
* @param file the PDF file to load
* @param streamCacheCreateFunction function to create cache for streams
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String)",288,291,"/**
* Loads a PDF document from a file with a given password.
* @param file the PDF file to load
* @param password the password for decrypting the PDF
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs during loading
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction)",307,312,"/**
* Loads a PDF document from a file.
* @param file the PDF file to load
* @param password the password for decrypting the PDF (null if not encrypted)
* @param streamCacheCreateFunction function to create stream cache (optional)
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs while loading the document
*/","* Parses a PDF.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param streamCacheCreateFunction a function to create an instance of a stream cache to be used for buffering
     * new/altered PDF streams
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,"org.apache.pdfbox.Loader:loadPDF(java.io.File,java.lang.String,java.io.InputStream,java.lang.String)",327,331,"/**
 * Loads a PDF document from a file with optional encryption.
 * @param file the PDF file to load
 * @param password the decryption password (null if not encrypted)
 * @param keyStore input stream for keystore (null if not using keystore)
 * @param alias the alias for the keystore entry
 * @return PDDocument representing the loaded PDF
 * @throws IOException if an I/O error occurs
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * @param password password to be used for decryption
     * @param keyStore key store to be used for decryption when using public key security
     * @param alias alias to be used for decryption when using public key security
     * 
     * @return loaded document
     * 
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/SignatureOptions.java,setVisualSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions:setVisualSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties),111,114,"/**
* Sets visual signature properties.
* @param visSignatureProperties object containing visual signature details
* @throws IOException if an I/O error occurs
*/","* Reads the visual signature from the given visual signature properties
     *
     * @param visSignatureProperties the <code>PDVisibleSigProperties</code> object containing the
     * visual signature
     *
     * @throws IOException when something went wrong during parsing",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveCapHeight,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveCapHeight(org.apache.pdfbox.pdmodel.font.PDFont),965,967,"/**
* Resolves capital height of a given PDFont.
* @param font the PDFont to measure
* @return the cap height as a float
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,resolveDescent,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:resolveDescent(org.apache.pdfbox.pdmodel.font.PDFont),974,976,"/**
* Calculates descent value by comparing 'y' and 'a' glyph heights.
* @param font PDFont object to measure
* @return Descent value as float
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigProperties.java,buildSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigProperties:buildSignature(),44,49,"/**
 * Constructs a PDF signature.
 * @throws IOException if an I/O error occurs during the process
 */","* start building of visible signature
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,save,org.apache.pdfbox.pdmodel.PDDocument:save(java.lang.String),936,939,"/**
 * Saves content to a file.
 * @param fileName path to the file where content will be saved
 * @throws IOException if an I/O error occurs during saving
 */","* Save the document to a file using default compression.
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     * <p>
     * If encryption has been activated (with {@link #protect(org.apache.pdfbox.pdmodel.encryption.ProtectionPolicy)
     * protect(ProtectionPolicy)}), do not use the document after saving because the contents are now encrypted.
     * The same applies if your file was created from parts of another file and that
     * one is to be used after saving.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException if the output could not be written",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfwriter/COSWriter.java,visitFromDocument,org.apache.pdfbox.pdfwriter.COSWriter:visitFromDocument(org.apache.pdfbox.cos.COSDocument),1293,1348,"/**
 * Visits and processes a document for writing.
 * Handles header, body, XRef, and trailer writes based on update mode.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importOcProperties,org.apache.pdfbox.multipdf.LayerUtility:importOcProperties(org.apache.pdfbox.pdmodel.PDDocument),309,330,"/**
* Imports optional content properties from a source document to a target document.
* @param srcDoc the source PDF document containing OC properties
*/","* Imports OCProperties from source document to target document so hidden layers can still be
     * hidden after import.
     *
     * @param srcDoc The source PDF document that contains the /OCProperties to be copied.
     * @throws IOException If an I/O error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,buildSubset,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:buildSubset(java.io.InputStream,java.lang.String,java.util.Map)",101,122,"/**
* Builds a subset of a TrueType font.
* @param ttfSubset input stream for the font subset
* @param tag identifier for the subset
* @param gidToCid mapping from new GIDs to old CIDs
* @throws IOException if an I/O error occurs
*/",* Rebuild a font subset.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,int)",101,105,"/**
 * Initializes a visible signature designer.
 * @param document PDF document to apply the signature
 * @param imageStream input stream of the signature image
 * @param page page number where the signature will be placed
 * @throws IOException if there is an issue reading the image or document
 */","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param imageStream Image as a stream.
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException If we can't read, flush, or can't close stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.awt.image.BufferedImage,int)",150,154,"/**
* Initializes sign designer with document, image, and page number.
* @param document PDDocument to add the signature to
* @param image BufferedImage representing the signature
* @param page page index in the document where to place the signature
*/","* Constructor.
     *
     * @param document Already created PDDocument of your PDF document.
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromRandomAccessRead,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromRandomAccessRead(org.apache.pdfbox.io.RandomAccessRead,int)",177,185,"/**
 * Calculates page size from a PDF document.
 * @param documentSource source of the PDF document
 * @param page page number to calculate size for
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,writeXML,org.apache.pdfbox.pdmodel.fdf.FDFDocument:writeXML(java.io.Writer),114,122,"/**
* Writes XML data to the specified writer.
* @param output Writer object to write XML to
* @throws IOException if an I/O error occurs
*/","* This will write this element as an XML document.
     *
     * @param output The stream to write the xml to.
     *
     * @throws IOException If there is an error writing the XML.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(org.apache.pdfbox.pdmodel.interactive.annotation.AnnotationFilter),766,789,"/**
* Retrieves annotations from a PDF page based on a filter.
* @param annotationFilter criteria to select specific annotations
* @return List of filtered PDAnnotation objects
* @throws IOException if an I/O error occurs while accessing the PDF
*/","* This will return a list of the annotations for this page.
     *
     * @param annotationFilter the annotation filter provided allowing to filter out specific annotations
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/documentinterchange/logicalstructure/PDObjectReference.java,getReferencedObject,org.apache.pdfbox.pdmodel.documentinterchange.logicalstructure.PDObjectReference:getReferencedObject(),92,128,"/**
* Retrieves the referenced object from a PDF document.
* @return COSObjectable instance or null if not found
*/","* Gets a higher-level object for the referenced object.
     * Currently this method may return a {@link PDAnnotation},
     * a {@link PDXObject} or <code>null</code>.
     * 
     * @return a higher-level object for the referenced object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationMarkup.java,getInReplyTo,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationMarkup:getInReplyTo(),188,192,"/**
 * Retrieves annotation in reply to this one.
 * @throws IOException if an I/O error occurs
 * @return PDAnnotation object or null if none exists
 */","* This will retrieve the annotation to which this one is ""In Reply To"" the actual relationship
     * is specified by the RT entry.
     *
     * @return the other annotation or null if there is none.
     * @throws IOException if there is an error creating the other annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/PDAnnotationPopup.java,getParent,org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationPopup:getParent(),94,114,"/**
 * Retrieves the parent markup annotation.
 * @return PDAnnotationMarkup object or null if not found or incorrect type
 */","* This will retrieve the markup annotation which this popup relates to.
     *
     * @return The parent markup annotation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Draws an image at specified coordinates.
* @param inlineImage the image to draw
* @param x the x-coordinate of the top-left corner
* @param y the y-coordinate of the top-left corner
* @throws IOException if an I/O error occurs
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Draws an image at specified coordinates.
* @param inlineImage the PDInlineImage object to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Draws an image at specified coordinates.
* @param inlineImage the image to draw
* @param x the x-coordinate
* @param y the y-coordinate
* @throws IOException if an I/O error occurs
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDInlineImage,float,float)",472,475,"/**
* Draws an image at specified coordinates.
* @param inlineImage the image to draw
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
*/","* Draw an inline image at the x,y coordinates, with the default size of the image.
     *
     * @param inlineImage The inline image to draw.
     * @param x The x-coordinate to draw the inline image.
     * @param y The y-coordinate to draw the inline image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquareAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquareAppearanceHandler:generateNormalAppearance(),55,96,"/**
* Generates normal appearance for a square annotation.
* Sets stroke and background colors, opacity, and border style.
* Handles cloudy border effect if applicable.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/CloudyBorder.java,createCloudyEllipse,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.CloudyBorder:createCloudyEllipse(org.apache.pdfbox.pdmodel.common.PDRectangle),135,145,"/**
* Creates a cloudy ellipse within the specified rectangle.
* @param rd bounding rectangle for the ellipse
* @throws IOException if an I/O error occurs
*/","* Creates a cloudy border for a Circle annotation.
     * The ellipse is specified by the <code>RD</code> entry and the
     * <code>Rect</code> entry that was passed in to the constructor.
     *
     * @param rd entry <code>RD</code>, or null if the entry does not exist
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getSignatureDictionaries,org.apache.pdfbox.pdmodel.PDDocument:getSignatureDictionaries(),888,900,"/**
* Retrieves signature dictionaries from document.
* @return List of PDSignature objects representing signatures
*/","* Retrieve all signature dictionaries from the document.
     * 
     * @return a <code>List</code> of <code>PDSignatureField</code>s",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormGenerateAppearancesProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormGenerateAppearancesProcessor:process(),36,61,"/**
* Processes the PDF document to update field appearances.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormLegacyMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormLegacyMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1285,1337,"/**
 * Clones fields from source AcroForm to destination AcroForm.
 * Handles field renaming to prevent conflicts during merge.
 * @param cloner utility for cloning PDF objects
 * @param destAcroForm destination AcroForm
 * @param srcAcroForm source AcroForm
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,importFDF,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:importFDF(org.apache.pdfbox.pdmodel.fdf.FDFDocument),128,143,"/**
 * Imports FDF fields into the document.
 * @param fdf the FDFDocument containing fields to import
 */","* This method will import an entire FDF document into the PDF document
     * that this acroform is part of.
     *
     * @param fdf The FDF document to import.
     *
     * @throws IOException If there is an error doing the import.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/PDShading.java,evalFunction,org.apache.pdfbox.pdmodel.graphics.shading.PDShading:evalFunction(float),391,394,"/**
 * Evaluates function at given input.
 * @param inputValue single input value
 * @return array of results from function evaluation
 * @throws IOException if an I/O error occurs
 */","* Convert the input value using the functions of the shading dictionary.
     *
     * @param inputValue the input value
     * @return the output values
     * @throws IOException thrown if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,evalFunctionAndConvertToRGB,org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:evalFunctionAndConvertToRGB(float[]),160,167,"/**
* Evaluates shading function and converts to RGB.
* @param values input color values
* @return RGB value as an integer
* @throws IOException if evaluation fails
*/","* Convert color to RGB color value, using function if required, then convert from the shading
     * color space to an RGB value, which is encoded into an integer.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getStrokingPaint(),682,687,"/**
* Retrieves and applies soft mask to stroking paint.
* @return Paint object with applied soft mask
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,getNonStrokingPaint,org.apache.pdfbox.rendering.PageDrawer:getNonStrokingPaint(),697,702,"/**
 * Retrieves non-stroking paint with soft mask applied.
 * @return Paint object for non-stroking operations
 * @throws IOException if an I/O error occurs
 */","* Returns the non-stroking AWT Paint. You may need to call this if you override
     * {@link #showGlyph(Matrix, PDFont, int, Vector) showGlyph()}. See
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-5093"">PDFBOX-5093</a> for more.
     *
     * @return The non-stroking AWT Paint.
     * @throws IOException if the non-stroking AWT Paint could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawBufferedImage,"org.apache.pdfbox.rendering.PageDrawer:drawBufferedImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage,java.awt.image.BufferedImage,java.awt.geom.AffineTransform)",1296,1395,"/**
 * Draws a BufferedImage using PDImage and AffineTransform.
 * @param pdImage PDF image object
 * @param image Java BufferedImage to draw
 * @param at transformation for drawing
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shadingFill,org.apache.pdfbox.rendering.PageDrawer:shadingFill(org.apache.pdfbox.cos.COSName),1486,1541,"/**
* Applies shading fill to the current graphics state.
* @param shadingName name of the shading resource to apply
* @throws IOException if an I/O error occurs during processing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,setupIndexedColorSpace,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:setupIndexedColorSpace(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$Chunk,org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,int)",304,324,"/**
* Sets up an indexed color space for an image.
* @param doc PDF document
* @param lookupTable byte array containing color table data
* @param image image object to apply the color space to
* @param highVal highest value in the index range
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,"org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName,boolean)",206,236,"/**
* Retrieves a color space by name.
* @param name the COSName of the color space
* @param wasDefault indicates if this is the default color space
* @return PDColorSpace object or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the color space resource with the given name, or null if none exists. This method is
     * for PDFBox internal use only, others should use {@link #getColorSpace(COSName)}.
     *
     * @param name Name of the color space resource.
     * @param wasDefault if current color space was used by a default color space. This parameter is
     * to
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/LegacyPDFStreamEngine.java,processPage,org.apache.pdfbox.text.PDFMarkedContentExtractor:processPage(org.apache.pdfbox.pdmodel.PDPage),138,154,"/**
* Processes a PDF page by setting rotation and adjusting the translation matrix.
* @param page PDPage object to process
* @throws IOException if an I/O error occurs
*/","* This will initialize and process the contents of the stream.
     *
     * @param page the page to process
     * @throws java.io.IOException if there is an error accessing the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPage,org.apache.pdfbox.text.PDFTextStripper:processPage(org.apache.pdfbox.pdmodel.PDPage),340,384,"/**
 * Processes a PDF page within specified ranges.
 * @param page PDPage to be processed
 * @throws IOException if an I/O error occurs
 */","* This will process the contents of a page.
     *
     * @param page The page to process.
     *
     * @throws IOException If there is an error processing the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDLineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDLineAppearanceHandler:generateNormalAppearance(),51,326,"/**
* Generates the normal appearance of a PDF annotation.
* Adjusts rectangle and draws lines with leader lines and captions if present.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Sets the stroking color for drawing.
* @param color the desired stroke color
* @throws IOException if an I/O error occurs
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color for PDF graphics.
* @param color PDColor object representing the color to be set
* @throws IOException if an I/O error occurs during operation
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color for PDF graphics.
* @param color the new stroking color to apply
* @throws IOException if an I/O error occurs while writing to the output stream
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets stroking color in PDF.
* @param color PDColor object representing the color
* @throws IOException if an I/O error occurs
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),657,688,"/**
* Sets the stroking color for PDF graphics.
* @param color PDColor object representing the color to set
* @throws IOException if an I/O error occurs while writing to the output stream
*/","* Sets the stroking color and, if necessary, the stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAbstractContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Sets non-stroking color for drawing.
* @param color Java Color object
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Sets non-stroking color in PDF.
* @param color PDColor object to set
* @throws IOException if an I/O error occurs
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Sets non-stroking color for PDF graphics.
* @param color PDColor object representing the color to set
* @throws IOException if an I/O error occurs while writing to the PDF
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Sets non-stroking color for PDF graphics.
* @param color PDColor object representing the color to set
* @throws IOException if an I/O error occurs while writing
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(org.apache.pdfbox.pdmodel.graphics.color.PDColor),776,807,"/**
* Sets non-stroking color for PDF graphics.
* @param color PDColor object representing the color to set
* @throws IOException if an I/O error occurs while writing to the output stream
*/","* Sets the non-stroking color and, if necessary, the non-stroking color space.
     *
     * @param color Color in a specific color space.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,setOpacity,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:setOpacity(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",271,281,"/**
 * Sets the opacity for a given content stream.
 * @param contentStream the PDAppearanceContentStream to modify
 * @param opacity the new opacity value (0.0 - fully transparent, 1.0 - fully opaque)
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCircles,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCircles(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",219,261,"/**
* Draws circles for annotation appearance.
* @param annotation PDAnnotationText to be annotated
* @param contentStream PDAppearanceContentStream for drawing
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawRightArrow,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawRightArrow(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",458,497,"/**
* Draws a right arrow on a PDF annotation.
* @param annotation the text annotation to draw on
* @param contentStream the content stream for rendering
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawComment,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawComment(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",499,547,"/**
 * Draws a comment icon on the PDF annotation.
 * @param annotation PDAnnotationText object representing the annotation
 * @param contentStream PDAppearanceContentStream for drawing
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDAppearanceContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
 * Draws an image at specified coordinates.
 * @param image PDImageXObject to be drawn
 * @param x X coordinate of the top-left corner
 * @param y Y coordinate of the top-left corner
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDFormContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
 * Draws an image at specified coordinates.
 * @param image PDImageXObject to draw
 * @param x x-coordinate of the top-left corner
 * @param y y-coordinate of the top-left corner
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPageContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
 * Draws an image at specified coordinates.
 * @param image PDImageXObject to be drawn
 * @param x X coordinate of the top-left corner
 * @param y Y coordinate of the top-left corner
 * @throws IOException if an I/O error occurs
 */","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,drawImage,"org.apache.pdfbox.pdmodel.PDPatternContentStream:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject,float,float)",401,404,"/**
* Draws an image at specified coordinates.
* @param image PDImageXObject to be drawn
* @param x x-coordinate of the top-left corner
* @param y y-coordinate of the top-left corner
*/","* Draw an image at the x,y coordinates, with the default size of the image.
     *
     * @param image The image to draw.
     * @param x The x-coordinate to draw the image.
     * @param y The y-coordinate to draw the image.
     *
     * @throws IOException If there is an error writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,appendFormAsLayer,"org.apache.pdfbox.multipdf.LayerUtility:appendFormAsLayer(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject,java.awt.geom.AffineTransform,java.lang.String)",248,287,"/**
 * Appends a form as a new layer to the target page.
 * @param targetPage the page to append the form to
 * @param form the form to append
 * @param transform the transformation matrix for positioning the form
 * @param layerName the name of the new layer
 * @return the created optional content group (layer)
 * @throws IOException if an I/O error occurs
 */","* Places the given form over the existing content of the indicated page (like an overlay).
     * The form is enveloped in a marked content section to indicate that it's part of an
     * optional content group (OCG), here used as a layer. This optional group is returned and
     * can be enabled and disabled through methods on {@link PDOptionalContentProperties}.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before calling this method to make
     * sure that the graphics state is reset.
     *
     * @param targetPage the target page
     * @param form the form to place
     * @param transform the transformation matrix that controls the placement of your form. You'll
     * need this if your page has a crop box different than the media box, or if these have negative
     * coordinates, or if you want to scale or adjust your form.
     * @param layerName the name for the layer/OCG to produce
     * @return the optional content group that was generated for the form usage
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,processPages,org.apache.pdfbox.multipdf.Overlay:processPages(org.apache.pdfbox.pdmodel.PDDocument),390,429,"/**
 * Processes each page in the PDF document to overlay content.
 * @param document the PDDocument to be processed
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,shouldSkipAnnotation,org.apache.pdfbox.rendering.PageDrawer:shouldSkipAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1587,1609,"/**
 * Determines if an annotation should be skipped based on rendering destination.
 * @param annotation PDF annotation to evaluate
 * @return true if annotation should be skipped, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showForm,org.apache.pdfbox.rendering.PageDrawer:showForm(org.apache.pdfbox.pdmodel.graphics.form.PDFormXObject),1640,1654,"/**
 * Displays a form object.
 * @param form PDFormXObject to be displayed
 * @throws IOException if an I/O error occurs
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroupOnGraphics,"org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroupOnGraphics(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup,java.awt.Graphics2D)",1669,1738,"/**
 * Renders a transparency group on the given graphics.
 * @param form PDTransparencyGroup to render
 * @param graphics Graphics2D context for rendering
 * @throws IOException if an I/O error occurs
 */","* For advanced users, to extract the transparency group into a separate graphics device.
     * 
     * @param form the transparency group to be extracted
     * @param graphics the target graphics device
     * @throws IOException if the transparency group could not be extracted",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,beginMarkedContentSequence,"org.apache.pdfbox.rendering.PageDrawer:beginMarkedContentSequence(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSDictionary)",2088,2104,"/**
 * Begins a marked content sequence with properties.
 * @param tag the content tag
 * @param properties dictionary of properties for the content
 */",* {@inheritDoc},,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenAndVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenAndVisibilityExpression(org.apache.pdfbox.cos.COSArray),2211,2238,"/**
 * Determines if any visibility expression in the array is hidden.
 * @param veArray array of COSBase objects representing visibility expressions
 * @return true if at least one expression is hidden, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenOrVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenOrVisibilityExpression(org.apache.pdfbox.cos.COSArray),2240,2267,"/**
 * Checks if visibility expression array indicates hidden content.
 * @param veArray COSArray containing visibility expressions or OCGs
 * @return true if all elements are hidden, false otherwise
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenNotVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenNotVisibilityExpression(org.apache.pdfbox.cos.COSArray),2269,2288,"/**
* Determines if a visibility expression is hidden.
* @param veArray array representing the visibility expression
* @return true if hidden, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPageable.java,getPrintable,org.apache.pdfbox.printing.PDFPageable:getPrintable(int),235,246,"/**
 * Retrieves a Printable object for the specified page.
 * @param i zero-based index of the page
 * @return Printable object for the given page
 * @throws IndexOutOfBoundsException if page index is out of bounds
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean,float)",105,108,"/**
* Initializes a new PDFPrintable with default settings.
* @param document PDDocument to be printed
* @param scaling scaling factor for printing
* @param showPageBorder flag to display page borders
* @param dpi dots per inch for print quality
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     * The image will be rasterized at the given DPI before being sent to the printer.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed
     * @param dpi if positive non-zero then the image will be rasterized at the given DPI. If
     * set to the special value RASTERIZE_DPI_AUTO, the dpi of the printer will be used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",170,180,"/**
* Constructs a PDType1Font from an InputStream.
* @param doc PDDocument to associate the font with
* @param pfbIn InputStream containing the font data
* @param encoding character encoding for the font
* @throws IOException if there's an issue reading the input stream
*/","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @param encoding encoding to be used for the font
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),64,68,"/**
 * Initializes a simple font.
 * @param baseFont name of the base font to use
 */",* Constructor for Standard 14.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDFont:<init>(org.apache.pdfbox.cos.COSDictionary),105,114,"/**
* Initializes a PDFont with a given dictionary.
* @param fontDictionary the COSDictionary containing font data
*/","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDCIDFontType2Embedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDCIDFontType2Embedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,boolean,org.apache.pdfbox.pdmodel.font.PDType0Font,boolean)",71,96,"/**
* Embeds a Type 2 CID font in a PDF document.
* @param document the PDF document to embed the font into
* @param dict the dictionary for the font
* @param ttf the TrueType font to embed
* @param embedSubset whether to subset the font
* @param parent the parent Type 0 font
* @param vertical whether the font is used vertically
* @throws IOException if an I/O error occurs
*/","* Creates a new TrueType font embedder for the given TTF as a PDCIDFontType2.
     *
     * @param document parent document
     * @param dict font dictionary
     * @param ttf True Type Font
     * @param parent parent Type 0 font
     * @throws IOException if the TTF could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFontEmbedder:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.cos.COSDictionary,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",54,71,"/**
* Embeds a TrueType font in a PDF document.
* @param document PDF document to embed the font into
* @param dict dictionary for the font entry
* @param ttf TrueTypeFont object
* @param encoding character encoding for the font
* @throws IOException if an I/O error occurs
*/","* Creates a new TrueType font embedder for the given TTF as a PDTrueTypeFont.
     *
     * @param document The parent document
     * @param dict Font dictionary
     * @param ttf TrueType font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @throws IOException if the TTF could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromFile,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromFile(java.lang.String,org.apache.pdfbox.pdmodel.PDDocument)",187,190,"/**
 * Creates an image XObject from a file.
 * @param imagePath path to the image file
 * @param doc PDF document to add the image to
 * @return PDImageXObject representing the image
 * @throws IOException if unable to read the file
 */","* Create a PDImageXObject from an image file, see {@link #createFromFileByExtension(File, PDDocument)} for
     * more details.
     *
     * @param imagePath the image file path.
     * @param doc the document that shall use this PDImageXObject.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject, or if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDictionary.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDictionary:<init>(org.w3c.dom.Element),74,230,"/**
 * Constructs an FDFDictionary from an XML Element.
 * @param fdfXML the XML element representing FDF data
 */","* This will create an FDF dictionary from an XFDF XML document.
     *
     * @param fdfXML The XML document that contains the XFDF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(byte[]),165,168,"/**
 * Loads a PDF document from a byte array.
 * @param input byte array containing the PDF data
 * @return PDDocument object representing the loaded PDF
 * @throws IOException if an error occurs during loading
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param input byte array that contains the document. {@link org.apache.pdfbox.io.RandomAccessReadBuffer} is used
     * to read the data.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the PDF required a non-empty password.
     * @throws IOException In case of a reading or parsing error.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,"org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File,java.lang.String)",230,234,"/**
* Loads a PDF document from a file with a given password.
* @param file the PDF file to load
* @param password the password for decrypting the PDF
* @return PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * @param password password to be used for decryption
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the password is incorrect.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File, String)} instead",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadPDF,org.apache.pdfbox.Loader:loadPDF(java.io.File),252,255,"/**
* Loads a PDF document from a file.
* @param file the PDF file to load
* @return a PDDocument object representing the loaded PDF
* @throws IOException if an I/O error occurs while loading the PDF
*/","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded. {@link org.apache.pdfbox.io.RandomAccessReadBufferedFile} is used to read the
     * file.
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDPage)",165,228,"/**
* Imports a page from a source document as a form.
* @param sourceDoc the document containing the page to import
* @param page the page to be imported
* @return PDFormXObject representing the imported page
* @throws IOException if an I/O error occurs
*/","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param page the page in the source PDF document to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.io.InputStream,int)",83,91,"/**
* Initializes a PDVisibleSignDesigner with a document source, image stream, and page number.
* @param documentSource the PDF document source
* @param imageStream the input stream for the signature image
* @param page the page number to apply the signature
* @throws IOException if an I/O error occurs
*/","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param imageStream Image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(org.apache.pdfbox.io.RandomAccessRead,java.awt.image.BufferedImage,int)",133,141,"/**
 * Initializes a PDVisibleSignDesigner with a document source, image, and page number.
 * @param documentSource the PDF document source
 * @param image the visible signature image
 * @param page the page number to apply the signature
 * @throws IOException if an I/O error occurs
 */","* Constructor.
     *
     * @param documentSource Original PDF document as RandomAccessRead
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.Writer),242,255,"/**
* Writes XFDF data to the specified output stream.
* @param output Writer object for writing XFDF data
* @throws IOException if an I/O error occurs
*/","* This will save the document to an output stream and close the stream.
     *
     * @param output The stream to write to.
     *
     * @throws IOException If there is an error writing the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDPage.java,getAnnotations,org.apache.pdfbox.pdmodel.PDPage:getAnnotations(),752,755,"/**
 * Retrieves all annotations from the document.
 * @return List of PDAnnotation objects
 * @throws IOException if an I/O error occurs
 */","* This will return a list of the annotations for this page.
     *
     * @return List of the PDAnnotation objects, never null. The returned list is backed by the
     * annotations COSArray, so any adding or deleting in this list will change the document too.
     * 
     * @throws IOException If there is an error while creating the annotation list.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCircleAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCircleAppearanceHandler:generateNormalAppearance(),54,119,"/**
* Generates normal appearance for a circular annotation.
* Handles both solid and cloudy border effects.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,getLastSignatureDictionary,org.apache.pdfbox.pdmodel.PDDocument:getLastSignatureDictionary(),850,859,"/**
 * Retrieves the last signature dictionary.
 * @return PDSignature object or null if no signatures exist
 */","* This will return the last signature from the field tree. Note that this may not be the
     * last in time when empty signature fields are created first but signed after other fields.
     * 
     * @return the last signature as <code>PDSignatureField</code>.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,saveIncrementalForExternalSigning,org.apache.pdfbox.pdmodel.PDDocument:saveIncrementalForExternalSigning(java.io.OutputStream),1190,1224,"/**
 * Saves incremental PDF for external signing.
 * @param output stream to write the modified PDF
 * @return ExternalSigningSupport object for further signing steps
 * @throws IOException if an I/O error occurs
 */","* Save PDF incrementally without closing for external signature creation scenario. The general sequence is:
     * 
     * <pre>
     *    PDDocument pdDocument = ...;
     *    OutputStream outputStream = ...;
     *    SignatureOptions signatureOptions = ...; // options to specify fine tuned signature options or null for defaults
     *    PDSignature pdSignature = ...;
     *
     *    // add signature parameters to be used when creating signature dictionary
     *    pdDocument.addSignature(pdSignature, signatureOptions);
     *    // prepare PDF for signing and obtain helper class to be used
     *    ExternalSigningSupport externalSigningSupport = pdDocument.saveIncrementalForExternalSigning(outputStream);
     *    // get data to be signed
     *    InputStream dataToBeSigned = externalSigningSupport.getContent();
     *    // invoke signature service
     *    byte[] signature = sign(dataToBeSigned);
     *    // set resulted CMS signature
     *    externalSigningSupport.setSignature(signature);
     *
     *    // last step is to close the document
     *    pdDocument.close();
     * </pre>
     * <p>
     * Note that after calling this method, only {@code close()} method may invoked for {@code PDDocument} instance and
     * only AFTER {@link ExternalSigningSupport} instance is used.
     * </p>
     * <p>
     * Don't use the input file as target as this will produce a corrupted file.
     *
     * @param output stream to write the final PDF. It will be closed when the document is closed. It <i><b>must
     * never</b></i> point to the source file or that one will be harmed!
     * @return instance to be used for external signing and setting CMS signature
     * @throws IOException if the output could not be written
     * @throws IllegalStateException if the document was not loaded from a file or a stream or signature options were
     * not set.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,acroFormJoinFieldsMode,"org.apache.pdfbox.multipdf.PDFMergerUtility:acroFormJoinFieldsMode(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm)",1270,1274,"/**
* Joins fields from source acroform to destination using legacy mode.
* @param cloner utility for cloning PDF objects
* @param destAcroForm destination acroform to join fields into
* @param srcAcroForm source acroform with fields to join
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,addLinePoints,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:addLinePoints(org.apache.pdfbox.pdmodel.graphics.shading.Line,int[][])",125,131,"/**
 * Adds color values to an array based on line points.
 * @param line the Line object containing points and color calculation logic
 * @param array 2D array to store RGB values
 * @throws IOException if there is an error during value addition
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,strokePath,org.apache.pdfbox.rendering.PageDrawer:strokePath(),793,805,"/**
 * Renders and resets the current line path.
 * @throws IOException if an I/O error occurs during rendering
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawGlyph,"org.apache.pdfbox.rendering.PageDrawer:drawGlyph(java.awt.geom.GeneralPath,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector,java.awt.geom.AffineTransform)",525,575,"/**
 * Draws a glyph using the specified path and font.
 * @param path the GeneralPath representing the glyph shape
 * @param font the PDFont used for rendering
 * @param code the character code of the glyph
 * @param displacement the vector displacement of the glyph
 * @param at the AffineTransform for scaling and positioning
 * @throws IOException if an I/O error occurs during rendering
 */","* Renders a glyph.
     * 
     * @param path the GeneralPath for the glyph
     * @param font the font
     * @param code character code
     * @param displacement the glyph's displacement (advance)
     * @param at the transformation
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillPath,org.apache.pdfbox.rendering.PageDrawer:fillPath(int),807,860,"/**
 * Fills the current path with the non-stroking color.
 * @param windingRule the winding rule for filling the path
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawImage,org.apache.pdfbox.rendering.PageDrawer:drawImage(org.apache.pdfbox.pdmodel.graphics.image.PDImage),1074,1262,"/**
 * Draws an image on the graphics context.
 * @param pdImage the image to draw
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,buildIndexImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:buildIndexImage(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",211,255,"/**
 * Builds an indexed image from a PNG document.
 * @param doc PDF document to add the image to
 * @param state PNG conversion state containing image data
 * @return PDImageXObject or null if image cannot be built
 * @throws IOException if I/O error occurs during processing
 */",* Build a indexed image,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getColorSpace,org.apache.pdfbox.pdmodel.PDResources:getColorSpace(org.apache.pdfbox.cos.COSName),191,194,"/**
 * Retrieves color space by COSName.
 * @param name the COSName of the color space
 * @return the PDColorSpace object
 * @throws IOException if an I/O error occurs
 */","* Returns the color space resource with the given name, or null if none exists.
     * 
     * @param name Name of the color space resource.
     * @return a new color space.
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,processPages,org.apache.pdfbox.text.PDFTextStripper:processPages(org.apache.pdfbox.pdmodel.PDPageTree),263,308,"/**
* Processes each page in the document, setting bookmark page numbers and extracting text.
* @param pages PDPageTree containing all pages to be processed
* @throws IOException if an I/O error occurs during processing
*/","* This will process all of the pages and the text that is in them.
     *
     * @param pages The pages object in the document.
     *
     * @throws IOException If there is an error parsing the text.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setStrokingColor(java.awt.Color),696,702,"/**
 * Sets the stroking color for drawing operations.
 * @param color the desired stroke color
 * @throws IOException if an I/O error occurs
 */","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setStrokingColor(java.awt.Color),696,702,"/**
 * Sets the stroking color for drawing operations.
 * @param color the desired color to use for stroking
 * @throws IOException if an I/O error occurs
 */","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Sets the stroking color for drawing operations.
* @param color desired stroke color
* @throws IOException if an I/O error occurs
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setStrokingColor(java.awt.Color),696,702,"/**
* Sets the stroking color for drawing.
* @param color desired stroke color
* @throws IOException if an I/O error occurs
*/","* Set the stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDInkAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDInkAppearanceHandler:generateNormalAppearance(),47,132,"/**
 * Generates the normal appearance for an ink annotation.
 * Adjusts rectangle and draws paths based on ink data.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDStrikeoutAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDStrikeoutAppearanceHandler:generateNormalAppearance(),46,143,"/**
* Generates normal appearance for strikeout annotation.
* Adjusts rectangle and draws lines based on quad points.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDUnderlineAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDUnderlineAppearanceHandler:generateNormalAppearance(),46,142,"/**
* Generates normal appearance for an underline annotation.
* Adjusts rectangle and paints the underline based on quad points.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDAppearanceContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Sets non-stroking color using a Color object.
* @param color the Color to be applied
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDFormContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Sets the non-stroking color in RGB.
* @param color Color object representing RGB values
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPageContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Sets non-stroking color using a Color object.
* @param color the color to be used for non-stroking operations
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDAbstractContentStream.java,setNonStrokingColor,org.apache.pdfbox.pdmodel.PDPatternContentStream:setNonStrokingColor(java.awt.Color),815,821,"/**
* Sets non-stroking color using a Color object.
* @param color Java AWT Color object
* @throws IOException if an I/O error occurs
*/","* Set the non-stroking color using an AWT color. Conversion uses the default sRGB color space.
     *
     * @param color The color to set.
     * @throws IOException If an IO error occurs while writing to the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDCaretAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDCaretAppearanceHandler:generateNormalAppearance(),49,100,"/**
 * Generates normal appearance for a caret annotation.
 * Adjusts bbox and rectangle based on Adobe's RD calculation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,initializeAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:initializeAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceCharacteristicsDictionary,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",369,434,"/**
* Initializes widget appearance with background and border.
* @param widget annotation widget to initialize
* @param appearanceCharacteristics visual characteristics
* @param appearanceStream stream for appearance content
* @throws IOException if an I/O error occurs
*/","* Initialize the content of the appearance stream.
     * 
     * Get settings like border style, border width and colors to be used to draw a rectangle and background color 
     * around the widget
     * 
     * @param widget the field widget
     * @param appearanceCharacteristics the appearance characteristics dictionary from the widget or
     * null
     * @param appearanceStream the appearance stream to be used
     * @throws IOException in case we can't write to the appearance stream",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,writeTo,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:writeTo(org.apache.pdfbox.pdmodel.PDAppearanceContentStream,float)",290,303,"/**
* Sets font and color for text appearance.
* @param contents stream to write to
* @param zeroFontSize default font size if current is zero
*/","* Write font name, font size and color from the /DA string to the given content stream.
     *
     * @param contents The content stream.
     * @param zeroFontSize The calculated font size to use if the /DA string has a size 0
     * (autosize). Otherwise the size from the /DA string is used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDHighlightAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDHighlightAppearanceHandler:generateNormalAppearance(),53,212,"/**
 * Generates the normal appearance for a highlight annotation.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDSquigglyAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDSquigglyAppearanceHandler:generateNormalAppearance(),57,169,"/**
* Generates normal appearance for a squiggly annotation.
* Adjusts rectangle and draws pattern based on quad points.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showAnnotation,org.apache.pdfbox.rendering.PageDrawer:showAnnotation(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotation),1543,1585,"/**
 * Displays an annotation on the current page.
 * @param annotation PDF annotation to be shown
 * @throws IOException if an I/O error occurs during rendering
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showTransparencyGroup,org.apache.pdfbox.rendering.PageDrawer:showTransparencyGroup(org.apache.pdfbox.pdmodel.graphics.form.PDTransparencyGroup),1656,1660,"/**
* Displays transparency group on graphics.
* @param form PDTransparencyGroup to display
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,isHiddenVisibilityExpression,org.apache.pdfbox.rendering.PageDrawer:isHiddenVisibilityExpression(org.apache.pdfbox.cos.COSArray),2187,2209,"/**
* Checks if a visibility expression array represents hidden content.
* @param veArray COSArray containing visibility expressions
* @return true if the expression indicates hidden content, false otherwise
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling,boolean)",90,93,"/**
* Initializes a new PDFPrintable with specified settings.
* @param document PDDocument to be printed
* @param scaling page scaling option
* @param showPageBorder flag to indicate if page borders should be shown
*/","* Creates a new PDFPrintable with the given page scaling and with optional page borders shown.
     *
     * @param document the document to print
     * @param scaling page scaling policy
     * @param showPageBorder true if page borders are to be printed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",157,160,"/**
* Constructs a PDType1Font from an input stream.
* @param doc PDDocument to associate the font with
* @param pfbIn InputStream containing the font data
* @throws IOException if there is an error reading the input stream
*/","* Creates a new Type 1 font for embedding.
     *
     * @param doc PDF document to write to
     * @param pfbIn PFB file stream
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),104,148,"/**
* Initializes a PDType1Font with the specified base font.
* @param baseFont the name of the base font
*/","* Creates a Type 1 standard 14 font for embedding.
     *
     * @param baseFont One of the standard 14 PostScript names, e.g. {@link FontName#HELVETICA_BOLD}.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDSimpleFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDSimpleFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,78,"/**
 * Constructs a PDSimpleFont from a COSDictionary.
 * @param fontDictionary dictionary containing font information
 */","* Constructor.
     *
     * @param fontDictionary Font dictionary.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.cos.COSDictionary),71,100,"/**
* Initializes a PDType0Font from a COSDictionary.
* @param fontDictionary the dictionary containing font data
* @throws IOException if font data is incomplete or invalid
*/","* Constructor for reading a Type0 font from a PDF file.
     * 
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @throws IOException if the descendant font is missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType0Font:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean,boolean,boolean)",114,142,"/**
 * Initializes a PDType0Font with TrueType font details.
 * @param document PDF document
 * @param ttf TrueType font instance
 * @param embedSubset flag to enable subset embedding
 * @param closeTTF flag to close the TTF after processing
 * @param vertical flag for vertical text support
 * @throws IOException if an I/O error occurs
 */","* Private. Creates a new PDType0Font font for embedding.
     *
     * @param document
     * @param ttf
     * @param embedSubset
     * @param closeTTF whether to close the ttf parameter after embedding. Must be true when the ttf
     * parameter was created in the load() method, false when the ttf parameter was passed to the
     * load() method.
     * @param vertical whether to enable vertical substitutions.
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding,boolean)",156,175,"/**
* Creates a PDTrueTypeFont from a TrueType font.
* @param document PDF document
* @param ttf TrueTypeFont object
* @param encoding character encoding
* @param closeTTF flag to close TTF after processing
* @throws IOException if an I/O error occurs
*/",* Creates a new TrueType font for embedding.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFCatalog.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFCatalog:<init>(org.w3c.dom.Element),60,65,"/**
* Constructs an FDFCatalog from an XML Element.
* @param element XML Element containing FDF data
*/","* This will create an FDF catalog from an XFDF XML document.
     *
     * @param element The XML document that contains the XFDF data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDF,org.apache.pdfbox.multipdf.Overlay:loadPDF(java.lang.String),274,277,"/**
 * Loads a PDF document from a file.
 * @param pdfName name of the PDF file
 * @return PDDocument object representing the loaded PDF
 * @throws IOException if an I/O error occurs while loading the PDF
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,optimizedMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:optimizedMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",375,433,"/**
 * Merges multiple PDF documents into one.
 * @param streamCacheCreateFunction function to create a stream cache
 * @param compressParameters parameters for compression
 * @throws IOException if an I/O error occurs during merging
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdfparser/PDFParser.java,load,org.apache.pdfbox.pdfparser.PDFParser:load(java.io.File),211,215,"/**
 * Loads a PDF document from a file.
 * @param file the PDF file to load
 * @return the loaded PDF document
 * @deprecated use another method instead
 */","* Parses a PDF. Unrestricted main memory will be used for buffering PDF streams.
     * 
     * @param file file to be loaded
     * 
     * @return loaded document
     * 
     * @throws InvalidPasswordException If the file required a non-empty password.
     * @throws IOException in case of a file reading or parsing error
     * 
     * @deprecated use {@link Loader#loadPDF(File)} instead",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,calculatePageSizeFromFile,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:calculatePageSizeFromFile(java.lang.String,int)",168,175,"/**
* Calculates page size from PDF file.
* @param filename path to the PDF file
* @param page page number to calculate size for
* @throws IOException if file cannot be read
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/LayerUtility.java,importPageAsForm,"org.apache.pdfbox.multipdf.LayerUtility:importPageAsForm(org.apache.pdfbox.pdmodel.PDDocument,int)",144,148,"/**
 * Imports a page from a source document as a form object.
 * @param sourceDoc the source PDF document
 * @param pageNumber the 0-based index of the page to import
 * @return PDFormXObject representing the imported page
 * @throws IOException if an I/O error occurs
 */","* Imports a page from some PDF file as a Form XObject so it can be placed on another page
     * in the target document.
     * <p>
     * You may want to call {@link #wrapInSaveRestore(PDPage) wrapInSaveRestore(PDPage)} before invoking the Form XObject to
     * make sure that the graphics state is reset.
     * 
     * @param sourceDoc the source PDF document that contains the page to be copied
     * @param pageNumber the 0-based page number of the page to be copied
     * @return a Form XObject containing the original page's content
     * @throws IOException if an I/O error occurs",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.io.File),214,221,"/**
* Saves XFDF data to a file.
* @param fileName the file where XFDF data will be saved
* @throws IOException if an I/O error occurs during writing
*/","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,updateStructParentEntries,"org.apache.pdfbox.multipdf.PDFMergerUtility:updateStructParentEntries(org.apache.pdfbox.pdmodel.PDPage,int)",1504,1523,"/**
 * Updates structure parent entries for a PDF page.
 * @param page the PDPage to update
 * @param structParentOffset the offset to apply to struct parents
 * @throws IOException if an I/O error occurs
 */","* Update the StructParents and StructParent values in a PDPage.
     *
     * @param page the new page
     * @param structParentOffset the offset which should be applied",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,cloneStructureTree,org.apache.pdfbox.multipdf.Splitter:cloneStructureTree(org.apache.pdfbox.pdmodel.PDDocument),194,250,"/**
 * Clones the structure tree from a source document to a destination document.
 * @param destinationDocument the document to which the structure tree is cloned
 * @throws IOException if an I/O error occurs during cloning
 */","* Clone the structure tree from the source to the current destination document. This must be
     * called after all pages are processed.
     *
     * @param destinationDocument
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processAnnotations,org.apache.pdfbox.multipdf.Splitter:processAnnotations(org.apache.pdfbox.pdmodel.PDPage),820,965,"/**
* Processes and clones annotations from a PDF page.
* @param imported PDPage to process
* @throws IOException if an I/O error occurs
*/","* Clone all annotations because of changes possibly made, and because the structure tree is
     * cloned.
     *
     * @param imported
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",317,474,"/**
 * Adds a signature to the PDF document.
 * @param sigObject PDSignature object representing the signature
 * @param signatureInterface interface for handling signature operations
 * @param options SignatureOptions specifying additional settings
 * @throws IOException if an I/O error occurs
 */","* This will add a signature to the document. If the 0-based page number in the options
     * parameter is smaller than 0 or larger than max, the nearest valid page number will be used
     * (i.e. 0 or max) and no exception will be thrown.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSigBuilder.java,createSignature,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSigBuilder:createSignature(org.apache.pdfbox.pdmodel.interactive.form.PDSignatureField,org.apache.pdfbox.pdmodel.PDPage,java.lang.String)",114,129,"/**
* Creates a signature field in a PDF page.
* @param pdSignatureField the signature field to populate
* @param page the PDF page to add the signature
* @param signerName name of the signer (optional)
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,buildPagesWidgetsMap,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:buildPagesWidgetsMap(java.util.List,org.apache.pdfbox.pdmodel.PDPageTree)",771,816,"/**
* Builds a map of pages to widgets.
* @param fields list of form fields
* @param pages PDF page tree
* @return map from COSDictionary (page) to set of COSDictionary (widgets)
* @throws IOException if an I/O error occurs
*/","* Build a map of page => set of widgets to be flattened
     *
     * @param fields a list of fields to be flattened
     * @param pages the page tree
     * @return
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeAcroForm,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeAcroForm(org.apache.pdfbox.multipdf.PDFCloneUtility,org.apache.pdfbox.pdmodel.PDDocumentCatalog,org.apache.pdfbox.pdmodel.PDDocumentCatalog)",1222,1259,"/**
 * Merges acro forms from source catalog into destination catalog.
 * @param cloner utility for cloning PDF objects
 * @param destCatalog destination document's catalog
 * @param srcCatalog source document's catalog
 * @throws IOException if an I/O error occurs during merging
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/shading/TriangleBasedShadingContext.java,calcPixelTable,"org.apache.pdfbox.pdmodel.graphics.shading.TriangleBasedShadingContext:calcPixelTable(java.util.List,int[][],java.awt.Rectangle)",80,123,"/**
* Calculates pixel table for shaded triangles.
* @param triangleList list of shaded triangles to process
* @param array 2D array to store pixel values
* @param deviceBounds bounds of the rendering device
* @throws IOException if an I/O error occurs
*/","* Get the points from the triangles, calculate their color and add point-color mappings.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,showFontGlyph,"org.apache.pdfbox.rendering.PageDrawer:showFontGlyph(org.apache.pdfbox.util.Matrix,org.apache.pdfbox.pdmodel.font.PDFont,int,org.apache.pdfbox.util.Vector)",495,513,"/**
* Renders a character glyph from a PDF font.
* @param textRenderingMatrix transformation matrix for text rendering
* @param font the PDFont object representing the font
* @param code character code to render
* @param displacement vector for text positioning
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,fillAndStrokePath,org.apache.pdfbox.rendering.PageDrawer:fillAndStrokePath(int),948,956,"/**
 * Fills and strokes the current path using a specified winding rule.
 * @param windingRule rule for determining the interior of the path
 */","* Fills and then strokes the path.
     *
     * @param windingRule The winding rule this path will use.
     * @throws IOException If there is an IO error while filling the path.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPng,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPng(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.graphics.image.PNGConverter$PNGConverterState)",132,206,"/**
 * Converts a PNG image to a PDImageXObject.
 * @param doc PDF document to add the image
 * @param state PNG conversion state containing image data
 * @return PDImageXObject or null if conversion fails
 */","* Convert the image using the state.
     *
     * @param doc   the document to put the image in
     * @param state the parser state containing the PNG chunks.
     * @return null or the converted image",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
* Processes color setting operators.
* @param operator the PDF operator being processed
* @param arguments the list of COSBase arguments for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes color operators for CMYK colorspace.
* @param operator the PDF operator to process
* @param arguments list of arguments for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Sets non-stroking color space to DeviceGray if processing color operators.
* @param operator the PDF operator being processed
* @param arguments list of COSBase objects representing operator arguments
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetNonStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetNonStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes color operators in PDF.
* @param operator the PDF operator to process
* @param arguments list of arguments for the operator
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingColorSpace.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingColorSpace:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",43,63,"/**
* Processes color setting for PDF graphics.
* @param operator the operator being processed
* @param arguments list of COSBase objects as arguments
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceCMYKColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceCMYKColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",41,52,"/**
* Processes color operators in PDF.
* @param operator the PDF operator to process
* @param arguments list of arguments for the operator
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceGrayColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceGrayColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,53,"/**
* Processes color operators if enabled.
* @param operator the PDF operator being processed
* @param arguments list of arguments for the operator
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/color/SetStrokingDeviceRGBColor.java,process,"org.apache.pdfbox.contentstream.operator.color.SetStrokingDeviceRGBColor:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",49,60,"/**
* Processes color operators in PDF content stream.
* @param operator the PDF operator to process
* @param arguments list of COSBase objects representing operator arguments
*/","* RG Set the stroking colour space to DeviceRGB and set the colour to
     * use for stroking operations.
     *
     * @param operator The operator that is being executed.
     * @param arguments List
     * @throws IOException If the color space cannot be read.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,writeText,"org.apache.pdfbox.text.PDFTextStripper:writeText(org.apache.pdfbox.pdmodel.PDDocument,java.io.Writer)",239,254,"/**
* Writes text from a PDF document to an output stream.
* @param doc PDDocument containing the text
* @param outputStream Writer for the output
* @throws IOException if I/O error occurs
*/","* This will take a PDDocument and write the text of that document to the print writer.
     *
     * @param doc The document to get the data from.
     * @param outputStream The location to put the text.
     *
     * @throws IOException If the doc is in an invalid state.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,insertGeneratedAppearance,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:insertGeneratedAppearance(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream,java.io.OutputStream)",487,640,"/**
* Generates appearance for a form widget.
* @param widget PDAnnotationWidget to process
* @param appearanceStream PDAppearanceStream for appearance content
* @param output OutputStream for writing the appearance
* @throws IOException if an I/O error occurs
*/",* Generate and insert text content and clipping around it.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PageDrawer.java,drawPage,"org.apache.pdfbox.rendering.PageDrawer:drawPage(java.awt.Graphics2D,org.apache.pdfbox.pdmodel.common.PDRectangle)",268,294,"/**
 * Draws a PDF page using the provided Graphics2D context.
 * @param g 2D graphics context for drawing
 * @param pageSize size of the page to draw
 * @throws IOException if an I/O error occurs
 */","* Draws the page to the requested context.
     * 
     * @param g The graphics context to draw onto.
     * @param pageSize The size of the page to draw.
     * @throws IOException If there is an IO error while drawing the page.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,"org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.printing.Scaling)",78,81,"/**
 * Constructs a PDFPrintable with specified document and scaling.
 * @param document PDDocument to be printed
 * @param scaling Scaling option for the document
 */","* Creates a new PDFPrintable with the given page scaling.
     *
     * @param document the document to print
     * @param scaling page scaling policy",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,getDefaultFont,org.apache.pdfbox.contentstream.PDFStreamEngine:getDefaultFont(),137,144,"/**
* Retrieves the default Helvetica font.
* @return PDFont object representing Helvetica font
*/","* Provide standard 14 Helvetica font as default if there isn't any font available.  
     * @return the default font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,verifyOrCreateDefaults,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:verifyOrCreateDefaults(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),70,114,"/**
 * Verifies and sets default appearance and resources for a PDF form.
 * @param acroForm the form to verify or modify
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getMappedFont,org.apache.pdfbox.pdmodel.font.Standard14Fonts:getMappedFont(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName),245,259,"/**
 * Retrieves or creates a mapped FontBoxFont for a given base name.
 * @param baseName the font name to map
 * @return the corresponding FontBoxFont
 */","* Returns the mapped font for the specified Standard 14 font. The mapped font is cached.
     *
     * @param baseName name of the standard 14 font
     * @return the mapped font",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDAbstractAppearanceHandler.java,getDefaultFont,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDAbstractAppearanceHandler:getDefaultFont(),82,89,"/**
* Returns the default Helvetica font.
* @return PDType1Font instance of Helvetica
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:<init>(org.apache.pdfbox.cos.COSDictionary),103,152,"/**
* Initializes a TrueType font from a PDF dictionary.
* @param fontDictionary the COS dictionary containing font data
* @throws IOException if there's an issue reading the font file
*/","* Creates a new TrueType font from a Font dictionary.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1CFont.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1CFont:<init>(org.apache.pdfbox.cos.COSDictionary),75,140,"/**
* Constructs a PDType1CFont from a COSDictionary.
* @param fontDictionary the dictionary containing font information
* @throws IOException if there's an error reading the font data
*/","* Constructor.
     * 
     * @param fontDictionary the corresponding dictionary
     * @throws IOException it something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),189,282,"/**
 * Constructs a PDType1Font from a COSDictionary.
 * @param fontDictionary the dictionary representing the Type1 font
 * @throws IOException if an error occurs during font processing
 */","* Creates a Type 1 font from a Font dictionary in a PDF.
     * 
     * @param fontDictionary font dictionary.
     * @throws IOException if there was an error initializing the font.
     * @throws IllegalArgumentException if /FontFile3 was used.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,"org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",82,87,"/**
 * Constructs a PDType3Font from a dictionary and resource cache.
 * @param fontDictionary the COS dictionary for the font
 * @param resourceCache the resource cache for the font resources
 * @throws IOException if an I/O error occurs while reading encoding
 */","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * @param resourceCache Resource cache, can be null.
     * 
     * @throws IOException if the font could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,boolean,boolean)",199,204,"/**
 * Loads a Type 0 font from a PDF document.
 * @param doc the PDF document
 * @param randomAccessRead source of font data
 * @param embedSubset whether to subset the font
 * @param vertical whether the font is used for vertical text
 * @return PDType0Font object
 * @throws IOException if an I/O error occurs
 */","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead source of a TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @param vertical whether to enable vertical substitutions.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",216,220,"/**
* Loads a Type 0 font from a TrueType font.
* @param doc PDF document to associate the font with
* @param ttf TrueTypeFont object to load
* @param embedSubset flag indicating whether to subset the font
* @return PDType0Font object
* @throws IOException if an error occurs during loading
*/","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when creating a font for
     * AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,boolean)",272,276,"/**
* Loads a vertical TrueType font.
* @param doc PDDocument to add the font to
* @param ttf TrueTypeFont object to load
* @param embedSubset whether to subset the embedded font
* @return PDType0Font configured for vertical text
* @throws IOException if an I/O error occurs
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.fontbox.ttf.TrueTypeFont,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",227,231,"/**
* Loads a true type font into a PDF document.
* @param doc the PDF document to add the font to
* @param ttf the TrueTypeFont object
* @param encoding the character encoding for the font
* @return PDTrueTypeFont instance representing the loaded font
* @throws IOException if an I/O error occurs during loading
*/","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.
     * </p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param ttf A true type font
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.io.RandomAccessRead,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",247,251,"/**
* Loads a TrueType font from a document.
* @param doc PDF document to load the font into
* @param randomAccessRead source of the font data
* @param encoding character encoding for the font
* @return PDTrueTypeFont object representing the loaded font
*/","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p>
     * <b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.
     * </p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param randomAccessRead the source of the TTF.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,<init>,org.apache.pdfbox.pdmodel.fdf.FDFDocument:<init>(org.w3c.dom.Document),94,105,"/**
 * Constructs an FDFDocument from a given XML Document.
 * @param doc XML document representing the FDF data
 * @throws IOException if the root element is not 'xfdf'
 */","* This will create an FDF document from an XFDF XML document.
     *
     * @param doc The XML document that contains the XFDF data.
     * @throws IOException If there is an error reading from the dom.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,loadPDFs,org.apache.pdfbox.multipdf.Overlay:loadPDFs(),205,272,"/**
* Loads PDF documents and overlays based on file names.
* Throws IOException if loading fails.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.io.InputStream,int)",65,73,"/**
* Initializes a new PDVisibleSignDesigner with an image.
* @param filename path to the PDF file
* @param imageStream input stream for the signature image
* @param page page number in the PDF
* @throws IOException if there's an issue reading the file or stream
*/","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param imageStream image as a stream
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/digitalsignature/visible/PDVisibleSignDesigner.java,<init>,"org.apache.pdfbox.pdmodel.interactive.digitalsignature.visible.PDVisibleSignDesigner:<init>(java.lang.String,java.awt.image.BufferedImage,int)",115,123,"/**
* Initializes a new sign designer with a file, image, and page.
* @param filename path to the PDF file
* @param image BufferedImage for the signature
* @param page page number in the PDF
* @throws IOException if there's an issue reading the file
*/","* Constructor.
     *
     * @param filename Path of the PDF file
     * @param image the image to be used for the visible signature
     * @param page The 1-based page number for which the page size should be calculated.
     * @throws IOException if the new instance of PDVisibleSignDesigner could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fdf/FDFDocument.java,saveXFDF,org.apache.pdfbox.pdmodel.fdf.FDFDocument:saveXFDF(java.lang.String),230,233,"/**
 * Saves XFDF data to a file.
 * @param fileName path to the output file
 * @throws IOException if an I/O error occurs
 */","* This will save this document to the filesystem.
     *
     * @param fileName The file to save as.
     *
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPage,org.apache.pdfbox.multipdf.Splitter:processPage(org.apache.pdfbox.pdmodel.PDPage),792,811,"/**
 * Processes a PDF page, importing it into the destination document.
 * Handles resource import and annotation processing.
 * @param page PDPage object to be processed
 */","* Interface to start processing a new page.
     *
     * @param page The page that is about to get processed.
     *
     * @throws IOException If there is an error creating the new document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureOptions)",278,281,"/**
* Adds a signature to the document.
* @param sigObject PDSignature object representing the signature
* @param options SignatureOptions for additional configuration
* @throws IOException if an I/O error occurs
*/","* Add parameters of signature to be created externally. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @param options signature options
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,"org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature,org.apache.pdfbox.pdmodel.interactive.digitalsignature.SignatureInterface)",296,299,"/**
* Adds a signature with default options.
* @param sigObject PDSignature object to be added
* @param signatureInterface interface for handling the signature
* @throws IOException if an I/O error occurs
*/","* Add a signature to be created using the instance of given interface.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     * 
     * @param sigObject is the PDSignatureField model
     * @param signatureInterface is an interface whose implementation provides
     * signing capabilities. Can be null if external signing if used.
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,"org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(java.util.List,boolean)",227,317,"/**
 * Flattens PDF fields into the page content.
 * @param fields list of PDField objects to flatten
 * @param refreshAppearances whether to refresh field appearances
 * @throws IOException if an I/O error occurs
 */","* This will flatten the specified form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * @param fields a list of fields to be flattened
     * @param refreshAppearances if set to true the appearances for the form field widgets will be updated
     * @throws IOException if something went wrong flattening the fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,appendDocument,"org.apache.pdfbox.multipdf.PDFMergerUtility:appendDocument(org.apache.pdfbox.pdmodel.PDDocument,org.apache.pdfbox.pdmodel.PDDocument)",510,847,"/**
 * Appends source PDF to destination PDF.
 * @param destination the target PDF document
 * @param source the source PDF document to append
 * @throws IOException if an I/O error occurs
 */","* append all pages from source to destination.
     *
     * @param destination the document to receive the pages
     * @param source the document originating the new pages
     *
     * @throws IOException If there is an error accessing data from either
     * document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PNGConverter.java,convertPNGImage,"org.apache.pdfbox.pdmodel.graphics.image.PNGConverter:convertPNGImage(org.apache.pdfbox.pdmodel.PDDocument,byte[])",113,123,"/**
* Converts PNG image data to a PDImageXObject.
* @param doc PDF document to add the image to
* @param imageData byte array containing PNG image data
* @return PDImageXObject or null if conversion fails
*/","* Try to convert a PNG into a PDImageXObject. If for any reason the PNG can not
     * be converted, null is returned.
     * <p>
     * This usually means the PNG structure is damaged (CRC error, etc.) or it uses
     * some features which can not be mapped to PDF.
     *
     * @param doc       the document to put the image in
     * @param imageData the byte data of the PNG
     * @return null or the PDImageXObject built from the png",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/text/PDFTextStripper.java,getText,org.apache.pdfbox.text.PDFTextStripper:getText(org.apache.pdfbox.pdmodel.PDDocument),216,221,"/**
* Extracts text from a PDF document.
* @param doc PDDocument object representing the PDF
* @return String containing the extracted text
* @throws IOException if an I/O error occurs
*/","* This will return the text of a document. See writeText. <br>
     * NOTE: The document must not be encrypted when coming into this method.
     *
     * <p>IMPORTANT: By default, text extraction is done in the same sequence as the text in the PDF page content stream.
     * PDF is a graphic format, not a text format, and unlike HTML, it has no requirements that text one on page
     * be rendered in a certain order. The order is the one that was determined by the software that created the
     * PDF. To get text sorted from left to right and top to botton, use {@link #setSortByPosition(boolean)}.
     * 
     * @param doc The document to get the text from.
     * @return The text of the PDF document.
     * @throws IOException if the doc state is invalid or it is encrypted.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType,org.apache.pdfbox.rendering.RenderDestination)",260,348,"/**
* Renders a PDF page as an image.
* @param pageIndex index of the page to render
* @param scale scaling factor for rendering
* @param imageType desired image type (e.g., ARGB)
* @param destination where to draw the rendered content
* @return BufferedImage representation of the page or null if not found
* @throws IOException if an I/O error occurs during rendering
*/","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @param destination controlling visibility of optional content groups
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float,org.apache.pdfbox.rendering.RenderDestination)",423,441,"/**
* Renders a PDF page to a Graphics2D object.
* @param pageIndex index of the page to render
* @param graphics target for rendering
* @param scaleX horizontal scaling factor
* @param scaleY vertical scaling factor
* @param destination where the rendered content is sent
* @throws IOException if an I/O error occurs during rendering
*/","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Known problems:
     * <ul>
     * <li>rendering of PDF files with transparencies is not supported on Ubuntu, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4581"">PDFBOX-4581</a> and
     * <a href=""https://bugs.openjdk.java.net/browse/JDK-6689349"">JDK-6689349</a>. Rendering will
     * not abort, but the pages will be rendered incorrectly.</li>
     * <li>Clipping the Graphics2D will not work properly, see
     * <a href=""https://issues.apache.org/jira/browse/PDFBOX-4583"">PDFBOX-4583</a>.</li>
     * </ul>
     * If you encounter these problems, then you should render into an image by using the
     * {@link #renderImage(int) renderImage} methods.
     * 
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @param destination controlling visibility of optional content groups
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,<init>,org.apache.pdfbox.printing.PDFPrintable:<init>(org.apache.pdfbox.pdmodel.PDDocument),67,70,"/**
 * Initializes a new PDFPrintable with default scaling.
 * @param document PDDocument to be printed
 */","* Creates a new PDFPrintable.
     *
     * @param document the document to print",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showText,org.apache.pdfbox.contentstream.PDFStreamEngine:showText(byte[]),735,816,"/**
* Renders text from a byte array using current graphics state.
* @param string byte array containing text data
* @throws IOException if an I/O error occurs
*/","* Process text from the PDF Stream. You should override this method if you want to
     * perform an action when encoded text is being processed.
     *
     * @param string the encoded text
     * @throws IOException if there is an error processing the string",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormDefaultsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormDefaultsProcessor:process(),46,60,"/**
* Processes the PDF document to verify or create AcroForm defaults.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/Standard14Fonts.java,getGlyphPath,"org.apache.pdfbox.pdmodel.font.Standard14Fonts:getGlyphPath(org.apache.pdfbox.pdmodel.font.Standard14Fonts$FontName,java.lang.String)",271,307,"/**
* Retrieves the glyph path for a given font and glyph name.
* @param baseName the base font name
* @param glyphName the name of the glyph
* @return GeneralPath object representing the glyph, or an empty path if not found
* @throws IOException if an I/O error occurs
*/","* Returns the path for the character with the given name for the specified Standard 14 font. The mapped font is
     * cached. The path may differ in different environments as it depends on the mapped font.
     *
     * @param baseName name of the standard 14 font
     * @param glyphName name of glyph
     * @return the mapped font
     * 
     * @throws IOException if the data could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDMMType1Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDMMType1Font:<init>(org.apache.pdfbox.cos.COSDictionary),37,40,"/**
 * Constructs a PDMMType1Font from a COSDictionary.
 * @param fontDictionary dictionary containing font data
 * @throws IOException if there is an error creating the font
 */","* Creates an MMType1Font from a Font dictionary in a PDF.
     *
     * @param fontDictionary font dictionary
     * 
     * @throws IOException if the font could not be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType3Font.java,<init>,org.apache.pdfbox.pdmodel.font.PDType3Font:<init>(org.apache.pdfbox.cos.COSDictionary),69,72,"/**
 * Constructs a PDType3Font using a given dictionary.
 * @param fontDictionary the COS dictionary containing font information
 * @throws IOException if an error occurs during font creation
 */","* Constructor.
     *
     * @param fontDictionary The font dictionary according to the PDF specification.
     * 
     * @throws IOException if the font could not be created",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",153,156,"/**
* Loads font from file into document.
* @param doc PDF document to add the font to
* @param file font file to load
* @return PDType0Font object
* @throws IOException if there's an issue reading the file
*/","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",182,186,"/**
* Loads a font from an input stream.
* @param doc PDF document to associate the font with
* @param input stream containing font data
* @param embedSubset true if subset embedding is enabled
* @return PDType0Font object loaded from the input stream
* @throws IOException if there's an error reading the stream
*/","* Loads a TTF to be embedded into a document as a Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @param embedSubset True if the font will be subset before embedding. Set this to false when
     * creating a font for AcroForm.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.File)",230,233,"/**
* Loads a vertical PDType0Font from a file.
* @param doc PDF document to add the font to
* @param file font file to load
* @return loaded PDType0Font object
* @throws IOException if an I/O error occurs
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font file.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",243,246,"/**
* Loads vertical font from document.
* @param doc PDF document
* @param input font data stream
* @return PDType0Font object
* @throws IOException on I/O error
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,loadVertical,"org.apache.pdfbox.pdmodel.font.PDType0Font:loadVertical(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,boolean)",257,261,"/**
* Loads vertical font from InputStream.
* @param doc PDDocument to add the font to
* @param input InputStream containing font data
* @param embedSubset whether to subset the font
* @return PDType0Font object
* @throws IOException if an I/O error occurs
*/","* Loads a TTF to be embedded into a document as a vertical Type 0 font.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TrueType font.
     * @param embedSubset True if the font will be subset before embedding
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.File,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",189,193,"/**
* Loads TrueType font from a file.
* @param doc PDF document to associate with the font
* @param file file containing the font data
* @param encoding character encoding for the font
* @return PDTrueTypeFont object
* @throws IOException if there is an error reading the file
*/","* Loads a TTF to be embedded into a document as a simple font.
     * 
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, File)} instead.</p>
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param file A TTF file.
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFont.java,load,"org.apache.pdfbox.pdmodel.font.PDTrueTypeFont:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream,org.apache.pdfbox.pdmodel.font.encoding.Encoding)",207,211,"/**
* Loads TrueType font from an InputStream.
* @param doc PDDocument to associate the font with
* @param input stream containing the font data
* @param encoding character encoding to use
* @return PDTrueTypeFont object
* @throws IOException if there is an error reading the input
*/","* Loads a TTF to be embedded into a document as a simple font.
     *
     * <p><b>Note:</b> Simple fonts only support 256 characters. For Unicode support, use
     * {@link PDType0Font#load(PDDocument, InputStream)} instead.</p>
     * 
     * @param doc The PDF document that will hold the embedded font.
     * @param input A TTF file stream
     * @param encoding The PostScript encoding vector to be used for embedding.
     * @return a PDTrueTypeFont instance.
     * @throws IOException If there is an error loading the data.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.InputStream),149,152,"/**
* Loads an XFDF document from an input stream.
* @param input InputStream containing XFDF data
* @return FDFDocument object representing the loaded document
* @throws IOException if an I/O error occurs during loading
*/","* This will load a document from an input stream. The stream is loaded to the memory to establish random access to
     * the data.
     *
     * @param input The stream that contains the document.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlay,org.apache.pdfbox.multipdf.Overlay:overlay(java.util.Map),114,134,"/**
 * Applies overlays to specific pages of a PDF document.
 * @param specificPageOverlayMap mapping of page numbers to overlay PDF paths
 * @return the modified PDDocument with overlays applied
 * @throws IOException if an I/O error occurs during processing
 */","* This will add overlays to a document.
     *
     * @param specificPageOverlayMap Optional map of overlay files of which the first page will be
     * used for specific pages of the input document. The page numbers are 1-based. The map must be
     * empty (but not null) if no specific mappings are used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong.
     * @throws IllegalArgumentException if the input document is missing.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Overlay.java,overlayDocuments,org.apache.pdfbox.multipdf.Overlay:overlayDocuments(java.util.Map),150,163,"/**
* Overlays PDF documents onto specific pages.
* @param specificPageOverlayDocumentMap map of page numbers to overlay documents
* @return modified input PDF document with overlays
*/","* This will add overlays documents to a document. If you created the overlay documents with
     * subsetted fonts, you need to save them first so that the subsetting gets done.
     *
     * @param specificPageOverlayDocumentMap Optional map of overlay documents for specific pages. The
     * page numbers are 1-based. The map must be empty (but not null) if no specific mappings are
     * used.
     *
     * @return The modified input PDF document, which has to be saved and closed by the caller. If
     * the input document was passed by {@link #setInputPDF(PDDocument) setInputPDF(PDDocument)}
     * then it is that object that is returned.
     *
     * @throws IOException if something went wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,processPages,org.apache.pdfbox.multipdf.Splitter:processPages(),676,697,"/**
* Processes pages within a specified range.
* @throws IOException if an I/O error occurs
*/","* Interface method to handle the start of the page processing.
     *
     * @throws IOException If an IO error occurs.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDDocument.java,addSignature,org.apache.pdfbox.pdmodel.PDDocument:addSignature(org.apache.pdfbox.pdmodel.interactive.digitalsignature.PDSignature),259,262,"/**
* Adds a signature to the document.
* @param sigObject PDSignature object to be added
* @throws IOException if an I/O error occurs
*/","* Add parameters of signature to be created externally using default signature options. See
     * {@link #saveIncrementalForExternalSigning(OutputStream)} method description on external
     * signature creation scenario details.
     * <p>
     * Only one signature may be added in a document. To sign several times,
     * load document, add signature, save incremental and close again.
     *
     * @param sigObject is the PDSignatureField model
     * @throws IOException if there is an error creating required fields
     * @throws IllegalStateException if one attempts to add several signature
     * fields.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDAcroForm.java,flatten,org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm:flatten(),192,208,"/**
* Flattens all interactive fields in the PDF.
* Throws IOException if an error occurs during flattening.
*/","* This will flatten all form fields.
     * 
     * <p>
     * Flattening a form field will take the current appearance and make that part of the pages content stream. All form
     * fields and annotations associated are removed.
     * </p>
     * 
     * <p>
     * Invisible and hidden fields will be skipped and will not become part of the page content stream
     * </p>
     * 
     * <p>
     * The appearances for the form fields widgets will <strong>not</strong> be generated
     * </p>
     * 
     * @throws IOException if something went wrong flattening the fields",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,legacyMergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:legacyMergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",444,499,"/**
* Merges PDF documents from sources into a single document.
* @param streamCacheCreateFunction function to create stream cache, defaults to memory-only if null
* @param compressParameters parameters for compression during save
* @throws IOException if an I/O error occurs
*/","* Merge the list of source documents, saving the result in the destination file.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String,org.apache.pdfbox.pdmodel.graphics.image.CustomFactory)",362,410,"/**
 * Creates a PDImageXObject from a byte array.
 * @param document the PDDocument to add the image to
 * @param byteArray the byte array containing the image data
 * @param name the name of the image
 * @param customFactory optional custom factory for specific image types
 * @return PDImageXObject created from the byte array
 * @throws IOException if an I/O error occurs or unsupported image type
 */","* Create a PDImageXObject from an image byte array. This overloaded version allows providing 
     * a custom factory to handle specific image formats, such as BMP and GIF, or to act as a 
     * fallback strategy when the default converters (e.g., for PNG or TIFF) fail.
     *
     * @param document the document that shall use this PDImageXObject.
     * @param byteArray bytes from an image file.
     * @param name name of image file for exception messages, can be null.
     * @param customFactory optional factory used to handle BMP, GIF, or fallback cases 
     *                       (e.g., for PNG or TIFF). If {@code null}, this method delegates to
     *                       {@link #createFromByteArray(PDDocument, byte[], String)}.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float,org.apache.pdfbox.rendering.ImageType)",244,249,"/**
* Renders an image of a specified page.
* @param pageIndex index of the page to render
* @param scale scaling factor for the rendered image
* @param imageType type of the image to render
* @return BufferedImage object representing the rendered page
* @throws IOException if rendering fails
*/","* Returns the given page as an RGB or ARGB image at the given scale.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/printing/PDFPrintable.java,print,"org.apache.pdfbox.printing.PDFPrintable:print(java.awt.Graphics,java.awt.print.PageFormat,int)",199,319,"/**
 * Prints a page from the PDF document.
 * @param graphics Graphics context for printing
 * @param pageFormat Page format details
 * @param pageIndex Index of the page to print
 * @return PAGE_EXISTS if successful, NO_SUCH_PAGE otherwise
 * @throws PrinterException on printing error
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float,float)",394,399,"/**
* Renders a page to the specified graphics context.
* @param pageIndex index of the page to render
* @param graphics Graphics2D object for rendering
* @param scaleX horizontal scaling factor
* @param scaleY vertical scaling factor
* @throws IOException if an I/O error occurs
*/","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scaleX the scale to draw the page at for the x-axis, where 1 = 72 DPI
     * @param scaleY the scale to draw the page at for the y-axis, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextString,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextString(byte[]),654,657,"/**
 * Displays text from byte array.
 * @param string byte array containing text data
 * @throws IOException if an I/O error occurs during display
 */","* Called when a string of text is to be shown.
     *
     * @param string the encoded text
     * @throws IOException if there was an error showing the text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/PDFStreamEngine.java,showTextStrings,org.apache.pdfbox.contentstream.PDFStreamEngine:showTextStrings(org.apache.pdfbox.cos.COSArray),665,714,"/**
 * Processes text strings and numbers from a COSArray.
 * @param array containing text objects to process
 * @throws IOException if an I/O error occurs
 */","* Called when a string of text with spacing adjustments is to be shown.
     *
     * @param array array of encoded text strings and adjustments
     * @throws IOException if there was an error showing the text",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawHelp,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawHelp(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",278,318,"/**
 * Draws a help icon with a question mark inside a circle.
 * @param annotation the text annotation to which the help icon is attached
 * @param contentStream the appearance content stream for rendering
 * @throws IOException if an I/O error occurs during rendering
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",320,360,"/**
 * Draws a paragraph icon with a circle and ""?"" mark.
 * @param annotation text annotation to process
 * @param contentStream stream for drawing content
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawNewParagraph,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawNewParagraph(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",362,388,"/**
* Draws a new paragraph indicator on the annotation.
* @param annotation PDF text annotation to draw on
* @param contentStream content stream for drawing
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawCrossHairs,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawCrossHairs(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream)",390,414,"/**
* Draws crosshairs at annotation position.
* @param annotation text annotation to draw crosshairs on
* @param contentStream appearance content stream for drawing
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,drawZapf,"org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:drawZapf(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationText,org.apache.pdfbox.pdmodel.PDAppearanceContentStream,int,int,java.lang.String)",592,615,"/**
 * Draws a Zapf Dingbats glyph on a PDF annotation.
 * @param annotation the PDF annotation to draw on
 * @param contentStream the content stream for rendering
 * @param by vertical adjustment factor
 * @param ty y-axis translation
 * @param glyphName name of the Zapf Dingbats glyph to draw
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,"org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.pdmodel.ResourceCache)",124,190,"/**
* Creates a PDFont from a COSDictionary.
* @param dictionary font dictionary
* @param resourceCache cache for resources
* @return PDFont object or throws IOException if unsupported type
*/","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @param resourceCache resource cache, only useful for type 3 fonts, can be null
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDType0Font.java,load,"org.apache.pdfbox.pdmodel.font.PDType0Font:load(org.apache.pdfbox.pdmodel.PDDocument,java.io.InputStream)",167,170,"/**
* Loads a font from an input stream.
* @param doc PDF document to associate with the font
* @param input stream containing the font data
* @return PDType0Font object loaded from the stream
* @throws IOException if there's an error reading the stream
*/","* Loads a TTF to be embedded and subset into a document as a Type 0 font. If you are loading a
     * font for AcroForm, then use the 3-parameter constructor instead.
     *
     * @param doc The PDF document that will hold the embedded font.
     * @param input An input stream of a TrueType font. It will be closed before returning.
     * @return A Type0 font with a CIDFontType2 descendant.
     * @throws IOException If there is an error reading the font stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.lang.String),120,123,"/**
* Loads an XFDF document from a file.
* @param filename path to the XFDF file
* @return FDFDocument object representing the loaded document
* @throws IOException if an I/O error occurs during loading
*/","* This will load a document from a file.
     *
     * @param filename The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/Loader.java,loadXFDF,org.apache.pdfbox.Loader:loadXFDF(java.io.File),134,137,"/**
* Loads an XFDF document from a specified file.
* @param file the File object representing the XFDF file to load
* @return FDFDocument object containing the loaded data
* @throws IOException if an I/O error occurs during loading
*/","* This will load a document from a file.
     *
     * @param file The name of the file to load.
     *
     * @return The document that was loaded.
     *
     * @throws IOException If there is an error reading from the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/Splitter.java,split,org.apache.pdfbox.multipdf.Splitter:split(org.apache.pdfbox.pdmodel.PDDocument),128,152,"/**
 * Splits a PDF document into multiple documents.
 * @param document the source PDF document to split
 * @return List of PDDocument objects representing the split documents
 * @throws IOException if an I/O error occurs during processing
 */","* This will take a document and split into several other documents.
     *
     * @param document The document to split.
     *
     * @return A list of all the split documents. These should all be saved before closing any
     * documents, including the source document. Any further operations should be made after
     * reloading them, to avoid problems due to resource sharing. For the same reason, they should
     * not be saved with encryption.
     *
     * @throws IOException If there is an IOError",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,"org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction,org.apache.pdfbox.pdfwriter.compress.CompressParameters)",362,373,"/**
* Merges documents based on the specified mode.
* @param streamCacheCreateFunction function to create a stream cache
* @param compressParameters parameters for compression
* @throws IOException if an I/O error occurs during merging
*/","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * @param compressParameters defines if compressed object streams are enabled
     * 
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/image/PDImageXObject.java,createFromByteArray,"org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject:createFromByteArray(org.apache.pdfbox.pdmodel.PDDocument,byte[],java.lang.String)",341,344,"/**
* Creates an image from a byte array.
* @param document PDF document to add the image to
* @param byteArray image data as bytes
* @param name image name
* @return PDImageXObject created from byte array
* @throws IOException if an I/O error occurs
*/","* Create a PDImageXObject from bytes of an image file. The file format is determined by the
     * file content. The following file types are supported: JPG, JPEG, TIF, TIFF, GIF, BMP and PNG.
     * This is a convenience method that calls {@link JPEGFactory#createFromByteArray},
     * {@link CCITTFactory#createFromFile} or {@link ImageIO#read} combined with
     * {@link LosslessFactory#createFromImage}. (The later can also be used to create a
     * PDImageXObject from a BufferedImage). Starting with 2.0.18, this call will create an image
     * directly from a PNG file without decoding it (when possible), which is faster. However the
     * result size depends on the compression skill of the software that created the PNG file. If
     * file size or bandwidth are important to you or to your clients, then create your PNG files
     * with a tool that has implemented the
     * <a href=""https://blog.codinghorror.com/zopfli-optimization-literally-free-bandwidth/"">Zopfli
     * algorithm</a>, or use the two-step process mentioned above.
     *
     * @param byteArray bytes from an image file.
     * @param document the document that shall use this PDImageXObject.
     * @param name name of image file for exception messages, can be null.
     * @return a PDImageXObject.
     * @throws IOException if there is an error when reading the file or creating the
     * PDImageXObject.
     * @throws IllegalArgumentException if the image type is not supported.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,"org.apache.pdfbox.rendering.PDFRenderer:renderImage(int,float)",205,208,"/**
* Renders an image from a specified page with scaling.
* @param pageIndex index of the page to render
* @param scale factor for image resizing
* @return BufferedImage object representing the rendered image
* @throws IOException if an I/O error occurs during rendering
*/","* Returns the given page as an RGB image at the given scale.
     * A scale of 1 will render at 72 DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param scale the scaling factor, where 1 = 72 DPI
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float)",217,220,"/**
* Renders an image from a page at specified DPI.
* @param pageIndex index of the page to render
* @param dpi desired dots per inch for rendering
* @return BufferedImage object of the rendered page
* @throws IOException if an I/O error occurs during rendering
*/","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImageWithDPI,"org.apache.pdfbox.rendering.PDFRenderer:renderImageWithDPI(int,float,org.apache.pdfbox.rendering.ImageType)",230,234,"/**
* Renders an image from a PDF page with specified DPI.
* @param pageIndex index of the PDF page to render
* @param dpi desired dots per inch for rendering
* @param imageType type of image to generate
* @return BufferedImage object representing the rendered page
* @throws IOException if an I/O error occurs during rendering
*/","* Returns the given page as an RGB image at the given DPI.
     * @param pageIndex the zero-based index of the page to be converted
     * @param dpi the DPI (dots per inch) to render at
     * @param imageType the type of image to return
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D,float)",376,380,"/**
 * Renders a page to a graphics context with specified scaling.
 * @param pageIndex index of the page to render
 * @param graphics target graphics context for rendering
 * @param scale scaling factor for rendering
 */","* Renders a given page to an AWT Graphics2D instance.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @param scale the scaling factor, where 1 = 72 DPI
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowText.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowText:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,64,"/**
* Processes text showing operation.
* @param operator the PDF operator
* @param arguments list of operands, expects a single COSString
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/ShowTextAdjusted.java,process,"org.apache.pdfbox.contentstream.operator.text.ShowTextAdjusted:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",42,62,"/**
* Processes text strings from a PDF array.
* @param operator the PDF operator
* @param arguments list of PDF content stream objects
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDTextAppearanceHandler:generateNormalAppearance(),81,164,"/**
 * Generates normal appearance for a text annotation.
 * Supports various annotation types with specific drawing methods.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/PDResources.java,getFont,org.apache.pdfbox.pdmodel.PDResources:getFont(org.apache.pdfbox.cos.COSName),142,182,"/**
* Retrieves a PDFont by name from the document.
* @param name the COSName of the font
* @return the PDFont object or null if not found
* @throws IOException if an I/O error occurs
*/","* Returns the font resource with the given name, or null if none exists.
     *
     * @param name Name of the font resource.
     * @return the font with the given name or null
     * 
     * @throws IOException if something went wrong.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/font/PDFontFactory.java,createFont,org.apache.pdfbox.pdmodel.font.PDFontFactory:createFont(org.apache.pdfbox.cos.COSDictionary),59,62,"/**
 * Creates a font from a COSDictionary.
 * @param dictionary font dictionary
 * @return PDFont object
 * @throws IOException if an I/O error occurs
 */","* Creates a new PDFont instance with the appropriate subclass.
     *
     * @param dictionary a font dictionary
     * @return a PDFont instance, based on the SubType entry of the dictionary
     * @throws IOException if something goes wrong",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PageExtractor.java,extract,org.apache.pdfbox.multipdf.PageExtractor:extract(),73,85,"/**
 * Extracts a single page range from a PDF document.
 * @return PDDocument containing the extracted pages
 * @throws IOException if an error occurs during processing
 */","* This will take a document and extract the desired pages into a new 
     * document.  Both startPage and endPage are included in the extracted 
     * document.  If the endPage is greater than the number of pages in the 
     * source document, it will go to the end of the document.  If startPage is
     * less than 1, it'll start with page 1.  If startPage is greater than 
     * endPage or greater than the number of pages in the source document, a 
     * blank document will be returned.
     * 
     * @return The extracted document
     * @throws IOException If there is an IOError",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java,mergeDocuments,org.apache.pdfbox.multipdf.PDFMergerUtility:mergeDocuments(org.apache.pdfbox.io.RandomAccessStreamCache$StreamCacheCreateFunction),345,348,"/**
* Merges documents using default compression.
* @param streamCacheCreateFunction function to create a stream cache
* @throws IOException if an I/O error occurs
*/","* Merge the list of source documents, saving the result in the destination file. The source
     * list is not reset after merge. If you want to merge one document at a time, then it's better
     * to use
     * {@link #appendDocument(org.apache.pdfbox.pdmodel.PDDocument, org.apache.pdfbox.pdmodel.PDDocument)}.
     *
     * @param streamCacheCreateFunction a function to create an instance of a stream cache; in case of <code>null</code>
     * unrestricted main memory is used
     * 
     * @throws IOException If there is an error saving the document.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderImage,org.apache.pdfbox.rendering.PDFRenderer:renderImage(int),192,195,"/**
 * Renders an image from a specified page index.
 * @param pageIndex zero-based index of the page to render
 * @return BufferedImage object representing the rendered page
 * @throws IOException if an I/O error occurs during rendering
 */","* Returns the given page as an RGB image at 72 DPI
     * @param pageIndex the zero-based index of the page to be converted.
     * @return the rendered page image
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/rendering/PDFRenderer.java,renderPageToGraphics,"org.apache.pdfbox.rendering.PDFRenderer:renderPageToGraphics(int,java.awt.Graphics2D)",360,363,"/**
* Renders page to specified graphics context.
* @param pageIndex index of the page to render
* @param graphics target graphics context for rendering
* @throws IOException if an I/O error occurs during rendering
*/","* Renders a given page to an AWT Graphics2D instance at 72 DPI.
     * <p>
     * Read {@link #renderPageToGraphics(int, java.awt.Graphics2D, float, float, org.apache.pdfbox.rendering.RenderDestination) renderPageToGraphics(int, Graphics2D, float, float, RenderDestination)}
     * before using this.
     *
     * @param pageIndex the zero-based index of the page to be converted
     * @param graphics the Graphics2D on which to draw the page
     * @throws IOException if the PDF cannot be read",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/text/SetFontAndSize.java,process,"org.apache.pdfbox.contentstream.operator.text.SetFontAndSize:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",50,78,"/**
 * Processes operator with font name and size.
 * @param operator the PDF operator to process
 * @param arguments list of COSBase arguments
 * @throws IOException if an I/O error occurs
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,ensureFontResources,"org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:ensureFontResources(org.apache.pdfbox.pdmodel.PDResources,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText)",231,265,"/**
 * Ensures font resources are available for a form field.
 * @param defaultResources PDF document resources
 * @param field form field requiring font resources
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/annotation/handlers/PDFreeTextAppearanceHandler.java,generateNormalAppearance,org.apache.pdfbox.pdmodel.interactive.annotation.handlers.PDFreeTextAppearanceHandler:generateNormalAppearance(),71,361,"/**
* Generates normal appearance for a free text annotation.
* Handles callouts, borders, and text styling.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,validateAndEnsureAcroFormResources,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:validateAndEnsureAcroFormResources(),134,180,"/**
 * Ensures all font resources from field widgets are added to AcroForm.
 */",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processSetFont,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processSetFont(java.util.List),146,176,"/**
 * Processes operands to set a font in the PDF.
 * @param operands list of COSBase operands for font setting
 * @throws IOException if required operands are missing or font is not found
 */","* Process the set font and font size operator.
     * 
     * @param operands the font name and size
     * @throws IOException in case there are missing operators or the font is not within the resources",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,copyNeededResourcesTo,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:copyNeededResourcesTo(org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream),309,325,"/**
* Copies necessary resources to an appearance stream.
* @param appearanceStream the target appearance stream
* @throws IOException if an I/O error occurs
*/","* Copies any needed resources from the document’s DR dictionary into the stream’s Resources
     * dictionary. Resources with the same name shall be left intact.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/PDFontSetting.java,getFont,org.apache.pdfbox.pdmodel.graphics.PDFontSetting:getFont(),78,87,"/**
 * Retrieves the font from a PDF setting.
 * @return PDFont object or null if not found
 * @throws IOException if an error occurs while creating the font
 */","* This will get the font for this font setting.
     *
     * @return The font for this setting of null if one was not found.
     *
     * @throws IOException If there is an error getting the font.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,resolveFieldsFromWidgets,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:resolveFieldsFromWidgets(org.apache.pdfbox.pdmodel.interactive.form.PDAcroForm),78,113,"/**
* Rebuilds fields from form widgets.
* @param acroForm PDF AcroForm containing the widgets
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processOperator,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processOperator(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",123,138,"/**
* Processes PDF operators to handle font settings and colors.
* @param operator the PDF operator to be processed
* @param operands list of operands associated with the operator
*/","* This is used to handle an operation.
     * 
     * @param operator The operation to perform.
     * @param operands The list of arguments.
     * @throws IOException If there is an error processing the operation.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceContent,"org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceContent(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget,org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream)",439,482,"/**
* Sets appearance content for a widget.
* @param widget annotation widget to modify
* @param appearanceStream stream for appearance data
* @throws IOException if an I/O error occurs
*/",* Constructs and sets new contents for given appearance stream.,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/graphics/state/PDExtendedGraphicsState.java,copyIntoGraphicsState,org.apache.pdfbox.pdmodel.graphics.state.PDExtendedGraphicsState:copyIntoGraphicsState(org.apache.pdfbox.pdmodel.graphics.state.PDGraphicsState),82,190,"/**
 * Copies graphics state properties from a dictionary to a PDGraphicsState object.
 * @param gs the target PDGraphicsState object to copy properties into
 * @throws IOException if an I/O error occurs during property setting
 */","* This will implement the gs operator.
     *
     * @param gs The state to copy this dictionaries values into.
     *
     * @throws IOException If there is an error copying font information.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/processor/AcroFormOrphanWidgetsProcessor.java,process,org.apache.pdfbox.pdmodel.fixup.processor.AcroFormOrphanWidgetsProcessor:process(),60,76,"/**
* Processes the PDF document's AcroForm.
* Applies fixes and resolves fields from widgets.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,processAppearanceStringOperators,org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:processAppearanceStringOperators(byte[]),96,114,"/**
* Processes appearance stream operators.
* @param content byte array of the PDF content stream
* @throws IOException if parsing fails
*/","* Processes the operators of the given content stream.
     *
     * @param content the content to parse.
     * @throws IOException if there is an error reading or parsing the content stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/contentstream/operator/state/SetGraphicsStateParameters.java,process,"org.apache.pdfbox.contentstream.operator.state.SetGraphicsStateParameters:process(org.apache.pdfbox.contentstream.operator.Operator,java.util.List)",47,70,"/**
* Processes an operator with arguments, setting graphics state parameters.
* @param operator the operator to process
* @param arguments list of COSBase arguments
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/fixup/AcroFormDefaultFixup.java,apply,org.apache.pdfbox.pdmodel.fixup.AcroFormDefaultFixup:apply(),32,58,"/**
* Processes document to apply default settings and generate appearances for AcroForm fields.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDDefaultAppearanceString.java,<init>,"org.apache.pdfbox.pdmodel.interactive.form.PDDefaultAppearanceString:<init>(org.apache.pdfbox.cos.COSString,org.apache.pdfbox.pdmodel.PDResources)",73,88,"/**
 * Initializes PDF default appearance and resources.
 * @param defaultAppearance PDF default appearance string
 * @param defaultResources PDF default resources
 * @throws IOException if processing fails
 */","* Constructor for reading an existing DA string.
     * 
     * @param defaultResources DR entry
     * @param defaultAppearance DA entry
     * @throws IOException If the DA could not be parsed",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,getWidgetDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:getWidgetDefaultAppearanceString(org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationWidget),339,344,"/**
* Retrieves default appearance string for a widget.
* @param widget annotation widget to process
* @return PDDefaultAppearanceString object
* @throws IOException if an error occurs during processing
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDVariableText.java,getDefaultAppearanceString,org.apache.pdfbox.pdmodel.interactive.form.PDVariableText:getDefaultAppearanceString(),96,106,"/**
 * Retrieves the default appearance string for the form field.
 * @return PDDefaultAppearanceString object representing the default appearance
 * @throws IOException if an error occurs while retrieving resources
 */","* Get the default appearance.
     *
     * This is an inheritable attribute.
     *
     * The default appearance contains a set of default graphics and text operators
     * to define the field’s text size and color.
     *
     * @return the DA element of the dictionary object",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,setAppearanceValue,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:setAppearanceValue(java.lang.String),188,272,"/**
 * Sets the appearance value for a PDF field.
 * @param apValue the appearance value to set
 * @throws IOException if an I/O error occurs
 */","* This is the public method for setting the appearance stream.
     *
     * @param apValue the String value which the appearance should represent
     * @throws IOException If there is an error creating the stream.",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/AppearanceGeneratorHelper.java,<init>,org.apache.pdfbox.pdmodel.interactive.form.AppearanceGeneratorHelper:<init>(org.apache.pdfbox.pdmodel.interactive.form.PDVariableText),113,128,"/**
* Initializes AppearanceGeneratorHelper with a PDVariableText field, validates resources, and sets default appearance.
* @param field the PDF variable text field to process
* @throws IOException if there is an issue processing the field's appearance string
*/","* Constructs a COSAppearance from the given field.
     *
     * @param field the field which you wish to control the appearance of
     * @throws IOException",,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDComboBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDComboBox:constructAppearances(),78,93,"/**
* Constructs appearances using helper.
* @throws IOException if an I/O error occurs
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDListBox.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDListBox:constructAppearances(),81,87,"/**
* Constructs appearances using AppearanceGeneratorHelper.
* Throws IOException if an I/O error occurs.
*/",,,,True
/home/yfx/codecomment/codecomment/project/java/org/apache/pdfbox/pdmodel/interactive/form/PDTextField.java,constructAppearances,org.apache.pdfbox.pdmodel.interactive.form.PDTextField:constructAppearances(),257,263,"/**
* Constructs appearances using helper.
* Throws IOException on error.
*/",,,,True
